<!-- 
     (c) Electronic Arts. All Rights Reserved.
-->
<project xmlns="schemas/ea/framework3.xsd">
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- - - - - - - - - make generation targets - - - - - - - - - - - - - -->
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-gen')}' == 'exclude'">
    <target name="make-gen" style="use" allowoverride="true">
      <property name="eaconfig.build.group" value="runtime" />
      <call target="make-genall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-test-gen')}' == 'exclude'">
    <target name="make-test-gen" style="use" allowoverride="true">
      <property name="eaconfig.build.group" value="test" />
      <call target="make-genall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-example-gen')}' == 'exclude'">
    <target name="make-example-gen" style="use" allowoverride="true">
      <property name="eaconfig.build.group" value="example" />
      <call target="make-genall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-tool-gen')}' == 'exclude'">
    <target name="make-tool-gen" style="use" allowoverride="true">
      <property name="eaconfig.build.group" value="tool" />
      <call target="make-genall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-gen-groupall')}' == 'exclude'">
    <target name="make-gen-groupall" style="use" allowoverride="true">
      <property name="__eaconfig.build.groups" value="${eaconfig.build.groups??runtime test example tool}" />
      <property name="eaconfig.build.split-by-group-names" value="false"/>
      <call target="make-genall-caller" force="true" />
      <!-- In case targets are chained reset the value -->
      <eval code="@{PropertyUndefine('__eaconfig.build.groups')}" type="Function"/>
    </target>
  </do>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- - - - - - - - -  make build targets     - - - - - - - - - - - - - -->
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-build')}' == 'exclude'">
    <target name="make-build" style="use" allowoverride="true">
      <property name="eaconfig.build.group" value="runtime" />
      <call target="make-build-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-test-build')}' == 'exclude'">
    <target name="make-test-build" style="use" allowoverride="true">
      <property name="eaconfig.build.group" value="test" />
      <call target="make-build-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-example-build')}' == 'exclude'">
    <target name="make-example-build" style="use" allowoverride="true">
      <property name="eaconfig.build.group" value="example" />
      <call target="make-build-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-tool-build')}' == 'exclude'">
    <target name="make-tool-build" style="use" allowoverride="true">
      <property name="eaconfig.build.group" value="tool" />
      <call target="make-build-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- - - - - - - - -  make buildall targets  - - - - - - - - - - - - - -->
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-buildall')}' == 'exclude'">
    <target name="make-buildall" description="Build all the configurations using make-tool" allowoverride="true">
      <property name="eaconfig.buildall.target" value="make-build" />
      <property name="eaconfig.build.group" value="runtime" />
      <call target="eaconfig-buildall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-test-buildall')}' == 'exclude'">
    <target name="make-test-buildall" description="Build all the configurations using make-tool" allowoverride="true">
      <property name="eaconfig.buildall.target" value="make-test-build" />
      <property name="eaconfig.build.group" value="tool" />
      <call target="eaconfig-buildall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-tool-buildall')}' == 'exclude'">
    <target name="make-tool-buildall" description="Build all the configurations using make-tool" allowoverride="true">
      <property name="eaconfig.buildall.target" value="make-tool-build" />
      <property name="eaconfig.build.group" value="tool" />
      <call target="eaconfig-buildall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-example-buildall')}' == 'exclude'">
    <target name="make-example-buildall" description="Build all the configurations using make-example" allowoverride="true">
      <property name="eaconfig.buildall.target" value="make-tool-build" />
      <property name="eaconfig.build.group" value="tool" />
      <call target="eaconfig-buildall-caller" force="true" />
    </target>
  </do>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- - - - - - - - -  make clean targets     - - - - - - - - - - - - - -->
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <target name="make-clean" style="use">
    <property name="eaconfig.build.group" value="runtime" />
    <property name="eaconfig.make-build-target" value="clean" />
    <call target="make-build-caller" force="true" />
  </target>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <target name="make-test-clean" style="use">
    <property name="eaconfig.build.group" value="test" />
    <property name="eaconfig.make-build-target" value="clean" />
    <call target="make-build-caller" force="true" />
  </target>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <target name="make-example-clean" style="use">
    <property name="eaconfig.build.group" value="example" />
    <property name="eaconfig.make-build-target" value="clean" />
    <call target="make-build-caller" force="true" />
  </target>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <target name="make-tool-clean" style="use">
    <property name="eaconfig.build.group" value="tool" />
    <property name="eaconfig.make-build-target" value="clean" />
    <call target="make-build-caller" force="true" />
  </target>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- - - - - - - - -  make cleanall targets  - - - - - - - - - - - - - -->
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-cleanall')}' == 'exclude'">
    <target name="make-cleanall" description="Clean all the configurations using make-tool" allowoverride="true">
      <property name="eaconfig.buildall.target" value="make-clean" />
      <property name="eaconfig.build.group" value="runtime" />
      <call target="eaconfig-buildall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-test-cleanall')}' == 'exclude'">
    <target name="make-test-cleanall" description="Clean all the configurations using make-tool" allowoverride="true">
      <property name="eaconfig.buildall.target" value="make-test-clean" />
      <property name="eaconfig.build.group" value="tool" />
      <call target="eaconfig-buildall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-tool-cleanall')}' == 'exclude'">
    <target name="make-tool-cleanall" description="Clean all the configurations using make-tool" allowoverride="true">
      <property name="eaconfig.buildall.target" value="make-tool-clean" />
      <property name="eaconfig.build.group" value="tool" />
      <call target="eaconfig-buildall-caller" force="true" />
    </target>
  </do>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <do unless="'@{OptionSetGetValue('config.targetoverrides', 'make-example-cleanall')}' == 'exclude'">
    <target name="make-example-cleanall" description="Clean all the configurations using make-example" allowoverride="true">
      <property name="eaconfig.buildall.target" value="make-tool-clean" />
      <property name="eaconfig.build.group" value="tool" />
      <call target="eaconfig-buildall-caller" force="true" />
    </target>
  </do>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- - - - - - - - - -helper targets - - - - - - - - - - - - - - - - - -->
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <target name="make-gen-caller" style="use">
    <property name="eaconfig.build.autobuild-target" value="load-package-generate" />

    <call target="eaconfig-build-graph" force="true" />

    <GenerateBuildLayout/>

    <generate-makefile startup-config="${config}" 
                       configurations="${config}" 
                       generate-single-config="${generate-single-config??false}" 
                       split-by-group-names="${eaconfig.build.split-by-group-names??true}"/>
  </target>

  <target name="make-genall-caller" style="use">
    <property name="eaconfig.buildall.target" value="load-package-generate" />
    <property name="eaconfig.build.autobuild-target" value="load-package-generate" />
    <property name="eaconfig.build.configs" value="${package.configs}"/>
    <property name="eaconfig.build.configs" value="${config}" if="${generate-single-config??false}"/>

    <call target="eaconfig-build-graph-all" force="true" />

    <GenerateBuildLayout/>

    <generate-makefile startup-config="${config}" 
                       configurations="${eaconfig.build.configs}" 
                       generate-single-config="${generate-single-config??false}" 
                       split-by-group-names="${eaconfig.build.split-by-group-names??true}"/>
  </target>


  <target name="make-build-caller">

    <property name="eaconfig.make-program" value ="make" local="true"/>
    <property name="eaconfig.make-numjobs" value="${eaconfig.make-numjobs??32}" unless="@{PlatformIsWindows()}"/>
    
    <do if="@{PlatformIsWindows()}">
      <dependent name="vsimake"/>
      <property name="eaconfig.make-program" value="${package.vsimake.exe}"/>
      <property name="eaconfig.make-numjobs" value="${eaconfig.make-numjobs??@{MathMul(${sys.env.NUMBER_OF_PROCESSORS??16},2)}}"/>
    </do>

    <generated-make-file-path
      split-by-group-names="${eaconfig.build.split-by-group-names??true}"
      makefile-dir-property="eaconfig.make-file-dir"
      makefile-name-property="eaconfig.make-file-name"/>

    <property name="eaconfig.make-build-target" value ="${eaconfig.make-build-target??build}" local="true" />

    <exec program='${eaconfig.make-program}' message="Building using @{PathGetFileName('${eaconfig.make-program}')} ${package.name}..." failonerror="true" >
      <args>
        <arg value="--no-print-directory"/>
        <arg value="--stop"/>
        <arg value="--no-builtin-rules"/>
        <arg value="--jobs=${eaconfig.make-numjobs}"/>
        <arg value="-C${eaconfig.make-file-dir}"/>
        <arg value="-f${eaconfig.make-file-name}"/>
        <arg value="${eaconfig.make-build-extra-args??}"/>
        <arg value="${eaconfig.make-build-target}"/>
      </args>
    </exec>
  </target>

</project>
