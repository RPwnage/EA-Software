<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="schemas/ea/framework3.xsd" xmlns:nant="schemas/ea/framework3.xsd" elementFormDefault="qualified" targetNamespace="schemas/ea/framework3.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation />
  </xs:annotation>
  <xs:complexType name="EA.DotNet.GetAssemblyReferenceDirs">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="reference-version-dir" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="reference-dir-property-name" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="reference-dir-root-property-name" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.ZipTasks.UnZipTask">
    <xs:annotation>
      <xs:documentation>
            Unzip the contents of a zip file to a specified directory.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="zipfile" use="required">
      <xs:annotation>
        <xs:documentation>String : The full path to the zip file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outdir" use="required">
      <xs:annotation>
        <xs:documentation>String : The full path to the destination folder.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.ZipTasks.ZipTask">
    <xs:annotation>
      <xs:documentation>
            Creates a zip file from a specified fileset.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of files to be included in the archive.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="zipfile" use="required">
      <xs:annotation>
        <xs:documentation>String : The zip file to create. Use a qualified name to create the zip file in a 
            location which is different than the current working directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ziplevel" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Desired level of compression Default is 6.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="zipentrydir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Prepends directory to each zip file entry.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="usemodtime" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Preserve last modified timestamp of each file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4">
    <xs:annotation>
      <xs:documentation>
            This task allows you to pass arbitrary simple commands to
            Perforce.  Used when no predefined task exists for that
            Perforce command.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="command" use="required">
      <xs:annotation>
        <xs:documentation>String : Allows any p4 command to be entered as a command line.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4AddTask">
    <xs:annotation>
      <xs:documentation>
            Open file(s) from the local workspace for addition to the depot.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="required">
      <xs:annotation>
        <xs:documentation>String : A Perforce file specification for the files to add.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default type of the files to this type.
            Legal values: 'text', 'binary', 'symlink', 'apple', 'resource', 'unicode'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="change" use="optional">
      <xs:annotation>
        <xs:documentation>String : Assign these files to this pre-existing changelist.  
            If not specified, files will belong to the 'default' changelist.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ignore" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : The ignore attribute informs the client that it should not perform any
            ignore checking configured by P4IGNORE.  Default value is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4ChangeTask">
    <xs:annotation>
      <xs:documentation>
            Creates a new Perforce changelist or edits an existing one.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="desc" use="optional">
      <xs:annotation>
        <xs:documentation>String : Textual description of the changelist.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="files" use="optional">
      <xs:annotation>
        <xs:documentation>String : A Perforce file specification for the files to add to the changelist.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="change" use="optional">
      <xs:annotation>
        <xs:documentation>String : Changelist to modify.  Required for delete.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="delete" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Delete the named changelist.  This only works for empty changelists.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="NAnt.PerforceTasks.P4ChangeTask-ChangeType" use="optional">
      <xs:annotation>
        <xs:documentation>ChangeType : Set change list type to be restricted or public. This only works starting with P4 2012.1.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4ChangesTask">
    <xs:annotation>
      <xs:documentation>
            This task lists submitted and pending changelists.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="optional">
      <xs:annotation>
        <xs:documentation>String : Optional Perforce file spec to limit the output to the given files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="integrated" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Include changelists that were integrated with the specified files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maxnum" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Lists only the highest maxnum changes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="NAnt.PerforceTasks.P4ChangesTask-P4Status" use="optional">
      <xs:annotation>
        <xs:documentation>P4Status : Limit the list to the changelists with the given status (pending or submitted).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.Task_P4Counter">
    <xs:annotation>
      <xs:documentation>
            Obtain or set the value of a Perforce counter.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="counter" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the counter.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" use="optional">
      <xs:annotation>
        <xs:documentation>String : The new value for the counter.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="property" use="optional">
      <xs:annotation>
        <xs:documentation>String : The property to set with the value of the counter.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4DeleteTask">
    <xs:annotation>
      <xs:documentation>
            Open file(s) in a client workspace for deletion from the depot.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="required">
      <xs:annotation>
        <xs:documentation>String : Files to mark for delete.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="change" use="optional">
      <xs:annotation>
        <xs:documentation>String : Attach the given files to this changelist. 
            If not specified, the files get attached to the default changelist.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4EditTask">
    <xs:annotation>
      <xs:documentation>
            Open file(s) for edit in the local workspace.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="required">
      <xs:annotation>
        <xs:documentation>String : The files to edit.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="change" use="optional">
      <xs:annotation>
        <xs:documentation>String : Assign these files to this pre-existing changelist.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default type of the files to this type.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4HaveTask">
    <xs:annotation>
      <xs:documentation>
            This task lists files and revisions that have been copied to the client workspace.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="optional">
      <xs:annotation>
        <xs:documentation>String : Optional Perforce file spec to limit the output to the given files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4LabelTask">
    <xs:annotation>
      <xs:documentation>
            Creates a new label and associates that label with the current revisions of a list of files on the Perforce depot.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="label" use="required">
      <xs:annotation>
        <xs:documentation>String : Name to use for the label (required).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="description" use="optional">
      <xs:annotation>
        <xs:documentation>String : Description of the label.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="lock" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Lock the label once created.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="files" use="optional">
      <xs:annotation>
        <xs:documentation>String : Optional Perforce file spec to limit the output to the given files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="delete" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Deletes an existing label.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : For delete, force delete even if locked.  Ignored otherwise.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4LabelsyncTask">
    <xs:annotation>
      <xs:documentation>
            This task causes the named label to reflect the current contents of the client workspace.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="label" use="required">
      <xs:annotation>
        <xs:documentation>String : Name to use for the label (required).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="files" use="optional">
      <xs:annotation>
        <xs:documentation>String : Optional Perforce file spec to limit the operation to the given files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="delete" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Deletes the named files from the label.  Defaults false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="add" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Adds the named files to the label without deleting any files, 
            even if some of the files have been deleted at the head revision.  Defaults false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="execute" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If false, displays the results of this sync without actually executing it.  
            Defaults true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.Task_Reopen">
    <xs:annotation>
      <xs:documentation>
            Moves opened files between changelists.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="required">
      <xs:annotation>
        <xs:documentation>String : The files to operate on.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="change" use="required">
      <xs:annotation>
        <xs:documentation>String : Revert only the files in the specified changelist.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4RevertTask">
    <xs:annotation>
      <xs:documentation>
            Discard changes made to open files.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="required">
      <xs:annotation>
        <xs:documentation>String : The files to revert.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="change" use="optional">
      <xs:annotation>
        <xs:documentation>String : Revert only the files in the specified changelist.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="onlyUnchanged" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Revert only unchanged files (open for edit, but not altered).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4SubmitTask">
    <xs:annotation>
      <xs:documentation>
            Submit a changelist to the depot.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="optional">
      <xs:annotation>
        <xs:documentation>String : A single file pattern may be specified as a parameter to a p4 submit of the 
            default changelist. This file pattern limits which files in the default changelist are 
            included in the submission; files that don't match the file pattern are moved to the 
            next default changelist.
            The file pattern parameter to p4submit may not be used if change is specified.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="change" use="optional">
      <xs:annotation>
        <xs:documentation>String : Changelist to modify. After task is executed it contains actual submitted changelist</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="reopen" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Reopens the submitted files for editing after submission.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4SyncTask">
    <xs:annotation>
      <xs:documentation>
            Synchronize files between the depot and the workspace.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="files" use="optional">
      <xs:annotation>
        <xs:documentation>String : The files to sync.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Perform the sync even if files are not writable or are already in sync.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="execute" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If false, displays the results of this sync without actually executing it (defaults true).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.PerforceTasks.P4WhereTask">
    <xs:annotation>
      <xs:documentation>
            Return the file name in the local view of the client given the name in the depot.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="filespec" use="required">
      <xs:annotation>
        <xs:documentation>String : Perforce file spec in depot syntax.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="property" use="required">
      <xs:annotation>
        <xs:documentation>String : The property to set with the required path.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional">
      <xs:annotation>
        <xs:documentation>String : The type of path required Can be one of these: Local, Depot or Client..</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Suppresses normal output messages but still prints error messages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="client" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CLIENT with this client name.
            Can also be set via the ${p4.client} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides PWD with the specified directory.
            Can also be set via the ${p4.pwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="host" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4HOST with specified hostname.
            Can also be set via the ${p4.host} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PORT with specified hostname.
            Can also be set via the ${p4.port} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="password" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4PASSWD with specified hostname.
            Can also be set via the ${p4.passwd} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="user" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4USER|USER|USERNAME with specified hostname.
            Can also be set via the ${p4.user} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides P4CHARSET with specified charset.
            Can also be set via the ${p4.charset} property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.DotNetTasks.AlTask">
    <xs:annotation>
      <xs:documentation>
                Wraps al, the assembly linker for the .NET Framework.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="sources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of source files to embed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="output" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the output file for the assembly manifest.
                This attribute corresponds to the /out flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" use="required">
      <xs:annotation>
        <xs:documentation>String : The target type (one of "lib", "exe", or "winexe").
                This attribute corresponds to the /t[arget]: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="culture" use="optional">
      <xs:annotation>
        <xs:documentation>String : The culture string associated with the output assembly.
                The string must be in RFC 1766 format, such as "en-US".
                This attribute corresponds to the /c[ulture]: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="template" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specifies an assembly from which to get all options except the culture field.
                The given filename must have a strong name.
                This attribute corresponds to the /template: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.DotNetTasks.CscTask">
    <xs:annotation>
      <xs:documentation>Compiles C# programs using csc, Microsoft's C# compiler.
            
            Command line switches are passed using this syntax: &lt;arg value=""/&gt;.
            See examples below to see how it can be used outside OR inside the &lt;args&gt; tags.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="args" type="NAnt.Core.ArgumentSet">
        <xs:annotation>
          <xs:documentation>A set of command line arguments.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="references" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Reference metadata from the specified assembly files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resources" type="NAnt.DotNetTasks.ResourceFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set resources to embed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Link the specified modules into this assembly.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of source files for compilation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="doc" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the XML documentation file to generate.  This attribute 
            corresponds to the /doc: flag.  By default, documentation is not 
            generated.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="output" use="required">
      <xs:annotation>
        <xs:documentation>String : Output file name.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" use="required">
      <xs:annotation>
        <xs:documentation>String : Output type (library for dll's, winexe for GUI apps, exe for console apps, or module for, well, modules).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Generate debug output (true/false). Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="define" use="optional">
      <xs:annotation>
        <xs:documentation>String : Define conditional compilation symbol(s). Corresponds to /d[efine]: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="win32icon" use="optional">
      <xs:annotation>
        <xs:documentation>String : Icon to associate with the application. Corresponds to /win32icon: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="win32manifest" use="optional">
      <xs:annotation>
        <xs:documentation>String : Manifest file to associate with the application. Corresponds to /win32manifest: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="compiler" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the C# compiler. 
            Default is to use the compiler located in the current Microsoft .Net runtime directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="resgen" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the resgen .Net SDK compiler. This attribute is required 
            only when compiling resources.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.DotNetTasks.JscTask">
    <xs:annotation>
      <xs:documentation>Compiles Microsoft JScript.NET programs using jsc.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="references" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Reference metadata from the specified assembly files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resources" type="NAnt.DotNetTasks.ResourceFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set resources to embed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Link the specified modules into this assembly.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of source files for compilation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="output" use="required">
      <xs:annotation>
        <xs:documentation>String : Output file name.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" use="required">
      <xs:annotation>
        <xs:documentation>String : Output type (library for dll's, winexe for GUI apps, exe for console apps, or module for, well, modules).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Generate debug output (true/false). Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="define" use="optional">
      <xs:annotation>
        <xs:documentation>String : Define conditional compilation symbol(s). Corresponds to /d[efine]: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="win32icon" use="optional">
      <xs:annotation>
        <xs:documentation>String : Icon to associate with the application. Corresponds to /win32icon: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="win32manifest" use="optional">
      <xs:annotation>
        <xs:documentation>String : Manifest file to associate with the application. Corresponds to /win32manifest: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="compiler" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the C# compiler. 
            Default is to use the compiler located in the current Microsoft .Net runtime directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="resgen" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the resgen .Net SDK compiler. This attribute is required 
            only when compiling resources.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.DotNetTasks.ResGenTask">
    <xs:annotation>
      <xs:documentation>Converts files from one resource format to another (wraps Microsoft's resgen.exe).</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="resources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Takes a list of .resX or .txt files to convert to .resources files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="input" use="optional">
      <xs:annotation>
        <xs:documentation>String : Input file to process.  It is required if the resources fileset is empty.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="output" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of the resource file to output.  Default is the input file name replaced by the target type extension.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" use="optional">
      <xs:annotation>
        <xs:documentation>String : The target type extension (usually resources).  Default is "resources".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="todir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The directory to which outputs will be stored.  Default is the input file directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="compiler" use="required">
      <xs:annotation>
        <xs:documentation>String : The full path to the resgen compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.DotNetTasks.ResourceFileSet">
    <xs:annotation>
      <xs:documentation>Specialized fileset class for managing resources. Has an additional namespace </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="do" type="NAnt.DotNetTasks.ResourceFileSet-do-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="NAnt.DotNetTasks.ResourceFileSet-group-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="prefix" use="optional">
      <xs:annotation>
        <xs:documentation>String : Indicates the prefix to prepend to the actual resource.  This is usually the 
            default namespace of the assembly.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="defaultexcludes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates whether default excludes should be used or not.  Default "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base of the directory of this file set.  Default is project base directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if a build error should be raised if an explicitly included file does not exist.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sort" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sort the fileset by filename. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.DotNetTasks.ResourceFileSet-do-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.DotNetTasks.ResourceFileSet-group-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.DotNetTasks.VbcTask">
    <xs:annotation>
      <xs:documentation>Compiles Microsoft Visual Basic.NET programs using vbc.exe.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="references" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Reference metadata from the specified assembly files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resources" type="NAnt.DotNetTasks.ResourceFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set resources to embed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Link the specified modules into this assembly.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of source files for compilation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="baseaddress" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specifies whether /baseaddress option gets passed to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="imports" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specifies whether the /imports option gets passed to the compiler</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optioncompare" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specifies whether /optioncompare option gets passed to the compiler</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionexplicit" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Specifies whether the /optionexplicit option gets passed to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionoptimize" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Specifies whether the /optimize option gets passed to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionstrict" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Specifies whether the /optionstrict option gets passed to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="removeintchecks" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Specifies whether the /removeintchecks option gets passed to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="rootnamespace" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specifies whether the /rootnamespace option gets passed to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="output" use="required">
      <xs:annotation>
        <xs:documentation>String : Output file name.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" use="required">
      <xs:annotation>
        <xs:documentation>String : Output type (library for dll's, winexe for GUI apps, exe for console apps, or module for, well, modules).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Generate debug output (true/false). Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="define" use="optional">
      <xs:annotation>
        <xs:documentation>String : Define conditional compilation symbol(s). Corresponds to /d[efine]: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="win32icon" use="optional">
      <xs:annotation>
        <xs:documentation>String : Icon to associate with the application. Corresponds to /win32icon: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="win32manifest" use="optional">
      <xs:annotation>
        <xs:documentation>String : Manifest file to associate with the application. Corresponds to /win32manifest: flag.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="compiler" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the C# compiler. 
            Default is to use the compiler located in the current Microsoft .Net runtime directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="resgen" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the resgen .Net SDK compiler. This attribute is required 
            only when compiling resources.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="LinuxTasks.CreateGDBDebuggingConfigTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="deployment-executable" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deployment-commandlineargs" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deployment-host" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deployment-port" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deployment-username" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deployment-password" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deployment-path" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.EAMConfig.PrintReferencedPackagesTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="configname" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.GetVSConfigName.GetVSConfigNameTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="ConfigPropertyName" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.GetConfigPlatform.GetConfigPlatformTask">
    <xs:annotation>
      <xs:documentation>
            A Custom task which checks whether an existing solution file
            contains the given configuration and platform, and on missing
            platform in the solution, assign an existing platform with that config
            to that platform property in the calling project instance
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="configname" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="platformname" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="file" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.GenerateBulkBuildFiles.generatebulkbuildfiles">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="output-bulkbuild-files" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="output-loose-files" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="FileSetName" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OutputFilename" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OutputDir" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="MaxSize" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pch-header" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SplitByDirectories" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="MinSplitFiles" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DeviateMaxSizeAllowance" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CallTargetIfOutOfDate.calltargetifoutofdate">
    <xs:annotation>
      <xs:documentation>
            Compares inputs against outputs to determine whether to execute specified target.
            Target is executed if any of input files is newer than any of output files, any of output files does not exist, 
            or list of input dependencies does not match input dependencies from previous run.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="InputFileset" use="required">
      <xs:annotation>
        <xs:documentation>String : Input dependency files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OutputFileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : Output dependency files. If target does not produce any output files "DummyOutputFile" parameter can be specified.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DummyOutputFile" use="optional">
      <xs:annotation>
        <xs:documentation>String : Contains file path. File is created automatically when task is executed and added to "output dependency files" list.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DependencyFile" use="required">
      <xs:annotation>
        <xs:documentation>String : File to store list of input dependency files from "InputFileset" parameter. 
            This list is used to check whether set of input dependencies changed from previous run. Target is executed when list changes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TargetName" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of a target to execute</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate">
    <xs:annotation>
      <xs:documentation>
            Compares inputs against outputs to determine whether to execute specified target.
            Target is executed if any of input files is newer than any of output files, any of output files does not exist, 
            or list of input dependencies does not match input dependencies from previous run.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="inputs" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set of input files to check against.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputs" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set of output files to check against.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="code" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>The NAnt script to execute.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="DummyOutputFile" use="optional">
      <xs:annotation>
        <xs:documentation>String : If specified, this file is added to the list of output dependencies. Timestamp of DummyOutputFile file is updated when this task code is executed.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DependencyFile" use="required">
      <xs:annotation>
        <xs:documentation>String : The list of "inputs" is stored in the file with this name. It is used to check for missing/added input files during consecutive runs.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.JavaTasks.JarTask">
    <xs:annotation>
      <xs:documentation>Generates JNI headers using javah.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Enable verbose output. Default: false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="mode" use="required">
      <xs:annotation>
        <xs:documentation>String : mode: create/update/extract</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="archive" use="optional">
      <xs:annotation>
        <xs:documentation>String : archive file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="manifest" use="optional">
      <xs:annotation>
        <xs:documentation>String : manifest file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="entrypoint" use="optional">
      <xs:annotation>
        <xs:documentation>String : manifest file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="inputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The set of source files to archive.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="inputfiles" use="optional">
      <xs:annotation>
        <xs:documentation>String : The set of source files to archive.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="jartool" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.JavaTasks.JavacTask">
    <xs:annotation>
      <xs:documentation>Compiles Java.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="sources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of source files for compilation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Generate debug output (true/false). Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" use="optional">
      <xs:annotation>
        <xs:documentation>String : Generate class files for specific VM version.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sourcepath" use="optional">
      <xs:annotation>
        <xs:documentation>String : New line or semicolon separated list of source directories.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="encoding" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specify character encoding used by source files. Default: 'ascii'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputdir" use="required">
      <xs:annotation>
        <xs:documentation>String : Output directory to put generated class files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Enable verbose output. Default: false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="classpath" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specify where to find user class files and annotation processors.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bootclasspath" use="optional">
      <xs:annotation>
        <xs:documentation>String : location of bootstrap class files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="compiler" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.JavaTasks.JavahTask">
    <xs:annotation>
      <xs:documentation>Generates JNI headers using javah.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="jni" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Generate JNI-style header file (default)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="classes" use="optional">
      <xs:annotation>
        <xs:documentation>String : New line or semicolon separated list of source directories.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputdir" use="required">
      <xs:annotation>
        <xs:documentation>String : Output directory to put generated class files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Enable verbose output. Default: false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="classpath" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specify where to find user class files and annotation processors.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bootclasspath" use="optional">
      <xs:annotation>
        <xs:documentation>String : location of bootstrap class files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="compiler" use="optional">
      <xs:annotation>
        <xs:documentation>String : The full path to the compiler.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CPlusPlusTasks.AsTask">
    <xs:annotation>
      <xs:documentation>A generic assembler compiler task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="asmsources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of files to compile.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmincludedirs" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom include directories for this set files.  Use complete paths and place 
            each directory on it's own line.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmoptions" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom program options for these files.  Options get appended to the end of 
            the options specified by the ${cc.options} property.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmdefines" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom #defines for these files.  Defines get appended to the end of the
            defines specified in the ${cc.defines} property.  Place each define on it's own line.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="type" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of option set to use for compiling options.  If null
            given values from the global cc.* properties.  Default is null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Directory where all output files are placed.  Default is the base directory 
            of the build file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base name of any associated output files (e.g. the symbol table name).  
            Default is an empty string.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="collectcompilationtime" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Collect compilation time. 
            Default is an empty string.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="gendependencyonly" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Doesn't actually do build.  Just create the dependency .dep file only for each source file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CPlusPlusTasks.BuildTask">
    <xs:annotation>
      <xs:documentation>Builds C++ source files into a program or library.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="sources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of source files to compile.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objects" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Additional object files to link or archive with.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom include directories.  New line '\n' or semicolon ';' delimited.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom using directories.  New line '\n' or semicolon ';' delimited.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceusing-assemblies" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>Force using assemblies.  New line '\n' or semicolon ';' delimited.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ccoptions" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom compiler options for these files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defines" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom compiler defines.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of source files to assemble.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmincludedirs" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom include directories for these files.  New line  '\n' or semicolon ';' delimited.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmoptions" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom assembler options for these files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmdefines" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom assembler defines for these files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libraries" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of libraries to link with.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dependencies" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Additional file dependencies of a build</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Directory where all output files are placed.  See task details for more information if this attribute is not specified.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The base name of any associated output files.  The appropriate extension will be added.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="required">
      <xs:annotation>
        <xs:documentation>String : Type of the build task output.  Valid values are Program, Library or the name of an named option set.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputextension" use="optional">
      <xs:annotation>
        <xs:documentation>String : primary output extension</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CPlusPlusTasks.CcTask">
    <xs:annotation>
      <xs:documentation>A generic C/C++ compiler task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="sources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of files to compile.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceusing-assemblies" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>Force using assemblies for managed builds.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom include directories for this set files.  Use complete paths and place 
            each directory on it's own line.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom using directories for this set files.  Use complete paths and place 
            each directory on it's own line. Only applied to managed C++ compiler, such as VC++.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="options" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom program options for these files.  Options get appended to the end of 
            the options specified by the ${cc.options} property.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defines" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom #defines for these files.  Defines get appended to the end of the
            defines specified in the ${cc.defines} property.  Place each define on it's own line.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="type" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of option set to use for compiling options.  If null
            given values from the global cc.* properties.  Default is null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Directory where all output files are placed.  Default is the base directory 
            of the build file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base name of any associated output files (e.g. the symbol table name).  
            Default is an empty string.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="collectcompilationtime" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Collect compilation time. 
            Default is an empty string.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="gendependencyonly" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Doesn't actually do build.  Just create the dependency .dep file only for each source file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CPlusPlusTasks.LibTask">
    <xs:annotation>
      <xs:documentation>A generic C/C++ library manager tool.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="objects" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The list of object files to combine into a library.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="options" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom program options for this task.  These get appended to the options specified in the lib.options property.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="type" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of option set to use for compiling options.  If null
            given values from the global lib.* properties.  Default is null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Directory where all output files are placed.  Default is the base directory of the build file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base name of the library and any associated output files.  Default is an empty string.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="libextension" use="optional">
      <xs:annotation>
        <xs:documentation>String : library output extension</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CPlusPlusTasks.LinkTask">
    <xs:annotation>
      <xs:documentation>A generic C/C++ linker task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="objects" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The set of object files to link.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libraries" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The list of libraries to link with.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="librarydirs" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Directories to search for additional libraries.  New line "\n" or semicolon ";" delimited.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="options" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Custom program options for these files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="type" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of option set to use for compiling options.  If null
            given values from the global link.* properties.  Default is null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Directory where all output files are placed.  Default is the base directory of the build file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="required">
      <xs:annotation>
        <xs:documentation>String : The base name of the library or program and any associated output files.  Default is an empty string.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="linkoutputextension" use="optional">
      <xs:annotation>
        <xs:documentation>String : library output extension</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.CompilerTemplatePropertyElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="pch.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="responsefile.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="define" type="NAnt.Core.PropertyElement" />
      <xs:element name="includedir" type="NAnt.Core.PropertyElement" />
      <xs:element name="usingdir" type="NAnt.Core.PropertyElement" />
      <xs:element name="forceusing-assembly" type="NAnt.Core.PropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Tasks.BuildTool.CompilerTemplatePropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.CompilerTemplatePropertyElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="pch.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="responsefile.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="define" type="NAnt.Core.PropertyElement" />
      <xs:element name="includedir" type="NAnt.Core.PropertyElement" />
      <xs:element name="usingdir" type="NAnt.Core.PropertyElement" />
      <xs:element name="forceusing-assembly" type="NAnt.Core.PropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Tasks.BuildTool.CompilerTemplatePropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.CompilerTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="template" type="EA.Tasks.BuildTool.CompilerTemplatePropertyElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="path" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="language" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.AssemblerTemplatePropertyElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="responsefile.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="define" type="NAnt.Core.PropertyElement" />
      <xs:element name="includedir" type="NAnt.Core.PropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Tasks.BuildTool.AssemblerTemplatePropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.AssemblerTemplatePropertyElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="responsefile.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="define" type="NAnt.Core.PropertyElement" />
      <xs:element name="includedir" type="NAnt.Core.PropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Tasks.BuildTool.AssemblerTemplatePropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.AssemblerTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="template" type="EA.Tasks.BuildTool.AssemblerTemplatePropertyElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="path" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="language" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.LibrarianTemplatePropertyElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="responsefile.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="objectfile" type="NAnt.Core.PropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Tasks.BuildTool.LibrarianTemplatePropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.LibrarianTemplatePropertyElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="responsefile.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="objectfile" type="NAnt.Core.PropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Tasks.BuildTool.LibrarianTemplatePropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.LibrarianTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="template" type="EA.Tasks.BuildTool.LibrarianTemplatePropertyElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="path" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="language" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.LinkerTemplatePropertyElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="responsefile.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="librarydir" type="NAnt.Core.PropertyElement" />
      <xs:element name="libraryfile" type="NAnt.Core.PropertyElement" />
      <xs:element name="objectfile" type="NAnt.Core.PropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Tasks.BuildTool.LinkerTemplatePropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.LinkerTemplatePropertyElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="responsefile.commandline" type="NAnt.Core.PropertyElement" />
      <xs:element name="librarydir" type="NAnt.Core.PropertyElement" />
      <xs:element name="libraryfile" type="NAnt.Core.PropertyElement" />
      <xs:element name="objectfile" type="NAnt.Core.PropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Tasks.BuildTool.LinkerTemplatePropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Tasks.BuildTool.LinkerTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="template" type="EA.Tasks.BuildTool.LinkerTemplatePropertyElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="path" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="language" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.FrameworkTasks.DependentTask">
    <xs:annotation>
      <xs:documentation>This task indicates that another package needs to be loaded as a dependency</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the package to depend on.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" use="optional">
      <xs:annotation>
        <xs:documentation>String : Deprecated (Used in Framework 1)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ondemand" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true the package will be automatically downloaded from the package server. Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="initialize" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If false the execution of the Initialize.xml script will be suppressed. Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="warninglevel" type="EA.FrameworkTasks.DependentTask-WarningLevel" use="optional">
      <xs:annotation>
        <xs:documentation>WarningLevel : Warning level for missing or mismatching version. Default is NOTHING (0).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dropcircular" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Drop circular build dependency. If false throw on circular build dependencies</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.FrameworkTasks.ExecuteCustomBuildSteps">
    <xs:annotation>
      <xs:documentation>Executes a named custom build step.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="groupname" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the module whose build steps we want to execute.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask">
    <xs:annotation>
      <xs:documentation>
            creates optionset that contains all packages listed in masterconfig with key='package name', value='version'.
            
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="optionsetname" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of the optionset to generate</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.FrameworkTasks.PackageTask">
    <xs:annotation>
      <xs:documentation>Declares a package.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : A fileset to package. Ignored for Framework 2.x packages.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of a package comes from the directory name if the package is in the packages directory.  Use this attribute to name a package that lives outside the packages directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="targetversion" use="optional">
      <xs:annotation>
        <xs:documentation>String : The version of the package in development.  This parameter is optional.
            If it is not specified, Framework will use the name of the parent directory as
            the target version.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of fileset to package.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="initializeself" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true the packages own Initialize.xml script will be loaded. Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.FrameworkTasks.SignPackageTask">
    <xs:annotation>
      <xs:documentation>
            Creates package signature file
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="packagefiles-filesetname" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of the fileset containing all package files</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.FrameworkTasks.VerifyVersionFileTask">
    <xs:annotation>
      <xs:documentation>Verifies package version info in version.h file.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="packagename" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of a package comes from the directory name if the package is in the packages directory.  Use this attribute to name a package that lives outside the packages directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="targetversion" use="required">
      <xs:annotation>
        <xs:documentation>String : The version of the package in development.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="packagedir" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of a package comes from the directory name if the package is in the packages directory.  Use this attribute to name a package that lives outside the packages directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.FrameworkTasks.VerifyPackageSignatureTask">
    <xs:annotation>
      <xs:documentation>
            Verify if package content matches signature
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="packagefiles-filesetname" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of the fileset containing all package files</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.GenerateModuleInteropAssembliesTask">
    <xs:annotation>
      <xs:documentation>Helper task to generate interop assemblies for a list of COM DLL's in a module.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="module" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the module</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the group that the module is part of, defaults to runtime</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="generated-assemblies-fileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask">
    <xs:annotation>
      <xs:documentation>Generates a single interop assembly from a COM DLL. Dependency-checking is performed.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="comdll" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="interopdll" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="namespace" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="keyfile" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="message" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.GetComLibraryNameTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="libpath" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Result" use="required">
      <xs:annotation>
        <xs:documentation>String : The property where the result will be stored</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.GenerateModuleWebReferencesTask">
    <xs:annotation>
      <xs:documentation>Use wsdl to generate proxy classes for ASP.NET web services. The generated code is placed in ${workingdir}.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="module" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the module</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The group the module is in</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="output" use="optional">
      <xs:annotation>
        <xs:documentation>String : The fileset (C#) or property (managed) where the output will be stored</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.NAntSchemaInstallerTask">
    <xs:annotation>
      <xs:documentation>Copies XML schema file to the schema directory under the 
            visual studio install directory. Also, extends the visual studio 
            schema catalog to associate the new schema with the *.build extension.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="vs11path" use="optional">
      <xs:annotation>
        <xs:documentation>String : The install directory of visual studio 2012 (vs11) where the schema files will be copied.
            By default uses environment variable VS110COMNTOOLS.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="vs12path" use="optional">
      <xs:annotation>
        <xs:documentation>String : The install directory of visual studio 2013 (vs12) where the schema files will be copied.
            By default uses environment variable VS120COMNTOOLS.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="vs14path" use="optional">
      <xs:annotation>
        <xs:documentation>String : The install directory of visual studio 2015 (vs14) where the schema files will be copied.
            By default uses environment variable VS140COMNTOOLS.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="vs15path" use="optional">
      <xs:annotation>
        <xs:documentation>String : The install directory of visual studio 2017 (vs15) where the schema files will be copied.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="inputfile" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the schema file. Should match the name of the output file of the nantschema task</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.NAntSchemaTask">
    <xs:annotation>
      <xs:documentation>Generates an xml schema file (*.xsd) based on task source files. This file
            can be used by visual studio to provide intellisense for editing build files.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileSet" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputfile" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the output schema file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Combine">
    <xs:annotation>
      <xs:documentation>
            An internal task used by eaconfig to setup buildtypes. Not intended to be used by end users.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.GenerateBuildOptionset">
    <xs:annotation>
      <xs:documentation>
            (Deprecated) Creates buildtype optionset from a meta build optionset. 
            This task is deprecated please use the Structured XML &lt;BuildType&gt; task instead.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="configsetname" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the meta optionset. 
            The name of the target buildtype optionset is provided by 'buildset.name' option</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="controllingproperties" use="optional">
      <xs:annotation>
        <xs:documentation>String : List of the controlling properties. Intended to be used in the configuration packages to override default list of controlling properties like 
            'eaconfig.debugflags", eaconfig.optimization, etc.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.MergeOptionset">
    <xs:annotation>
      <xs:documentation>
            NAnt custom task which merges options from a NAnt code-build script.
            This differs from the built-in Framework mergeoption in that it is using C#
            instead of nAnt tasks to do the work in order to increase performance
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="OriginalOptionset" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FromOptionset" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.MergeOptionTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="Optionset" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OptionName" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.EaconfigBuildCallerTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="build-target-name" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.EaconfigCustomBuildTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.GetModuleBaseType">
    <xs:annotation>
      <xs:documentation>
            Evaluates base buildtype name for the given buildtype optionset.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="buildtype-name" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of the buildtype optionset to examine</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Name" use="optional">
      <xs:annotation>
        <xs:documentation>String : (deprecated) Duplicate of the buildtype-name field for backward compatibility</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="base-buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Evaluated buildtype. Saved in property "GetModuleBaseType.RetVal"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.LoadPlatformConfigTask">
    <xs:annotation>
      <xs:documentation>
            Loads platform specific configuration package
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.ClangCompilationDatabase">
    <xs:annotation>
      <xs:documentation>Generates a Clang Compilation Database</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.CollectMasterconfigPackagesTask">
    <xs:annotation>
      <xs:documentation>
            Gets a list of packages in a specific group in the masterconfig file and stores it in a property
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="groupname" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of a group in the masterconfig config file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target-property" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of a property where the list will be stored</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.CreateBuildGraphForPackageTask">
    <xs:annotation>
      <xs:documentation>
            Create a build graph for a specific package instead of current package.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="package" use="optional">
      <xs:annotation>
        <xs:documentation>String : The package we want to create the build graph for.  If not specified, will create build graph for current package.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.CreateCustomBuildStepTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="module-groupname" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="filesets-property" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.DeployTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="groupname" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildmodule" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.EaconfigSandCastleTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.EchoFileSetTask">
    <xs:annotation>
      <xs:documentation>
            Prints the all of the files in a fileset.
            This task should only be used for debugging build scripts.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="Name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the fileset to print</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.EchoOptionSetTask">
    <xs:annotation>
      <xs:documentation>
            Prints the all of the options in an optionset.
            This task should only be used for debugging build scripts.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="Name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the optionset to print</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.ExcludeDirTask">
    <xs:annotation>
      <xs:documentation>Exclude a directory from an existing fileset</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="Fileset" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the fileset that we want to exclude from</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Directory" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the directory that we want to exclude</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.GetAllDependentPackagesTask">
    <xs:annotation>
      <xs:documentation>
            Extract a list of dependent packages from build graph for all top modules in current package.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="property" use="optional">
      <xs:annotation>
        <xs:documentation>String : Put the result this this property</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.GetModuleAssetFilesTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="module-groupname" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="asset-filesets-property" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.RepeatExecifTask">
    <xs:annotation>
      <xs:documentation>Executes a system command. Repeats execution if condition is met</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="env" type="NAnt.Core.OptionSet">
        <xs:annotation>
          <xs:documentation>optionset : The set of environment variables for when the program runs.
            Benefit of setting variables, like "Path", here is that it will be
            local to this program execution (i.e. global path is unaffected).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="inputs" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Program inputs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputs" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Program outputs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="args" type="NAnt.Core.ArgumentSet">
        <xs:annotation>
          <xs:documentation>A set of command line arguments.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="repeatpattern" use="optional">
      <xs:annotation>
        <xs:documentation>String : List of patterns.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maxrepeatcount" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : List of patterns.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maxlinestoscan" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="program" use="required">
      <xs:annotation>
        <xs:documentation>String : The program to execute. Specify the fully qualified name unless the program is in the path.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="message" use="optional">
      <xs:annotation>
        <xs:documentation>String : The message to display to the log.  If present then no other output will be displayed unless there is an error or the verbose attribute is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="commandline" use="optional">
      <xs:annotation>
        <xs:documentation>String : The command line arguments for the program.  Consider using arg elements (see task description) for improved readability.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="responsefile" use="optional">
      <xs:annotation>
        <xs:documentation>String : Use the contents of this file as input to the program.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="commandlinetemplate" use="optional">
      <xs:annotation>
        <xs:documentation>String : The template used to form the command line. Default is '%commandline% %responsefile%'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="output" use="optional">
      <xs:annotation>
        <xs:documentation>String : The file to which the standard output will be redirected. By default, the standard output is redirected to the console.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : true if the output file is to be appended to. Default = "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="stdout" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Write to standard output. Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirectout" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to redirect stdout and stderr. When set to false, this will disable options such as stdout, outputfile etc.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirectin" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to redirect stdin. Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="createinwindow" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to create process in a new window.. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="silent" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true standard output from the external program (as well as the execution command line) will not be written to log. Does not affect standard error. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="silent-err" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true standard error from the external program (as well as the execution command line) will not be written to log. Does not affect standard output. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="workingdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The directory in which the command will be executed. The workingdir will be evaluated relative to the build file's directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="clearenv" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to clear all environmental variable before executing, environmental variable specified in env OptionSet will still be added as environmental variable.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="timeout" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Stop the build if the command does not finish within the specified time.  Specified in milliseconds.  Default is no time out.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.ScriptInitTask">
    <xs:annotation>
      <xs:documentation>(Deprecated) Sets up a number of default public data properties. This is deprecated, use the 'publicdata' task instead.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="PackageName" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the package</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IncludeDirs" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Libs" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.SetConfigVisualStudioVersion">
    <xs:annotation>
      <xs:documentation>
            This task sets some properties that can be used if you need to execute your build
            differently depending on the version of Visual Studio that is being used.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.UpdateManifestCompatibilityTask">
    <xs:annotation>
      <xs:documentation>
            Updates the compatibility element to match the version of the package
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="version" use="optional">
      <xs:annotation>
        <xs:documentation>String : Allows a build script write to specify a different/modified version to use for compatibility in place of the package version</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.ValidateCodeConventionsTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.VerifySourceIncludesTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.ViewBuildInfoTask">
    <xs:annotation>
      <xs:documentation>
            Show a simple GUI dialog box to allow user interactively view the build info of each build module.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.AssemblyInfoTask">
    <xs:annotation>
      <xs:documentation>If this XML element is present on a module definition Framework will generate an AssemblyInfo file and add it to the project</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.AssemblyInfoTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="company" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the company field in the generated AssemblyInfo file, default is "Electronic Arts"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="copyright" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the copyright field in the generated AssemblyInfo file, default is "(c) Electronic Arts. All Rights Reserved."</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="product" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the product field in the generated AssemblyInfo file, default is the package's name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the title field in the generated AssemblyInfo file, default is "(ModuleName).dll"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="description" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the description field in the generated AssemblyInfo file, default is the description field from the Manifest.xml file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the version field in the generated AssemblyInfo file, default is the package version</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.AssemblyInfoTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.AssemblyInfoTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BuildStepsElement">
    <xs:annotation>
      <xs:documentation>BuildStepsElement</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="prebuild-step" type="EA.Eaconfig.Structured.BuildTargetElement">
        <xs:annotation>
          <xs:documentation>Sets the prebuild steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postbuild-step" type="EA.Eaconfig.Structured.PostBuildTargetElement">
        <xs:annotation>
          <xs:documentation>Sets the postbuild steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custom-build-step" type="EA.Eaconfig.Structured.CustomBuildStepElement">
        <xs:annotation>
          <xs:documentation>Defines a custom build step that may execute before or 
            after another target</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="packaging" type="EA.Eaconfig.Structured.PackagingElement">
        <xs:annotation>
          <xs:documentation>Sets the packaging steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="run" type="EA.Eaconfig.Structured.RunDataElement">
        <xs:annotation>
          <xs:documentation>Sets the run steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.BuildStepsElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BuildStepsElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="prebuild-step" type="EA.Eaconfig.Structured.BuildTargetElement">
        <xs:annotation>
          <xs:documentation>Sets the prebuild steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postbuild-step" type="EA.Eaconfig.Structured.PostBuildTargetElement">
        <xs:annotation>
          <xs:documentation>Sets the postbuild steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custom-build-step" type="EA.Eaconfig.Structured.CustomBuildStepElement">
        <xs:annotation>
          <xs:documentation>Defines a custom build step that may execute before or 
            after another target</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="packaging" type="EA.Eaconfig.Structured.PackagingElement">
        <xs:annotation>
          <xs:documentation>Sets the packaging steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="run" type="EA.Eaconfig.Structured.RunDataElement">
        <xs:annotation>
          <xs:documentation>Sets the run steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.BuildStepsElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BuildTargetElement" mixed="true">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="target" type="EA.Eaconfig.Structured.TargetElement">
        <xs:annotation>
          <xs:documentation>Sets the target</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="command" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the comand</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.BuildTargetElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="targetname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Sets the target name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="nant-build-only" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Autoconvert target to command when needed in case command is not defined. Default is 'true'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BuildTargetElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="target" type="EA.Eaconfig.Structured.TargetElement">
        <xs:annotation>
          <xs:documentation>Sets the target</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="command" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the comand</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.BuildTargetElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PostBuildTargetElement" mixed="true">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="target" type="EA.Eaconfig.Structured.TargetElement">
        <xs:annotation>
          <xs:documentation>Sets the target</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="command" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the comand</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PostBuildTargetElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="skip-if-up-to-date" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="targetname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Sets the target name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="nant-build-only" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Autoconvert target to command when needed in case command is not defined. Default is 'true'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PostBuildTargetElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="target" type="EA.Eaconfig.Structured.TargetElement">
        <xs:annotation>
          <xs:documentation>Sets the target</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="command" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the comand</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PostBuildTargetElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.TargetElement">
    <xs:annotation>
      <xs:documentation>Create a dynamic target. This task is a Framework 2 feature</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />      
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="depends" use="optional">
      <xs:annotation>
        <xs:documentation>String : A space separated list of target names that this target depends on.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="description" use="optional">
      <xs:annotation>
        <xs:documentation>String : The Target description.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hidden" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Prevents the target from being listed in the project help. Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="style" use="optional">
      <xs:annotation>
        <xs:documentation>String : Style can be 'use', 'build', or 'clean'.   See 'Auto Build Clean' 
            page in the Reference/NAnt/Fundamentals section of the help doc for details.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="optional">
      <xs:annotation>
        <xs:documentation>String : This attribute is not used. Adding it here only to prevent build breaks after turning on strict attribute check.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BuildTypePropertyElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : Argument. Default is null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="override" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BuildTypeTask">
    <xs:annotation>
      <xs:documentation>The build type task can be used to create custom build types, derived from existing build types but with custom settings.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="remove" type="EA.Eaconfig.Structured.RemoveBuildOptions">
        <xs:annotation>
          <xs:documentation>Define options to remove from the final optionset</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="option" type="NAnt.Core.OptionSet-Option" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="from" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of a buildtype ('Library', 'Program', etc.) to derive new build type from.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : Sets the name for the new buildtype</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BuildTypeElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="option" type="NAnt.Core.OptionSet-Option" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the option will be included; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the option will be included; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromoptionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of an option set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BulkBuildElement">
    <xs:annotation>
      <xs:documentation>Bulkbuild input</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="loosefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Files that are not included in the bulkbuild</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.NamedStructuredFileSets">
        <xs:annotation>
          <xs:documentation>fileset : Groups of sourcefiles to be used to generate bulkbuild files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="manualsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Manual bulkbuild files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.BulkBuildElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="enable" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : enable/disable bulkbuild generation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="partial" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If partial enabled, source files with custom build settings are excluded from bulkbuild generation and compiled separately.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maxsize" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : If 'maxsize' is set, generated bulkbuild files will contain no more than maxsize entries. I.e. They are split in several if number of files exceeds maxsize.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SplitByDirectories" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If 'SplitByDirectories' is set, generated bulkbuild files will be split according to directories (default is false).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="MinSplitFiles" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Use 'MinSplitFiles' to specify minimum files when directory is split into a separate BulkBuild file (only used when SplitByDirectories is turned on).  That is, if current directory has less then the specified minimun files, this directory's files will be merged with the next directory to form a group and then do a split in this group.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DeviateMaxSizeAllowance" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Use 'DeviateMaxSizeAllowance' to specify a threadhold of number of files we're allowed to deviate from maxsize input.  This parameter
            only get used on incremental build where existing bulkbuild files have already been created from previous build.  Purpose of this parameter 
            is to allow your development process to not get slowed down by adding/removing files.  Default is set to 5.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.BulkBuildElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="loosefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Files that are not included in the bulkbuild</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.NamedStructuredFileSets">
        <xs:annotation>
          <xs:documentation>fileset : Groups of sourcefiles to be used to generate bulkbuild files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="manualsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Manual bulkbuild files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.BulkBuildElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ConditionalPropertyElement" mixed="true">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="do" type="EA.Eaconfig.Structured.ConditionalPropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" use="optional">
      <xs:annotation>
        <xs:documentation>String : Argument. Default is null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Append new data to the current value. The current value may come from partial modules. Default: 'true'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ConditionalPropertyElement-do-6" mixed="true">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="do" type="EA.Eaconfig.Structured.ConditionalPropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ConfigElement">
    <xs:annotation>
      <xs:documentation>Sets various attributes for a config</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="buildoptions" type="EA.Eaconfig.Structured.BuildTypeElement">
        <xs:annotation>
          <xs:documentation>Gets the build options for this config.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Gets the macros defined for this config</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetframeworkversion" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set target framework version for managed modules (4.0, 4.5, ...)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="warningsuppression" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Gets the warning suppression property for this config</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pch" type="EA.Eaconfig.Structured.PrecompiledHeadersElement">
        <xs:annotation>
          <xs:documentation>Set up precompiled headers.  NOTE: To use this option, you still need to list a source file and specify that file with 'create-precompiled-header' optionset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="remove" type="EA.Eaconfig.Structured.RemoveBuildOptions">
        <xs:annotation>
          <xs:documentation>Define options to remove from the final optionset</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CustomBuildStepElement">
    <xs:annotation>
      <xs:documentation>Defines a custom build step that may execute before or 
            after another target.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="custom-build-tool" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The commands to be executed by the custom build step, 
            either NAnt tasks or OS commands.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custom-build-outputs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A list of files that are added to the step's output dependencies.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custom-build-dependencies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of files that are added to the step's input dependencies.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CustomBuildStepElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="before" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of the target a custom build step should run before (build, link, run).
            Supported by native NAnt and MSBuild.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="after" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of the target a custom build step should run after (build, run).
            Supported by native NAnt and MSBuild.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CustomBuildStepElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="custom-build-tool" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The commands to be executed by the custom build step, 
            either NAnt tasks or OS commands.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custom-build-outputs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A list of files that are added to the step's output dependencies.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custom-build-dependencies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of files that are added to the step's input dependencies.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CustomBuildStepElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DependenciesPropertyElement">
    <xs:annotation>
      <xs:documentation>Specifies dependencies at both the package and module level. For more details see dependency section of docs, filed under "Reference/Packages/build scripts/Dependencies".</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="auto" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>(Note: New in Framework 3+) Using autodependencies is always a safe option. They simplify build scripts when module declaring dependencies can be built as a static or dynamic library depending on configuration settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="use" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>This type of dependency is often used with static libraries. Acts as a combined interface and link dependency.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="build" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies to be built by the package. Ignored when dependent package is non buildable, or has autobuildclean=false.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="interface" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>These dependencies are used when only header files from dependent package are needed. Adds include directories and defines set in the Initialize.xml file of dependent package.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="link" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>Use these dependencies to make sure no header files or defines from dependent package are used. Library directories, using directories, assemblies and DLLs are also taken from the dependent package.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DependenciesPropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="skip-runtime-dependency" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Allows you to disable the automatic build dependency on runtime modules that is used for test and example builds.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DependenciesPropertyElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="auto" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>(Note: New in Framework 3+) Using autodependencies is always a safe option. They simplify build scripts when module declaring dependencies can be built as a static or dynamic library depending on configuration settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="use" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>This type of dependency is often used with static libraries. Acts as a combined interface and link dependency.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="build" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies to be built by the package. Ignored when dependent package is non buildable, or has autobuildclean=false.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="interface" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>These dependencies are used when only header files from dependent package are needed. Adds include directories and defines set in the Initialize.xml file of dependent package.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="link" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement">
        <xs:annotation>
          <xs:documentation>Use these dependencies to make sure no header files or defines from dependent package are used. Library directories, using directories, assemblies and DLLs are also taken from the dependent package.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DependenciesPropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement" mixed="true">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="do" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="interface" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Public include directories from dependent packages are added.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="link" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Public libraries from dependent packages are added if this attribute is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="copylocal" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set copy local flag for this dependency output.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="internal" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sets the internal dependency flag for this dependency group.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" use="optional">
      <xs:annotation>
        <xs:documentation>String : Argument. Default is null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Append new data to the current value. The current value may come from partial modules. Default: 'true'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement-do-6" mixed="true">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="do" type="EA.Eaconfig.Structured.DependencyDefinitionPropertyElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetAssembliesFileset">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetAssembliesFileset-do-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="EA.Eaconfig.Structured.DotNetAssembliesFileset-group-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="usedefaultassemblies" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Controls whether default assemblies dependencies should be included.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true, the patterns specified by this task are added to the patterns contained in the fileset. If false, the fileset will only contains the patterns specified in this task. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="defaultexcludes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates whether default excludes should be used or not.  Default "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base of the directory of this file set.  Default is project base directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if a build error should be raised if an explicitly included file does not exist.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sort" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sort the fileset by filename. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetAssembliesFileset-do-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetAssembliesFileset-group-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetDataElement">
    <xs:annotation>
      <xs:documentation>MCPP/DotNet specific data</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="allowunsafe" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetDataElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="allowunsafe" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetModuleTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationmanifest" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the location of the Application manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appdesignerfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the name of the App designer folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disablevshosting" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to enable/disable Visual Studio hosting process during debugging</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="importmsbuildprojects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional MSBuild project imports</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runpostbuildevent" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Postbuild event run condition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationicon" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The location of the Application Icon file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generatedoc" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>property enables/disables generation of XML documentation files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Key File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal-dependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.DotNetAssembliesFileset">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of native dynamic/shared libraries. These do not affect build but be copied
            to module output directory if copy local is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of 'Content' files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : A list of webreferences for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of modules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetModuleTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.JavaDataElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : List of source files to be used</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entrypoint" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Files to be used as an entry point</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="archives" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : List of java archives to add to class path and included in APK.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="build-only-archives" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : List of java archives to add to class path but NOT include in APK.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="classes" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="jniheadersdir" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="jniclasses" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="classroot" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="prebuild-step" type="EA.Eaconfig.Structured.BuildTargetElement">
        <xs:annotation>
          <xs:documentation>Sets the prebuild steps for a Java build</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postbuild-step" type="EA.Eaconfig.Structured.BuildTargetElement">
        <xs:annotation>
          <xs:documentation>Sets the postbuild steps for a Java build</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.JavaDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.JavaDataElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : List of source files to be used</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entrypoint" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Files to be used as an entry point</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="archives" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : List of java archives to add to class path and included in APK.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="build-only-archives" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : List of java archives to add to class path but NOT include in APK.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="classes" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="jniheadersdir" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="jniclasses" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="classroot" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="prebuild-step" type="EA.Eaconfig.Structured.BuildTargetElement">
        <xs:annotation>
          <xs:documentation>Sets the prebuild steps for a Java build</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postbuild-step" type="EA.Eaconfig.Structured.BuildTargetElement">
        <xs:annotation>
          <xs:documentation>Sets the postbuild steps for a Java build</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.JavaDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.NantScript">
    <xs:annotation>
      <xs:documentation>
            Execute arbitrary XML script. Useful in partial modules.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="order" type="EA.Eaconfig.Structured.NantScript-Order" use="required">
      <xs:annotation>
        <xs:documentation>Order : Script can be executed 'before' structured XML data are processed or 'after'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CopyLocalElement">
    <xs:annotation>
      <xs:documentation>
            Module's global copylocal setting.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="do" type="EA.Eaconfig.Structured.CopyLocalElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="use-hardlink-if-possible" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Specifies that the copylocal task will use hard link if possible (default is false)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" use="optional">
      <xs:annotation>
        <xs:documentation>String : Argument. Default is null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Append new data to the current value. The current value may come from partial modules. Default: 'true'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CopyLocalElement-do-6" mixed="true">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="do" type="EA.Eaconfig.Structured.CopyLocalElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ModuleTask">
    <xs:annotation>
      <xs:documentation>A standard structured XML Module with user specified buildtype to be used in the .build file (not to be confused with the &lt;module&gt; task for Initialize.xml file)</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ModuleTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ModuleTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ModuleTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.NamedStructuredFileSets">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="do" type="EA.Eaconfig.Structured.NamedStructuredFileSets-do-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="EA.Eaconfig.Structured.NamedStructuredFileSets-group-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true, the patterns specified by this task are added to the patterns contained in the fileset. If false, the fileset will only contains the patterns specified in this task. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="defaultexcludes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates whether default excludes should be used or not.  Default "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base of the directory of this file set.  Default is project base directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if a build error should be raised if an explicitly included file does not exist.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sort" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sort the fileset by filename. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.NamedStructuredFileSets-do-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.NamedStructuredFileSets-group-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PackagingElement">
    <xs:annotation>
      <xs:documentation>PackagingElement</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="assetfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Asset files defined by the module. 
            The asset files directory will be synchronized to match this fileset, therefore only one assetfiles fileset can be defined per package.
            To attach asset files to multiple modules use the assetfiles 'fromfileset' attribute.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assetdependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets or gets the asset dependencies</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asset-configbuilddir" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets or gets the asset-configbuilddir</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="manifestfile" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Gets the manifest file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PackagingElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="packagename" use="optional">
      <xs:annotation>
        <xs:documentation>String : Sets or gets the package name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deployassets" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true assetfiles are deployed/packaged according to platform requirements. Default is true for programs.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="copyassetswithoutsync" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Specify assets files are copied only and do not perform asset directory synchronization. Default is false for programs.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PackagingElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="assetfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Asset files defined by the module. 
            The asset files directory will be synchronized to match this fileset, therefore only one assetfiles fileset can be defined per package.
            To attach asset files to multiple modules use the assetfiles 'fromfileset' attribute.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assetdependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets or gets the asset dependencies</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asset-configbuilddir" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets or gets the asset-configbuilddir</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="manifestfile" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Gets the manifest file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PackagingElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PartialModuleTask">
    <xs:annotation>
      <xs:documentation>
            Declares partial module definition. NOTE: schema and intellisense are generated for 'native' PartialModule only, for DotNet partial modules use 'CsharpLibrary' as a template.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PartialModuleTask-PartialModule-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="skip" />
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PartialModuleTask-PartialModule-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PartialModuleTask-PartialModule-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PlatformExtensions">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="capilano" type="EA.CapilanoConfig.StructuredExtensionCapilano" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PrecompiledHeadersElement">
    <xs:annotation>
      <xs:documentation>Precompiled headers input.   NOTE: To use this option, you still need to list a source file and specify that file with 'create-precompiled-header' optionset.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="enable" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : enable/disable using precompiled headers.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pchfile" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of output precompiled header</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pchheader" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of the precompiled header file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.RemoveBuildOptions">
    <xs:annotation>
      <xs:documentation>Sets options to be removed from final configuration</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cc.options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>C/CPP compiler options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="as.options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Assembly compiler options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="link.options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Linker options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lib.options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>librarian options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.RemoveBuildOptions-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.RemoveBuildOptions-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cc.options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>C/CPP compiler options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="as.options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Assembly compiler options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="link.options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Linker options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lib.options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>librarian options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.RemoveBuildOptions-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ResourceFilesElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="do" type="EA.Eaconfig.Structured.ResourceFilesElement-do-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="EA.Eaconfig.Structured.ResourceFilesElement-group-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="prefix" use="optional">
      <xs:annotation>
        <xs:documentation>String : Indicates the prefix to prepend to the actual resource.  This is usually the 
            default namespace of the assembly.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="resourcebasedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="includedirs" use="optional">
      <xs:annotation>
        <xs:documentation>String : Additional include directories to pass to the resource compiler</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="defines" use="optional">
      <xs:annotation>
        <xs:documentation>String : Additional defines to pass to the resource compiler</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true, the patterns specified by this task are added to the patterns contained in the fileset. If false, the fileset will only contains the patterns specified in this task. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="defaultexcludes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates whether default excludes should be used or not.  Default "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base of the directory of this file set.  Default is project base directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if a build error should be raised if an explicitly included file does not exist.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sort" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sort the fileset by filename. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ResourceFilesElement-do-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ResourceFilesElement-group-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.RunDataElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="workingdir" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="args" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="startupprogram" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.RunDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="workingdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Sets the current working directory from which the executable needs to run</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="args" use="optional">
      <xs:annotation>
        <xs:documentation>String : Sets the command line arguments for an executable</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="startupprogram" use="optional">
      <xs:annotation>
        <xs:documentation>String : Sets the startup program</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.RunDataElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="workingdir" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="args" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="startupprogram" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.RunDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.SectionTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.SectionTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.StructuredFileSet">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="do" type="EA.Eaconfig.Structured.StructuredFileSet-do-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="EA.Eaconfig.Structured.StructuredFileSet-group-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true, the patterns specified by this task are added to the patterns contained in the fileset. If false, the fileset will only contains the patterns specified in this task. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="defaultexcludes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates whether default excludes should be used or not.  Default "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base of the directory of this file set.  Default is project base directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if a build error should be raised if an explicitly included file does not exist.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sort" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sort the fileset by filename. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.StructuredFileSet-do-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.StructuredFileSet-group-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.StructuredFileSetCollection">
    <xs:annotation>
      <xs:documentation>Sometimes it's useful to be able to access each fileset defined as a collection rather than
            appending from multiple definitions into a single fileset. Gives the facade of a fileset so 
            the XML declaration can be the same (minus properties which don't make sense for structured.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement" />
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement" />
      <xs:element name="do" type="EA.Eaconfig.Structured.StructuredFileSetCollection-do-ConditionalContainer" />
      <xs:element name="group" type="EA.Eaconfig.Structured.StructuredFileSetCollection-group-ConditionalContainer" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.StructuredFileSetCollection-do-ConditionalContainer">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement" />
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.StructuredFileSetCollection-group-ConditionalContainer">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement" />
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.StructuredOptionSet">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="option" type="NAnt.Core.OptionSet-Option" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromoptionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of an option set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.VisualStudioDataElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pregenerate-target" type="EA.Eaconfig.Structured.BuildTargetElement" />
      <xs:element name="excludedbuildfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of files that are excluded from the build but are added to the visual studio
            project as non-buildable files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pre-build-step" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="post-build-step" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="vcproj" type="EA.Eaconfig.Structured.VcprojDataElement" />
      <xs:element name="csproj" type="EA.Eaconfig.Structured.CsprojDataElement" />
      <xs:element name="msbuildoptions" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>A list of elements to insert directly into the visualstudio project file in the config build options section.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="extension" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The name(s) of a Visual Studio Extension task used for altering the solution generation process 
            to allow adding custom elements to a project file.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.VisualStudioDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.VisualStudioDataElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pregenerate-target" type="EA.Eaconfig.Structured.BuildTargetElement" />
      <xs:element name="excludedbuildfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of files that are excluded from the build but are added to the visual studio
            project as non-buildable files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pre-build-step" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="post-build-step" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="vcproj" type="EA.Eaconfig.Structured.VcprojDataElement" />
      <xs:element name="csproj" type="EA.Eaconfig.Structured.CsprojDataElement" />
      <xs:element name="msbuildoptions" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>A list of elements to insert directly into the visualstudio project file in the config build options section.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="extension" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The name(s) of a Visual Studio Extension task used for altering the solution generation process 
            to allow adding custom elements to a project file.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.VisualStudioDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.VcprojDataElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pre-link-step" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="input-resource-manifests" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.VcprojDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.VcprojDataElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pre-link-step" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="input-resource-manifests" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.VcprojDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CsprojDataElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="link.resourcefiles.nonembed" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CsprojDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CsprojDataElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="link.resourcefiles.nonembed" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CsprojDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.RuntimeTask">
    <xs:annotation>
      <xs:documentation>
            Contains 'runtime' modules in structured XML. Module definitions inside this tag will belong to 'runtime' group. 
            runtime group element is optional, structured XML modules belong to 'runtime' group by default.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.TestsTask">
    <xs:annotation>
      <xs:documentation>
            Contains 'test' modules in structured XML. Module definitions inside this tag will belong to 'test' group.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ExamplesTask">
    <xs:annotation>
      <xs:documentation>
            Contains 'example' modules in structured XML. Module definitions inside this tag will belong to 'example' group.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ToolsTask">
    <xs:annotation>
      <xs:documentation>
            Contains 'tool' modules in structured XML. Module definitions inside this tag will belong to 'tool' group.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CSharpLibraryTask">
    <xs:annotation>
      <xs:documentation>A Module buildable as a C Sharp library.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationmanifest" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the location of the Application manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appdesignerfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the name of the App designer folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disablevshosting" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to enable/disable Visual Studio hosting process during debugging</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="importmsbuildprojects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional MSBuild project imports</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runpostbuildevent" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Postbuild event run condition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationicon" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The location of the Application Icon file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generatedoc" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>property enables/disables generation of XML documentation files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Key File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal-dependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.DotNetAssembliesFileset">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of native dynamic/shared libraries. These do not affect build but be copied
            to module output directory if copy local is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of 'Content' files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : A list of webreferences for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of modules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CSharpLibraryTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="workflow" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Is this a Workflow module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unittest" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Is this a UnitTest module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="webapp" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates this is a web application project and enables web debugging.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CSharpLibraryTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationmanifest" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the location of the Application manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appdesignerfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the name of the App designer folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disablevshosting" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to enable/disable Visual Studio hosting process during debugging</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="importmsbuildprojects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional MSBuild project imports</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runpostbuildevent" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Postbuild event run condition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationicon" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The location of the Application Icon file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generatedoc" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>property enables/disables generation of XML documentation files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Key File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal-dependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.DotNetAssembliesFileset">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of native dynamic/shared libraries. These do not affect build but be copied
            to module output directory if copy local is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of 'Content' files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : A list of webreferences for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of modules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CSharpLibraryTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CSharpProgramTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationmanifest" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the location of the Application manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appdesignerfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the name of the App designer folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disablevshosting" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to enable/disable Visual Studio hosting process during debugging</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="importmsbuildprojects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional MSBuild project imports</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runpostbuildevent" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Postbuild event run condition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationicon" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The location of the Application Icon file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generatedoc" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>property enables/disables generation of XML documentation files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Key File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal-dependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.DotNetAssembliesFileset">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of native dynamic/shared libraries. These do not affect build but be copied
            to module output directory if copy local is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of 'Content' files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : A list of webreferences for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of modules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CSharpProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="workflow" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Is this a Workflow module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unittest" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Is this a UnitTest module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="webapp" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates this is a web application project and enables web debugging.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CSharpProgramTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationmanifest" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the location of the Application manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appdesignerfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the name of the App designer folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disablevshosting" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to enable/disable Visual Studio hosting process during debugging</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="importmsbuildprojects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional MSBuild project imports</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runpostbuildevent" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Postbuild event run condition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationicon" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The location of the Application Icon file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generatedoc" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>property enables/disables generation of XML documentation files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Key File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal-dependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.DotNetAssembliesFileset">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of native dynamic/shared libraries. These do not affect build but be copied
            to module output directory if copy local is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of 'Content' files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : A list of webreferences for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of modules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CSharpProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CSharpWindowsProgramTask">
    <xs:annotation>
      <xs:documentation>This task allows you to set attributes for a CSharp Program Task</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationmanifest" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the location of the Application manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appdesignerfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the name of the App designer folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disablevshosting" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to enable/disable Visual Studio hosting process during debugging</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="importmsbuildprojects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional MSBuild project imports</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runpostbuildevent" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Postbuild event run condition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationicon" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The location of the Application Icon file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generatedoc" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>property enables/disables generation of XML documentation files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Key File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal-dependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.DotNetAssembliesFileset">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of native dynamic/shared libraries. These do not affect build but be copied
            to module output directory if copy local is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of 'Content' files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : A list of webreferences for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of modules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="workflow" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Is this a Workflow module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unittest" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Is this a UnitTest module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="webapp" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates this is a web application project and enables web debugging.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.CSharpWindowsProgramTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationmanifest" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the location of the Application manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appdesignerfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the name of the App designer folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disablevshosting" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to enable/disable Visual Studio hosting process during debugging</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="importmsbuildprojects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional MSBuild project imports</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runpostbuildevent" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Postbuild event run condition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationicon" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The location of the Application Icon file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generatedoc" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>property enables/disables generation of XML documentation files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Key File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal-dependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.DotNetAssembliesFileset">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of native dynamic/shared libraries. These do not affect build but be copied
            to module output directory if copy local is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of 'Content' files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : A list of webreferences for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of modules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DeclarePublicPropertiesTask">
    <xs:annotation>
      <xs:documentation>
            Public property declaration allows to describe properties thatcan affect/control package build
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="property" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask-PublicPropertyDeclaration">
        <xs:annotation>
          <xs:documentation>Public property declaration allows to describe properties</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="packagename" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of the package this property affects.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PrintPublicPropertiesTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DynamicLibraryTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DynamicLibraryTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DynamicLibraryTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DynamicLibraryTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.LibraryTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.LibraryTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.LibraryTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.LibraryTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.MakeStyleTask">
    <xs:annotation>
      <xs:documentation>MakeStyle modules are used to execute external build or clean commands</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="MakeBuildCommand" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A makestyle build command, this should contain executable OS command(s)/script</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MakeRebuildCommand" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A makestyle rebuild command, this should contain executable OS command(s)/script</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MakeCleanCommand" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A makestyle clean command, this should contain executable OS command(s)/script</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MakeOutput" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A makestyle clean command, this should contain executable OS command(s)/script</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles, does not participate directly in the 
            build but can be used in generation of projects for external build systems</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of asmsourcefiles, does not participate directly in the 
            build but can be used in generation of projects for external build systems</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of headerfiles, does not participate directly in the 
            build but can be used in generation of projects for external build systems</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedbuildfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of excluded build files, does not participate directly in the 
            build but can be used in generation of projects for external build systems</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.MakeStyleTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="transitivelink" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Specified that any dependencies listed in this module will be propagated for transitive linking. Only use this if module is a wrapper for a static library.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.MakeStyleTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="MakeBuildCommand" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A makestyle build command, this should contain executable OS command(s)/script</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MakeRebuildCommand" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A makestyle rebuild command, this should contain executable OS command(s)/script</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MakeCleanCommand" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A makestyle clean command, this should contain executable OS command(s)/script</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MakeOutput" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A makestyle clean command, this should contain executable OS command(s)/script</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles, does not participate directly in the 
            build but can be used in generation of projects for external build systems</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of asmsourcefiles, does not participate directly in the 
            build but can be used in generation of projects for external build systems</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of headerfiles, does not participate directly in the 
            build but can be used in generation of projects for external build systems</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedbuildfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of excluded build files, does not participate directly in the 
            build but can be used in generation of projects for external build systems</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.MakeStyleTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ManagedCppAssemblyTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ManagedCppAssemblyTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ManagedCppProgramTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ManagedCppProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ManagedCppProgramTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ManagedCppProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ModulePublicData">
    <xs:annotation>
      <xs:documentation>A structured XML module information export specification to be used in Initialize.xml file (not to be confused with the &lt;Module&gt; task for the .build file)</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set preprocessor defines exported by this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set include directories exported by this module. Empty element will result in default include directories added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs.internal" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set internal include directories exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="publicdependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Declare packages or modules that modules which have an interface dependency on this module will also need to depend on.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="publicbuilddependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Declare packages or modules that modules which have a build dependency on this module will also need to depend on.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="internaldependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Declare packages or modules that modules which have an internal dependency on this module will also need to internally depend on.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set library directories exported by this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set 'using' (/FU) directories exported by this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libs" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set libraries exported by this module. If &lt;libs/&gt; is present and empty, default library values are added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libs-external" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set libraries (external to current package) exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set dynamic libraries exported by this module. If &lt;dlls/&gt; is present and empty, default dynamic library values are added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls-external" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set dynamic libraries (external to current package) exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set assemblies exported by this module. If &lt;assemblies/&gt; is present and empty, default assembly values are added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies-external" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set assemblies (external to current package) exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set natvis files exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="programs" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set programs exported by this module. Unlike the above filesets, if &lt;programs/&gt; is present and empty, nothing will be added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assetfiles" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set assetfiles exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set content files exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="java.archives" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : set Java archive (.jar) files exported by this module. This is currently used on Android only. .</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="java.classes" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : set Java class files (compiled .java files) exported by this module. This is currently used on Android only. .</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcedir" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set Android resource directories exported by this module. This is often used in Android Extension Libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="java.rfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="java.packagename" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ModulePublicData-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of the module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="processors" use="optional">
      <xs:annotation>
        <xs:documentation>String : List of supported processors to be used in adding default include directories and libraries.
             Default include directories"${package.dir}}/include""${package.dir}}/include_${processor}"Default libraries"${lib-prefix}${module}${lib-suffix}""${lib-prefix}${module}_${processor}${lib-suffix}"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="add-defaults" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : (Deprecated) If set to true default values for include directories and libraries will be added to all modules.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="libnames" use="optional">
      <xs:annotation>
        <xs:documentation>String : List of additional library names to be added to default set of libraries. Can be overwritten by 'libnames' attribute in 'module' task.
            See documentation on Modules for explanation when default values are used.
            Default libraries"${lib-prefix}${module}${lib-suffix}""${lib-prefix}${libname}${lib-suffix}"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Sets the buildtype used by this module. If specified Framework will try to work out which outputs (libs, dlls, etc) to automatically export.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ModulePublicData-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set preprocessor defines exported by this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set include directories exported by this module. Empty element will result in default include directories added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs.internal" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set internal include directories exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="publicdependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Declare packages or modules that modules which have an interface dependency on this module will also need to depend on.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="publicbuilddependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Declare packages or modules that modules which have a build dependency on this module will also need to depend on.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="internaldependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Declare packages or modules that modules which have an internal dependency on this module will also need to internally depend on.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set library directories exported by this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set 'using' (/FU) directories exported by this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libs" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set libraries exported by this module. If &lt;libs/&gt; is present and empty, default library values are added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libs-external" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set libraries (external to current package) exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set dynamic libraries exported by this module. If &lt;dlls/&gt; is present and empty, default dynamic library values are added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls-external" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set dynamic libraries (external to current package) exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set assemblies exported by this module. If &lt;assemblies/&gt; is present and empty, default assembly values are added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies-external" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set assemblies (external to current package) exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set natvis files exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="programs" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Set programs exported by this module. Unlike the above filesets, if &lt;programs/&gt; is present and empty, nothing will be added.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assetfiles" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set assetfiles exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set content files exported by this module.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="java.archives" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : set Java archive (.jar) files exported by this module. This is currently used on Android only. .</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="java.classes" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : set Java class files (compiled .java files) exported by this module. This is currently used on Android only. .</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcedir" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Set Android resource directories exported by this module. This is often used in Android Extension Libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="java.rfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="java.packagename" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ModulePublicData-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PackagePublicData">
    <xs:annotation>
      <xs:documentation>
            Container task to declare module public data in Initialize.xml file.  Refer to the Module
            task for a full description of the NAnt script that may be placed inside the publicdata task.
            You can also look at the documentation for Initialize.xml (Reference/Packages/Initialize.xml file)
            for some examples of how to use the publicdata task.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />      
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="packagename" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of the package.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="processors" use="optional">
      <xs:annotation>
        <xs:documentation>String : List of supported processors to be used in adding default include directories and libraries.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="libnames" use="optional">
      <xs:annotation>
        <xs:documentation>String : List of additional library names to be added to default set of libraries.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="add-defaults" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : (Deprecated) If set to true default values for include directories and libraries will be added to all modules. Can be overwritten by 'add-defaults' attribute in module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="configbindir" use="optional">
      <xs:annotation>
        <xs:documentation>String : If your package overrides the "package.configbindir" property this should be set if you want public data paths to be auto resolved.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ProgramTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.ProgramTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.ProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PythonProgramTask">
    <xs:annotation>
      <xs:documentation>A program that runs through a python interpreter</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="environment" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : Custom environment variable setup</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of contentfiles.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="searchpaths" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A semicolon separated list of directories that will be added to the Search Path.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PythonProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="startupfile" use="optional">
      <xs:annotation>
        <xs:documentation>String : The python file where the programs execution starts.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="windowsapp" use="optional">
      <xs:annotation>
        <xs:documentation>String : Is this project a windows application, defaults to false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="workdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Sets the working directory for this project.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="projecthome" use="optional">
      <xs:annotation>
        <xs:documentation>String : The projects home directory, search paths and the startup file path
            need to be relative to this directory. By default it is the directory containing the
            visual studio project files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PythonProgramTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="environment" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : Custom environment variable setup</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of contentfiles.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="searchpaths" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>A semicolon separated list of directories that will be added to the Search Path.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PythonProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.SolutionFolders">
    <xs:annotation>
      <xs:documentation>Define folders for Visual Studio Solutions </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="folder" type="EA.Eaconfig.Structured.SolutionFolderCollection">
        <xs:annotation>
          <xs:documentation>Folders.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.SolutionFolders-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Append this definition to existing definition. Default: 'true'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.SolutionFolders-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="folder" type="EA.Eaconfig.Structured.SolutionFolderCollection">
        <xs:annotation>
          <xs:documentation>Folders.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.SolutionFolders-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.SolutionFolder-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="items" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Items (files) to put in this folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Packages and modules to include in the solution folders. Syntax is similar to dependency declarations.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="folder" type="EA.Eaconfig.Structured.SolutionFolderCollection">
        <xs:annotation>
          <xs:documentation>Subfolders.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.SolutionFolder-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.SolutionFolderCollection">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="items" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>Items (files) to put in this folder.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Packages and modules to include in the solution folders. Syntax is similar to dependency declarations.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="folder" type="EA.Eaconfig.Structured.SolutionFolderCollection">
        <xs:annotation>
          <xs:documentation>Subfolders.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Append this definition to existing definition. Default: inherits from 'SolutionFolders' element'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : Items (files) to put in this folder</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.SPULibraryTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.SPULibraryTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.SPUProgramTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.SPUProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.UtilityTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedbuildfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="filecopystep" type="EA.Eaconfig.Structured.UtilityTask-FileCopyStepCollection">
        <xs:annotation>
          <xs:documentation>Set up special step to do file copies.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.UtilityTask-UtilityConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.UtilityTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="transitivelink" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Specified that any dependencies listed in this module will be propagated for transitive linking. Only use this if module is a wrapper for a static library.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Setup the location where &lt;copylocal&gt; of dependencies should copy the files to.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.UtilityTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedbuildfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="filecopystep" type="EA.Eaconfig.Structured.UtilityTask-FileCopyStepCollection">
        <xs:annotation>
          <xs:documentation>Set up special step to do file copies.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.UtilityTask-UtilityConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.UtilityTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.VisualStudioProjectTask">
    <xs:annotation>
      <xs:documentation>Define a module that represents an existing visual studio project file</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="ProjectFile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The full path to the Visual Studio Project File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ProjectConfig" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The Visual Studio Project Configuration name that corresponds to the current Framework ${config} value</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ProjectPlatform" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The Visual Studio Project Platform name that corresponds to the current Framework ${config} value</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.VisualStudioProjectTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="guid" use="optional">
      <xs:annotation>
        <xs:documentation>String : A Visual Studio Project GUID which is inserted into the generated solution.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="managed" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set to true if the project is a managed project</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unittest" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : For unit test C#</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.VisualStudioProjectTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="ProjectFile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The full path to the Visual Studio Project File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ProjectConfig" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The Visual Studio Project Configuration name that corresponds to the current Framework ${config} value</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ProjectPlatform" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The Visual Studio Project Platform name that corresponds to the current Framework ${config} value</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.VisualStudioProjectTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.WindowsProgramTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.WindowsProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default framework directory where built files are located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outputname" use="optional">
      <xs:annotation>
        <xs:documentation>String : Overrides the default name of built files.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debug" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="comment" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of this module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the build group this module is a part of. The default is 'runtime'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="frompartial" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildtype" use="optional">
      <xs:annotation>
        <xs:documentation>String : Used to explicitly state the build type. By default 
            structured XML determines the build type from the structured XML tag.
            This field is used to override that value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.WindowsProgramTask-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="libraries" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of libraries</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of dynamic/shared libraries. DLLs are passed to the linker input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="objectfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of object files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="asmsourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of assembly source files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="natvisfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of natvis files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for header files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="libdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for library files. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="usingdirs" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines set of directories to search for forced using assemblies. Relative paths are prepended with the package directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headerfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Includes a list of header files for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-usingassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additional-manifest-files" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of application additional manifest files for native projects.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.ConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bulkbuild" type="EA.Eaconfig.Structured.BulkBuildElement">
        <xs:annotation>
          <xs:documentation>Sets the bulkbuild configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sdkreferences" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>SDK references (used in MSBuild files)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dotnet" type="EA.Eaconfig.Structured.DotNetDataElement">
        <xs:annotation>
          <xs:documentation>MCPP/DotNet specific data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.VisualStudioDataElement" />
      <xs:element name="java" type="EA.Eaconfig.Structured.JavaDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.WindowsProgramTask-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Backends.GenerateMakefileTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="startup-config" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="configurations" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="generate-single-config" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="split-by-group-names" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="use-compiler-wrapper" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="for-config-systems" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Backends.NantBuildTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="configs" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Backends.BackendGenerateTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="generator-name" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="startup-config" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="configurations" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="generate-single-config" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="split-by-group-names" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="solution-name" use="optional">
      <xs:annotation>
        <xs:documentation>String : The Name of the Solution to Generate.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="top-modules" use="optional">
      <xs:annotation>
        <xs:documentation>String : A whitespace delimited list of module names. If provided, overrides the default modules slngenerator will use a starting point when searching the graph for modules to include in the solution.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="excluded-root-modules" use="optional">
      <xs:annotation>
        <xs:documentation>String : A whitespace delimited list of module names. The solution generator will not include projects that are dependencies of these modules - can be used to exclude subgraphs when searching graph for modules to include in the solution.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Backends.Text.WriteBuildInfo">
    <xs:annotation>
      <xs:documentation>The task used by the buildinfo target to generate the build info file</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="outputdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask">
    <xs:annotation>
      <xs:documentation>
            Generates 'dot' language description of the dependency graph between modules or packages. Generated file can be opened by "Graphviz" tools to create an image
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="excludemodules" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>List of modules to exclude</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="packagename" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of a package to use a root of generated dependency graph picture. Separate graph is generated for each configuration.
            Package name can contain module name: valid values are 'package_name' or 'package_name/module_name' or 'package_name/group/module_name', where group is one of 'runtime, test, example, tool'".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="graphfile" use="required">
      <xs:annotation>
        <xs:documentation>String : Full path to the output file. Configguration name is added to the file name.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="graphmodules" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If 'true' picture of dependencies between modules is generated. Otherwise dependencies between packages are used, no modules are added to the picture. Default is 'true'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="groupbypackages" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Modules from the same package are grouped together on an image. This may complicate outline for very big projects. Only has effect when graphmodules='true', default is 'true'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="configurations" use="optional">
      <xs:annotation>
        <xs:documentation>String : List of configurations to use.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dependency-filter" use="optional">
      <xs:annotation>
        <xs:documentation>String : Types of dependencies to include in the generated picture. Possible values are: 'build', 'interface', 'link', 'copylocal', 'auto', or any combination of these, enter values space separated. Default value is: 'build interface link'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="exclude-dependency-filter" use="optional">
      <xs:annotation>
        <xs:documentation>String : Types of dependencies to exinclude from the generated picture. Possible values are: 'build', 'interface', 'link', 'copylocal', 'auto', or any combination of these, enter values space separated. Default value is empty.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="find-ancestors" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Graph ancestors of a given package/module indead of dependents. Default value is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dependency-color-scheme" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask-DependencyColorSchemes" use="optional">
      <xs:annotation>
        <xs:documentation>DependencyColorSchemes : Dependency Color scheme. Standard - by dependency type, ByDependent - same color as dependent module.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Backends.Text.WritePackageTreeTask">
    <xs:annotation>
      <xs:documentation>
            This Task prints the dependency tree for a specified package. Shows all of the packages
            that are added as package dependents in the current configuration.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="packagename" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the package whose dependency tree should be printed.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Build.GeneratedMakeFilePath">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="split-by-group-names" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="makefile-dir-property" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="makefile-name-property" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Build.DoBuildModuleTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Build.CheckBuildMessagesTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="group" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="module" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Build.Task_CreateBuildGraph">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="build-group-names" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="build-configurations" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="process-generation-data" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Build.Task_InitBuildGraph">
    <xs:annotation>
      <xs:documentation>
            Verify whether we can reuse build graph or need to reset it. This is only needed when we are chaining targets.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="build-group-names" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="build-configurations" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="process-generation-data" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Build.LoadPackageTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="build-group-names" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="autobuild-target" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="process-generation-data" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
    <xs:annotation>
      <xs:documentation>Sets various attributes for a config</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="buildoptions" type="EA.Eaconfig.Structured.BuildTypeElement">
        <xs:annotation>
          <xs:documentation>Gets the build options for this config.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Gets the macros defined for this config</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additionaloptions" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional commandline options, new line separated (added to options defined through optionset</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines whether referenced assemblies are copied into the output folder of the module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="platform" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the platform to build against</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allowunsafe" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="targetframeworkversion" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to define target .Net framework version</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generateserializationassemblies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Generate serialization assemblies:  None, Auto, On, Off</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="suppresswarnings" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Gets the warning suppression property for this config</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="warningsaserrors.list" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>List of warnings to treat as errors</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="warningsaserrors" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Treat warnings as errors</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="warningsnotaserrors.list" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>List of warnings that should just be treated as warnings, when warningsaserrors is on these warnings will not be errors and will not be suppressed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="remove" type="EA.Eaconfig.Structured.DotNetModuleTask-RemoveDotNetBuildOptions">
        <xs:annotation>
          <xs:documentation>Define options to removefrom the final optionset</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="buildoptions" type="EA.Eaconfig.Structured.BuildTypeElement">
        <xs:annotation>
          <xs:documentation>Gets the build options for this config.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Gets the macros defined for this config</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="additionaloptions" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional commandline options, new line separated (added to options defined through optionset</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines whether referenced assemblies are copied into the output folder of the module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="platform" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the platform to build against</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allowunsafe" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="targetframeworkversion" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to define target .Net framework version</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generateserializationassemblies" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Generate serialization assemblies:  None, Auto, On, Off</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="suppresswarnings" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Gets the warning suppression property for this config</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="warningsaserrors.list" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>List of warnings to treat as errors</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="warningsaserrors" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Treat warnings as errors</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="warningsnotaserrors.list" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>List of warnings that should just be treated as warnings, when warningsaserrors is on these warnings will not be errors and will not be suppressed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="remove" type="EA.Eaconfig.Structured.DotNetModuleTask-RemoveDotNetBuildOptions">
        <xs:annotation>
          <xs:documentation>Define options to removefrom the final optionset</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetModuleTask-RemoveDotNetBuildOptions">
    <xs:annotation>
      <xs:documentation>Sets options to be removed from final configuration</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Compiler options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetModuleTask-RemoveDotNetBuildOptions-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetModuleTask-RemoveDotNetBuildOptions-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="defines" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Defines to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="options" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Compiler options to be removed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetModuleTask-RemoveDotNetBuildOptions-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pregenerate-target" type="EA.Eaconfig.Structured.BuildTargetElement" />
      <xs:element name="excludedbuildfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of files that are excluded from the build but are added to the visual studio
            project as non-buildable files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="enableunmanageddebugging" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="msbuildoptions" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>A list of elements to insert directly into the visualstudio project file in the config build options section.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projecttypeguids" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Allow users to set custom project type guids. Multiple guids should be separated by a semicolon.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="extension" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The name(s) of a Visual Studio Extension task used for altering the solution generation process 
            to allow adding custom elements to a project file.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pregenerate-target" type="EA.Eaconfig.Structured.BuildTargetElement" />
      <xs:element name="excludedbuildfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of files that are excluded from the build but are added to the visual studio
            project as non-buildable files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="enableunmanageddebugging" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="msbuildoptions" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>A list of elements to insert directly into the visualstudio project file in the config build options section.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projecttypeguids" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Allow users to set custom project type guids. Multiple guids should be separated by a semicolon.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="extension" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The name(s) of a Visual Studio Extension task used for altering the solution generation process 
            to allow adding custom elements to a project file.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.PartialModuleTask-DotNetPartialModule-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rootnamespace" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the Rootnamespace for a visual studio project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationmanifest" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the location of the Application manifest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appdesignerfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Specifies the name of the App designer folder</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disablevshosting" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>used to enable/disable Visual Studio hosting process during debugging</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="importmsbuildprojects" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Additional MSBuild project imports</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runpostbuildevent" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Postbuild event run condition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationicon" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>The location of the Application Icon file</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generatedoc" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>property enables/disables generation of XML documentation files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyfile" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Key File</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="copylocal-dependencies" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="sourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of sourcefiles</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" type="EA.Eaconfig.Structured.DotNetAssembliesFileset">
        <xs:annotation>
          <xs:documentation>fileset : A list of referenced assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dlls" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a set of native dynamic/shared libraries. These do not affect build but be copied
            to module output directory if copy local is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcefiles" type="EA.Eaconfig.Structured.ResourceFilesElement">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="custombuildfiles" type="EA.Eaconfig.Structured.StructuredFileSetCollection">
        <xs:annotation>
          <xs:documentation>fileset : Files with associated custombuildtools</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nonembed-resourcefiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of resource files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentfiles" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds a list of 'Content' files</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webreferences" type="EA.Eaconfig.Structured.StructuredOptionSet">
        <xs:annotation>
          <xs:documentation>optionset : A list of webreferences for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modules" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : Adds the list of modules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comassemblies" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : A list of COM assemblies for this module</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="EA.Eaconfig.Structured.DotNetModuleTask-DotNetConfigElement">
        <xs:annotation>
          <xs:documentation>Sets the configuration for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildsteps" type="EA.Eaconfig.Structured.BuildStepsElement">
        <xs:annotation>
          <xs:documentation>Sets the build steps for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="visualstudio" type="EA.Eaconfig.Structured.DotNetModuleTask-VisualStudioDataElement" />
      <xs:element name="platforms" type="EA.Eaconfig.Structured.PlatformExtensions" />
      <xs:element name="merge-into" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>[Deprecated] Merge module feature is being deprecated.  If you still required to use this feature, please contact Frostbite.Team.CM regarding your requirement.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblyinfo" type="EA.Eaconfig.Structured.AssemblyInfoTask" />
      <xs:element name="frompartial" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="script" type="EA.Eaconfig.Structured.NantScript" />
      <xs:element name="copylocal" type="EA.Eaconfig.Structured.CopyLocalElement">
        <xs:annotation>
          <xs:documentation>Applies 'copylocal' to all dependents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="EA.Eaconfig.Structured.BuildTypePropertyElement" />
      <xs:element name="dependencies" type="EA.Eaconfig.Structured.DependenciesPropertyElement">
        <xs:annotation>
          <xs:documentation>Sets the dependencies for a project</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.PartialModuleTask-DotNetPartialModule-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.DeclarePublicPropertiesTask-PublicPropertyDeclaration">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of the property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="description" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of the property.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.UtilityTask-UtilityConfigElement">
    <xs:annotation>
      <xs:documentation>Sets various attributes for a config</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="preprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.UtilityTask-UtilityConfigElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.UtilityTask-UtilityConfigElement-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="preprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postprocess" type="EA.Eaconfig.Structured.ConditionalPropertyElement">
        <xs:annotation>
          <xs:documentation>Preprocess step can be C# task derived from AbstractModuleProcessorTask class or a target. Multiple preprocess steps are supported</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.UtilityTask-UtilityConfigElement-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.UtilityTask-FileCopyStep-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>fileset : </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.Eaconfig.Structured.UtilityTask-FileCopyStep-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.Structured.UtilityTask-FileCopyStepCollection">
    <xs:annotation>
      <xs:documentation>Setup a file copy step for a utility module.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="EA.Eaconfig.Structured.StructuredFileSet">
        <xs:annotation>
          <xs:documentation>Fileset specifying a list of files to copy to directory.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : File to copy.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tofile" use="optional">
      <xs:annotation>
        <xs:documentation>String : Destination file. If this is specified, expects 'file' attribute to be specified.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="todir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Destination directory. If this is specified, expects either 'file' attribute or 'fileset' inner element to be specified.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.ArgumentSet">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="arg" type="NAnt.Core.ArgumentElement">
        <xs:annotation>
          <xs:documentation>Argument value. Can provide text or file or both</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.ArgumentElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="value" use="optional">
      <xs:annotation>
        <xs:documentation>String : Text value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : File Path. Relative file path is combined with current project base path.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.FileSet">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="do" type="NAnt.Core.FileSet-do-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="NAnt.Core.FileSet-group-ConditionalContainer">
        <xs:annotation>
          <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="defaultexcludes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates whether default excludes should be used or not.  Default "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base of the directory of this file set.  Default is project base directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if a build error should be raised if an explicitly included file does not exist.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sort" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sort the fileset by filename. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.FileSet-do-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.FileSet-group-ConditionalContainer">
    <xs:annotation>
      <xs:documentation>Groups help you organize related files into groups that can be conditionally included or excluded using if/unless attributes. Note that groups can be nested.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern to be included in the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement">
        <xs:annotation>
          <xs:documentation>Defines a file pattern of files to be excluded from the fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.OptionSet">
    <xs:annotation>
      <xs:documentation>Manages a set of options as a name/value collection.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="option" type="NAnt.Core.OptionSet-Option" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="fromoptionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of an option set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.PropertyElement" mixed="true">
    <xs:annotation>
      <xs:documentation>A property element is used by tasks that want to have the user enter a string 
            but not as an attribute.  Useful if the string is going to hold multiple lines.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.XmlPropertyElement" mixed="true">
    <xs:annotation>
      <xs:documentation>A property element is used by tasks that want to have the user enter a string 
            but not as an attribute.  Useful if the string is going to hold multiple lines.
            Can also contain build script tasks.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.AsyncStart">
    <xs:annotation>
      <xs:documentation>Starts asynchronous execution of nested block.
            NOTE. Make sure there are no race conditions, properties with same names, etc each group.
            NOTE. local properties are local to the thread. Normal NAnt properties are shared between threads.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="key" use="required">
      <xs:annotation>
        <xs:documentation>String : Unique key string. When using global context make sure that key string does 
            not collide with keys that may be defined in other packages. 
            Using "package.[package name]." prefix is a good way to ensure unique values.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="waitat" type="NAnt.Core.Tasks.AsyncStatus-WaitAt" use="optional">
      <xs:annotation>
        <xs:documentation>WaitAt : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.AsyncWait">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="key" use="required">
      <xs:annotation>
        <xs:documentation>String : Unique key string. When using global context make sure that key string does 
            not collide with keys that may be defined in other packages. 
            Using "package.[package name]." prefix is a good way to ensure unique values.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.AttribTask">
    <xs:annotation>
      <xs:documentation>Changes the file attributes of a file or set of files.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : All the files in this fileset will have their file attributes set.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the file which will have its attributes set.  This is provided as an alternate to using the task's fileset.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="archive" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set the archive attribute.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hidden" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set the hidden attribute.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="normal" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set the normal file attributes.  This attribute is valid only if used alone.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="readonly" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set the read only attribute.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="system" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set the system attribute.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.CallTask">
    <xs:annotation>
      <xs:documentation>
            Calls a NAnt target.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="target" use="required">
      <xs:annotation>
        <xs:documentation>String : NAnt target to call.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Force an Execute even if the target 
            has already been executed.  Forced execution occurs on a copy of the unique
            target, since the original can only be executed once.
            Default value is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.CallBaseTask">
    <xs:annotation>
      <xs:documentation>
            Calls the overridden target of the current NAnt target.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="force" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Force an Execute even if the target 
            has already been executed.  Forced execution occurs on a copy of the unique
            target, since the original can only be executed once.
            Default value is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>  
  <xs:complexType name="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" mixed="true">
    <xs:annotation>
      <xs:documentation>Stops execution of next top level target (when targets are chained</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.ChooseTask">
    <xs:annotation>
      <xs:documentation>
            The choose task is used in conjunction with the do task to express multiple conditional 
            statements.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.CollectBuildStats">
    <xs:annotation>
      <xs:documentation>Collects statistics for a group of tasks wrapped by this element</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="label" use="required">
      <xs:annotation>
        <xs:documentation>String : Unique label name for this set of build stats.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.PrintBuildStats">
    <xs:annotation>
      <xs:documentation>Prints colected build statistics</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="BuildPackages" use="optional">
      <xs:annotation>
        <xs:documentation>String : Package list that was in this build.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="BuildVersion" use="optional">
      <xs:annotation>
        <xs:documentation>String : A version string for this build.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.CopyTask">
    <xs:annotation>
      <xs:documentation>Copies a file or file set to a new location.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The (single) file set to be copied.  
            Note the todir attribute must be set, and that a fileset 
            may include another fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : The file to transfer in a single file transfer operation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tofile" use="optional">
      <xs:annotation>
        <xs:documentation>String : The file to transfer to in a single file transfer operation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="todir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The directory to transfer to, when transferring a file set.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="overwrite" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Overwrite existing files even if the destination files are newer. Defaults is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="clobber" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Allow hidden and read-only files to be overwritten if appropriate (i.e. if source is newer or overwrite is set to true). Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maintainattributes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Maintain file attributes of overwritten files. By default and if destination file does not exist file attributes are carried over from source file. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="flatten" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Flatten directory structure when transferring a file set. All files are placed in the todir, without duplicating the directory structure.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="retrycount" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Number of times to retry the copy operation if copy fails.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="retrydelay" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Length of time in milliseconds between retry attempts.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hardlinkifpossible" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Tries to create a hard link to the source file rather than copying the entire contents of the file.
            If unable to create a hard link it simply copies the file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="symlinkifpossible" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Tries to create a hard link to the source file rather than copying the entire contents of the file.
            If unable to create a hard link it simply copies the file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.CoreDumpTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="echo" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Write to the log file. Default is false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dump-properties" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Dump properties. Default - true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dump-filesets" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Dump fileset names. Default - true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dump-optionsets" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Dump optionset names</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="expand-all" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Include content of filesets and optionsets. Default is false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tofile" use="optional">
      <xs:annotation>
        <xs:documentation>String : Dump optionset names</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="format" type="NAnt.Core.Util.CoreDump-Format" use="optional">
      <xs:annotation>
        <xs:documentation>Format : format: text, xml. Default - text</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.RunTask">
    <xs:annotation>
      <xs:documentation>
            Executes a task created by &lt;createtask&gt;. 
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the task being declared.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="skip" />
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.CreateTaskTask">
    <xs:annotation>
      <xs:documentation>Create a task that is made of NAnt script and can be used by &lt;task&gt;. This task is a Framework 2
            feature.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="parameters" type="NAnt.Core.OptionSet">
        <xs:annotation>
          <xs:documentation>optionset : The set of task parameters.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="code" type="NAnt.Core.XmlPropertyElement">
        <xs:annotation>
          <xs:documentation>The NAnt script this task is made out from</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the task being declared.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="overload" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Overload existing definition.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.DebugBreakTask">
    <xs:annotation>
      <xs:documentation>
            Triggers a debug break so that you can stop execution at a sepecific point in a build script and inspect the state in the debugger.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.DeleteTask">
    <xs:annotation>
      <xs:documentation>Deletes a file, file set or directory.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : All the files in the file set will be deleted.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : The file to delete. Applies only to the single file delete operation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The directory to delete.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true the task will fail if a file or directory specified is not present.  Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then be quiet - don't report on the deletes. Default is false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.DependsTask">
    <xs:annotation>
      <xs:documentation>Performs a generic dependency check.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="inputs" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set of input files to check against.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputs" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Set of output files to check against.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="property" use="required">
      <xs:annotation>
        <xs:documentation>String : The property name to set to hold the result of the dependency check.  The value in 
            this property after the task has run successfully will be either true or 
            false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.DoOnce">
    <xs:annotation>
      <xs:documentation>Container task. Executes nested elements once for a given unique key and a context.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="key" use="required">
      <xs:annotation>
        <xs:documentation>String : Unique key string. When using global context make sure that key string does 
            not collide with keys that may be defined in other packages. 
            Using "package.[package name]." prefix is a good way to ensure unique values.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="context" type="NAnt.Core.Tasks.DoOnce-DoOnceContexts" use="optional">
      <xs:annotation>
        <xs:documentation>DoOnceContexts : Context for the key. Context can be either global or project. Default value is global.
            global context means that for each unique key task is executed once in NAnt process.project context means that for each unique key task is executed once for each package.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="blocking" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Defines behavior when several instances of do.once task with the same key are invoked simultaneously.
            blocking=false (default) - One instance will execute nested elements, other instances will return immediately without waiting.blocking=true - One instance will execute nested elements, other instances will wait for the first instance to complete and
            then return without executing nested elements.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.DoTask">
    <xs:annotation>
      <xs:documentation>Allows wrapping of a group of tasks to be executed based on a conditional.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.EchoTask" mixed="true">
    <xs:annotation>
      <xs:documentation>Writes a message to the build log.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="message" use="optional">
      <xs:annotation>
        <xs:documentation>String : The message to display.  For longer messages use the inner text element of the task.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the file to write the message to.  If empty write message to log.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if message should be appended to file.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="loglevel" type="NAnt.Core.Logging.Log-LogLevel" use="optional">
      <xs:annotation>
        <xs:documentation>LogLevel : The log level that the message should be printed at. (ie. quiet, minimal, normal, detailed, diagnostic) default is normal.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.EvalTask">
    <xs:annotation>
      <xs:documentation>Evaluate a block of code.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="code" use="required">
      <xs:annotation>
        <xs:documentation>String : The code to evaluate.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="NAnt.Core.Tasks.EvalTask-EvalType" use="required">
      <xs:annotation>
        <xs:documentation>EvalType : The type of code to evaluate. Valid values are Property, Function and Expression.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="property" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the property to place the result into. If none is specified result is ignored.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.ExecTask">
    <xs:annotation>
      <xs:documentation>Executes a system command.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="env" type="NAnt.Core.OptionSet">
        <xs:annotation>
          <xs:documentation>optionset : The set of environment variables for when the program runs.
            Benefit of setting variables, like "Path", here is that it will be
            local to this program execution (i.e. global path is unaffected).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="inputs" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Program inputs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputs" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Program outputs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="args" type="NAnt.Core.ArgumentSet">
        <xs:annotation>
          <xs:documentation>A set of command line arguments.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="program" use="required">
      <xs:annotation>
        <xs:documentation>String : The program to execute. Specify the fully qualified name unless the program is in the path.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="message" use="optional">
      <xs:annotation>
        <xs:documentation>String : The message to display to the log.  If present then no other output will be displayed unless there is an error or the verbose attribute is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="commandline" use="optional">
      <xs:annotation>
        <xs:documentation>String : The command line arguments for the program.  Consider using arg elements (see task description) for improved readability.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="responsefile" use="optional">
      <xs:annotation>
        <xs:documentation>String : Use the contents of this file as input to the program.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="commandlinetemplate" use="optional">
      <xs:annotation>
        <xs:documentation>String : The template used to form the command line. Default is '%commandline% %responsefile%'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="output" use="optional">
      <xs:annotation>
        <xs:documentation>String : The file to which the standard output will be redirected. By default, the standard output is redirected to the console.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : true if the output file is to be appended to. Default = "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="stdout" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Write to standard output. Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirectout" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to redirect stdout and stderr. When set to false, this will disable options such as stdout, outputfile etc.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirectin" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to redirect stdin. Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="createinwindow" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to create process in a new window.. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="silent" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true standard output from the external program (as well as the execution command line) will not be written to log. Does not affect standard error. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="silent-err" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true standard error from the external program (as well as the execution command line) will not be written to log. Does not affect standard output. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="workingdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The directory in which the command will be executed. The workingdir will be evaluated relative to the build file's directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="clearenv" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to clear all environmental variable before executing, environmental variable specified in env OptionSet will still be added as environmental variable.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="timeout" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Stop the build if the command does not finish within the specified time.  Specified in milliseconds.  Default is no time out.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.FailTask">
    <xs:annotation>
      <xs:documentation>Exit the current build.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="type" use="optional">
      <xs:annotation>
        <xs:documentation>String : Type of the exception thrown, for use with the &lt;trycatch&gt; task.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="message" use="optional">
      <xs:annotation>
        <xs:documentation>String : A message giving further information on why the build exited.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.FileSetTask">
    <xs:annotation>
      <xs:documentation>
            Filesets are groups of files defined by a set of patterns.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement" />
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement" />
      <xs:element name="do" type="NAnt.Core.Tasks.FileSetTask-do-ConditionalContainer" />
      <xs:element name="group" type="NAnt.Core.Tasks.FileSetTask-group-ConditionalContainer" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : Name for fileset. Preceding and trailing spaces will be trimmed off.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If append is true, the patterns specified by
            this task are added to the patterns contained in the
            named file set.  If append is false, the named file set contains
            the patterns specified by this task.
            Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base directory of the file set.  Default is the directory where the
            build file is located.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sort" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sort the file set by filename. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonmissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if a build error should be raised if an explicitly included file does not exist.  Default is true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="asis" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the file name will be added to the fileset without pattern matching or checking if the file exists. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of an optionset to associate with this set of excludes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true a the file name will be added to the fileset regardless if it is already included. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="depends" use="optional">
      <xs:annotation>
        <xs:documentation>String : Invalid element in Framework. Added to prevent existing scripts failing.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="defaultexcludes" use="optional">
      <xs:annotation>
        <xs:documentation>String : If "false", default excludes are not used otherwise default excludes are used. Default is "true"
            **/CVS/***/.cvsignore**/*~**/#*#**/.#***/%*%**/SCCS**/SCCS/****/vssver.scc</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.FileSetTask-do-ConditionalContainer">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement" />
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.FileSetTask-group-ConditionalContainer">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="includes" type="NAnt.Core.FileSet-IncludesElement" />
      <xs:element name="excludes" type="NAnt.Core.FileSet-ExcludesElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.ForEachTask">
    <xs:annotation>
      <xs:documentation>Iterates over a set of items.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="property" use="required">
      <xs:annotation>
        <xs:documentation>String : The property name that holds the current iterated item value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="item" type="NAnt.Core.Tasks.ForEachTask-ItemTypes" use="required">
      <xs:annotation>
        <xs:documentation>ItemTypes : The type of iteration that should be done. Valid values are: 
            File, Directory, String, Line, FileSet, and OptionSet.
            When choosing the Line option, you specify a file and the task
            iterates over all the lines in the text file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="in" use="required">
      <xs:annotation>
        <xs:documentation>String : The source of the iteration.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="delim" use="optional">
      <xs:annotation>
        <xs:documentation>String : The delimiter string array. Default is whitespace.  
            Multiple characters are allowed.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="local" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if the property that holds the iterated value is going to be defined in a local context and thus, it will be restricted to a local scope . 
            Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.FuncDefTask">
    <xs:annotation>
      <xs:documentation>Loads functions from a specified assembly.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="assembly" use="required">
      <xs:annotation>
        <xs:documentation>String : File name of the assembly containing the NAnt functions.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="override" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Override function(s) with the same name.
            Default is false. When override is 'false' &lt;funcdef&gt; will fail on duplicate function names.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.GetTask">
    <xs:annotation>
      <xs:documentation>Get a particular file from a URI source.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : FileSets are used to select files to get.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="src" use="required">
      <xs:annotation>
        <xs:documentation>String : The URL from which to retrieve a file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dest" use="required">
      <xs:annotation>
        <xs:documentation>String : The file where to store the retrieved file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="httpproxy" use="optional">
      <xs:annotation>
        <xs:documentation>String : If inside a firewall, proxy server/port information
            Format: {proxy server name}:{port number}
            Example: proxy.mycompany.com:8080</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ignoreerrors" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Log errors but don't treat as fatal. ("true"/"false"). Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="usetimestamp" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Conditionally download a file based on the timestamp of the local copy. HTTP only. ("true"/"false"). Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.IncludeTask">
    <xs:annotation>
      <xs:documentation>Include an build file.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="file" use="required">
      <xs:annotation>
        <xs:documentation>String : Build file to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ignoremissing" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Ignore if file does not exist</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.MailTask">
    <xs:annotation>
      <xs:documentation>A task to send email.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="from" use="required">
      <xs:annotation>
        <xs:documentation>String : Email address of sender</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tolist" use="required">
      <xs:annotation>
        <xs:documentation>String : Comma- or semicolon-separated list of recipient email addresses</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="cclist" use="optional">
      <xs:annotation>
        <xs:documentation>String : Comma- or semicolon-separated list of CC: recipient email addresses</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bcclist" use="optional">
      <xs:annotation>
        <xs:documentation>String : Comma- or semicolon-separated list of BCC: recipient email addresses</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="mailhost" use="optional">
      <xs:annotation>
        <xs:documentation>String : Host name of mail server. Defaults to "localhost"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="message" use="optional">
      <xs:annotation>
        <xs:documentation>String : Text to send in body of email message. At least one of the fields 'files' or 'message' must be provided.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="subject" use="optional">
      <xs:annotation>
        <xs:documentation>String : Text to send in subject line of email message.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="format" use="optional">
      <xs:annotation>
        <xs:documentation>String : Format of the message body. Valid values are "Html" or "Text".  Defaults to "Text".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="files" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name(s) of text files to send as part of body of the email message. 
            Multiple file names are comma- or semicolon-separated. At least one of the fields 'files' or 'message' must be provided.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="attachments" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name(s) of files to send as attachments to email message.
            Multiple file names are comma- or semicolon-separated.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="async" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Sends the message asynchronously rather than waiting for the task to send the message before proceeding</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.MetricTask">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="category" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="key" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="filters" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.MkDirTask">
    <xs:annotation>
      <xs:documentation>Creates a directory path.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="dir" use="required">
      <xs:annotation>
        <xs:documentation>String : The directory to create.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.MoveTask">
    <xs:annotation>
      <xs:documentation>Moves a file or file set to a new location.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The (single) file set to be copied.  
            Note the todir attribute must be set, and that a fileset 
            may include another fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : The file to transfer in a single file transfer operation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tofile" use="optional">
      <xs:annotation>
        <xs:documentation>String : The file to transfer to in a single file transfer operation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="todir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The directory to transfer to, when transferring a file set.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="overwrite" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Overwrite existing files even if the destination files are newer. Defaults is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="clobber" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Allow hidden and read-only files to be overwritten if appropriate (i.e. if source is newer or overwrite is set to true). Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maintainattributes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Maintain file attributes of overwritten files. By default and if destination file does not exist file attributes are carried over from source file. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="flatten" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Flatten directory structure when transferring a file set. All files are placed in the todir, without duplicating the directory structure.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="retrycount" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Number of times to retry the copy operation if copy fails.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="retrydelay" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Length of time in milliseconds between retry attempts.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hardlinkifpossible" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Tries to create a hard link to the source file rather than copying the entire contents of the file.
            If unable to create a hard link it simply copies the file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="symlinkifpossible" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Tries to create a hard link to the source file rather than copying the entire contents of the file.
            If unable to create a hard link it simply copies the file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.NamedLock">
    <xs:annotation>
      <xs:documentation>Allows wrapping of a group of tasks to be executed in a mutually exclusive way based on 'name' attribute.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : Unique name for the lock. All &lt;namedlock&gt; sections with same name are mutually exclusive
            Make sure that key string does not collide with names of &lt;namedlock&gt; that may be defined in other packages. 
            Using "package.[package name]." prefix is a good way to ensure unique values.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.OutProperty">
    <xs:annotation>
      <xs:documentation>Records a property value from a property in child invocation in current invocation.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="out-property-name" use="required">
      <xs:annotation>
        <xs:documentation>String : Property name in which to store property from child invocation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="child-property-name" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of property in child invocation to store in out-property-name.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.NAntTask">
    <xs:annotation>
      <xs:documentation>Runs NAnt on a supplied build file.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask">
        <xs:annotation>
          <xs:documentation>Property to pass to the child nant invocation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="out-property" type="NAnt.Core.Tasks.OutProperty">
        <xs:annotation>
          <xs:documentation>Property to retrieve from child nant invocation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="buildfile" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the *.build file to use.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="buildpackage" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the package from which to use .build file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" use="optional">
      <xs:annotation>
        <xs:documentation>String : The target to execute.  To specify more than one target separate targets with a space.  Targets are executed in order if possible.  Default to use target specified in the project's default attribute.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of an optionset containing a set of properties to be passed into the supplied build file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="indent" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : The log IndentLevel. Default is the current log IndentLevel + 1.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="global-properties-action" type="NAnt.Core.Tasks.NAntTask-GlobalPropertiesActionTypes" use="optional">
      <xs:annotation>
        <xs:documentation>GlobalPropertiesActionTypes : Defines how global properties are set up in the dependent project. 
            Valid values are propagate and initialize. Default is 'propagate'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="start-new-build" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Start new build graph in the dependent project. Default is 'false'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.OptionSetTask">
    <xs:annotation>
      <xs:documentation>Optionset is a dictionary containing [name, value] pairs called options.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="option" type="NAnt.Core.OptionSet-Option" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the option set.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If append is true, the options specified by
            this option set task are added to the options contained in the
            named option set.  Options that already exist are replaced.
            If append is false, the named option set contains the options 
            specified by this option set task.
            Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromoptionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file set to include.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.ParallelDoTask">
    <xs:annotation>
      <xs:documentation>Executes nested tasks in parallel. Only immediate nested tasks are executed in parallel.
            NOTE. Make sure there are no race conditions, properties with same names, etc each group.
            NOTE. local properties are local to each thread. Normal NAnt properties are shared between threads.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.ParallelForEachTask">
    <xs:annotation>
      <xs:documentation>Iterates over a set of items in parallel. Similar to &lt;foreach&gt; task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="property" use="required">
      <xs:annotation>
        <xs:documentation>String : The property name that holds the current iterated item value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="item" type="NAnt.Core.Tasks.ParallelForEachTask-ItemTypes" use="required">
      <xs:annotation>
        <xs:documentation>ItemTypes : The type of iteration that should be done. Valid values are: 
            File, Directory, String, Line, FileSet, and OptionSet.
            When choosing the Line option, you specify a file and the task
            iterates over all the lines in the text file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="in" use="required">
      <xs:annotation>
        <xs:documentation>String : The source of the iteration.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="delim" use="optional">
      <xs:annotation>
        <xs:documentation>String : The delimiter string array. Default is whitespace.  
            Multiple characters are allowed.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.PropertyTask" mixed="true">
    <xs:annotation>
      <xs:documentation>Sets a property in the current project.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the property to set.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" use="optional">
      <xs:annotation>
        <xs:documentation>String : The value of the property. If not specified, the default will be no value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfile" use="optional">
      <xs:annotation>
        <xs:documentation>String : The path to a file from which content is read into the property value.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="readonly" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if the property should be read-only.  Read only properties can never be changed.  Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deferred" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if the property's value will expand encapsulated properties' value at definition time or at use time. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="local" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Indicates if the property is going to be defined in a local context and thus, it will be restricted to a local scope. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.RecordTask">
    <xs:annotation>
      <xs:documentation>A task that records the build's output to a property or file.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="property" use="optional">
      <xs:annotation>
        <xs:documentation>String : Name of the property to record output.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="silent" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If set to true, no other output except of property is produced. Console or other logs are suppressed</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file to write the output to</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.RegexMatchTask">
    <xs:annotation>
      <xs:documentation>A task that execute the RegularExpression's Match function.
            NOTE This task is new in Framework version 3.28.00.  So if you use this task in your build script, 
              you need to make sure that your project don't need to be build by older version of Framework.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="Input" use="required">
      <xs:annotation>
        <xs:documentation>String : The input string.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Pattern" use="required">
      <xs:annotation>
        <xs:documentation>String : The search pattern.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Properties" use="required">
      <xs:annotation>
        <xs:documentation>String : The output property names (separated by semi-colon ';') to store the match output.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.RegistrySetValueTask">
    <xs:annotation>
      <xs:documentation>Add or update a value in an existing registry key.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="hive" use="required">
      <xs:annotation>
        <xs:documentation>String : The top-level node in the windows registry. Possible values are: LocalMachine, Users, CurrentUser, and ClassesRoot.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="key" use="required">
      <xs:annotation>
        <xs:documentation>String : Key in which the value is to be updated.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of the value to add or change.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" use="required">
      <xs:annotation>
        <xs:documentation>String : New value of the entry.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.ScriptTask">
    <xs:annotation>
      <xs:documentation>Executes the code contained within the task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="references" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Required assembly references to link with.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="code" type="NAnt.Core.XmlPropertyElement">
        <xs:annotation>
          <xs:documentation>The script to execute. It's required that the script be put in a CDATA element. This is
            because the potential use of XML reserved characters in the script. See example below.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="imports" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Namespaces to import.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="language" use="required">
      <xs:annotation>
        <xs:documentation>String : The language of the script block (C# or VB).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="mainclass" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of the main class containing the static ScriptMain entry point.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="compile" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : The flag of compiling code into a saved assembly or not. The default value is false. Given the file
            containing the &lt;script&gt; is named package.build, the assembly will be named package.build.dll</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.SleepTask">
    <xs:annotation>
      <xs:documentation>
            A task for sleeping a specified period of time, useful when a build or deployment process
            requires an interval between tasks. If none of the time attributes are specified then the task sleeps for 0 milliseconds.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="hours" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Hours to add to the sleep time.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="minutes" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Minutes to add to the sleep time.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="seconds" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Seconds to add to the sleep time.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="milliseconds" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Milliseconds to add to the sleep time.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.StartTask">
    <xs:annotation>
      <xs:documentation>Launches an application or document.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="args" type="NAnt.Core.ArgumentSet">
        <xs:annotation>
          <xs:documentation>The set of command line arguments.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="env" type="NAnt.Core.OptionSet">
        <xs:annotation>
          <xs:documentation>optionset : The set of environment variables for when the program runs.
            Benefit of setting variables, like "Path", here is that it will be
            local to this program execution (i.e. global path is unaffected).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="filename" use="required">
      <xs:annotation>
        <xs:documentation>String : The program or document to run.  Can be a program, document or URL.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="workingdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The working directory to start the program from.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="kill" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true the process will be killed right after being started.  Used by automated tests.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="clearenv" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Set true to clear all environmental variable before executing, environmental variable specified in env OptionSet will still be added as environmental variable.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="useshell" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Start process in a separate shell. Default is true. 
            NOTE. When useshell is set to true environment variables are not passed to the new process.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="detached" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.StyleTask">
    <xs:annotation>
      <xs:documentation>
            Process a document with XSLT.
            This is useful for building views of XML based documentation, or in generating code.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Where to find the source XML file, default is the project's basedir.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="destdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : Directory in which to store the results. The default is the current directory.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="extension" use="optional">
      <xs:annotation>
        <xs:documentation>String : Desired file extension to be used for the targets. The default is "html".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="style" use="required">
      <xs:annotation>
        <xs:documentation>String : Name of the stylesheet to use - given either relative to the project's basedir or as an absolute path.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="in" use="required">
      <xs:annotation>
        <xs:documentation>String : Specifies a single XML document to be styled. Should be used with the out attribute.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="out" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specifies the output name for the styled result from the in attribute. The default is the name specified by the in attribute but with an .html extension.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.SyncTargetDirTask">
    <xs:annotation>
      <xs:documentation>Synchronizes target directory file set(s) to a target dir and removes files from the target dir that aren't present in the file set(s).</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="copyfilesonly" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Just copy the files only but do not do directory/fileset synchronization. Default:false</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : The (single) file set to be copied.  
            Note the todir attribute must be set, and that a fileset 
            may include another fileset.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fileset-names" type="NAnt.Core.PropertyElement">
        <xs:annotation>
          <xs:documentation>Names of the filesets to synchronize</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludefiles" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Files to exclude from synchronization. Files in this fileset will 
            not be deleted even if these files aren't present in the input files to copy.
            Note: 'excludefiles' fileset does not affect copy phase.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="todir" use="required">
      <xs:annotation>
        <xs:documentation>String : The directory to transfer to, when transferring a file set.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="overwrite" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Overwrite existing files even if the destination files are newer. Defaults is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="clobber" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Allow hidden and read-only files to be overwritten if appropriate (i.e. if source is newer or overwrite is set to true). Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maintainattributes" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Maintain file attributes of overwritten files. By default and if destination file does not exist file attributes are carried over from source file. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="flatten" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Flatten directory structure when transferring a file set. All files are placed in the todir, without duplicating the directory structure.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="retrycount" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Number of times to retry the copy operation if copy fails.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="retrydelay" use="optional">
      <xs:annotation>
        <xs:documentation>Int32 : Length of time in milliseconds between retry attempts.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hardlinkifpossible" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Tries to create a hard link to the source file rather than copying the entire contents of the file.
            If unable to create a hard link it simply copies the file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deleteemptydirs" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Delete empty folders under the target directory. Default:true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quiet" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Do not print any info. Default:false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.SysInfoTask">
    <xs:annotation>
      <xs:documentation>(Deprecated) Set properties with system information.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="prefix" use="optional">
      <xs:annotation>
        <xs:documentation>String : The string to prefix the property names with.  Default is "sys."</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.TargetTask">
    <xs:annotation>
      <xs:documentation>
            Create a dynamic target. 
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the target.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="depends" use="optional">
      <xs:annotation>
        <xs:documentation>String : A space separated list of target names that this target depends on.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="description" use="optional">
      <xs:annotation>
        <xs:documentation>String : The Target description.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hidden" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Prevents the target from being listed in the project help. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="override" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Override target with the same name if it already exists. Default is 'false'. 
            Depends on the 'allowoverride' setting in target it tries to override.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="allowoverride" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Defines whether target can be overridden by other target with same name. Default is 'false'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="style" use="optional">
      <xs:annotation>
        <xs:documentation>String : Style can be 'use', 'build', or 'clean'.   See  
            page for details.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.TaskDefTask">
    <xs:annotation>
      <xs:documentation>Loads tasks from a specified assembly. When source files are provided as input assembly is built first.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="sources" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : If defined, Tasks DLL will be built using these source files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="references" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Reference assembles. NAll assemblies already loaded in the NAnt Application Domain are automatically added as references.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="assembly" use="required">
      <xs:annotation>
        <xs:documentation>String : File name of the assembly containing the NAnt task.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="override" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Override task with the same name if it already loaded into the Project. Default is "false"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="debugbuild" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Generate debug info. Default is "true"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="compiler" use="optional">
      <xs:annotation>
        <xs:documentation>String : Version of .Net compiler to use when building tasks. Format is: 'v3.5', or 'v4.0', or 'v4.5', ... . Default is "v4.0"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="referenceconfigassemby" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.TouchTask">
    <xs:annotation>
      <xs:documentation>
            Touch a file and/or fileset(s); corresponds to the Unix
            touch command.
            </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="fileset" type="NAnt.Core.FileSet">
        <xs:annotation>
          <xs:documentation>fileset : Fileset to use instead of single file.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="file" use="optional">
      <xs:annotation>
        <xs:documentation>String : Assembly Filename (required unless a fileset is specified).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="millis" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specifies the new modification time of the file in milliseconds since midnight Jan 1 1970.
            The FAT32 file system has limitations on the date value it can hold. The smallest is 
            "12/30/1979 11:59:59 PM", and largest is "12/30/2107, 11:59:58 PM".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="datetime" use="optional">
      <xs:annotation>
        <xs:documentation>String : Specifies the new modification time of the file in the format MM/DD/YYYY HH:MM AM_or_PM.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.TryCatchTask">
    <xs:annotation>
      <xs:documentation>
            Allows wrapping of a group of tasks to be executed in try/catch/finally clauses. This task is a Framework 2 
            feature.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="try" type="NAnt.Core.Tasks.TryTask" />
      <xs:element name="catch" type="NAnt.Core.Tasks.CatchTask" />
      <xs:element name="finally" type="NAnt.Core.Tasks.FinallyTask" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.TryTask">
    <xs:annotation>
      <xs:documentation>
            Allows wrapping of a group of tasks to be executed in a try clause. This task can appear only inside trycatch task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.CatchTask">
    <xs:annotation>
      <xs:documentation>
            Allows wrapping of a group of tasks to be executed in a catch clause. This task can appear only inside trycatch task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="exception" use="optional">
      <xs:annotation>
        <xs:documentation>String : The type of the exception to be caught.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.FinallyTask">
    <xs:annotation>
      <xs:documentation>
            Allows wrapping of a group of tasks to be executed in a finally clause. This task can appear only inside trycatch task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.ThrowTask">
    <xs:annotation>
      <xs:documentation>
            Rethrows a caught exception. This task can appear only inside catch task.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.TStampTask">
    <xs:annotation>
      <xs:documentation>Sets properties with the current date and time.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="property" use="optional">
      <xs:annotation>
        <xs:documentation>String : The property to receive the date/time string in the given pattern.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pattern" use="optional">
      <xs:annotation>
        <xs:documentation>String : The date/time pattern to be used.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="printtime" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Print time stamp into the output, default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.WarnTask">
    <xs:annotation>
      <xs:documentation>Display a warning message in the current build.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="message" use="optional">
      <xs:annotation>
        <xs:documentation>String : The warning message to display.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="group" type="NAnt.Core.Logging.BuildMessage-MessageId" use="optional">
      <xs:annotation>
        <xs:documentation>MessageId : Categorizes the warning for the framework build messaging system. 
            Allows users to disable all warnings in a category.
            (Designed to be used only by internal Framework packages for now)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.Tasks.WhileTask">
    <xs:annotation>
      <xs:documentation>Allows wrapping of a group of tasks to be repeatedly executed based on a conditional.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
      <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
      <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
      <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
      <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
      <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
      <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
      <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
      <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
      <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
      <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
      <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
      <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
      <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
      <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
      <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
      <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
      <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
      <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
      <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
      <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
      <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
      <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
      <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
      <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
      <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
      <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
      <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
      <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
      <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
      <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
      <xs:element name="jar" type="EA.JavaTasks.JarTask" />
      <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
      <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
      <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
      <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
      <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
      <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
      <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
      <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
      <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
      <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
      <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
      <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
      <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
      <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
      <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
      <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
      <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
      <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
      <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
      <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
      <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
      <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
      <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
      <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
      <xs:element name="Combine" type="EA.Eaconfig.Combine" />
      <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
      <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
      <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
      <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
      <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
      <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
      <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
      <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
      <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
      <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
      <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
      <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
      <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
      <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
      <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
      <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
      <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
      <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
      <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
      <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
      <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
      <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
      <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
      <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
      <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
      <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
      <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
      <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
      <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
      <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
      <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
      <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
      <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
      <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
      <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
      <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
      <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
      <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
      <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
      <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
      <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
      <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
      <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
      <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
      <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
      <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
      <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
      <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
      <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
      <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
      <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
      <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
      <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
      <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
      <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
      <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
      <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
      <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
      <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
      <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
      <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
      <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
      <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
      <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
      <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
      <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
      <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
      <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
      <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
      <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
      <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
      <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
      <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
      <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
      <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
      <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
      <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
      <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
      <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
      <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
      <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
      <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
      <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
      <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
      <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
      <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
      <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
      <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
      <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
      <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
      <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
      <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
      <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
      <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
      <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
      <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
      <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
      <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
      <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
      <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
      <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
      <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
      <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
      <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
      <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
      <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
      <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
      <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
      <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
      <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
      <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
      <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
      <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
      <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
      <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
      <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
      <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
      <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
      <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
      <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
      <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
      <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
      <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
      <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
      <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="condition" use="required">
      <xs:annotation>
        <xs:documentation>String : The expression used to test for termination criteria.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.FileSet-ExcludesElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="optional">
      <xs:annotation>
        <xs:documentation>String : The filename or pattern used for file inclusion/exclusion. Default specifies no file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of an optionset to associate with this set of includes or excludes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a fileset defined by the &lt;fileset&gt; task. This fileset will be used for file inclusion/exclusion. Default is empty.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfile" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file containing a newline delimited set of files/patterns to include/exclude..</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="asis" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the file name will be added to the fileset without pattern matching or checking if the file exists. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true the file name will be added to the file set regardless if it is already included. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base of the directory of this include pattern. 
            Default is fileset base directory. When 'basedir' is specified here it will be propagated to fileitems.
            Use this attribute to set custom basedir value which is different from the FileSet basedir, 
            In addition to evaluating patterns, basedir is used to set Link elements and file folders in Visual Studio,
            compiler resources, in CopyTask, etc.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.FileSet-IncludesElement">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="optional">
      <xs:annotation>
        <xs:documentation>String : The filename or pattern used for file inclusion/exclusion. Default specifies no file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="optionset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of an optionset to associate with this set of includes or excludes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfileset" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a fileset defined by the &lt;fileset&gt; task. This fileset will be used for file inclusion/exclusion. Default is empty.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromfile" use="optional">
      <xs:annotation>
        <xs:documentation>String : The name of a file containing a newline delimited set of files/patterns to include/exclude..</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="asis" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the file name will be added to the fileset without pattern matching or checking if the file exists. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true the file name will be added to the file set regardless if it is already included. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="basedir" use="optional">
      <xs:annotation>
        <xs:documentation>String : The base of the directory of this include pattern. 
            Default is fileset base directory. When 'basedir' is specified here it will be propagated to fileitems.
            Use this attribute to set custom basedir value which is different from the FileSet basedir, 
            In addition to evaluating patterns, basedir is used to set Link elements and file folders in Visual Studio,
            compiler resources, in CopyTask, etc.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NAnt.Core.OptionSet-Option" mixed="true">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>String : The name of the option.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" use="optional">
      <xs:annotation>
        <xs:documentation>String : The value of the option. Value can be set as option element text. 
            To get current value use ${option.value} expression.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.XbAppDeploy">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="timeout" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="console" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="layoutdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="validatemanifest" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.XbAppTerminate">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="timeout" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="console" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="package" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.XbAppUninstall">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="timeout" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="console" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="package" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.KettleRun">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="console" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="runtimeout" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="activitytimeout" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="workingdir" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="programfolder" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="program" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="args" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.CreatePrebuiltPackage">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="prebuilt-output-dir" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="test-for-boolean-properties" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="extra-token-mappings" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirect-includedirs" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirect-includedirs-for-rootdirs" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="out-referenced-source-paths-property" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="prebuilt-output-dir" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="outsource-packages" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="test-for-boolean-properties" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirect-includedirs-for-rootdirs" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirect-includedirs-for-packages" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirect-includedirs-exclude-packages" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="exclude-packages-in-paths" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="exclude-packages" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="extra-token-mappings" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="out-prebuilt-packages-optionsetname" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="out-referenced-source-paths-property" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="out-skipped-packages-property" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.CreatePrebuiltForPackage">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="package-name" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="package-version" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="prebuilt-output-dir" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="test-for-boolean-properties" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirect-includedirs" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="redirect-includedirs-for-rootdirs" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="extra-token-mappings" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="out-referenced-source-paths-property" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.KettleConfig.GetPs4LtcgLibProperty">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="ForFrostbite" use="required">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CapilanoConfig.StructuredExtensionCapilano">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="remoteIPaddress" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:element name="layout" type="EA.CapilanoConfig.Layout" />
      <xs:element name="deployment" type="EA.CapilanoConfig.Deployment" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CapilanoConfig.Layout">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="layoutdir" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="isolateconfigurations" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CapilanoConfig.Deployment">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pullmapping" type="EA.CapilanoConfig.PullMapping" />
      <xs:element name="pulltempfolder" type="EA.Eaconfig.Structured.ConditionalPropertyElement" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="enable" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="removeextrafiles" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="deploymode" type="EA.CapilanoConfig.Deployment-DeployModeType" use="optional">
      <xs:annotation>
        <xs:documentation>DeployModeType : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CapilanoConfig.PullMapping">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="path" type="EA.CapilanoConfig.PullMapping-PullMappingPath" />
      <xs:element name="excludepath" type="EA.CapilanoConfig.PullMapping-PullMappingExcludePath" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.CapilanoConfig.PullMapping-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="pullmappingfile" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CapilanoConfig.PullMapping-do-6">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="path" type="EA.CapilanoConfig.PullMapping-PullMappingPath" />
      <xs:element name="excludepath" type="EA.CapilanoConfig.PullMapping-PullMappingExcludePath" />
      <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
      <xs:element name="do" type="EA.CapilanoConfig.PullMapping-do-6" />
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element if true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Execute this element unless true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CapilanoConfig.PullMapping-PullMappingPath">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="source" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="include" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="exclude" use="optional">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.CapilanoConfig.PullMapping-PullMappingExcludePath">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="source" use="required">
      <xs:annotation>
        <xs:documentation>String : </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the target will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the target will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EA.Eaconfig.TargetInit">
    <xs:annotation>
      <xs:documentation />
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="failonerror" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Determines if task failure stops the build, or is just reported. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verbose" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Task reports detailed build log messages.  Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="if" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : If true then the task will be executed; otherwise skipped. Default is "true".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean : Opposite of if.  If false then the task will be executed; otherwise skipped. Default is "false".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="NAnt.PerforceTasks.P4ChangeTask-ChangeType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Restricted" />
      <xs:enumeration value="Public" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.PerforceTasks.P4ChangesTask-P4Status">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="pending" />
      <xs:enumeration value="submitted" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EA.FrameworkTasks.DependentTask-WarningLevel">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="NOTHING" />
      <xs:enumeration value="WARNING" />
      <xs:enumeration value="HALT" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EA.Eaconfig.Structured.NantScript-Order">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="before" />
      <xs:enumeration value="after" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask-DependencyColorSchemes">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Standard" />
      <xs:enumeration value="ByDependent" />
      <xs:enumeration value="ByAncestor" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Tasks.AsyncStatus-WaitAt">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="BeforeGlobalPreprocess" />
      <xs:enumeration value="AfterGlobalPreprocess" />
      <xs:enumeration value="BeforeGlobalPostprocess" />
      <xs:enumeration value="AfterGlobalPostprocess" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Util.CoreDump-Format">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Xml" />
      <xs:enumeration value="Text" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Tasks.DoOnce-DoOnceContexts">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="global" />
      <xs:enumeration value="project" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Logging.Log-LogLevel">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Quiet" />
      <xs:enumeration value="Minimal" />
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Detailed" />
      <xs:enumeration value="Diagnostic" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Tasks.EvalTask-EvalType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Property" />
      <xs:enumeration value="Function" />
      <xs:enumeration value="Expression" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Tasks.ForEachTask-ItemTypes">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="File" />
      <xs:enumeration value="Folder" />
      <xs:enumeration value="Directory" />
      <xs:enumeration value="String" />
      <xs:enumeration value="Line" />
      <xs:enumeration value="FileSet" />
      <xs:enumeration value="OptionSet" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Tasks.NAntTask-GlobalPropertiesActionTypes">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="propagate" />
      <xs:enumeration value="initialize" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Tasks.ParallelForEachTask-ItemTypes">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="File" />
      <xs:enumeration value="Folder" />
      <xs:enumeration value="Directory" />
      <xs:enumeration value="String" />
      <xs:enumeration value="Line" />
      <xs:enumeration value="FileSet" />
      <xs:enumeration value="OptionSet" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NAnt.Core.Logging.BuildMessage-MessageId">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="NoId" />
      <xs:enumeration value="WarningMessageStart" />
      <xs:enumeration value="DeprecatedWarning" />
      <xs:enumeration value="SyntaxError" />
      <xs:enumeration value="ManifestFileError" />
      <xs:enumeration value="DuplicateReleaseFound" />
      <xs:enumeration value="MasterconfigError" />
      <xs:enumeration value="InitializeAssumption" />
      <xs:enumeration value="PackageStructure" />
      <xs:enumeration value="TaskCancelled" />
      <xs:enumeration value="BuildScriptSetupError" />
      <xs:enumeration value="LongPathWarning" />
      <xs:enumeration value="InconsistentVersionName" />
      <xs:enumeration value="PackageRootDoesNotExist" />
      <xs:enumeration value="DuplicateReleaseInside" />
      <xs:enumeration value="PackageCompatibilityWarn" />
      <xs:enumeration value="InvalidModuleDepReference" />
      <xs:enumeration value="InvalidTargetReference" />
      <xs:enumeration value="InconsistentInitializeXml" />
      <xs:enumeration value="StructuredXmlNotUsed" />
      <xs:enumeration value="UsingImproperIncludes" />
      <xs:enumeration value="FoundUnusedIncludes" />
      <xs:enumeration value="MasterconfigURIHead" />
      <xs:enumeration value="InvalidPublicDependencies" />
      <xs:enumeration value="ModuleSelfDependency" />
      <xs:enumeration value="DuplicateCopyLocalDestination" />
      <xs:enumeration value="PublicDataLibMismatch" />
      <xs:enumeration value="PublicDataLibMissing" />
      <xs:enumeration value="PublicDataDllMismatch" />
      <xs:enumeration value="PublicDataDllMissing" />
      <xs:enumeration value="PublicDataAssemblyMismatch" />
      <xs:enumeration value="PublicDataAssemblyMissing" />
      <xs:enumeration value="CannotDetermineVersion" />
      <xs:enumeration value="PublicBuildDependency" />
      <xs:enumeration value="ProxyMapUnrecognizedCentralServer" />
      <xs:enumeration value="ProxyMapAlternateCentralServerName" />
      <xs:enumeration value="InconsistentMasterconfigAttribute" />
      <xs:enumeration value="LocalOndemandIncorrect" />
      <xs:enumeration value="RemovedConfigPackageInMasterconfig" />
      <xs:enumeration value="UserWarning" />
      <xs:enumeration value="UserError" />
      <xs:enumeration value="ErrorMessageStart" />
      <xs:enumeration value="PackageServerErrors" />
      <xs:enumeration value="SystemIOError" />
      <xs:enumeration value="PackageCompatibility" />
      <xs:enumeration value="BuildFailure" />
      <xs:enumeration value="FoundIncludeIrregularities" />
      <xs:enumeration value="UndefinedBehavior" />
      <xs:enumeration value="EndOfMessageId" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EA.CapilanoConfig.Deployment-DeployModeType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Default" />
      <xs:enumeration value="Push" />
      <xs:enumeration value="Pull" />
      <xs:enumeration value="External" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="project">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="get-assembly-reference-dirs" type="EA.DotNet.GetAssemblyReferenceDirs" />
          <xs:element name="get-vs2017-install-info" type="EA.VisualStudio.ProxyPackage.Get_VS2017_Info_Task" />
          <xs:element name="unzip" type="NAnt.ZipTasks.UnZipTask" />
          <xs:element name="zip" type="NAnt.ZipTasks.ZipTask" />
          <xs:element name="p4" type="NAnt.PerforceTasks.P4" />
          <xs:element name="p4add" type="NAnt.PerforceTasks.P4AddTask" />
          <xs:element name="p4change" type="NAnt.PerforceTasks.P4ChangeTask" />
          <xs:element name="p4changes" type="NAnt.PerforceTasks.P4ChangesTask" />
          <xs:element name="p4counter" type="NAnt.PerforceTasks.Task_P4Counter" />
          <xs:element name="p4delete" type="NAnt.PerforceTasks.P4DeleteTask" />
          <xs:element name="p4edit" type="NAnt.PerforceTasks.P4EditTask" />
          <xs:element name="p4have" type="NAnt.PerforceTasks.P4HaveTask" />
          <xs:element name="p4label" type="NAnt.PerforceTasks.P4LabelTask" />
          <xs:element name="p4labelsync" type="NAnt.PerforceTasks.P4LabelsyncTask" />
          <xs:element name="p4reopen" type="NAnt.PerforceTasks.Task_Reopen" />
          <xs:element name="p4revert" type="NAnt.PerforceTasks.P4RevertTask" />
          <xs:element name="p4submit" type="NAnt.PerforceTasks.P4SubmitTask" />
          <xs:element name="p4sync" type="NAnt.PerforceTasks.P4SyncTask" />
          <xs:element name="p4where" type="NAnt.PerforceTasks.P4WhereTask" />
          <xs:element name="al" type="NAnt.DotNetTasks.AlTask" />
          <xs:element name="csc" type="NAnt.DotNetTasks.CscTask" />
          <xs:element name="jsc" type="NAnt.DotNetTasks.JscTask" />
          <xs:element name="resgen" type="NAnt.DotNetTasks.ResGenTask" />
          <xs:element name="vbc" type="NAnt.DotNetTasks.VbcTask" />
          <xs:element name="CreateGDBDebuggingConfig" type="LinuxTasks.CreateGDBDebuggingConfigTask" />
          <xs:element name="PrintReferencedPackages" type="EA.EAMConfig.PrintReferencedPackagesTask" />
          <xs:element name="GetVSConfigName" type="EA.GetVSConfigName.GetVSConfigNameTask" />
          <xs:element name="GetConfigPlatform" type="EA.GetConfigPlatform.GetConfigPlatformTask" />
          <xs:element name="GenerateBulkBuildFiles" type="EA.GenerateBulkBuildFiles.generatebulkbuildfiles" />
          <xs:element name="CallTargetIfOutOfDate" type="EA.CallTargetIfOutOfDate.calltargetifoutofdate" />
          <xs:element name="ExecuteIfOutOfDate" type="EA.CallTargetIfOutOfDate.ExecuteIfOutOfDate" />
          <xs:element name="jar" type="EA.JavaTasks.JarTask" />
          <xs:element name="javac" type="EA.JavaTasks.JavacTask" />
          <xs:element name="javah" type="EA.JavaTasks.JavahTask" />
          <xs:element name="as" type="EA.CPlusPlusTasks.AsTask" />
          <xs:element name="build" type="EA.CPlusPlusTasks.BuildTask" />
          <xs:element name="cc" type="EA.CPlusPlusTasks.CcTask" />
          <xs:element name="lib" type="EA.CPlusPlusTasks.LibTask" />
          <xs:element name="link" type="EA.CPlusPlusTasks.LinkTask" />
          <xs:element name="compiler" type="EA.Tasks.BuildTool.CompilerTask" />
          <xs:element name="assembler" type="EA.Tasks.BuildTool.AssemblerTask" />
          <xs:element name="librarian" type="EA.Tasks.BuildTool.LibrarianTask" />
          <xs:element name="linker" type="EA.Tasks.BuildTool.LinkerTask" />
          <xs:element name="dependent" type="EA.FrameworkTasks.DependentTask" />
          <xs:element name="ExecuteCustomBuildSteps" type="EA.FrameworkTasks.ExecuteCustomBuildSteps" />
          <xs:element name="generate.master-packages-optionset" type="EA.FrameworkTasks.GenerateMasterPackagesOptionsetTask" />
          <xs:element name="package" type="EA.FrameworkTasks.PackageTask" />
          <xs:element name="signpackage" type="EA.FrameworkTasks.SignPackageTask" />
          <xs:element name="test-version-file" type="EA.FrameworkTasks.VerifyVersionFileTask" />
          <xs:element name="verify-package-signature" type="EA.FrameworkTasks.VerifyPackageSignatureTask" />
          <xs:element name="task-generatemoduleinteropassemblies" type="EA.Eaconfig.GenerateModuleInteropAssembliesTask" />
          <xs:element name="slnruntime-generateinteropassembly" type="EA.Eaconfig.SlnRuntimeGenerateInteropAssemblyTask" />
          <xs:element name="GetComLibraryName" type="EA.Eaconfig.GetComLibraryNameTask" />
          <xs:element name="task-generatemodulewebreferences" type="EA.Eaconfig.GenerateModuleWebReferencesTask" />
          <xs:element name="nantschemainstall" type="EA.Eaconfig.NAntSchemaInstallerTask" />
          <xs:element name="nantschema" type="EA.Eaconfig.NAntSchemaTask" />
          <xs:element name="Combine" type="EA.Eaconfig.Combine" />
          <xs:element name="GenerateBuildOptionset" type="EA.Eaconfig.GenerateBuildOptionset" />
          <xs:element name="MergeOptionset" type="EA.Eaconfig.MergeOptionset" />
          <xs:element name="MergeOption" type="EA.Eaconfig.MergeOptionTask" />
          <xs:element name="eaconfig-build-caller" type="EA.Eaconfig.EaconfigBuildCallerTask" />
          <xs:element name="eaconfig-set-custom-build-data" type="EA.Eaconfig.EaconfigCustomBuildTask" />
          <xs:element name="GetModuleBaseType" type="EA.Eaconfig.GetModuleBaseType" />
          <xs:element name="LoadPlatformConfig" type="EA.Eaconfig.LoadPlatformConfigTask" />
          <xs:element name="ClangCompilationDatabase" type="EA.Eaconfig.ClangCompilationDatabase" />
          <xs:element name="collect-masterconfig-packages" type="EA.Eaconfig.CollectMasterconfigPackagesTask" />
          <xs:element name="create-build-graph-for-package" type="EA.Eaconfig.CreateBuildGraphForPackageTask" />
          <xs:element name="create-custom-build-step" type="EA.Eaconfig.CreateCustomBuildStepTask" />
          <xs:element name="DeployTask" type="EA.Eaconfig.DeployTask" />
          <xs:element name="eaconfig-sandcastle" type="EA.Eaconfig.EaconfigSandCastleTask" />
          <xs:element name="EchoFileSet" type="EA.Eaconfig.EchoFileSetTask" />
          <xs:element name="EchoOptionSet" type="EA.Eaconfig.EchoOptionSetTask" />
          <xs:element name="ExcludeDir" type="EA.Eaconfig.ExcludeDirTask" />
          <xs:element name="get-all-dependent-packages" type="EA.Eaconfig.GetAllDependentPackagesTask" />
          <xs:element name="get-module-asset-files" type="EA.Eaconfig.GetModuleAssetFilesTask" />
          <xs:element name="repeatexecif" type="EA.Eaconfig.RepeatExecifTask" />
          <xs:element name="ScriptInit" type="EA.Eaconfig.ScriptInitTask" />
          <xs:element name="set-config-vs-version" type="EA.Eaconfig.SetConfigVisualStudioVersion" />
          <xs:element name="update-manifest-compatibility" type="EA.Eaconfig.UpdateManifestCompatibilityTask" />
          <xs:element name="validate-code-conventions" type="EA.Eaconfig.ValidateCodeConventionsTask" />
          <xs:element name="verify-src-includes" type="EA.Eaconfig.VerifySourceIncludesTask" />
          <xs:element name="viewbuildinfo" type="EA.Eaconfig.ViewBuildInfoTask" />
          <xs:element name="BuildType" type="EA.Eaconfig.Structured.BuildTypeTask" />
          <xs:element name="Module" type="EA.Eaconfig.Structured.ModuleTask" />
          <xs:element name="PartialModule" type="EA.Eaconfig.Structured.PartialModuleTask" />
          <xs:element name="runtime" type="EA.Eaconfig.Structured.RuntimeTask" />
          <xs:element name="tests" type="EA.Eaconfig.Structured.TestsTask" />
          <xs:element name="examples" type="EA.Eaconfig.Structured.ExamplesTask" />
          <xs:element name="tools" type="EA.Eaconfig.Structured.ToolsTask" />
          <xs:element name="CSharpLibrary" type="EA.Eaconfig.Structured.CSharpLibraryTask" />
          <xs:element name="CSharpProgram" type="EA.Eaconfig.Structured.CSharpProgramTask" />
          <xs:element name="CSharpWindowsProgram" type="EA.Eaconfig.Structured.CSharpWindowsProgramTask" />
          <xs:element name="declare-public-properties" type="EA.Eaconfig.Structured.DeclarePublicPropertiesTask" />
          <xs:element name="print-public-properties" type="EA.Eaconfig.Structured.PrintPublicPropertiesTask" />
          <xs:element name="DynamicLibrary" type="EA.Eaconfig.Structured.DynamicLibraryTask" />
          <xs:element name="Library" type="EA.Eaconfig.Structured.LibraryTask" />
          <xs:element name="MakeStyle" type="EA.Eaconfig.Structured.MakeStyleTask" />
          <xs:element name="ManagedCppAssembly" type="EA.Eaconfig.Structured.ManagedCppAssemblyTask" />
          <xs:element name="ManagedCppProgram" type="EA.Eaconfig.Structured.ManagedCppProgramTask" />
          <xs:element name="ManagedCppWindowsProgram" type="EA.Eaconfig.Structured.ManagedCppWindowsProgramTask" />
          <xs:element name="module" type="EA.Eaconfig.Structured.ModulePublicData" />
          <xs:element name="publicdata" type="EA.Eaconfig.Structured.PackagePublicData" />
          <xs:element name="Program" type="EA.Eaconfig.Structured.ProgramTask" />
          <xs:element name="PythonProgram" type="EA.Eaconfig.Structured.PythonProgramTask" />
          <xs:element name="SolutionFolders" type="EA.Eaconfig.Structured.SolutionFolders" />
          <xs:element name="Utility" type="EA.Eaconfig.Structured.UtilityTask" />
          <xs:element name="VisualStudioProject" type="EA.Eaconfig.Structured.VisualStudioProjectTask" />
          <xs:element name="WindowsProgram" type="EA.Eaconfig.Structured.WindowsProgramTask" />
          <xs:element name="generate-makefile" type="EA.Eaconfig.Backends.GenerateMakefileTask" />
          <xs:element name="nant-build" type="EA.Eaconfig.Backends.NantBuildTask" />
          <xs:element name="backend-generator" type="EA.Eaconfig.Backends.BackendGenerateTask" />
          <xs:element name="taskdef-sln-generator" type="EA.Eaconfig.Backends.VisualStudio.sln_taskdef.TaskDefSolutionTask" />
          <xs:element name="WriteBuildInfo" type="EA.Eaconfig.Backends.Text.WriteBuildInfo" />
          <xs:element name="WritePackageGraphViz" type="EA.Eaconfig.Backends.Text.WritePackageGraphVizTask" />
          <xs:element name="WritePackageTree" type="EA.Eaconfig.Backends.Text.WritePackageTreeTask" />
          <xs:element name="generated-make-file-path" type="EA.Eaconfig.Build.GeneratedMakeFilePath" />
          <xs:element name="nant-build-module" type="EA.Eaconfig.Build.DoBuildModuleTask" />
          <xs:element name="check-build-messages" type="EA.Eaconfig.Build.CheckBuildMessagesTask" />
          <xs:element name="create-build-graph" type="EA.Eaconfig.Build.Task_CreateBuildGraph" />
          <xs:element name="init-build-graph" type="EA.Eaconfig.Build.Task_InitBuildGraph" />
          <xs:element name="load-package" type="EA.Eaconfig.Build.LoadPackageTask" />
          <xs:element name="async.start" type="NAnt.Core.Tasks.AsyncStart" />
          <xs:element name="async.wait" type="NAnt.Core.Tasks.AsyncWait" />
          <xs:element name="attrib" type="NAnt.Core.Tasks.AttribTask" />
          <xs:element name="call" type="NAnt.Core.Tasks.CallTask" />
          <xs:element name="call-base" type="NAnt.Core.Tasks.CallBaseTask" />
          <xs:element name="CancelBuildTargetsExecution" type="NAnt.Core.Tasks.CancelBuildTargetsExecutionTask" />
          <xs:element name="choose" type="NAnt.Core.Tasks.ChooseTask" />
          <xs:element name="collectbuildstats" type="NAnt.Core.Tasks.CollectBuildStats" />
          <xs:element name="printbuildstats" type="NAnt.Core.Tasks.PrintBuildStats" />
          <xs:element name="copy" type="NAnt.Core.Tasks.CopyTask" />
          <xs:element name="nant-coredump" type="NAnt.Core.Tasks.CoreDumpTask" />
          <xs:element name="task" type="NAnt.Core.Tasks.RunTask" />
          <xs:element name="createtask" type="NAnt.Core.Tasks.CreateTaskTask" />
          <xs:element name="debugbreak" type="NAnt.Core.Tasks.DebugBreakTask" />
          <xs:element name="delete" type="NAnt.Core.Tasks.DeleteTask" />
          <xs:element name="depends" type="NAnt.Core.Tasks.DependsTask" />
          <xs:element name="do.once" type="NAnt.Core.Tasks.DoOnce" />
          <xs:element name="do" type="NAnt.Core.Tasks.DoTask" />
          <xs:element name="echo" type="NAnt.Core.Tasks.EchoTask" />
          <xs:element name="eval" type="NAnt.Core.Tasks.EvalTask" />
          <xs:element name="exec" type="NAnt.Core.Tasks.ExecTask" />
          <xs:element name="fail" type="NAnt.Core.Tasks.FailTask" />
          <xs:element name="fileset" type="NAnt.Core.Tasks.FileSetTask" />
          <xs:element name="foreach" type="NAnt.Core.Tasks.ForEachTask" />
          <xs:element name="funcdef" type="NAnt.Core.Tasks.FuncDefTask" />
          <xs:element name="get" type="NAnt.Core.Tasks.GetTask" />
          <xs:element name="include" type="NAnt.Core.Tasks.IncludeTask" />
          <xs:element name="mail" type="NAnt.Core.Tasks.MailTask" />
          <xs:element name="metric" type="NAnt.Core.Tasks.MetricTask" />
          <xs:element name="mkdir" type="NAnt.Core.Tasks.MkDirTask" />
          <xs:element name="move" type="NAnt.Core.Tasks.MoveTask" />
          <xs:element name="namedlock" type="NAnt.Core.Tasks.NamedLock" />
          <xs:element name="nant" type="NAnt.Core.Tasks.NAntTask" />
          <xs:element name="optionset" type="NAnt.Core.Tasks.OptionSetTask" />
          <xs:element name="parallel.do" type="NAnt.Core.Tasks.ParallelDoTask" />
          <xs:element name="parallel.foreach" type="NAnt.Core.Tasks.ParallelForEachTask" />
          <xs:element name="property" type="NAnt.Core.Tasks.PropertyTask" />
          <xs:element name="record" type="NAnt.Core.Tasks.RecordTask" />
          <xs:element name="RegexMatch" type="NAnt.Core.Tasks.RegexMatchTask" />
          <xs:element name="RegistrySetValue" type="NAnt.Core.Tasks.RegistrySetValueTask" />
          <xs:element name="script" type="NAnt.Core.Tasks.ScriptTask" />
          <xs:element name="sleep" type="NAnt.Core.Tasks.SleepTask" />
          <xs:element name="start" type="NAnt.Core.Tasks.StartTask" />
          <xs:element name="style" type="NAnt.Core.Tasks.StyleTask" />
          <xs:element name="synctargetdir" type="NAnt.Core.Tasks.SyncTargetDirTask" />
          <xs:element name="sysinfo" type="NAnt.Core.Tasks.SysInfoTask" />
          <xs:element name="target" type="NAnt.Core.Tasks.TargetTask" />
          <xs:element name="taskdef" type="NAnt.Core.Tasks.TaskDefTask" />
          <xs:element name="touch" type="NAnt.Core.Tasks.TouchTask" />
          <xs:element name="trycatch" type="NAnt.Core.Tasks.TryCatchTask" />
          <xs:element name="throw" type="NAnt.Core.Tasks.ThrowTask" />
          <xs:element name="tstamp" type="NAnt.Core.Tasks.TStampTask" />
          <xs:element name="warn" type="NAnt.Core.Tasks.WarnTask" />
          <xs:element name="while" type="NAnt.Core.Tasks.WhileTask" />
          <xs:element name="xbapp-deploy" type="EA.Eaconfig.XbAppDeploy" />
          <xs:element name="xbapp-terminate" type="EA.Eaconfig.XbAppTerminate" />
          <xs:element name="xbapp-uninstall" type="EA.Eaconfig.XbAppUninstall" />
          <xs:element name="KettleRun" type="EA.Eaconfig.KettleRun" />
          <xs:element name="create-prebuilt-package" type="EA.Eaconfig.CreatePrebuiltPackage" />
          <xs:element name="create-outsource-prebuilt-packages-from-buildgraph" type="EA.Eaconfig.CreateOutsourcePrebuiltPackagesFromBuildGraph" />
          <xs:element name="create-prebuilt-for-package" type="EA.Eaconfig.CreatePrebuiltForPackage" />
          <xs:element name="get-ps4-ltcglib-property" type="EA.KettleConfig.GetPs4LtcgLibProperty" />
          <xs:element name="TargetInit" type="EA.Eaconfig.TargetInit" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="name" use="optional">
        <xs:annotation>
          <xs:documentation>The name of the project.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="default" use="optional">
        <xs:annotation>
          <xs:documentation>The Default build target. If not specified default target is 'build' (or 'clean')</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="basedir" use="optional">
        <xs:annotation>
          <xs:documentation>The Base Directory used for relative file references.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>