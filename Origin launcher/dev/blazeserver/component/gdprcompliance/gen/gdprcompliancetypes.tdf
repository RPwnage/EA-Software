// Defines the TDF classes used in the GdprCompliance component.
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see https://developer.ea.com/display/blaze/How+to+Use+Typecomp for info on the .tdf spec, as well as the compiler, TypeComp

[headername="framework/tdf/userdefines.h"]
#include "framework/gen/userdefines.tdf"

namespace Blaze
{
namespace GdprCompliance
{

class GdprComplianceError
{
    [tag="msg"] 
    string(256) mMessage;
};

class GetUserDataRequest
{
    [tag="skey"] 
    string(1024) mSessionKey;

    [tag="acct"] 
    uint64_t mAccountId;

    [tag="info", description="The identifier information of the GDPR requester"] 
    string(256) mRequesterInfo;
};

class Row
{
    [tag="tabl"]
    list<string(-1)> RowData;
};

typedef list<Row> RowList;

class TableData
{
    [tag="desc"] 
    string(-1) mTableDesc;

    [tag="tabl"]
    RowList mRows;
};

typedef list<TableData> TableDataList;
class UserData 
{
    [tag="name", description="The persona of the player"] 
    string(256) mPersona;

    [tag="plat", description="The platform of the player"] 
    ClientPlatformType mPlatform;

    [tag="tabl"]
    TableDataList mTableDataList;
};

typedef list<UserData> UserDataList;
class GetUserDataResponse 
{
    [tag="data"]
    UserDataList mUserDataList; // UserData list for the account id
};
 
class DeactivateUserDataRequest
{
    [tag="skey"] 
    string(1024) mSessionKey;

    [tag="acct"] 
    uint64_t mAccountId;

    [tag="info", description="The identifier information of the GDPR requester"] 
    string(256) mRequesterInfo;
};

class DeactivateUserDataResponse
{
    [tag="info"] 
    string(256) mMessage;
};

class CheckRecordProgressRequest
{
    [tag="skey"] 
    string(1024) mSessionKey;
    
    [tag="acct"] 
    uint64_t mAccountId;
};

class ProgressStatus
{
    [tag="type"] 
    string(64) mJobType;

    [tag="stat"] 
    string(64) mJobStatus;

    [tag="crea"]
    string(256) mRequestCreatedTime;

    [tag="info", description="The identifier information of the GDPR requester"] 
    string(256) mRequesterInfo;

    [tag="mesg"]
    string(256) mMessage;
};

typedef list<ProgressStatus> ProgressStatusList;
class CheckRecordProgressResponse
{
    [tag="mesa"] 
    ProgressStatusList mProgressStatusList;
};




// Data types used for Custom Components:
// (In rare cases, a given user may have multiple blazeids on the same platform)
typedef map<BlazeId, ClientPlatformType> BlazeIdsToPlatformMap;

class CustomComponentGetDataRequest
{
  [tag="acid"] AccountId mAccountId;
  [tag="pltm"] BlazeIdsToPlatformMap mPlatformMap;
};
 
typedef map<ClientPlatformType, TableDataList> TableDataMapByPlatform;

class CustomComponentGetDataResponse 
{ 
    [tag="tbls"] TableDataMapByPlatform mTablesByPlatform; 
};

} // GdprCompliance
} // Blaze



