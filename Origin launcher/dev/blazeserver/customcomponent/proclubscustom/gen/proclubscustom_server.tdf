// Defines the TDF classes used in the proclubsCustom component.
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp
[headername="proclubscustom/tdf/proclubscustomtypes.h"]
#include "proclubscustom/gen/proclubscustomtypes.tdf"

namespace Blaze
{
	namespace proclubscustom
	{
		[
			description = "The configuration object for the proclubsCustom component",
			details = "This class represents the schema for all the configuration parameters for the proclubsCustom component.."
		]
		class proclubsConfiguration
		{ 
			[tag="pcbc", default=1, description = "enable club customization settings", reconfigurable="yes"]
			uint32_t mCustomizationsEnabled;

			[tag="dbpc", default="main", description = "DB to use.", reconfigurable="no"]
			string(64) mDbName;

			[tag="size", default=3, reconfigurable="yes", description="Maximum number of times a avatar name can be reset to a default value before being locked and unable to be renamed"]
			uint32_t mMaxAvatarNameResets;

		};
	
		class GetConfigResponse
		{
			[tag="pcbr", description="proclubsCustom server config TDF"]
			proclubsConfiguration mConfig;
		};
		
		class getAvatarNameRequest
		{
			[tag="ganr", description="Avatar name of the requested user"]
			uint64_t mBlazeId;
		};

		class getAvatarNameResponse
		{
			[tag="gafr", description="Avatar first name"]
			string(MAX_NAME_LENGTH) firstname;
	
			[tag="galr", description="Avatar last name"]
			string(MAX_NAME_LENGTH) lastname;	
		};
		
		class updateProfaneAvatarNameRequest
		{
			[tag="upan", description="Id of user whose Pro Clubs Avatar needs updating"]
			uint64_t mBlazeId;
		};		

	} // ProClubsCustom
} // Blaze



