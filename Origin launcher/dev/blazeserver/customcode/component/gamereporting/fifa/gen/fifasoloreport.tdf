// Defines the TDF classes used in the FIFA game reporting component
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp

[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"

[headername="gamereporting/fifa/tdf/fifaseasonalplayreport.h"]
#include "gamereporting/fifa/gen/fifaseasonalplayreport.tdf"

[headername="gamereporting/fifa/tdf/fifacommonplayerreport.h"]
#include "gamereporting/fifa/gen/fifacommonplayerreport.tdf"

[headername="gamereporting/fifa/tdf/fifacommongamereport.h"]
#include "gamereporting/fifa/gen/fifacommongamereport.tdf"


namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

namespace Fifa
{


[
    tdfid = "hash",
    description = "Solo custom player data report"    
]
class SoloCustomPlayerData
{
    [tag="team", description="team"]
    uint32_t team;

    [tag="wins", description="wins"]
    uint16_t wins;

    [tag="loss", description="loss"]
    uint16_t losses;

    [tag="ties", description="ties"]
    uint16_t ties;

    [tag="rslt", description="result of the match 0-2"]
    uint16_t result;
	
    [tag="shag", description="Player shot against count"]
    uint16_t shotsAgainst;

    [tag="shgl", description="Player shot against on goal count"]
    uint16_t shotsAgainstOnGoal;
	
    [tag="glag", description="Player goal against count"]
    uint16_t goalAgainst;
	
	[tag="oppg", description="Ai Opponent goal"]
	uint16_t oppGoal;
};

///////////////////////////////////////////////////////////////////////////////
//  Fifa Solo Player Report
//
//  Submitted report TDFs. 
[
    tdfid = "hash",
    description = "Generic PlayerReport TDF that takes a variable TDF representing player data.",
    details = "Solo game player report TDF"
]
class SoloPlayerReport
{    
    [tag="spdt", description="Seasonal Play Data"]
    Blaze::GameReporting::Fifa::SeasonalPlayData mSeasonalPlayData;
    
    [tag="cmpr", description="Common player report"]
    Blaze::GameReporting::Fifa::CommonPlayerReport mCommonPlayerReport;
    
    [tag="scpr", description="Solo custom player data"]
    Blaze::GameReporting::Fifa::SoloCustomPlayerData mSoloCustomPlayerData;
    
};

///////////////////////////////////////////////////////////////////////////////
//  Fifa Solo Notification Report
//
//  Notification report TDFs. 
[
    tdfid = "hash",
    description = "Solo custom data report notification TDF",
    details = "FIFA Solo custom data report notification TDF"
]
class SoloNotificationCustomGameData
{
    [tag="grid", description="The unique value assigned at the beginning of the game."]
    GameManager::GameReportingId gameReportingId;   
	
    [tag="ghas", description="The Hash computed for match (currently only for FUT match)."]
    string(HASH_MAX_LENGTH) matchHash;
};

///////////////////////////////////////////////////////////////////////////////
//  Fifa Solo Game Report
//
//  Submitted report TDFs. 
[
    tdfid = "hash",
    description = "Generic GameReport TDF that takes a variable TDF representing game data.",
    details = "Solo game report TDF"
]
class SoloGameReport
{
    [tag="cmgr", description="Common Game report"]
	Blaze::GameReporting::Fifa::CommonGameReport mCommonGameReport;	

	[tag="mdif", description="Match difficulty"]
	uint16_t matchDifficulty;
	
	[tag="pmdf", description="Match difficulty From User Profile Setting"]
	uint16_t profileDifficulty;
	
	[tag="atid", description="Ai Player Team Id"]
	uint32_t opponentTeamId;

	[tag="mstp", description="Match Sub Type"]
	uint16_t matchSubType;

};

} // namespace Fifa
} // namespace GameReporting
} // namespace Blaze