/*! ************************************************************************************************/
/*!
    \file gephi.tdf
    \attention
        (c) Electronic Arts. All Rights Reserved.
*/
/*! ************************************************************************************************/


namespace Blaze
{
namespace Gephi
{

// This is the json format for gephi updates 
/*
    { 
    <event_type> :{ 
        <object_identifier> :{ 
            <attribute_name> : <attribute_value> , 
            <attribute_name> : <attribute_value> 
           }
       }
    } 
*/
/* Example calls
{"an":{"A":{"label":"Streaming Node A","size":2}}} // add node A
{"an":{"B":{"label":"Streaming Node B","size":1}}} // add node B
{"an":{"C":{"label":"Streaming Node C","size":1}}} // add node C
{"ae":{"AB":{"source":"A","target":"B","directed":false,"weight":2}}} // add edge A->B
{"ae":{"BC":{"source":"B","target":"C","directed":false,"weight":1}}} // add edge B->C
{"ae":{"CA":{"source":"C","target":"A","directed":false,"weight":2}}} // add edge C->A
{"cn":{"C":{"size":2}}}  // changes the size attribute to 2
{"cn":{"B":{"label":null}}}  // removes the label attribute
{"ce":{"AB":{"label":"From A to B"}}} // add the label attribute
{"de":{"BC":{}}} // delete edge BC
{"de":{"CA":{}}} // delete edge CA
{"dn":{"C":{}}}  // delete node C
*/

//
// Add Node
//
class NodeAttributes
{
    [tag="labl", description=""]
    string(-1) mLabel;
    
    [tag="size", description=""]
    uint64_t mSize;
    
    [tag="gree", description="", nameoverride="g"]
    float mGreen;
    
    [tag="red", description="", nameoverride="r"]
    float mRed;
    
    [tag="blue", description="", nameoverride="b"]
    float mBlue;
    
    [tag="xloc", description="", default=0.0, nameoverride="x"]
    float mXLocation;
    
    [tag="yloc", description="", default=0.0, nameoverride="y"]
    float mYLocation;
    
    [tag="zloc", description="", default=0.0, nameoverride="z"]
    float mZLocation;
};    

[trackChanges = true]    
class AddNodeBody
{
    [tag="an", description="", nameoverride="an"]
    map<string(-1), NodeAttributes> mAddNode;
};


//
// Change Node
//
// change node attributes don't include location.
class ChangeNodeAttributes
{
    [tag="labl", description=""]
    string(-1) mLabel;
    
    [tag="size", description=""]
    uint64_t mSize;
    
    [tag="gree", description="", nameoverride="g"]
    float mGreen;
    
    [tag="red", description="", nameoverride="r"]
    float mRed;
    
    [tag="blue", description="", nameoverride="b"]
    float mBlue;
};    

[trackChanges = true]
class ChangeNodeBody
{
    [tag="cn", description="", nameoverride="cn"]
    map<string(-1), ChangeNodeAttributes> mChangeNode;
};


// Override of change node that allows mvoing the node
[trackChanges = true]
class MoveNodeBody
{
    [tag="cn", description="", nameoverride="cn"]
    map<string(-1), NodeAttributes> mChangeNode;
};


//
// DeleteNode
//
[trackChanges = true]
class DeleteNodeBody
{
    [tag="dn", description="", nameoverride="dn"]
    map<string(-1), NodeAttributes> mDeleteNode;
};


//
// Add Edge
//   
class EdgeAttributes
{
    [tag="src", description=""]
    string(-1) mSource;
    
    [tag="tar", description=""]
    string(-1) mTarget;
    
    [tag="dir", description=""]
    bool mDirected;
    
    [tag="wght", description=""]
    uint64_t mWeight;
}; 


[trackChanges = true]
class AddEdgeBody
{
    [tag="ae", description="", nameoverride="ae"]
    map<string(-1), EdgeAttributes> mAddEdge;
};


//
// Change Edge
//
[trackChanges = true]
class ChangeEdgeBody
{
    [tag="ce", description="", nameoverride="ce"]
    map<string(-1), EdgeAttributes> mChangeEdge;
};


//
// Delete Edge
//
[trackChanges = true]
class DeleteEdgeBody
{
    [tag="de", description="", nameoverride="de"]
    map<string(-1), EdgeAttributes> mDeleteEdge;
};


//
// Request objects
//
class AddEdgeRequest
{
    [tag="work", description=""]
    string(-1) mWorkspace;

    [tag="body", description=""]
    AddEdgeBody mBody;
};


class ChangeEdgeRequest
{
    [tag="work", description=""]
    string(-1) mWorkspace;

    [tag="body", description=""]
    ChangeEdgeBody mBody;
};

class DeleteEdgeRequest
{
    [tag="work", description=""]
    string(-1) mWorkspace;

    [tag="body", description=""]
    DeleteEdgeBody mBody;
};
  
    
class AddNodeRequest
{
    [tag="work", description=""]
    string(-1) mWorkspace;

    [tag="body", description=""]
    AddNodeBody mBody;
};


class ChangeNodeRequest
{
    [tag="work", description=""]
    string(-1) mWorkspace;

    [tag="body", description=""]
    ChangeNodeBody mBody;
};


class MoveNodeRequest
{
    [tag="work", description=""]
    string(-1) mWorkspace;

    [tag="body", description=""]
    MoveNodeBody mBody;
};


class DeleteNodeRequest
{
    [tag="work", description=""]
    string(-1) mWorkspace;

    [tag="body", description=""]
    DeleteNodeBody mBody;
};



} // namepsace RiverPoster
} // namespace Blaze
