/*! ************************************************************************************************/
/*!
    \file psncommondefines.tdf

    \attention
        (c) Electronic Arts. All Rights Reserved.
*/
/*! ************************************************************************************************/

[ headername="framework/tdf/userdefines.h" ]
#include "framework/gen/userdefines.tdf"

[headername="framework/tdf/externalsessiontypes.h"]
#include "framework/gen/externalsessiontypes.tdf"

[ headername="psnsessionmanager/tdf/psnerror.h" ]
#include "psnsessionmanager/gen/psnerror.tdf"

namespace Blaze
{
namespace PSNServices
{

[description="PSN Online ID for a user."]
typedef string(16) PsnOnlineId; // By PSN spec, up to 16 ASCII characters
typedef string(Blaze::MAX_EXTERNAL_ID_CHAR_LEN) PsnAccountId; // By PSN spec, external id in string format

[description="Maximum length of language code."]
const uint16_t MAX_PSN_LANGUAGE_CODE_LEN = 5;

[description="Maximum length of multilingual text. See PSN PS5 docs"]
const uint16_t MAX_PSN_LOCALIZABLE_TEXT_LEN = 128;

[description="Enum for parsing valid PSN supported platforms, used with PSN requests and responses. Defines platforms with which users can join a PS5 PlayerSession."]
enum PsnSupportedPlatformsEnum
{
    INVALID_SUPPORTED_PLATFORM_TYPE,//Blaze sentinel
    PS5,
    PS4,
    PROSPERO
};
[description="supportedPlatforms max string len (8 chars max for PROSPERO)"]
const uint16_t MAX_PSN_PLATFORMNAME_LEN = 8;

[description="1P match's unix numeric time stamp (max 19 chars for nanoseconds)"]
const uint16_t MAX_PSN_TIMESTAMP_LEN = 7;

[description="Common header for PSN WebAPI calls.", trackChanges = true]
class PsnWebApiHeader
{
    [tag="atkn", description=""]
    string(-1) mAuthToken;

    [tag="rate", default="GetDetail", description="Specifies the request's X-NP-RateLimit header. Set this to GetDetail to get details on the PSN rate limit for the call."]
    string(9) mNpRateLimit; // 9 chars for 'GetDetail'

    [tag="lang", default="en", description="For non npWebApi calls, explicitly specify language headers as needed."]
    string(-1) mAcceptLanguage;
};

[description="Common multilingual text object in PSN reqs and rsps", trackChanges = true]
class MultilingualText
{
    [tag="dflt", description="default language code"]
    string(MAX_PSN_LANGUAGE_CODE_LEN) mDefaultLanguage;

    [tag="tmap", description=" Specify combinations of language codes and corresponding messages. For the language codes that can be specified, see PSN docs."]
    map<string(MAX_PSN_LANGUAGE_CODE_LEN),string(MAX_PSN_LOCALIZABLE_TEXT_LEN)> mLocalizedText;
};



}
}
