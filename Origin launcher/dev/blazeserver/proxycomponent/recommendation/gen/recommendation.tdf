[headername="framework/tdf/userdefines.h"]
#include "framework/gen/userdefines.tdf"

namespace Blaze
{
namespace Recommendation
{

typedef map<string(-1), string(-1)> PIDMap;
typedef string(128) TriggerId;

class RecoPayload
{
    [tag="clie", description="The client id.", nameoverride="clientid"]
    string(MAX_NUCLEUS_CLIENT_ID_LENGTH) mClientId;

    [tag="plat", description="The platform.", nameoverride="plat"]
    string(128) mPlat;

    [tag="tpro", description="The project id."]
    string(128) mTid;

    [tag="proj", description="The title id type. Blaze uses projectid."]
    string(128) mTidt;

    [tag="lang", description="The language supported."]
    string(128) mLanguage;

    [tag="ctry", description="The country."]
    string(128) mCountry;

    [tag="pidm", description="The pid map."]
    PIDMap mPidm;

    [tag="reco", description="The trigger ids in the payload."]
    list<TriggerId> mTriggerids;
};

class GetScenarioVariantRequest
{    
    [tag="plat", description="The platform of the request."]
    string(128) mPlatform;

    [tag="reco", description="The payload data in JSON format that will be sent to Reco service"]
    RecoPayload mPayload;
};

typedef map<string(-1), string(-1)> RecoAttributesMap;
class Action
{
    [tag="expe", description="The scenario variant for matchmaking A/B testing.", nameoverride="experiment_variant"]
    string(128) mExperimentVariant;

    [tag="attr", description="The scenario attributes from Reco", nameoverride="reco_attributes"]
    RecoAttributesMap mRecoAttributesMap;
};

class Track
{
    [tag="expe", description="The scenario variant for matchmaking A/B testing.", nameoverride="trackingtag"]
    string(128) mTrackingTag;
};

class ActionEvent
{
    [tag="type", description="The experiment type."]
    string(128) mType;

    [tag="trac", description="The tracking tag from Reco service."]
    Track mTrack;

    [tag="acti", description="The action object contains the experiment variant ."]
    Action mAction;
};

typedef list<ActionEvent> ActionList;
class Trigger
{
    [tag="name", nameoverride="triggerid"]
    TriggerId mTriggerId;

    [tag="acts"]
    ActionList mActions;
};

typedef list<Trigger> TriggerList;
class GetScenarioVariantResponse
{    
    [tag="reql", description="A list of recommendation contains the scenario variant to use for matchmaking."]
    TriggerList mTriggers;
};

}
}