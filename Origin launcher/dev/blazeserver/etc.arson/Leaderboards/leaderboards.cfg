stats.leaderboardGroups = [ 
  // this group defines the stats that will be displayed in the Clan leaderboard
  {
    group = "ClanLB",            // Name to distinguish this group from others
    category = "ClanStats",      // The stats.cfg category name this group is associated with
    
    // Any stat defined in the matching category may be in here, the statName chosen as the ranked column
    // (in the leaderboard hierarchy definition) must be defined here.  All other stats are optional
    stats = [
       { name = "wins",   shortDesc = "SDB_WINS",     longDesc = "SDB_WINS_LONG",     format = "%d", kind = "~pct", metadata = "stat string metadata 1" },
       { name = "losses", shortDesc = "SDB_LOSSES",   longDesc = "SDB_LOSSES_LONG",   format = "%d", kind = "~tim", metadata = "stat string metadata 2" },
       { name = "points", shortDesc = "SDB_LVL_TIME", longDesc = "SDB_LVL_TIME_LONG", format = "%d", kind = "~raw", metadata = "stat string metadata 3" }
    ]
  },

  // this group defines the stats that will be displayed in the weapon leaderboard
  {
    group = "WeaponsLB",      
    category = "WeaponStats",
    stats = [
        { name = "shotsFired",    shortDesc = "SDB_SHOTS", longDesc = "SDB_SHOTS_LONG", format = "%d" },
        { name = "hits",          shortDesc = "SDB_HITS",  longDesc = "SDB_HITS_LONG",  format = "%d" },
        { name = "shotsHitRatio", shortDesc = "SDB_SHR",   longDesc = "SDB_SHR_LONG",   format = "%f" }
    ]
  },


  // This leaderboard is in the MAP folder, contains stats around Time on a level
  {
    group = "level_map_time",
    category = "MapStats",
    stats = [
        { name = "shortestCompleteTime", shortDesc = "SDB_LVL_TIME", longDesc = "Shortest time the player has finished the level", format = "%d" }
    ]
  },
  // This leaderboard is in the MAP folder, contains stats around Wins on a level
  {
    group = "level_map_wins",
    category = "MapStats",
    stats = [
        { name = "wins",   shortDesc = "SDB_LVL_WINS",   longDesc = "Total number of wins on this map by this player",   format = "%d" },
        { name = "losses", shortDesc = "SDB_LVL_LOSSES", longDesc = "Total number of losses on this map by this player", format = "%d" }
    ]
  },

  // This leaderboard is in the root, contains alltime stats around Wins
  {
    group = "alltime_wins",
    category = "Core",
    stats = [
        { name = "wins",   shortDesc = "SDB_WINS",       longDesc = "SDB_WINS_LONG",   format = "%d" },
        { name = "losses", shortDesc = "SDB_LVL_LOSSES", longDesc = "SDB_LOSSES_LONG", format = "%d" }
    ]
  },

 
  // this group defines the stats that will be displayed in the Clubs leaderboard
  {
    group = "ClubLB",
    category = "ClubStats",
    stats = [
      { name = "points", shortDesc = "P", longDesc = "Points", format = "%d", kind = "~sep" },
      { name = "wins",   shortDesc = "W", longDesc = "Wins",   format = "%d", kind = "~sep" },
      { name = "losses", shortDesc = "L", longDesc = "Losses", format = "%d", kind = "~sep" },
      { name = "ties",   shortDesc = "T", longDesc = "Ties",   format = "%d", kind = "~sep" }
    ]
  },
  // this group defines the stats that will be displayed in the Clubs Regional leaderboard
  {
    group = "ClubRegionalLB",
    category = "ClubRegionalStats",
    stats = [
      { name = "points", shortDesc = "P", longDesc = "Points", format = "%d", kind = "~sep" },
      { name = "wins",   shortDesc = "W", longDesc = "Wins",   format = "%d", kind = "~sep" },
      { name = "losses", shortDesc = "L", longDesc = "Losses", format = "%d", kind = "~sep" },
      { name = "ties",   shortDesc = "T", longDesc = "Ties",   format = "%d", kind = "~sep" }
    ]
  },
  // this group defines the stats that will be displayed in the Clubs Seasonal leaderboard
  {
    group = "ClubSeasonalLB",
    category = "ClubSeasonalStats",
    stats = [
      { name = "points", shortDesc = "P", longDesc = "Points", format = "%d", kind = "~sep" },
      { name = "wins",   shortDesc = "W", longDesc = "Wins",   format = "%d", kind = "~sep" },
      { name = "losses", shortDesc = "L", longDesc = "Losses", format = "%d", kind = "~sep" },
      { name = "ties",   shortDesc = "T", longDesc = "Ties",   format = "%d", kind = "~sep" }
    ]
  },
  // this group defines the stats that will be displayed in the Club Memebers leaderboard
  {
    group = "ClubMemberLB",
    category = "ClubMemberStats",
    stats = [
      { name = "points", shortDesc = "P", longDesc = "Points", format = "%d", kind = "~sep" }
    ]
  },
  // this group is used for rivals feature to assign a club rival and is tipicaly not shown to user
  {
    group = "RivalsClubLB",
    category = "ClubStats",
    stats = [
      { name = "rivalPoints", shortDesc = "P", longDesc = "Points", format = "%d", kind = "~sep" }
    ]
  },
  // this group defines the stats that will be displayed in the Club - Rivalry leaderboard
  {
    group = "RivalsClubPublicLB",
    category = "RivalsClubStats",
    stats = [
      { name = "points", shortDesc = "P", longDesc = "Points", format = "%d", kind = "~sep" },
      { name = "wins",   shortDesc = "W", longDesc = "Wins",   format = "%d", kind = "~sep" },
      { name = "losses", shortDesc = "L", longDesc = "Losses", format = "%d", kind = "~sep" },
      { name = "ties",   shortDesc = "T", longDesc = "Ties",   format = "%d", kind = "~sep" }
    ]
  },
  // this group defines the stats that will be displayed in the Club Memebers - Rivalry leaderboard
  {
    group = "RivalsClubMemberPuplicLB",
    category = "RivalsClubMemberStats",
    stats = [
      { name = "points", shortDesc = "P", longDesc = "Points", format = "%d", kind = "~sep" }
    ]
  },
  // this group defines the stats that will be displayed in a league's member leaderboard
  {
    group = "LeagueMemberLB",
    category = "LeagueMemberStats",
    stats = [
      { name = "wins",   shortDesc = "W",  longDesc = "Wins",          format = "%d" },
      { name = "losses", shortDesc = "L",  longDesc = "Losses",        format = "%d" },
      { name = "ties",   shortDesc = "T",  longDesc = "Ties",          format = "%d" },
      { name = "points", shortDesc = "P",  longDesc = "Points",        format = "%d" },
      { name = "gf",     shortDesc = "GF", longDesc = "Goals For",     format = "%d" },
      { name = "ga",     shortDesc = "GA", longDesc = "Goals Against", format = "%d" }
    ]
  },
  // This group defines the stats for the IntegratedSample leaderboard
  {
    group = "ISLeaderboardGroup",   // "IntegratedSampleLeaderboardGroup" is too long it seems
    category = "IntegratedSampleStatsCategory",
    stats = [
        { name = "hitPct", shortDesc = "HPC", longDesc = "Hit Percentage", format = "%.1f" },
        { name = "wins",   shortDesc = "W",   longDesc = "Wins",           format = "%d"   },
        { name = "losses", shortDesc = "L",   longDesc = "Losses",         format = "%d"   },
        { name = "winPct", shortDesc = "WPC", longDesc = "Win Percentage", format = "%.1f" }
    ]
  },
  {
    group = "Sample_OfflineLBGroup",
    category = "Sample_Offline",
    stats = [
        { name = "money",   shortDesc = "mn",   longDesc = "money",  format = "%d" },
        { name = "kills",   shortDesc = "kls",  longDesc = "kills",  format = "%d" },
        { name = "deaths",  shortDesc = "dets", longDesc = "deaths", format = "%d" }
    ]
  },
  
 // This group define sample leaderboards using stats from multiple categories
  // ... with both primary and secondary category having 2 keyscopes
  {
    group = "MultiCatLBGroup1",
    category = "CatKS1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        // secondary stat 
        { name = "privatepasswd",  category = "CatKS2", periodType = 0x1, shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },

  // This group define sample leaderboards using stats from multiple categories
  // ... with primary category having at most 2 keyscope and secondary category has 1 keyscope
  {
    group = "MultiCatLBGroup2",
    category = "CatKS1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        // secondary  stat 
        { name = "passwd",  category = "CatSS1", periodType = 0x1, shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },

  // This group define sample leaderboards using stats from multiple categories
  // ... with primary category having at most 1 keyscope and secondary category has no scope
  {
    group = "MultiCatLBGroup3",
    category = "CatSS1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        { name = "passwd", shortDesc = "p", longDesc = "p", format = "%s"}, 
        // secondary stat
        { name = "kills",  category = "CatNS1", periodType = 0x1, shortDesc = "k", longDesc = "kills", format = "%d" }
    ]
  },

  // This group define sample leaderboards using stats from multiple categories
  // ... with primary category having at most 1 keyscope and secondary category has no scope
  {
    group = "MultiCatLBGroup4",
    category = "CatSS1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        // secondary stat
        { name = "passwd",  category = "CatNS1", periodType = 0x2, shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },

  // This group define sample leaderboards using stats from multiple categories
  // ... with primary category having no scope
   {
    group = "MultiCatLBGroup5",
    category = "CatNS1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        // secondary stat
        { name = "privatepasswd",  category = "CatNS2", periodType = 0x1, shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },

  // This group define sample leaderboards using stats from multiple categories
  // ... with primary uncached category 
 {
    group = "MultiCatLBGroup6",
    category = "Cat_nocaching1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        // secondary  stat 
        { name = "passwd",  category = "CatKS1", scope = { map = 1, level = 1 }, periodType = 0x1, shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },

 // This group define sample leaderboards using stats with no scope
 {
    group = "NS1LBGroup",
    category = "CatNS1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        { name = "passwd",  shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },

 // This group define sample leaderboards using stats with no scope (expanded)
 {
    group = "NS2LBGroup",
    category = "CatNS2",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        { name = "kills",   shortDesc = "kls",  longDesc = "kills",  format = "%d" },
        { name = "deaths",  shortDesc = "dets", longDesc = "deaths", format = "%d" }        
    ]
  },
  
 // This group define sample uncached leaderboards using stats with two keyscope
 {
    group = "LBGroup_NoCaching1",
    category = "Cat_nocaching1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        { name = "passwd",  shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },

 // This group define sample uncached leaderboards using stats with no scope
 {
    group = "LBGroup_NoCaching2",
    category = "Cat_nocaching2",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        { name = "passwd",  shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },

  // This group define sample leaderboards using stats with two keyscope
  {
    group = "KS1LBGroup",
    category = "CatKS1",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        { name = "passwd",  shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },
   {
    group = "KS2LBGroup",
    category = "CatKS2",
    stats = [
        { name = "money",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "killDeathRatio", shortDesc = "L", longDesc = "L", format = "%f" },
        { name = "privatepasswd",  shortDesc = "PW", longDesc = "PW", format = "%s" }
    ]
  },
 
   // These groups define sample leaderboards using stats from multiple categories
  // ... with primary category having at most 1 keyscope
  {
    group = "MultiCatLBGroupTest1",
    category = "MapStats",
    stats = [
        { name = "wins",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "losses", shortDesc = "L", longDesc = "L", format = "%d" },
        // secondary 'money' stat added from Core, no keyscopes
        { name = "money",  category = "Core", periodType = 0x1, shortDesc = "M", longDesc = "M", format = "%d" }
    ]
  },
  {
    group = "MultiCatLBGroupTest2",
    category = "MapStats",
    stats = [
        { name = "wins",   shortDesc = "W", longDesc = "W", format = "%d" },
        { name = "losses", shortDesc = "L", longDesc = "L", format = "%d" },
        // secondary 'money' stat added from Sample, different keyscope
        { name = "money",  category = "Sample", periodType = 0x1, scope = {map = "total"}, shortDesc = "M", longDesc = "M", format = "%d" }
    ]
  },
  {
    group = "catInt64LBGroup",
    category = "catInt64",
    stats = [
            { name = "testInt64", shortDesc = "I", longDesc = "I", format = "%d"},
            { name = "testDerivedInt64", shortDesc = "D", longDesc = "D", format = "%d"}
        ]
  }

  
]
 
stats.leaderboardHierarchy = [
  //
  // First up is the clans leaderboard, this will drive the main Top Clans screen.
  //
  { name = "ClanLB",          // Hardcoded name that client will use, should not be changed
    desc = "Clan stats",      // A localizable description for our users
    group = "ClanLB",         // Identifies which leaderboardGroup (defined above) goes with this board
    periodType = 0x1,         // Defines the length of time before this leaderboard refreshes
    statName = "points",        // The stat column being ranked upon
    metadata = "Leaderboard string metadata for ClanLB" // optional, defaulted to empty string
    size = 100                // The maximum number of entites that will be ranked  
  },

  { name = "UserAllTime",
    desc = "User stats",
    group = "alltime_wins",
    periodType = 0x1,
    statName = "wins",
    metadata = "Leaderboard string metadata for UserAllTime",
    size = 1000  
  },
  
  //  This Leaderboard will display leaderboard for weapon = uzi and level must be specified in the request
  //  The stat category for this leaderboard has scope settings, so the leaderboard
  //  needs to specify scope value for each scope name in the stat category.
  //  The value may be "valid_scope_value", "total" or "?". 
  //  "valid_scope_value" is the value defined in the stats.cfg in the "keyscopes" section
  //  "*" is not supported for leaderboards.
  //  "?" means that scope value must be specified in the request
  //
  { name = "WeaponsLB",
    desc = "League weapon stats", 
    group = "WeaponsLB", 
    scope = { weapon = 2, level = "?" },
    periodType = 0x1, 
    statName = "shotsHitRatio", 
    size = 100
  }, 

  // This is a folder called MAP within the root of our hierarchy
  { name = "Map", 
    desc = "Map stats", 
    metadata = "Folder string metadata",
    next = [
       // This is a folder called TIME within MAP
       { name = "Time", 
         desc = "Time stats", 
         next = [

          // These are leaderboards within this folder. They define LBs based on stats related to time on a specific level.
          // They are setup for different periods and have different capacities.
          { name = "allTime_total_map_time", 
            desc = "All time map time", 
            group = "level_map_time", 
            scope = {level = "total"},
            periodType = 0x1, 
            statName = "shortestCompleteTime", 
            size = 3000, 
            metadata = "sample_metadata"
          },
          { name = "Monthly_jungle_map_time", 
            desc = "Monthly map time",  
            group = "level_map_time", 
            scope = {level = 1},
            periodType = 0x2, 
            statName = "shortestCompleteTime", 
            size = 2000, 
            metadata = "another_metadata" 
          },
          { name = "Weekly_jungle_map_time",  
            desc = "Weekly map time",   
            group = "level_map_time", 
            scope = {level = 1},
            periodType = 0x4, 
            statName = "shortestCompleteTime", 
            size = 1000, 
            metadata = "once_again_metadata"
          }
         ]
       },

     // This is a folder called WINS within MAP
     { name = "Wins", desc = "Win stats", next = [

       // These are leaderboards within this folder. They define LBs based on stats related to wins on a jungle level.
       { name = "allTime_jungle_map_wins", 
         desc = "All time map wins", 
         group = "level_map_wins", 
         scope = {level = 1},
         periodType = 0x1, 
         statName = "wins", 
         
         size = 3000, 
         metadata = "sample_metadata"
       },
    { name = "allTime_total_map_wins", 
         desc = "All time map wins", 
         group = "level_map_wins", 
         scope = {level = "total"},
         periodType = 0x1, 
         statName = "wins", 
         
         size = 3000, 
         metadata = "sample_metadata"
       },
       { name = "Monthly_level_map_wins",
         desc = "Monthly map wins", 
         group = "level_map_wins", 
         scope = {level = 1},
         periodType = 0x2,
         statName = "wins", 
         size = 2000,
         metadata = "sample_metadata"
       },
       { name = "Weekly_level_map_wins",
         desc = "Weekly map wins", 
         group = "level_map_wins", 
         scope = {level = 1},
         periodType = 0x4, 
         statName = "wins", 
         size = 1000, 
         metadata = "sample_metadata"
       }
   ]}

 ]},
 // end Map

  {
    name = "ClubLB",
    desc = "Club stats"
    group = "ClubLB",
    periodType = 0x1,
    statName = "points",
    size = 25000
  },
  {
    name = "ClubRegionalLB",
    desc = "Club Regional stats"
    group = "ClubRegionalLB",
    scope = { clubregion = "?" },
    periodType = 0x1,
    statName = "points",
    size = 25000
  },
  {
    name = "ClubSeasonalLB",
    desc = "Club Seasonal stats"
    scope = { seasonlevel = "?" },
    group = "ClubSeasonalLB",
    periodType = 0x8,
    statName = "points",
    size = 25000
  },
  {
    name = "ClubMemberLB",
    desc = "Club member stats",
    scope = { club = "?" },
    inmemory = false,
    group = "ClubMemberLB",
    periodType = 0x1,
    statName = "points",
    size = 25000
  },
  {
    name = "RivalsClubLB",
    desc = "Daily Rival Club stats",
    group = "RivalsClubLB",
    periodType = 0x8,
    statName = "rivalPoints",
    size = 25000
  },
  {
    name = "RivalsClubPublicLB",
    desc = "Club stats",
    group = "RivalsClubPublicLB",
    periodType = 0x8,
    statName = "points",
    size = 25000
  },
  {
    name = "RivalsClubMemberPuplicLB",
    desc = "Club member stats"
    scope = { club = "?" }
    inmemory = false,
    group = "RivalsClubMemberPuplicLB",
    periodType = 0x8,
    statName = "points",
    size = 25000
  },
  {
    name = "LeagueMemberLB",
    desc = "League member stats",
    scope = { league = "?" },
    inmemory = false,
    group = "LeagueMemberLB",
    periodType = 0x1,
    statName = "points",
    size = 100
  },
  {
    name = "IS_LB_allmodes",
    desc = "IntegratedSample leaderboard for all modes",
    group = "ISLeaderboardGroup",
    scope  = {ISmode = "total", ISmap = "total"},
    periodType = 0x1,
    statName = "wins",
    metadata = "Leaderboard string metadata for IntegratedSampleLeaderboardGroup",
    size = 1000  
  },
  {
    name = "IS_LB_deathmatch",
    desc = "IntegratedSample leaderboard for deathmatch",
    group = "ISLeaderboardGroup",
    scope  = {ISmode = 1, ISmap = "total"},
    periodType = 0x1,
    statName = "wins",
    metadata = "Leaderboard string metadata for IntegratedSampleLeaderboardGroup",
    size = 1000  
  },
  {
    name = "IS_LB_team_deathmatch",
    desc = "IntegratedSample leaderboard for team_deathmatch",
    group = "ISLeaderboardGroup",
    scope  = {ISmode = 2, ISmap = "total"},
    periodType = 0x1,
    statName = "wins",
    metadata = "Leaderboard string metadata for IntegratedSampleLeaderboardGroup",
    size = 1000  
  }
  {
    name = "MultiCatLBTest1",
    desc = "MultiCategory Stats leaderboard 1",
    group = "MultiCatLBGroup1",
    periodType = 0x1,
    cutoffStatValue = 1,
    scope = { map = 1, level = 1 },
    statName = "money",
    metadata = "Leaderboard string metadata for MultiCatLBGroup1",
    size = 1000
  }
  {
    name = "MultiCatLBTest2",
    desc = "MultiCategory Stats leaderboard 2",
    group = "MultiCatLBGroup2",
    periodType = 0x1,
    scope = { map = 1, level = 1 },
    statName = "killDeathRatio",
    metadata = "Leaderboard string metadata for MultiCatLBGroup2",
    size = 1000
  }
  {
    name = "MultiCatLBTest4",
    desc = "MultiCategory Stats leaderboard 4",
    group = "MultiCatLBGroup4",
    periodType = 0x1,
    scope = { map = "total"},
    statName = "money",
    metadata = "Leaderboard string metadata for MultiCatLBGroup4",
    size = 1000
  }
 {
    name = "MultiCatLBTest5",
    desc = "MultiCategory Stats leaderboard 5",
    group = "MultiCatLBGroup5",
    periodType = 0x1,
    statName = "killDeathRatio",
    metadata = "Leaderboard string metadata for MultiCatLBGroup5",
    size = 1000
  }
 {
    name = "MultiCatLBTest6",
    desc = "MultiCategory leaderboard 6",
    group = "MultiCatLBGroup3",
    scope = { map = 1},
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for MultiCatLBGroup6",
    size = 1000
  }
 {
    name = "NS1LB_Int",
    desc = "no scope leaderboard with int type as ranked",
    group = "NS1LBGroup",
    periodType = 0x2,
    statName = "money",
    metadata = "Leaderboard string metadata for NS1LBGroup",
    size = 1000
  }
 {
    name = "NS1LB_Float",
    desc = "no scope leaderboard with float type as ranked",
    group = "NS1LBGroup",
    periodType = 0x1,
    statName = "killDeathRatio",
    metadata = "Leaderboard string metadata for NS1LBGroup",
    size = 1000
  }
 {
    name = "NS2LB_Int",
    desc = "no scope leaderboard with int type as ranked + secondary rankings",
    group = "NS2LBGroup",
    periodType = 0x2,
    multiStatRanking = [ { statName = "money" }, { statName = "kills" }, { statName = "deaths", ascending = true } ],
    metadata = "Leaderboard string metadata for NS2LBGroup",
    size = 1000
  }  
  {
    name = "KS1LB_Float",
    desc = "Keyscope leaderboard with float type as ranked",
    group = "KS1LBGroup",
    scope = { map = 1, level = 1 },
    periodType = 0x1,
    statName = "killDeathRatio",
    metadata = "Leaderboard string metadata for KS1LBGroup",
    size = 1000
  }
 {
    name = "KS1LB_Int",
    desc = "Keyscope leaderboard with int type as ranked",
    group = "KS1LBGroup",
    scope = { map = 1, level = "total" },
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for KS1LBGroup",
    size = 1000
  }
  {
    name = "KS2LB_Int",
    desc = "Keyscope leaderboard with int type as ranked",
    group = "KS2LBGroup",
    scope = { map = 1, level = "total" },
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for KS2LBGroup",
    size = 1000
  }
 {
    name = "KS1LB_qmark",
    desc = "Keyscope leaderboard with user defined keyscope",
    group = "KS1LBGroup",
    scope = { map = "?", level = "?" },
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for KS2LBGroup",
    size = 1000
 }
{
    name = "KS1LB_Cache",
    desc = "Keyscope leaderboard with int type as ranked",
    group = "KS1LBGroup",
    scope = { map = 1, level = 2 },
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for KS1LBGroup",
    size = 1000
  }

 {
    name = "KS1LB_CutOff",
    desc = "Keyscope leaderboard with int type as ranked",
    group = "KS1LBGroup",
    cutoffStatValue = 1,
    scope = { map = 1, level = "total" },
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for KS1LBGroup",
    size = 1000
  }
 {
    name = "LB_NoCaching1",
    desc = "No caching leaderboard",
    group = "LBGroup_NoCaching1",
    inmemory = false,
    periodType = 0x1,
    statName = "killDeathRatio",
    metadata = "Leaderboard string metadata for LBGroup_NoCaching1",
    size = 1000
  }
 {
    name = "LB_NoCaching2",
    desc = "No caching leaderboard",
    group = "LBGroup_NoCaching2",
    inmemory = false,
    scope = { map = 1, level = 1 },
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for LBGroup_NoCaching2",
    size = 1000
  }
{
    name = "LB_MulCaching",
    desc = "MultiCategory Stats leaderboard with multi caching",
    group = "MultiCatLBGroup6",
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for MultiCatLBGroup6",
    size = 1000
  }
{
    name = "Sample_OfflineLB",
    desc = "Sample_OfflineLB",
    group = "Sample_OfflineLBGroup",
    scope = { map = 1},
    periodType = 0x1,
    statName = "money",
    metadata = "Leaderboard string metadata for Sample_OfflineLBGroup",
    size = 1000
  }
  {
    name = "catInt64LB",
    desc = "catInt64LB",
    group = "catInt64LBGroup",
    periodType = 0x1,
    statName = "testInt64",
    metadata = "Leaderboard string metadata for catInt64LB",
    size = 1000
  }


 
 

]