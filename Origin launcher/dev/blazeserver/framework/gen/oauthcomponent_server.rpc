/*****************************************************************************************


    (c) Electronic Arts. All Rights Reserved.
*****************************************************************************************/

[headername="framework/tdf/userdefines.h"]
#include "framework/gen/userdefines.tdf"

[headername="framework/tdf/oauth.h"]
#include "framework/gen/oauth.tdf"

[
  client_include = false, 
  headername="framework/tdf/oauth_server.h" 
]
#include "framework/gen/oauth_server.tdf" 

namespace Blaze
{
namespace OAuth
{
[ id = framework/11,
  configurationType = OAuthConfig
]
component OAuth
{
    errors
    {
        [ description = "The token provided was not a valid Identity 2.0 access token", http_status_code=400 ]
        OAUTH_ERR_INVALID_TOKEN             = 1;
        [ description = "Generic error if specific error could not be obtained for a failed request."]
        OAUTH_ERR_INVALID_REQUEST           = 2;
        [ description = "The token provided does not have sufficient scopes for the operation."]
        OAUTH_ERR_INSUFFICIENT_SCOPES       = 3;
        [ description = "The service being accessed by the token has no scopes configured for it's access."]
        OAUTH_ERR_NO_SCOPES_CONFIGURED      = 4;
        [ description = "The service requires trusted client but the client isn't."]
        OAUTH_ERR_NOT_TRUSTED_CLIENT        = 5;
        [ description = "The supplied sandbox id is not supported on this server." ]
        OAUTH_ERR_INVALID_SANDBOX_ID        = 6;
        [ description = "The country does not exist or is invalid" ]
        OAUTH_ERR_INVALID_COUNTRY       = 10;
        [ description = "The user does not exist or is invalid" ]
        OAUTH_ERR_INVALID_USER          = 11;
        [ description = "The supplied password was invalid" ]
        OAUTH_ERR_INVALID_PASSWORD      = 12;
        [ description = "The supplied auth token was expired" ]
        OAUTH_ERR_EXPIRED_TOKEN         = 14;
        [ description = "Cannot create user/persona because email/displayname already exists" ]
        OAUTH_ERR_EXISTS                = 15;
        [ description = "User is too young, cannot create underage account" ]
        OAUTH_ERR_TOO_YOUNG             = 16;
        [ description = "The account does not exist" ]
        OAUTH_ERR_NO_ACCOUNT            = 17;
        [ description = "The requested persona name was not found." ]
        OAUTH_ERR_PERSONA_NOT_FOUND     = 18;
        [ description = "The requested persona is not active." ]
        OAUTH_ERR_PERSONA_INACTIVE      = 19;
        [ description = "Invalid parental email." ]
        OAUTH_ERR_INVALID_PMAIL         = 20;
        [ description = "One of the input fields was invalid" ]
        OAUTH_ERR_INVALID_FIELD         = 21;
        [ description = "Invalid email" ]
        OAUTH_ERR_INVALID_EMAIL         = 22;
        [ description = "Invalid account status" ]
        OAUTH_ERR_INVALID_STATUS        = 23;
        [ description = "The requested persona is banned." ]
        OAUTH_ERR_PERSONA_BANNED        = 32;
        [ description = "The persona does not exist or is invalid" ]
        OAUTH_ERR_INVALID_PERSONA       = 33;
        [ description = "The command required the current password of the Nucleus account, the password provided is incorrect." ]
        OAUTH_ERR_CURRENT_PASSWORD_REQUIRED = 34;

        [ description = "Account deactivated" ]
        OAUTH_ERR_DEACTIVATED           = 41;
        [ description = "Account banned from online play" ]
        OAUTH_ERR_BANNED                = 43;
        [ description = "Account has been disabled" ]
        OAUTH_ERR_DISABLED              = 44;

        [ description = "There was a restriction violation on a product" ]
        OAUTH_ERR_RESTRICTION_VIOLATION                  = 46;
        [ description = "More than one wallet was found." ]
        OAUTH_ERR_MULTIPLE_WALLET_ACCOUNTS_FOUND         = 47;
        [ description = "The product is not configured correctly in the catalog" ]
        OAUTH_ERR_INVALID_PRODUCT_CONFIGURATION          = 48;
        [ description = "The product in the catalog does not have an entitlement tag defined" ]
        OAUTH_ERR_ENTITLEMENT_TAG_MISSING                = 49;
        [ description = "Received an invalid response from the upstream server" ]
        OAUTH_ERR_BAD_GATEWAY                            = 50;


        [ description = "Key code is already used" ]
        OAUTH_ERR_CODE_ALREADY_USED       = 51;
        [ description = "Invalid key" ]
        OAUTH_ERR_INVALID_CODE           = 52;
        [ description = "Code Already Disabled" ]
        OAUTH_ERR_CODE_ALREADY_DISABLED = 53;
        [ description = "No Associated product for this key" ]
        OAUTH_ERR_NO_ASSOCIATED_PRODUCT = 54;
        [ description = "Invalid Mapping" ]
        OAUTH_ERR_INVALID_MAPPING_ERROR = 55;
        [ description = "Group name not found" ]
        OAUTH_ERR_NO_SUCH_GROUP_NAME    = 56;
        [ description = "Missing personaId" ]
        OAUTH_ERR_MISSING_PERSONAID     = 57;
        [ description = "User not match with persona" ]
        OAUTH_ERR_USER_DOES_NOT_MATCH_PERSONA = 58;
        [ description = "Group name failed whilelist test" ]
        OAUTH_ERR_WHITELIST             = 59;
        [ description = "Failed linking persona and entitlement" ]
        OAUTH_ERR_LINK_PERSONA          = 60;
        [ description = "No such group" ]
        OAUTH_ERR_NO_SUCH_GROUP         = 61;
        [ description = "No active entitlement matching the criteria" ]
        OAUTH_ERR_NO_SUCH_ENTITLEMENT   = 63;
        [ description = "Group name not matching associated code" ]
        OAUTH_ERR_GROUP_NAME_DOES_NOT_MATCH = 64;
        [ description = "The use count for the user's entitlement is 0" ]
        OAUTH_ERR_USECOUNT_ZERO        = 66;
        [ description = "The entitlement tag is required but it's empty string in requirement" ]
        OAUTH_ERR_ENTITLEMETNTAG_EMPTY = 67;
        [ description = "Groupname is required" ]
        OAUTH_ERR_GROUPNAME_REQUIRED    = 70;
        [description="A groupname in group list is empty string"]
        OAUTH_ERR_GROUPNAME_INVALID     = 71;
        [description="Too many entitlements were found in Nucleus. Requestor should use pagination to fetch smaller result sets."]
        OAUTH_ERR_TOO_MANY_ENTITLEMENTS   = 72;
        [description="Page size in the request can't be 0"]
        OAUTH_ERR_PAGESIZE_ZERO           = 73;

        [description="Entitlement tag is required"]
        OAUTH_ERR_ENTITLEMENT_TAG_REQUIRED  = 74;
        [description="Page No in the request can't be 0"]
        OAUTH_ERR_PAGENO_ZERO             = 75;
        [description="You only can modify an entitlement status to DISABLED, DELETED or BANNED"]
        OAUTH_ERR_MODIFIED_STATUS_INVALID = 76;
        [description="You only can decrement the use count and can not increment it"]
        OAUTH_ERR_USECOUNT_INCREMENT      = 77;
        [description="You can't make the termination date LATER, than it is currently.  You can make it sooner"]
        OAUTH_ERR_TERMINATION_INVALID     = 78;
        [description="The entitlement doesn't exist"]
        OAUTH_ERR_UNKNOWN_ENTITLEMENT     = 79;
        [description="PSU cutoff for entitlement type is less than the current connected user count"]
        OAUTH_ERR_EXCEEDS_PSU_LIMIT  = 80;

        [description = "The opt-in name is required"]
        OAUTH_ERR_OPTIN_NAME_REQUIRED     = 81;
        [description = "The provided opt-in is invalid "]
        OAUTH_ERR_INVALID_OPTIN           = 82;
        [description = "German double opt in cannot be set to true if global opt in is not set to true as well"]
        OAUTH_ERR_OPTIN_MISMATCH          = 83;
        [description = "The user has not opted in for the given optInType"]
        OAUTH_ERR_NO_SUCH_OPTIN           = 84;

        [description = "The ID of the external authentication data is required"]
        OAUTH_ERR_AUTHID_REQUIRED         = 85;
        [description = "The ID for the persona external reference is required"]
        OAUTH_ERR_PERSONA_EXTREFID_REQUIRED   = 86;
        [description = "The requestor/game that is adding the external authentication is required"]
        OAUTH_ERR_SOURCE_REQUIRED         = 87;
        [description = "The application ID or other identifier associated with the external authentication token is required"]
        OAUTH_ERR_APPLICATION_REQUIRED    = 88;
        [description = "The token associated with the external authentication is required"]
        OAUTH_ERR_TOKEN_REQUIRED          = 89;
        [description = "The input parameter exceeds the max value (255) on the server"]
        OAUTH_ERR_PARAMETER_TOO_LENGTH    = 90;
        [description = "The persona external reference does not exist"]
        OAUTH_ERR_NO_SUCH_PERSONA_REFERENCE = 91;
        [description = "Invalid source provided. The source doesn't exist in the system"]
        OAUTH_ERR_INVALID_SOURCE            =93;
        [description = "The authentication data does not exist"]
        OAUTH_ERR_NO_SUCH_AUTH_DATA         =94;

        [ description = "User's status is inactive (disabled, banned, etc.)" ]
        OAUTH_ERR_USER_INACTIVE         = 101;
        [ description = "User isn't awaiting activation." ]
        OAUTH_ERR_UNEXPECTED_ACTIVATION = 102;
        [ description = "User's display name doesn't match gamer tag." ]
        OAUTH_ERR_NAME_MISMATCH         = 103;
        [ description = "The supplied namespace was invalid." ]
        OAUTH_ERR_INVALID_NAMESPACE     = 105;

        [ description = "The value contains invalid characters." ]
        OAUTH_ERR_FIELD_MIN_LOWER_CHARS        = 198;
        [ description = "The value is too short." ]
        OAUTH_ERR_FIELD_MIN_UPPER_CHARS        = 199;
        [ description = "The value is too long." ]
        OAUTH_ERR_FIELD_MIN_DIGITS             = 200;
        [ description = "The value contains invalid characters." ]
        OAUTH_ERR_FIELD_INVALID_CHARS          = 201;
        [ description = "The value is too short." ]
        OAUTH_ERR_FIELD_TOO_SHORT              = 202;
        [ description = "The value must begin with a letter." ]
        OAUTH_ERR_FIELD_MUST_BEGIN_WITH_LETTER = 204;
        [ description = "The value is missing." ]
        OAUTH_ERR_FIELD_MISSING                = 205;
        [ description = "The value is not valid for this field." ]
        OAUTH_ERR_FIELD_INVALID                = 206;
        [ description = "The value contains profanity or disallowed text." ]
        OAUTH_ERR_FIELD_NOT_ALLOWED            = 207;
        [ description = "The value must contain special characters." ]
        OAUTH_ERR_FIELD_NEEDS_SPECIAL_CHARS    = 208;
        [ description = "The value already exists." ]
        OAUTH_ERR_FIELD_ALREADY_EXISTS         = 209;
        [ description = "The user requires parental consent." ]
        OAUTH_ERR_FIELD_NEEDS_CONSENT          = 210;
        [ description = "The user is too young to create an account." ]
        OAUTH_ERR_FIELD_TOO_YOUNG              = 211;
        [ description = "The associated user is too young, cannot associate with the new created account." ]
        OAUTH_ERR_ASSOCIATION_TOO_YOUNG        = 212;

        [ description = "The maximum number of personas in this namespace has been reached for this account. Cannot create additional personas." ]
        OAUTH_ERR_TOO_MANY_PERSONA_FOR_NAMESPACE = 300;

        [ description = "The user requires parental mail." ]
        OAUTH_ERR_NEEDS_PMAIL          = 303;

        [ description = "A parent session is required to create a guest MLU session but was not found." ]
        OAUTH_ERR_NO_PARENT_SESSION = 307;

        [ description = "No XBL token is available for the user. This is likely due to the user being externally available in MS, but not 'known' to Nucleus." ]
        OAUTH_ERR_NO_XBLTOKEN = 308;

        [ description = "No PSN token is available for the user. This is likely due to the user being externally available in PSN, but not 'known' to Nucleus." ]
        OAUTH_ERR_NO_PSNTOKEN = 309;

        [ description = "Attempting to grant an entitlement outside the trial period. For period trials, this means the current time is outside the start/end time. For managed lifecycle, this means we attempt to grant an entitlement with a status that doesn't match based on the start/end time (PENDING, ACTIVE, DISABLED for before, during, and after, respectively.)" ]
        OAUTH_ERR_TRIAL_PERIOD_CLOSED = 310;
        
        [ description = "The first party token expired for the user. The user may need to relogin to Nucleus with a new token." ]
        OAUTH_ERR_EXPIRED_1PTOKEN = 311;
    }

    slave
    {
        methods
        {

            [
                id = 12,
                internal = true,
                client_export = false,
                description = "Get an access token for a specific user",
                details = "Get an access token for a specific user",
                errors = {
                    OAUTH_ERR_INVALID_USER
                },
                requires_authentication = false
            ]
            GetUserAccessTokenResponse getUserAccessToken(GetUserAccessTokenRequest);

            [
                id = 13,
                internal = true,
                client_export = false,
                description = "Get a XBL token for a specific user",
                details = "Get a XBL token for a specific user",
                errors = {
                    OAUTH_ERR_INVALID_USER,
                    OAUTH_ERR_NO_XBLTOKEN,
                    OAUTH_ERR_INVALID_SANDBOX_ID,
                    OAUTH_ERR_EXPIRED_1PTOKEN
                },
                requires_authentication = false,
                allowGuestCall = true
            ]
            GetUserXblTokenResponse getUserXblToken(GetUserXblTokenRequest);

            [
                id = 14,
                internal = true,
                client_export = false,
                description = "Get a PSN token for a specific user",
                details = "Get a PSN token for a specific user",
                errors = {
                    OAUTH_ERR_INVALID_REQUEST,
                    OAUTH_ERR_INVALID_USER,
                    OAUTH_ERR_NO_PSNTOKEN,
                    OAUTH_ERR_EXPIRED_1PTOKEN
                },
                requires_authentication = false,
                allowGuestCall = true
            ]
            GetUserPsnTokenResponse getUserPsnToken(GetUserPsnTokenRequest);

            [
                id = 15,
                internal = true,
                client_export = false,
                description = "Get an access token for the server.",
                details = "Get an access token for the server.",
                errors = {
                    OAUTH_ERR_INVALID_REQUEST
                },
                requires_authentication = false
            ]
            GetServerAccessTokenResponse getServerAccessToken(GetServerAccessTokenRequest);

           [
               id = 16,
               internal = true,
               client_export = false,
               description = "Get IdentityContext based on the IdentityContextRequest.",
               errors = {
                   OAUTH_ERR_INVALID_TOKEN,
                   OAUTH_ERR_INSUFFICIENT_SCOPES,
                   OAUTH_ERR_NO_SCOPES_CONFIGURED,
                   OAUTH_ERR_NOT_TRUSTED_CLIENT
               },
               requires_authentication = false
           ]
           IdentityContext getIdentityContext(IdentityContextRequest);
            
        } // methods
    } // slave

}
}
}
