// ====================================================
// User Manager settings
// ====================================================

usersessions = {
    checkConnectivitySettings = {
        timeToWait = "5s"
        interval = "0s"
    }

#if PLATFORM == "common"
    dbNamesByPlatform = {
        common = "main"
        pc = "main_pc"
        xone = "main_xone"
        ps4 = "main_ps4"
        nx = "main_nx"
        ios = "main_ios"
        android = "main_android"
        ps5 = "main_ps5"
        xbsx = "main_xbsx"
        steam = "main_steam"
        stadia = "main_stadia"
    }
#else
    dbNamesByPlatform = {
        "#PLATFORM#" = "main"
    }
#endif
    
    // Timeout for non-persistent user sessions
    sessionCleanupTimeout = "1800s"

    // Defines client-supplied UED values (whitelist) that can be referenced by Blaze components such as Matchmaker, and GameManager.
    // The name cannot contain underscores '_', and will be used as is (no "stats_*" prefix appended to the start).
    // Values for default, min, and max are all int64_t.
    // NOTE: The default UED values will always be set when the user first logs in.
    //   The max number of (non-whitelisted) client UED values that can be added is controlled by the cfg value maxClientUEDAttributes. (default = 4)
    userSessionClientUEDConfigList = [ 
        { id = 1, name = "teamSkill", default = 5000, min = 0, max = 10000 },
        { id = 2, name = "futSkillRating", default = 0, min = 0, max = 3000 },
        { id = 3, name = "fifaSkillLevel", default = 0, min = 0, max = 100 }
    ]

     // Restrictions on which platforms can interact.  (Affects Game joins, User lookups, etc.)
    // If no restrictions are given for a platform, then it's assumed to be open to all non-restricted platforms. 
    // Restrictions must be bi-directional.  Fully restricted platforms either list themselves, or use an empty list [].
    
#if PLATFORM == "common" 
    platformRestrictions = {
        "ps4"  = ["ps4","xone","pc"]      // To enable unrestriced crossplay, just remove this whole restrictions block.
        "xone" = ["ps4","xone","pc"]
        "pc"   = ["ps4","xone","pc"]
        "ps5"  = ["ps5"]
        "xbsx" = ["xbsx"]
        "steam" = ["steam"]
        // Additional platforms listed here:
    }   
#else
    platformRestrictions = {
       "#PLATFORM#" = ["#PLATFORM#"]
    }
#endif
    
    // Controls if single login check is done per account or per persona.
    // true means that the check is done PER nucleus account; true is the recommended setting for PC titles.
    // OPS - singleLoginCheckPerAccount MUST BE SET TO FALSE FOR CONSOLE TITLES. 
    // IF IT IS SET TO TRUE, CONSOLE USERS ASSOCIATED WITH THE SAME NUCLEUS ACCOUNT WILL NOT BE ABLE TO PLAY ONLINE SIMULTANEOUSLY.
    // ALSO, PERSONAS ACROSS PLATFORMS ASSOCIATED WITH THE SAME NUCLEUS ACCOUNT WILL BE BLOCKED FROM SIMULTANEOUS ONLINE PLAY.
    singleLoginCheckPerAccount = false


    //Size of the user cache - only this many offline users will be kept in memory at time
    userCacheMax = 32768

    // Set the amount of time the system will wait before broadcasting a change to a players UserExtendedData.
    // This allows multiple changes in a players UED to be coalesced into one update rather than separate notifications
    // for each individual change.
    UEDUpdateRateTimeDelay = "750ms"

    // Enable the usersessionextended data to 
    // have ip based location info such as latitude and longitude
    // we can consider doing this in override file (false is by default)
    useGeoipData = "#UED_GEO_IP#" 
    
    PINSettings = {

        vaultPath = { path = "#VAULT_PATH_PIN#" }

        applicationId = "#PIN_APPLICATION_ID#"
        eaGameId = "#PIN_EA_GAME_ID#"

        environment = "#ENV#"

        titlePINInfo = {
            "pc"      = { titleId = "#PC_PROJECTID#", titleIdType = "projectid" }
            "ps4"     = { titleId = "#PS4_PROJECTID#", titleIdType = "projectid" }
            "xone"    = { titleId = "#XONE_PROJECTID#", titleIdType = "projectid" }
            "nx"      = { titleId = "#NX_PROJECTID#", titleIdType = "projectid" }
            "ios"     = { titleId = "#IOS_PROJECTID#", titleIdType = "projectid" }
            "android" = { titleId = "#ANDROID_PROJECTID#", titleIdType = "projectid" }
            "ps5"     = { titleId = "#PS5_PROJECTID#", titleIdType = "projectid" }
            "xbsx"    = { titleId = "#XBSX_PROJECTID#", titleIdType = "projectid" }
            "steam"   = { titleId = "#STEAM_PROJECTID#", titleIdType = "projectid" }
            "stadia"  = { titleId = "#STADIA_PROJECTID#", titleIdType = "projectid" }
        }

        PINTaxonomyVersion = "#PIN_TAXONOMY_VERSION#"

        // customize releaseType based on the correct value for each product name,
        // ie: beta, demo, trial_ea_access, see PIN Taxonomy documentation for full list
        productNamesPINInfo = {

            #COMMON_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #PC_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #XONE_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #PS4_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #NX_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #IOS_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #ANDROID_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #PS5_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #XBSX_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #STEAM_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

            #STADIA_BLAZE_PRODUCT_NAME_DEFAULT# = {
                releaseType = "#PIN_RELEASE_TYPE_DEFAULT#"
            }

        }

        // Maximum number of requests per second that a single Blaze instance will send to the River PIN endpoint.
        maxRequestsPerSecond = 200

        enablePersistentStorage = true
    }

    #include "framework/authorization.cfg"
    #include "framework/qossettings.cfg"
}
