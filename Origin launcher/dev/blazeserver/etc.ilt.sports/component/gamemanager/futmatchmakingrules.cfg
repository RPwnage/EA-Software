        //
        // fut2Tournament rule
        // Matches tournament ids.
        // Edit the fit table for tournament similarities.
        //
        fut2TournyId = {
            weight = 100
            ruleType = "ARBITRARY_TYPE"
            attributeName = "fut2TournyId"
            votingMethod = "OWNER_WINS"

            matchingFitPercent = 1.0
            mismatchFitPercent = 0

            minFitThresholdLists = {
                matchExact = [0:"EXACT_MATCH_REQUIRED"]
                matchSimilar = [0:"EXACT_MATCH_REQUIRED", 16:0.0]
                matchAny = [0:0.0]
            }        
        }
        
        //
        // fut2TournamentRound rule
        // Matches tournament round.
        //
        fut2TournyRnd = {
            weight = 100
            attributeName = "fut2TournyRnd"
            votingMethod = "OWNER_WINS"
            possibleValues = ["1","2","3","4"]
            
            fitTable = [
                "1.0", "0.7", "0.4", "0.1",
                "0.7", "1.0", "0.7", "0.4",
                "0.4", "0.7", "1.0", "0.7",
                "0.1", "0.4", "0.7", "1.0"
            ]
            
            minFitThresholdLists = {
                matchExact = [0:"EXACT_MATCH_REQUIRED"]
                matchSimilar = [0:"EXACT_MATCH_REQUIRED", 4:0.7, 8:0.4, 12:0.1]
                matchAny = [0:0.0]
            }
        }
        
        //
        // fut2StarLevel rule
        // Matches players with same star level
        // The actual star rating is 1/2 the rating in the table.  This is to avoid float/string conversions
        // All actual star ratings are 0.5, 1.0, 1.5, ...
        //
        fut2StarLevel = {
            weight = 100
            attributeName = "fut2StarLevel"
            votingMethod = "OWNER_WINS"
            possibleValues = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
            
            fitTable = [
                "1.00", "0.90", "0.80", "0.70", "0.60", "0.50", "0.40", "0.30", "0.20", "0.10",
                "0.90", "1.00", "0.90", "0.80", "0.70", "0.60", "0.50", "0.40", "0.30", "0.20",
                "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", "0.60", "0.50", "0.40", "0.30",
                "0.70", "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", "0.60", "0.50", "0.40",
                "0.60", "0.70", "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", "0.60", "0.50",
                "0.50", "0.60", "0.70", "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", "0.60",
                "0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", 
                "0.30", "0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00", "0.90", "0.80",
                "0.20", "0.30", "0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00", "0.90",
                "0.10", "0.20", "0.30", "0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00"
            ]
            
            minFitThresholdLists = {
                matchExact = [0:"EXACT_MATCH_REQUIRED"]
                matchSimilar = [0:"EXACT_MATCH_REQUIRED", 5:0.80, 10:0.60, 15:0.40, 20:0.20, 25:0.0]
                matchAny = [0:0.0]
            }
        }
        
        // ------------------------------------------------
        // Below are the Tournament Entrance Criteria Rules
        // ------------------------------------------------
        // Rule for the first criteria (all the criteria data is munged into the rule value)
        futTournyCrit1 = {
            weight = 100
            ruleType = "ARBITRARY_TYPE"
            attributeName = "futTournyCrit1"
            votingMethod = "OWNER_WINS"

            matchingFitPercent = 1.0
            mismatchFitPercent = 0

            minFitThresholdLists = {
                OSDK_matchExact = [0:1.0]
                OSDK_matchAny = [0:0.0]
            }        
        }
        
        // Rule for the second criteria (all the criteria data is munged into the rule value)
        futTournyCrit2 = {
            weight = 100
            ruleType = "ARBITRARY_TYPE"
            attributeName = "futTournyCrit2"
            votingMethod = "OWNER_WINS"

            matchingFitPercent = 1.0
            mismatchFitPercent = 0

            minFitThresholdLists = {
                OSDK_matchExact = [0:1.0]
                OSDK_matchAny = [0:0.0]
            }        
        }
        
        futNewUser = {
            weight = 200 // this value is relative to futSkillRating.  With a perfect match in still rating, we still want to match against a new player first
            ruleType = "ARBITRARY_TYPE"
            attributeName = "futNewUser"
            votingMethod = "OWNER_WINS"
            
            matchingFitPercent = 1.0
            mismatchFitPercent = 0.0
            
            minFitThresholdLists = {
                matchSimilar = [0:1.0, 20:0.0]
            }           
        }
        