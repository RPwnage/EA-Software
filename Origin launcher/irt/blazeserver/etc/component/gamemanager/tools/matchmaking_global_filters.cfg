// USED BY BLAZE - DO NOT REMOVE OR EDIT THIS FILE

"createTemplateFilter" = {
    description = "basic filter on caller createTemplateName."
    gameProperty = "game.createTemplateName"
    requirement = {
        StringEqualityFilter = {
            operation = "EQUAL"
            value     = { propertyName = "caller.createTemplateName" }
        }
    }
}

"stateOpenToMatchmakingFilter" = {
    description = "basic filter on game state being joinable via matchmaking."
    gameProperty = "game.stateOpenToMatchmaking"
    requirement = {
        IntEqualityFilter = {
            operation = "EQUAL"
            value     = 1          // "true"
        }
    }
}

"gpvsFilter" = {
    description = "Game Protocol Version String Filter"
    gameProperty = "game.gameProtocolVersionString"
    requirement = {
        StringEqualityFilter = {
            value     = { propertyName = "caller.gameProtocolVersionString" }
            operation = { default = "EQUAL" }
        }
    }
}

"dsoFilter" = {
    description = "enforce dedicated server override"
    gameProperty = "game.id"

    requirement = {
        IntEqualityFilter = {
            value        = { propertyName = "caller.dedicatedServerOverrideGameId" }  
            operation    = { default = "EQUAL" }
        }
    }
}

// The value is calculated based on game quality factors
"qfHashFilter" = {
    description = "Hashing of game quality factors"
    isPackerSiloFilter = true                       // This rule will not apply to FG matchmaking. 
    gameProperty = "qualityFactorsHash"             // The name here is not used in property lookup, since this is a silo-only filter.      

    requirement = {
        IntEqualityFilter = {
            value        = { default = 0 }  
            operation    = { default = "EQUAL" }
        }
    }
}
