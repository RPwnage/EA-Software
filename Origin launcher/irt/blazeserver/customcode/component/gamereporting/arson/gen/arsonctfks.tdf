[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"


namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  ArsonCaptureTheFlag with Keyscopes style reports
//
//      Submitted report TDFs. 
namespace ArsonCTF_KS_NonDerived
{

[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Generic PlayerReport TDF that takes a variable TDF representing player data.",
    details = "This contains player and any other relevent data submitted by clients to game reporting."
]
class PlayerReport
{
    [tag="kill", description="player kills"]
        uint16_t kills;
    
    [tag="deth", description="player deaths"]    
        uint16_t deaths;

    [tag="fcap", description="Flags captures"]
        uint32_t flagsCaptured;

    [tag="wepn", description="weapon used by the player"]
        int32_t weapon;
        
    [tag="rsmp", description="optional result map."]
        map<string(32), uint16_t, ignorecase> resultMap;
};

[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Generic game attributes.",
    details = "This contains game data submitted by clients to game reporting."
]
class GameAttributes
{
    [tag="time", description="Game replay time"]
        uint32_t replayTimes;

    [tag="dur", description="Game duration"]
        float durationSec;

    [tag="map", description="Game map name"]
        string(64) mapName;

    [tag="gnam", description="Game name"]
        string(64) gameName;

    [tag="levl", description="Game level"]
        int32_t level;
};

[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "The basis for a 2.x style game report.",
    details = "This contains the full game report, including client player reports and server-based data (data not submitted directly by clients.)"
]
class Report
{
    [tag="plyr", description="Player Reports"]
    map<GameManager::PlayerId, PlayerReport> playerReports;     

    [tag="game", description="Game Attributes"]
    GameAttributes gameAttrs;
};

} // namespace ArsonCTF_KS_NonDerived
} // namespace GameReporting
} // namespace Blaze

