[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"

[headername="clubs/tdf/clubs_base.h"]
#include "clubs/gen/clubs_base.tdf"


namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  ArsonClubGameKeyscopes style reports
//
//      Submitted report TDFs. 
namespace ArsonClubGameKeyscopes_NonDerived
{

[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Club report",
    details = "Used by the ArsonClubGameKeyscopes tests to represent a club within a report"
]
class ClubReport
{
    [tag="wins", description="Club wins"]
    uint16_t wins;

    [tag="loss", description="Club losses"]
    uint16_t losses;    
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Offensive athlete report",
    details = "Used by the ArsonClubGameKeyscopes tests to represent an offensive athlete within a report"
]
class OffensiveAthlete
{
    [tag="pid", description="Player representing an offensive athlete"]
    GameManager::PlayerId playerId;
    
    [tag="hits", description="Hits"]
    uint16_t hits;

    [tag="serv", description="Serves"]
    uint16_t serves;

    [tag="team", description="Team"]
    uint16_t team;    
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Player report",
    details = "Used by the ArsonClubGameKeyscopes tests to represent a player within a report"
]
class PlayerReport
{
    [tag="clid", description="Club Id"]
    Clubs::ClubId clubId;

    [tag="pnts", description="Player points"]
    uint16_t points;
    
    [tag="creg", description="Club region"]
    Clubs::ClubRegion clubregion;
};

[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "The basis for a club game report.",
    details = "This contains the full game report, including client player reports and club reports"
]
class Report
{
    [tag="club", description="Club Reports"]
    map<Clubs::ClubId, ClubReport> clubReports;

    [tag="plyr", description="Player Reports"]
    map<GameManager::PlayerId, PlayerReport> playerReports;

    [tag="offs", description="Offensive Stats"]
    map<uint32_t, OffensiveAthlete> offensiveAthleteReports;
};

}   // ArsonClubGameKeyscopes
}   // GameReporting
}   // Blaze