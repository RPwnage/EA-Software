[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"


namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  Ping League game report
//
//  Submitted report TDFs. 
namespace GameLeagueReportBase
{

[
    tdfid = "hash",
    description = "Generic PlayerReport TDF that takes a variable TDF representing player data.",
    details = "Online League game player report TDF"
]
class PlayerReport
{
    [tag="hits", description="Player hit count"]
        uint16_t hits;
    
    [tag="miss", description="Player misses count"]
        uint16_t misses;
    
    [tag="serv", description="Player serves count"]
        uint16_t serves;
};

[
    tdfid = "hash",
    description = "Generic In-fild Defensive Player Report TDF that takes a variable TDF representing in-field defensive player data.",
    details = "Online League game in-field defensive player report TDF"
]
class DefensiveFieldPlayerReport
{
    [tag="gtim", description="Field defensive player game time"]
        uint32_t gameTime;

    [tag="gply", description="Field defensive player games played count"]
        uint32_t gamesPlayed;

    [tag="miss", description="Field defensive player misses count"]
        uint16_t misses;
    
    [tag="blks", description="Field defensive player blocks count"]
        uint32_t blocks;
    
    [tag="rebs", description="Field defensive player rebs count"]
        uint16_t rebs;
};

[
    tdfid = "hash",
    description = "Generic In-fild Offensive Player Report TDF that takes a variable TDF representing in-field offensive player data.",
    details = "Online League game in-field offensive player report TDF"
]
class OffensiveFieldPlayerReport
{
    [tag="gtim", description="Field offensive player game time"]
        uint32_t gameTime;

    [tag="gply", description="Field defensive player games played count"]
        uint32_t gamesPlayed;

    [tag="hits", description="Field offensive player hit count"]
        uint16_t hits;
    
    [tag="ptfr", description="Field offensive player misses count"]
        uint32_t pointsFor;
    
    [tag="serv", description="Field offensive player serves count"]
        uint16_t serves;
};

[
    tdfid = "hash",
    description = "Generic In-field Player Report TDF that takes a variable TDF representing in-field player data.",
    details = "Online League game in-field player report TDF"
]
class FieldPlayerReport
{
    typedef map<uint64_t, DefensiveFieldPlayerReport> DefensiveFieldPlayerReportsMap;

    [tag="dfpr", description="Defensive Field Player Reports"]
        DefensiveFieldPlayerReportsMap defensiveFieldPlayerReports;

    typedef map<uint64_t, OffensiveFieldPlayerReport> OffensiveFieldPlayerReportsMap;

    [tag="ofpr", description="Offensive Field Player Reports"]
        OffensiveFieldPlayerReportsMap offensiveFieldPlayerReports;
};

} // namespace GameLeagueReportBase
} // namespace GameReporting
} // namespace Blaze
