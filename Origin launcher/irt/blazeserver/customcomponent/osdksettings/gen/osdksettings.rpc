// Defines the RPCs and async notifications used in the osdksettings custom component maintained by the Central Online (OSDK) group.
//  RPC classes are compiled with RPCComp, generating C++ classes (or class stubs) that the component must implement.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/RPCComp for info on the .rpc file/lang spec and the compiler, RpcComp
//
// We assume that all request and response types are valid and just use them
// directly in the code generation.
//
// The compiler should ensure that all commands within a component have a unique ID.
// The compiler should ensure that all components within a file have a unique ID.
// Zero is not a valid component or command ID
// Enforce that method names must start with lowercase letter.
// Enforce C++ rules for method names and TDF type names.
// Allow C++ style comments.

[ headername="osdksettings/tdf/osdksettingstypes.h" ]
#include "osdksettings/gen/osdksettingstypes.tdf"
 
namespace Blaze
{
namespace OSDKSettings
{
[
  id = custom/201,
  description = "A component to allow retrieval of OSDK user settings.",
  details = "This component will allow OSDK to retrieve all user settings information from the server.",
  configurationType = OSDKSettingsConfigTdf,
  strictConfigParsing = false
]
component OSDKSettings
{
    //requires_authentication = false; // for testing purposes, apparently doesn't work..?

    [ clientname = "OSDKSettingsComponent" ]
    slave
    {            
        methods
        {
               [
                 id = 1,
                 description = "This command will retrieve all settings definitions from the server's config.",
                 details = "" 
               ]
               FetchSettingsResponse fetchSettings(FetchSettingsRequest);

               [
                 id = 2,
                 description = "This command will retrieve all settings groups definitions from the server's config.",
                 details = "Setting view information will also be returned." 
               ]
               FetchSettingsGroupsResponse fetchSettingsGroups(FetchSettingsGroupsRequest);
        } // methods
    } // slave
}
}
}
