/*! ************************************************************************************************/
/*!
    \file gamebrowser_server.tdf

    \attention
        (c) Electronic Arts. All Rights Reserved.
*/
/*! ************************************************************************************************/

[headername="gamemanager/tdf/gamebrowser.h"]
#include "gamemanager/gen/gamebrowser.tdf"

[headername="gamemanager/tdf/gamemanager_server.h"]
#include "gamemanager/gen/gamemanager_server.tdf"

namespace Blaze
{
namespace GameManager
{
    [description="ListType is an enum to identify a GameBrowserList as a subscription or snapshot list."]
    enum ListType
    {
        GAME_BROWSER_LIST_SNAPSHOT,
        GAME_BROWSER_LIST_SUBSCRIPTION
    };

        
    class FindDedicatedServersResponse 
    {
        [tag="gids", description="Map of games that should be available to reset mapped by fit score"]
        GameIdsByFitScoreMap mGamesByFitScoreMap;
    };

    class FindDedicatedServersRequest
    {
        [tag="amps"] bool allowMismatchedPingSites;
        [tag="ppst", description="Ordered list in descending preference of ping sites to use for finding a dedicated server."] PingSiteAliasList preferredPingSites;
        [tag="vstr"] GameProtocolVersionString gameProtocolVersionString;
        [tag="mxpc"] uint16_t maxPlayerCapacity; 
        [tag="nttp"] GameNetworkTopology netTopology;
        [tag="ursi"] UserSessionInfo userSessionInfo;

        [tag="attr", description="Create game template used by dedicated server search."]
        TemplateName mCreateGameTemplateName;
        [tag="find", description="Dedicated server attribute rules used for searching"]
        FindDedicatedServerRulesMap mFindDedicatedServerRulesMap;
        [tag="plat", description="Platforms to search for (ignored if empty)"]
        ClientPlatformTypeList mClientPlatformOverrideList;
    };

} // namespace GameManager
} // namespace Blaze
