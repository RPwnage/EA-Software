<project default="build" xmlns="schemas/ea/framework3.xsd">

  <!-- Example showing Utility module's filecopystep usage.  Note that this feature is not supported in XcodeProjectizer. -->

  <package name="UtilModuleCopyFiles" />
  
  <dependent name="DllExampleLib"/>


  <Utility name="CopyDllFiles">
    <dependencies>
      <build>
        DllExampleLib
      </build>
    </dependencies>
    <!--
      The following filecopystep feature is intended to be used for copying SDK dlls fileset.  But this 
      example make use of the "dependencies" to trigger a dependent package DLL build and test with a built
      dll instead (because we currently don't really have any SDK packages exposing any DLL fileset
      in it's initialize.xml file).
    -->
    <filecopystep todir="${nant.project.buildroot}\CommonBin\${config}" if="${config-system}==pc or ${config-system}==pc64">
      <fileset>
        <includes name="${package.DllExampleLib.builddir}\${config}\bin\TestDllModule.dll" asis="true"/>
      </fileset>
    </filecopystep>
    <filecopystep todir="${nant.project.buildroot}\CommonBin\${config}" if="${config-system}==unix or ${config-system}==unix64">
      <fileset>
        <includes name="${package.DllExampleLib.builddir}\${config}\bin\TestDllModule.so" asis="true"/>
      </fileset>
    </filecopystep>
    <filecopystep todir="${nant.project.buildroot}\CommonBin\${config}" if="${config-system}==osx">
      <fileset>
        <includes name="${package.DllExampleLib.builddir}\${config}\bin\TestDllModule.dylib" asis="true"/>
      </fileset>
    </filecopystep>
    <filecopystep 
      if="${config-system}==pc or ${config-system}==pc64"
      file="${package.DllExampleLib.builddir}\${config}\lib\TestDllModule.lib" 
      tofile="${nant.project.buildroot}\CommonLib\${config}\TestDll.lib"
    />
  </Utility>


  <!-- 
    Example of actually copying SDK fileset that is defined in SDK package's initialize.xml. 
    Note that current implementation doesn't support concept of basedir in fileset.  All files are copied flattened to 
    destination directory.
  -->
  <Utility name="TestCopyDirectXLibs">
    <filecopystep todir="${nant.project.buildroot}\CommonLib\${config}" if="${config-system}==pc or ${config-system}==pc64">
      <fileset>
        <includes fromfileset="package.WindowsSDK.directx-libs"/>
      </fileset>
    </filecopystep>
  </Utility>


  <Program name="HelloWorld">
    <dependencies>
      <build>
        UtilModuleCopyFiles/CopyDllFiles
        UtilModuleCopyFiles/TestCopyDirectXLibs
      </build>
    </dependencies>
    <sourcefiles basedir="${package.UtilModuleCopyFiles.dir}/source/program">
      <includes name="hello_world.cpp"/>
    </sourcefiles>
    <libraries>
      <includes name="${nant.project.buildroot}\CommonLib\${config}\TestDll.lib" asis="true" if="${config-system}==pc or ${config-system}==pc64"/>
      <includes name="${nant.project.buildroot}\CommonBin\${config}\TestDllModule.so" asis="true" if="${config-system}==unix or ${config-system}==unix64"/>
      <includes name="${nant.project.buildroot}\CommonBin\${config}\TestDllModule.dylib" asis="true" if="${config-system}==osx"/>
    </libraries>
    <buildsteps>
      <postbuild-step>
        <target>
          <copy file="${package.configbindir}\HelloWorld.exe" tofile="${nant.project.buildroot}\CommonBin\${config}\HelloWorld.exe" if="${config-system}==pc or ${config-system}==pc64"/>
          <copy file="${package.configbindir}\HelloWorld" tofile="${nant.project.buildroot}\CommonBin\${config}\HelloWorld" if="${config-system}==unix or ${config-system}==unix64 or ${config-system}==osx"/>
        </target>
      </postbuild-step>
    </buildsteps>
  </Program>


  <Program name="TestProgram2">
    <dependencies>
      <build>
        UtilModuleCopyFiles/CopyDllFiles
      </build>
    </dependencies>
    <sourcefiles basedir="${package.UtilModuleCopyFiles.dir}/source/program">
      <includes name="test_program2.cpp"/>
    </sourcefiles>
    <libraries>
      <includes name="${nant.project.buildroot}\CommonLib\${config}\TestDll.lib" asis="true" if="${config-system}==pc or ${config-system}==pc64"/>
      <includes name="${nant.project.buildroot}\CommonBin\${config}\TestDllModule.so" asis="true" if="${config-system}==unix or ${config-system}==unix64"/>
      <includes name="${nant.project.buildroot}\CommonBin\${config}\TestDllModule.dylib" asis="true" if="${config-system}==osx"/>
    </libraries>
    <buildsteps>
      <postbuild-step>
        <target>
          <copy file="${package.configbindir}\TestProgram2.exe" tofile="${nant.project.buildroot}\CommonBin\${config}\TestProgram2.exe" if="${config-system}==pc or ${config-system}==pc64"/>
          <copy file="${package.configbindir}\TestProgram2" tofile="${nant.project.buildroot}\CommonBin\${config}\TestProgram2" if="${config-system}==unix or ${config-system}==unix64 or ${config-system}==osx"/>
        </target>
      </postbuild-step>
    </buildsteps>
  </Program>


  <target name="test-nant-build">
    <delete dir="${package.DllExampleLib.builddir}"/>
    <delete dir="${package.UtilModuleCopyFiles.builddir}"/>
    <delete dir="${nant.project.buildroot}\CommonBin"/>
    <delete dir="${nant.project.buildroot}\CommonLib"/>
    <nant buildfile="${package.dir}/${package.name}.build" target="build">
      <property name="config" value="${config}"/>
    </nant>
    <choose>
      <do if="(${config-system}==pc || ${config-system}==pc64) and @{PlatformIsWindows()}">
        <exec program="@{PathToWindows('${nant.project.buildroot}\CommonBin\${config}\HelloWorld.exe')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
        <exec program="@{PathToWindows('${nant.project.buildroot}\CommonBin\${config}\TestProgram2.exe')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
      </do>
      <do if="(${config-system}==unix || ${config-system}==unix64) and @{PlatformIsUnix()}">
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/HelloWorld')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/TestProgram2')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
      </do>
      <do if="${config-system}==osx and @{PlatformIsOSX()}">
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/HelloWorld')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/TestProgram2')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
      </do>
    </choose>
  </target>


  <target name="test-make-build">
    <delete dir="${package.DllExampleLib.builddir}"/>
    <delete dir="${package.UtilModuleCopyFiles.builddir}"/>
    <delete dir="${nant.project.buildroot}\CommonBin"/>
    <delete dir="${nant.project.buildroot}\CommonLib"/>
    <nant buildfile="${package.dir}/${package.name}.build" target="make-gen make-build">
      <property name="config" value="${config}"/>
      <property name="package.configs" value="${config}"/>
    </nant>
    <choose>
      <do if="(${config-system}==pc || ${config-system}==pc64) and @{PlatformIsWindows()}">
        <exec program="@{PathToWindows('${nant.project.buildroot}\CommonBin\${config}\HelloWorld.exe')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
        <exec program="@{PathToWindows('${nant.project.buildroot}\CommonBin\${config}\TestProgram2.exe')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
      </do>
      <do if="(${config-system}==unix || ${config-system}==unix64) and @{PlatformIsUnix()}">
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/HelloWorld')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/TestProgram2')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
      </do>
      <do if="${config-system}==osx and @{PlatformIsOSX()}">
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/HelloWorld')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/TestProgram2')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
      </do>
    </choose>
  </target>


  <target name="test-visualstudio-build">
    <delete dir="${package.DllExampleLib.builddir}"/>
    <delete dir="${package.UtilModuleCopyFiles.builddir}"/>
    <delete dir="${nant.project.buildroot}\CommonBin"/>
    <delete dir="${nant.project.buildroot}\CommonLib"/>
    <nant buildfile="${package.dir}/${package.name}.build" target="slnruntime visualstudio">
      <property name="config" value="${config}"/>
      <property name="package.configs" value="${config}"/>
    </nant>
    <choose>
      <do if="(${config-system}==pc || ${config-system}==pc64) and @{PlatformIsWindows()}">
        <exec program="@{PathToWindows('${nant.project.buildroot}\CommonBin\${config}\HelloWorld.exe')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
        <exec program="@{PathToWindows('${nant.project.buildroot}\CommonBin\${config}\TestProgram2.exe')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
      </do>
      <do if="(${config-system}==unix || ${config-system}==unix64) and @{PlatformIsUnix()}">
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/HelloWorld')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
        <exec program="@{PathToUnix('${nant.project.buildroot}/CommonBin/${config}/TestProgram2')}" workingdir="${nant.project.buildroot}\CommonBin\${config}"/>
      </do>
    </choose>
  </target>


</project>