<project xmlns="schemas/ea/framework3.xsd">

	<compiler
	  path="${package.VisualStudio.compiler}"
	  path-clanguage="${package.VisualStudio.c-compiler}"
	  version="${eaconfig.msvc.version}"
    >
		<common-defines>
			_CRT_SECURE_NO_DEPRECATE
			_UNICODE
			UNICODE
			WIN32_LEAN_AND_MEAN
			_TITLE
			__WRL_NO_DEFAULT_LIB__
			EA_PLATFORM_GDK
			EA_PLATFORM_XBSX
			EA_PLATFORM_XBOX_GDK
			HC_DATAMODEL=HC_DATAMODEL_LLP64
			HC_PLATFORM=HC_PLATFORM_GDK
			HC_PLATFORM_GDK=4
			HC_PLATFORM_IS_MICROSOFT=1
			HC_WINHTTP_WEBSOCKETS
			WINAPI_FAMILY=WINAPI_FAMILY_GAMES
			_GAMING_XBOX
			_GAMING_XBOX_SCARLETT
			XSAPI_NO_PPL=1
		</common-defines>
		<common-options>
			/favor:AMD64
			/Zc:inline
		</common-options>
		<system-includedirs>
			${package.GDK.includedirs??}
		</system-includedirs>
		<template>
			<commandline>
				%defines%
				%includedirs%
				%system-includedirs%
				%usingdirs%
				%options%
				-Fo"%objectfile%"
				"%sourcefile%"
				%forceusing-assemblies%
			</commandline>
			<define>-D %define%</define>
			<includedir>-I "%includedir%"</includedir>
			<system-includedir>-I "%system-includedir%"</system-includedir>
			<usingdir>-AI "%usingdir%"</usingdir>
			<forceusing-assembly>-FU "%forceusing-assembly%"</forceusing-assembly>
		</template>
	</compiler>

	<assembler
	  path="${package.VisualStudio.assembler}"
	  version="${eaconfig.msvc.version}"
    >
		<common-defines>
			${as.defines??}
		</common-defines>
		<common-options>
			${as.options??}
			-nologo <!-- turn off MS copyright message -->
			-c <!-- compile only -->
			-W2 <!-- warning level 2 -->
			-WX <!-- warning are errors -->
			-Fo"%objectfile%"
			"%sourcefile%"
		</common-options>
		<system-includedirs>
			${package.GDK.includedirs??}
		</system-includedirs>
		<template>
			<!-- 
          VisualStudio proxy package defined as.options to include -Fo"%objectfile%" "%sourcefile%" which make this non-standard with
          above compiler commandline to include switch for output file and include switchs for input source file.
      -->
			<commandline>
				%defines%
				%includedirs%
				%system-includedirs%
				%usingdirs%
				%options%
			</commandline>
			<define>-D "%define%"</define>
			<includedir>-I "%includedir%"</includedir>
			<system-includedir>-I "%system-includedir%"</system-includedir>
		</template>
	</assembler>

	<librarian
	  path="${package.VisualStudio.archiver}"
	  version="${eaconfig.msvc.version}"
    >
		<common-options>
			${lib.options??}
		</common-options>
		<template>
			<!-- VisualStudio proxy package defined lib.options which include /OUT:X switches to specify output file -->
			<commandline>
				%options%
				%objectfiles%
			</commandline>
			<objectfile>"%objectfile%"</objectfile>
		</template>
	</librarian>

	<linker
	  path="${package.VisualStudio.linker}"
	  version="${eaconfig.msvc.version}"
    >
		<common-options>
			-machine:x64
			-manifest:no
			-nodefaultlib:advapi32.lib
			-nodefaultlib:comctl32.lib
			-nodefaultlib:comsupp.lib
			-nodefaultlib:dbghelp.lib
			-nodefaultlib:gdi32.lib
			-nodefaultlib:gdiplus.lib
			-nodefaultlib:guardcfw.lib
			-nodefaultlib:kernel32.lib
			-nodefaultlib:mmc.lib
			-nodefaultlib:msimg32.lib
			-nodefaultlib:msvcole.lib
			-nodefaultlib:msvcoled.lib
			-nodefaultlib:mswsock.lib
			-nodefaultlib:ntstrsafe.lib
			-nodefaultlib:ole2.lib
			-nodefaultlib:ole2autd.lib
			-nodefaultlib:ole2auto.lib
			-nodefaultlib:ole2d.lib
			-nodefaultlib:ole2ui.lib
			-nodefaultlib:ole2uid.lib
			-nodefaultlib:ole32.lib
			-nodefaultlib:oleacc.lib
			-nodefaultlib:oleaut32.lib
			-nodefaultlib:oledlg.lib
			-nodefaultlib:oledlgd.lib
			-nodefaultlib:oldnames.lib
			-nodefaultlib:onecore.lib
			-nodefaultlib:runtimeobject.lib
			-nodefaultlib:shell32.lib
			-nodefaultlib:shlwapi.lib
			-nodefaultlib:strsafe.lib
			-nodefaultlib:urlmon.lib
			-nodefaultlib:user32.lib
			-nodefaultlib:userenv.lib
			-nodefaultlib:wlmole.lib
			-nodefaultlib:wlmoled.lib
		</common-options>
		<system-librarydirs>
			${xbsx_link_librarydirs}
		</system-librarydirs>
		<system-libs>
			dxguid.lib
			d3dcompiler.lib
			ws2_32.lib
			uuid.lib
			xmem.lib
			pixevt.lib
			d3d12_xs.lib
			xgameplatform.lib
			xgameruntime.lib
		</system-libs>
		<template>
			<!-- The output switch is added to link.options during builtset generate optionset! -->
			<commandline>
				%options%
				%librarydirs%
				%objectfiles%
				%libraryfiles%
			</commandline>
			<librarydir>-libpath:"%librarydir%"</librarydir>
			<libraryfile>"%libraryfile%"</libraryfile>
			<objectfile>"%objectfile%"</objectfile>
		</template>
	</linker>

</project>
