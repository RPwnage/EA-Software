		//
		// fut2Tournament rule
		// Matches tournament ids.
		// Edit the fit table for tournament similarities.
		//
        fut2TournyId = {
            weight = #MATCH_EXACT_WEIGHT#
            ruleType = "ARBITRARY_TYPE"
            attributeName = "fut2TournyId"
            votingMethod = "OWNER_WINS"

            matchingFitPercent = 1.0
            mismatchFitPercent = 0

            minFitThresholdLists = {
				matchExact = [0:"EXACT_MATCH_REQUIRED"]
                matchSimilar = [0:"EXACT_MATCH_REQUIRED", 16:0.0]
                matchAny = [0:0.0]
            }        
        }
		
		//
		// fut2TournamentRound rule
		// Matches tournament round.
		//
		fut2TournyRnd = {
		    weight = #HIGH_WEIGHT#
		    attributeName = "fut2TournyRnd"
		    votingMethod = "OWNER_WINS"
		    possibleValues = ["1","2","3","4"]
		    
		    fitTable = [
		        "1.0", "0.7", "0.4", "0.1",
		        "0.7", "1.0", "0.7", "0.4",
		        "0.4", "0.7", "1.0", "0.7",
		        "0.1", "0.4", "0.7", "1.0"
		    ]
		    
		    minFitThresholdLists = {
				matchExact = [0:"EXACT_MATCH_REQUIRED"]
                matchSimilar = [0:"EXACT_MATCH_REQUIRED", 30:0.7]
                matchAny = [0:0.0]
            }
		}
		
		//  ** THIS RULE IS DEPRECATED, SHOULD BE REMOVED IN FUTURE **
		// fut2StarLevel rule
		// Matches players with same star level
		// The actual star rating is 1/2 the rating in the table.  This is to avoid float/string conversions
		// All actual star ratings are 0.5, 1.0, 1.5, ...
		//
		fut2StarLevel = {
			weight = #MATCH_EXACT_WEIGHT#
			attributeName = "fut2StarLevel"
			votingMethod = "OWNER_WINS"
			possibleValues = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
			
		    fitTable = [
		        "1.00", "0.90", "0.80", "0.70", "0.60", "0.50", "0.40", "0.30", "0.20", "0.10",
		        "0.90", "1.00", "0.90", "0.80", "0.70", "0.60", "0.50", "0.40", "0.30", "0.20",
		        "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", "0.60", "0.50", "0.40", "0.30",
		        "0.70", "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", "0.60", "0.50", "0.40",
				"0.60", "0.70", "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", "0.60", "0.50",
				"0.50", "0.60", "0.70", "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", "0.60",
				"0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00", "0.90", "0.80", "0.70", 
				"0.30", "0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00", "0.90", "0.80",
				"0.20", "0.30", "0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00", "0.90",
				"0.10", "0.20", "0.30", "0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00"
		    ]
			
		    minFitThresholdLists = {
				matchExact = [0:"EXACT_MATCH_REQUIRED"]
				matchSimilar = [0:"EXACT_MATCH_REQUIRED", 5:0.80, 10:0.60, 15:0.40, 20:0.20, 25:0.0]
				matchAny = [0:0.0]
            }
		}
		
		// 35 x 35 matrix. brute force ftw.
		futTeamOVR = {
			weight = #MEDIUM_WEIGHT#
			ruleType = "EXPLICIT_TYPE"
			attributeName = "futTeamOVR"
			possibleValues = [
				"60",
				"61", "62", "63", "64", "65", "66", "67", "68", "69", "70", 
				"71", "72", "73", "74", "75", "76", "77", "78", "79", "80", 
				"81", "82", "83", "84", "85", "86", "87", "88", "89", "90",
				"91", "92", "93", "94"
			]
			
			fitTable = [
				"1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.1", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", "0.0", 
				"0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", "0.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", "0.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", "0.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", "0.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", "0.1", "0.1", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", "0.1", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.5", "0.5", "0.5", "0.5", "0.5", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.7", "0.7", "0.5", "0.5", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.7", "0.7", "0.5", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.7", "0.7", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "0.9", "0.9", "0.7", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.5", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.5", "0.7", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.7", "0.7", "0.9", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.7", "0.7", "0.9", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0", 
				"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.1", "0.1", "0.5", "0.5", "0.5", "0.7", "0.7", "1.0", "1.0", "1.0", "1.0", "1.0", "1.0"

			]
			
			minFitThresholdLists = {
				OSDK_matchExact = [0:EXACT_MATCH_REQUIRED, 20:1.0]
				OSDK_matchAny = [0:0.0]
				OSDK_matchRelax = [0:1.0, 10:0.9, 15:0.7, 20:0.5, 25:0.3, 30:0.1]
			}
		}
		
		// ------------------------------------------------
		// Below are the Tournament Entrance Criteria Rules
		// ------------------------------------------------
		// Rule for the first criteria (all the criteria data is munged into the rule value)
        futTournyCrit1 = {
            weight = #MATCH_EXACT_WEIGHT#
            ruleType = "ARBITRARY_TYPE"
            attributeName = "futTournyCrit1"
            votingMethod = "OWNER_WINS"

            matchingFitPercent = 1.0
            mismatchFitPercent = 0

            minFitThresholdLists = {
                OSDK_matchExact = [0:1.0]
       		    OSDK_matchAny = [0:0.0]
            }        
        }
		
		// Rule for the second criteria (all the criteria data is munged into the rule value)
        futTournyCrit2 = {
            weight = #MATCH_EXACT_WEIGHT#
            ruleType = "ARBITRARY_TYPE"
            attributeName = "futTournyCrit2"
            votingMethod = "OWNER_WINS"

            matchingFitPercent = 1.0
            mismatchFitPercent = 0

            minFitThresholdLists = {
                OSDK_matchExact = [0:1.0]
       		    OSDK_matchAny = [0:0.0]
            }        
        }
		
        futNewUser = {
            weight = #MEDIUM_WEIGHT# // this value is relative to futSkillRating.  With a perfect match in still rating, we still want to match against a new player first
            ruleType = "ARBITRARY_TYPE"
            attributeName = "futNewUser"
            votingMethod = "OWNER_WINS"
			
            matchingFitPercent = 1.0
            mismatchFitPercent = 0.0
			
            minFitThresholdLists = {
                matchSimilar = [0:1.0, 20:0.0]
            }			
        }

        futHouseRulePref = {
            weight = #MATCH_EXACT_WEIGHT#
            ruleType = "EXPLICIT_TYPE"
            attributeName = "futHouseRulePref"
            votingMethod = "VOTE_PLURALITY"
            defaultAbstainValue = "random"
            possibleValues = [
                "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "abstain", "random"
            ]

            fitTable = [
                "1.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.8", "0.0"
                "0.0", "1.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.8", "0.0"
                "0.0", "0.0", "1.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.8", "0.0"
                "0.0", "0.0", "0.0", "1.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.8", "0.0"
                "0.0", "0.0", "0.0", "0.0", "1.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.8", "0.0"
                "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "0.0", "0.0", "0.0", "0.0", "0.8", "0.0"
                "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "0.0", "0.0", "0.0", "0.8", "0.0"
                "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "0.0", "0.0", "0.8", "0.0"
                "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "0.0", "0.8", "0.0"
                "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "0.8", "0.0"
                "0.8", "0.8", "0.8", "0.8", "0.8", "0.8", "0.8", "0.8", "0.8", "0.8", "1.0", "0.0"
                "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0"
            ] 

            minFitThresholdLists = {
                OSDK_matchExact = [0:1.0, 5:0.8]
            }
        }

        futChampionsStageId = {
            weight = #MATCH_EXACT_WEIGHT#
            ruleType = "EXPLICIT_TYPE"
            attributeName = "futChampionsStageId"
            votingMethod = "OWNER_WINS"
            matchingFitPercent = 1.0
            mismatchFitPercent = 0.0

            possibleValues = [
                "1", "2"
            ]

            minFitThresholdLists = {
                OSDK_matchExact = [0:EXACT_MATCH_REQUIRED]
            }
        }

        futHouseRuleEventId = {
            weight = #MATCH_EXACT_WEIGHT#
            ruleType = "ARBITRARY_TYPE"
            attributeName = "futHouseRuleEventId"
            votingMethod = "OWNER_WINS"
			
            matchingFitPercent = 1.0
            mismatchFitPercent = 0.0
			
            minFitThresholdLists = {
               OSDK_matchExact = [0:EXACT_MATCH_REQUIRED]			
            }			
        }

        futCoopMatchmakingType = {
            weight = #MATCH_EXACT_WEIGHT#
            ruleType = "EXPLICIT_TYPE"
            attributeName = "futCoopMatchmakingType"
            votingMethod = "OWNER_WINS"
            possibleValues = ["0", "1", "2"] // SOLO OR COOP, SOLO, COOP

            fitTable = [
                "1.0", "1.0", "1.0",
                "1.0", "1.0", "0.0",
                "1.0", "0.0", "1.0"
            ]

            minFitThresholdLists = {
                OSDK_matchExact = ["0:1.0"]
            }
        }

