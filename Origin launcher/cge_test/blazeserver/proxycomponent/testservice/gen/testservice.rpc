[ headername="testservice/tdf/testservice.h" ]
#include "testservice/gen/testservice.tdf"


namespace Blaze
{
namespace TestService
{

[
    id = core/2001,
    description = "Proxy component used to communicate with a test service to test log slow transactions from dependent systems",
    details = "The test service returns slow response delayed by the param passed in to the URL",
    proxyOnly = true
]
component TestService
{
    slave
    {
        methods
        {
            [
                id = 1,
                description = "Get request to the test service",
                details = "response will be delayed by delaySecs",
                requires_authentication = false,
                client_export = false,
                http = {
                    resource = "TestRestWebService/RestService/GetData/{delaysecs}",
                    method = "GET"
                }
            ]
            SlowTxnResponse GetData(SlowTxnRequest);
            
            [
                id = 2,
                description = "Put request to the test service",
                details = "response will be delayed by delaySecs",
                requires_authentication = false,
                client_export = false,
                http = {
                    resource = "TestRestWebService/RestService/PutData/{delaysecs}",
                    method = "PUT"
                }
            ]
            SlowTxnResponse PutData(SlowTxnRequest);

            [
                id = 3,
                description = "Post request to the test service",
                details = "response will be delayed by delaySecs",
                requires_authentication = false,
                client_export = false,
                http = {
                    resource = "TestRestWebService/RestService/PostData/{delaysecs}",
                    method = "POST"
                }
            ]
            SlowTxnResponse PostData(SlowTxnRequest);    

            [
                id = 4,
                description = "Delete request to the test service",
                details = "response will be delayed by delaySecs",
                requires_authentication = false,
                client_export = false,
                http = {
                    resource = "TestRestWebService/RestService/DeleteData/{delaysecs}",
                    method = "DELETE"
                }
            ]
            SlowTxnResponse DeleteData(SlowTxnRequest);   

            [
                id = 5,
                description = "Get request to the test service with sensitive info",
                details = "response will be delayed by delaySecs",
                requires_authentication = false,
                client_export = false,
                http = {
                    resource = "TestRestWebService/RestService/GetSensitiveInfo/{delaysecs}",
                    method = "GET",
                    url_params = {
                        "email" = "email",
                        "password" = "password"
                    }                    
                }
            ]
            SlowTxnSensitiveInfoResponse GetSensitiveInfo(SlowTxnSensitiveInfoRequest);  
            
            [
                id = 6,
                description = "Get request to the test service with sensitive info. Use a complicated query formart - GOS-32725",
                details = "response will be delayed by delaySecs",
                requires_authentication = false,
                client_export = false,
                http = {
                    resource = "TestRestWebService/RestService/GetSensitiveInfo/{delaysecs}?email={email}",
                    method = "GET",
                    url_params = {
                        "password" = "password"
                    }                    
                }
            ]
            SlowTxnSensitiveInfoResponse GetSensitiveInfo2(SlowTxnSensitiveInfoRequest); 
        }
    }
}

} // namespace TestService
} // namespace Blaze