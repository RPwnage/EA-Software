[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"


namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  ArsonBasic style reports
//
//      Submitted report TDFs. 
namespace SampleBase
{

[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Generic PlayerReport TDF that takes a variable TDF representing player data.",
    details = "This contains player and any other relevent data submitted by clients to game reporting."
]
class PlayerReport
{    
    [tag="kill", description="player kills"]
        uint16_t kills;
    
    [tag="deth", description="player deaths"]    
        uint16_t deaths;
    
    [tag="talv", description="longest time alive"]
        uint32_t longestTimeAlive;
    
    [tag="mony", description="money lost"]
        uint32_t money;  
        
    [tag="ctry", description="Country code"]
        string(16) country;   
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Full GameReport including custom processor and derived data (i.e. from games or clubs)",
    details = "This contains the full game report, including client player reports and server-based data (data not submitted directly by clients.)"
]
class GameAttributes
{
    //  game attributes/stats
    [tag="map", description="game attribute to retrieve map name from"]
        int32_t mapId;
    [tag="mode", description="game attribute to retrieve mode from"]
        int32_t mode;
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "The basis for a 2.x style game report.",
    details = "This contains the full game report, including client player reports and server-based data (data not submitted directly by clients.)"
]
class Report
{
    [tag="plyr", description="Player Reports"]
    map<GameManager::PlayerId, PlayerReport> playerReports;     
    
    [tag="game", description="Game Attributes"]
    GameAttributes gameAttrs;       
};
    

} // namespace SampleBase


} // namespace GameReporting
} // namespace Blaze
