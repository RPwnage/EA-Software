<!-- (c) Electronic Arts. All Rights Reserved. -->
<project xmlns="schemas/ea/framework3.xsd">

	<optionset name="config-options-gameconfigoptions">
		<option name="manifest.filename" value="MicrosoftGame.config"/>
		<option name="identity.name" value="${package.name}"/>
		<option name="identity.publisher" value="Electronic Arts Inc."/>
		<option name="identity.version" value="1.0.0.0"/>
		<option name="executable.id" value="${package.name}"/>
		<option name="virtualmachine.titlememory.anaconda" value="Advanced"/>
		<option name="virtualmachine.titlememory.xb1x" value="Advanced"/>
		<option name="shellvisuals.storelogo" value="StoreLogo.png"/>
		<option name="shellvisuals.square150x150logo" value="Square150x150Logo.png"/>
		<option name="shellvisuals.square44x44logo" value="Square44x44Logo.png"/>
		<option name="shellvisuals.splashscreen" value="SplashScreen.png"/>
		<option name="shellvisuals.description" value="${package.name}"/>
		<option name="shellvisuals.displayname" value="${package.name}"/>
		<option name="shellvisuals.foregroundtext" value="${gameconfig.shellvisuals.foregroundtext}" if="@{PropertyExists('gameconfig.shellvisuals.foregroundtext')}"/>
		<option name="shellvisuals.backgroundcolor" value="${gameconfig.shellvisuals.backgroundcolor}" if="@{PropertyExists('gameconfig.shellvisuals.backgroundcolor')}"/>
	</optionset>

	<do if="${config-system}==capilano">
		<optionset name="config-options-appxmanifestoptions">
			<option name="manifest.filename" value="package.appxmanifest"/>
			<option name="identity.name" value="${package.name}"/>
			<option name="identity.publisher" value="Electronic Arts Inc."/>
			<option name="identity.version" value="1.0.0.0"/>
			<option name="properties.displayname" value="${package.name}"/>
			<option name="properties.publisherdisplayname" value="Electronic Arts Inc."/>
			<option name="properties.logo" value="StoreLogo.png"/>
			<option name="properties.description" value="${package.name}"/>
			<option name="application.id" value="${package.name}"/>
			<option name="visualelements.logo" value="Logo.png"/>
			<option name="visualelements.widelogo" value="WideLogo.png"/>
			<option name="visualelements.smalllogo" value="SmallLogo.png"/>
			<option name="visualelements.splashscreen" value="SplashScreen.png"/>
			<option name="visualelements.description" value="${package.name}"/>
			<option name="visualelements.displayname" value="${package.name}"/>
			<option name="visualelements.foregroundtext" value="${appxmanifest.visualelements.foregroundtext}" if="@{PropertyExists('appxmanifest.visualelements.foregroundtext')}"/>
			<option name="visualelements.backgroundcolor" value="${appxmanifest.visualelements.backgroundcolor}" if="@{PropertyExists('appxmanifest.visualelements.backgroundcolor')}"/>
			<option name="capabilities" value="internetClientServer"/>
			<option name="devicecapabilities" value=""/>
			<option name="mx.capability.list">
				contentRestrictions
				kinectVision
				kinectAudio
				kinectFace
				kinectExpressions
				kinectGamechat
				kinectRequired
			</option>
		</optionset>
	</do>

	<optionset name="config-options-xboxdeploymentcontent">
		<option name="name" value="winrtdeploymentcontent"/>
		<option name="description" value="Copying file '%filename%%fileext%' for deployment..."/>
		<option name="build.tasks" value="copy"/>
		<option name="copy.command" value="${nant.copy} -a5 %filepath% $(ProjectDir)$(LayoutDir)Image\Loose\%filereldir%\%filename%%fileext%"/>
		<option name="outputs">
			$(ProjectDir)$(LayoutDir)Image\Loose\%filereldir%\%filename%%fileext%
		</option>
	</optionset>

	<include file="../targets/target-postcache-init.xml"/>

</project>
