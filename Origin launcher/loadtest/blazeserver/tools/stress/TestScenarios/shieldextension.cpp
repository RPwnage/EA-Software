//  *************************************************************************************************
//
//   File:    shieldextension.cpp
//
//   Author:  systest
//
//   (c) Electronic Arts. All Rights Reserved.
//
//  *************************************************************************************************
#include "./shieldextension.h"
#include "framework/connection/selector.h"
namespace Blaze {
	namespace Stress {

		ShieldExtension::ShieldExtension()
		{
			mPingTimer = INVALID_TIMER_ID;
			isFirstPingResponse = false;
			shouldHeartbeat = false;
		}
		//ShieldExtension& ShieldExtension::GetInstance(StressPlayerInfo* playerData)
		//{
		//	// Static instance 
		//	static ShieldExtension mInstance(playerData);

		//	return mInstance;
		//}

		ShieldExtension::~ShieldExtension()
		{
			BLAZE_INFO(BlazeRpcLog::util, "[ShieldExtension][Destructor][%" PRIu64 "]: ShieldExtension destroy called");
			//stopReportTelemtery();
			stopHeartBeat();
			//  wait for some time to allow already scheduled jobs to complete
			//sleep(30000);
		}


		BlazeRpcError ShieldExtension::perfTune(StressPlayerInfo* playerInfo, bool mEnable)
		{
			BlazeRpcError err = ERR_OK;
			Blaze::Perf::PerfTuneRequest request;
			request.setEnable(mEnable);
			if (mEnable)
			{
				request.setFlowType(100);
				request.setFlowId("ft-d4d4a500-8029-4abf-9173-6d462524e881");
			}
			else
			{
				request.setFlowType(3000);
				request.setFlowId("ft-b829e546-2746-4199-b987-f35d3b2a01d4");
			}

			char8_t buf[2024];
			BLAZE_TRACE_RPC_LOG(BlazeRpcLog::gamemanager, "PerfTune RPC : \n" << request.print(buf, sizeof(buf)));

			err = playerInfo->getComponentProxy()->mPerfProxy->perfTune(request);
			if (err == ERR_OK)
			{
				if (mEnable)
				{
					shouldHeartbeat = true;
				}
				else
				{
					shouldHeartbeat = false;
				}
				BLAZE_TRACE_LOG(BlazeRpcLog::gamemanager, "ShieldExtension::PerfTune RPC successful.");
			}
			else
			{
				BLAZE_ERR_LOG(BlazeRpcLog::gamemanager, "ShieldExtension::PerfTune RPC failed. Error(" << ErrorHelp::getErrorName(err) << ")");
			}

			return err;
		}

		void ShieldExtension::ping(StressPlayerInfo* playerInfo, bool isExtensionHeartbeat, int moduleNum)
		{
			if (shouldHeartbeat == false)
			{
				return;
			}
			BlazeRpcError err = ERR_OK;
			Blaze::Perf::PingRequest request;
			std::string data;// it is the data to be put into blob
			if (!isExtensionHeartbeat)
			{
				if (mPingTimer != INVALID_TIMER_ID)
				{
					gSelector->cancelTimer(mPingTimer);
					mPingTimer = INVALID_TIMER_ID;
				}
				data = moduleDetectionHeartBeatMessage(playerInfo, moduleNum);
			}
			else
			{
				// extension heartbeat is enabled
				data = extensionHeartBeatMessage();
				//called every 30 seconds
				TimeValue nextPingTime = TimeValue::getTimeOfDay() + 30000000;
				//for schedulecall the function must return a void, that's why ping function returns void
				mPingTimer = gSelector->scheduleFiberTimerCall(nextPingTime, this, &ShieldExtension::ping, playerInfo, true,0, "ShieldExtension::Ping");
			}
			//setdata accepts int* hence converting string to int*
			std::vector<uint8_t> myVector(data.begin(), data.end());
			uint8_t *p = &myVector[0];
			request.getData().setData(p,myVector.size());
			err = playerInfo->getComponentProxy()->mPerfProxy->ping(request);
			char8_t buf[2024];
			BLAZE_TRACE_LOG(BlazeRpcLog::gamemanager, "Ping RPC for player "<<playerInfo->getPlayerId() <<": \n" << request.print(buf, sizeof(buf)));
			if (err == ERR_OK)
			{
				BLAZE_TRACE_LOG(BlazeRpcLog::gamemanager, "ShieldExtension::Ping RPC is successful.");
			}
			else
			{
				BLAZE_ERR_LOG(BlazeRpcLog::gamemanager, "ShieldExtension::Ping RPC failed. Error(" << ErrorHelp::getErrorName(err) << ")");
			}
			//	return err;
		}

		BlazeRpcError ShieldExtension::startHeartBeat()
		{
			BlazeRpcError err = ERR_OK;

			return err;
		}

		BlazeRpcError ShieldExtension::stopHeartBeat()
		{
			BlazeRpcError err = ERR_OK;
			if (mPingTimer != INVALID_TIMER_ID)
			{
				gSelector->cancelTimer(mPingTimer);
				mPingTimer = INVALID_TIMER_ID;
			}
			return err;
		}

		std::string ShieldExtension::extensionHeartBeatMessage()
		{
			Client::ClientRequest *clientRequest = BLAZE_NEW Client::ClientRequest;
			Client::ExtensionRequestMessage clientExtensionMessage = Client::ExtensionRequestMessage();
			std::string mExtensionHeartBeatMessage = "";
			std::string *serialized= BLAZE_NEW std::string();

			clientExtensionMessage.set_extensionversion("4078292");
			Client::Heartbeat *heartbeat = BLAZE_NEW Client::Heartbeat;
			clientExtensionMessage.mutable_heartbeats()->AddAllocated(heartbeat);
			clientRequest->mutable_extensionmessage()->CopyFrom(clientExtensionMessage);
			clientRequest->SerializeToString(serialized);
			mExtensionHeartBeatMessage = *serialized;
			delete serialized;//to stop memory leak
			delete clientRequest;
			return mExtensionHeartBeatMessage;
		}

		std::string ShieldExtension::moduleDetectionHeartBeatMessage(StressPlayerInfo* playerInfo, int moduleNum)
		{
		//	Client::Detection* detection = BLAZE_NEW Client::Detection;
		//	std::string mModuleDetectionHeartBeatMessage = "";
		//	std::string *serialized = BLAZE_NEW std::string();

		//	detection->set_code(13000001);
		//	//Client::Detection_DetectionLoadtest mDetectionLoadtest = detection->loadtest();//->Detection_DetectionLoadtest();
		//	Client::Detection_DetectionLoadtest dlt = Client::Detection::DetectionLoadtest();
		//	if (Random::getRandomNumber(100) < 1)
		//	{
		//		dlt.set_imagedata("0x4141414141414141414114");
		//	}
		//	//mDetectionLoadtest.CopyFrom(dlt);
		//	detection->mutable_loadtest()->CopyFrom(dlt);
		//	// If you want to add some more dummy data to increase the payload size, add it here.
		//	// mDetectionLoadtest->set_imageData("0x4141414141414141414114");
		//	//detection->loadtest().CopyFrom(mDetectionLoadtest);    
		//	//detection->set_allocated_loadtest(mDetectionLoadtest);
		//	//detection->loadtest = mDetectionLoadtest;        //        Detection.loadTest.CopyFrom(DetectionLoadtest)
		//	Client::ModuleRequestMessage* moduleRequestMessage = BLAZE_NEW Client::ModuleRequestMessage;
		//	moduleRequestMessage->mutable_detections()->AddAllocated(detection);
		//	//moduleRequestMessage->detections().AddAllocated(detection);
		//	//moduleRequestMessage->detections = detection;    //moduleRequestMessage->detections.AddExtension(detection);

		//	Client::ClientRequest *clientRequest = BLAZE_NEW Client::ClientRequest;
		//	moduleRequestMessage->SerializeToString(serialized);
		//	mModuleDetectionHeartBeatMessage = *serialized;

		//	BLAZE_TRACE_LOG(BlazeRpcLog::gamemanager, " serialised data: "<<mModuleDetectionHeartBeatMessage.c_str());

		//	//encryption code
		//	const unsigned int BLOCK_BYTES_LENGTH = 16 * sizeof(unsigned char);
		//	AES aes(128);
		//	//unsigned int len;
		//	//unsigned char* out;
		//	unsigned char iv[BLOCK_BYTES_LENGTH] = { 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 };
		//	/*for (int i = 0; i < BLOCK_BYTES_LENGTH; i++)
		//	{
		//		iv[i]=(unsigned char)Random::getRandomNumber(255);
		//	}*/
		//	std::string initialvector(reinterpret_cast<char*>(iv), BLOCK_BYTES_LENGTH);
		//	unsigned char *char_array;
		//	char_array=new unsigned char[mModuleDetectionHeartBeatMessage.length()];
		//	for (int i = 0; i < mModuleDetectionHeartBeatMessage.length(); i++)
		//	{
		//		char_array[i] = mModuleDetectionHeartBeatMessage.c_str()[i];
		//	}
		//	delete serialized;        //to stop memory leak
		//	delete clientRequest;        //to stop memory leak
		//	delete[]char_array;//to stop memory leak
		//	//delete out;
		//	
			if (moduleNum == 1)
			{
				//canary module
				isFirstPingResponse = false;
				BLAZE_TRACE_LOG(BlazeRpcLog::perf, "canary request sent by playerid:" << playerInfo->getPlayerId());
				return { '\x12','\x40','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00'
,'\x00','\x00','\x55','\x19','\x5c','\xa0','\x7a','\xd5','\xde','\x67','\x4b','\xd0','\x73','\xe4','\x57','\xc8'
,'\xeb','\x0f','\x5f','\x8a','\xf6','\x4d','\xf4','\x5a','\x6a','\x21','\x54','\x79','\xe9','\xb8','\x8f','\x65'
,'\xba','\xcf','\x26','\xf3','\x68','\x07','\x78','\x77','\x11','\x20','\xe6','\x15','\x56','\x2d','\x9f','\x75'
,'\x5e','\x21' };
			//unsigned char canarykey[BLOCK_BYTES_LENGTH] = { 0x7c, 0x64, 0x44, 0xfa, 0x32, 0xdb, 0x2f,0xbd, 0x4f, 0xee, 0x99, 0x73, 0xd2, 0x3c,0xeb, 0x58 };
			//	out = aes.EncryptCBC(char_array, mModuleDetectionHeartBeatMessage.length() * sizeof(unsigned char)-1, canarykey, iv, len);
			}
			else if (moduleNum == 2)
			{ //pc device id module
				BLAZE_TRACE_LOG(BlazeRpcLog::perf, "pc device id request sent by playerid:" << playerInfo->getPlayerId());

				
				return { '\x12','\x80','\x0d','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00',
'\x00','\x00','\x00','\x30','\xc9','\x24','\x53','\xe3','\xee','\xc7','\xe1','\x0e','\x45','\x7e','\x4f','\x6a',
'\x79','\x10','\x25','\x8c','\xf3','\x3a','\x70','\xda','\x85','\x4e','\x1a','\x87','\x4f','\x02','\xeb','\x4d',
'\x12','\x00','\xb7','\xc8','\x0d','\x99','\x4f','\xef','\x21','\x87','\xe0','\x15','\x6b','\xeb','\xdb','\xfa',
'\x71','\xb3','\xa1','\x9e','\xc8','\xe3','\x41','\x3d','\xe3','\x77','\x99','\x3f','\x97','\xf7','\xb7','\x18',
'\x26','\x58','\x6d','\x8e','\xd6','\x24','\xc6','\x3b','\xa8','\xc3','\x08','\x62','\x4a','\x79','\x99','\x82',
'\x0d','\xeb','\x50','\x3f','\x65','\xda','\xff','\x71','\x60','\x10','\xa5','\x84','\x67','\x4d','\xba','\xa9',
'\xcb','\x0d','\x82','\x4d','\x4b','\xc1','\xd9','\x88','\xe6','\xb2','\x55','\xae','\xa3','\x89','\x76','\x05',
'\x38','\x6c','\x70','\x9b','\x6a','\xb6','\x62','\xbc','\xc9','\x74','\x8f','\x16','\x3f','\xc0','\xf7','\x7a',
'\x28','\x41','\x71','\xa7','\x77','\x59','\x12','\xe4','\x14','\x86','\xb6','\x8e','\x5c','\x1a','\x00','\x46',
'\x3f','\xd6','\x05','\xe7','\x8a','\x3e','\x67','\xd8','\x12','\x45','\xa7','\x3f','\xcc','\x0c','\xaa','\xf9',
'\x3a','\x02','\x83','\xfc','\x87','\xf1','\x83','\x1b','\x69','\x6f','\xcf','\xaa','\xf2','\xc4','\xd9','\x10',
'\x37','\x3b','\x00','\x3f','\xa3','\xb8','\x14','\x0f','\x5e','\x84','\x81','\x8d','\xd9','\x6a','\x48','\xbb',
'\x3f','\x8d','\x92','\x47','\x44','\x95','\xf8','\x62','\x30','\x9a','\x7d','\x0a','\x14','\x0b','\x02','\x52',
'\x31','\x53','\xcc','\xb9','\x84','\x55','\xe5','\x5c','\xb6','\x27','\x6f','\x6d','\x71','\x3d','\x5d','\x4a',
'\xed','\xf5','\x87','\xb8','\xfe','\x39','\x44','\xec','\xad','\xa8','\x02','\xdf','\x67','\x72','\x8d','\x77',
'\x0f','\xbb','\xf2','\xd4','\x7e','\x5d','\x40','\xcb','\xcc','\xb5','\xff','\x90','\x6d','\x98','\xc9','\x90',
'\x08','\xd1','\xf8','\xd7','\xa9','\x6d','\xc0','\x0a','\x09','\xa3','\x7d','\x39','\x37','\xc4','\xb3','\xbe',
'\xcf','\x4d','\x87','\x3f','\xee','\x4a','\x42','\x23','\xf7','\x93','\xa6','\x48','\x44','\x11','\x28','\x30',
'\x4a','\xa8','\x9a','\x2e','\x4e','\xb5','\x0b','\xfc','\x83','\xa8','\xd7','\xd3','\x4b','\x7a','\x88','\x37',
'\x58','\x15','\x54','\x19','\xf4','\x12','\x9b','\xf1','\xa4','\x87','\xa5','\x61','\xf8','\x25','\xf9','\x04',
'\x8d','\xf1','\x0c','\x8b','\xa5','\xe5','\x7d','\x05','\x00','\xf7','\xfe','\x36','\xd6','\x44','\xd5','\x15',
'\xdc','\x2e','\xa8','\x67','\xd7','\xf3','\xd6','\x90','\x26','\xbe','\x7d','\xc0','\x96','\xde','\xfe','\x39',
'\xb0','\x87','\xb8','\xdf','\x69','\x08','\xae','\x60','\xdd','\x52','\xd1','\x4a','\x1a','\xe6','\x96','\x50',
'\xe4','\x39','\x09','\xe0','\x87','\x98','\x72','\x42','\x42','\x29','\x95','\xc7','\xe6','\x05','\xef','\x3f',
'\x44','\x8f','\x14','\x1b','\xcc','\x39','\x8a','\x72','\xd3','\x62','\x0c','\x3d','\x5c','\x4d','\x06','\x6c',
'\x91','\x57','\xb6','\xde','\x1c','\xe0','\x9a','\xb1','\x28','\x30','\x26','\xa7','\x90','\x0d','\x91','\x3e',
'\x1d','\x05','\x0a','\x59','\x0c','\xcd','\x35','\x22','\xb3','\xae','\x10','\x4a','\xb4','\x6b','\xbd','\xc8',
'\x3a','\x8e','\x93','\x3a','\x05','\x8a','\xd8','\xc3','\xeb','\x7c','\x40','\x59','\x1c','\x2b','\x83','\xab',
'\x3c','\x38','\x2b','\x6c','\xf8','\x86','\x81','\xc9','\xa6','\xa9','\x46','\xa7','\xc0','\x21','\x11','\x54',
'\xb0','\xf7','\xc7','\x74','\x29','\x29','\xba','\xcf','\xec','\x04','\x65','\xba','\x1e','\x73','\x68','\x85',
'\x85','\xa7','\x6f','\xcc','\x84','\x6f','\x4c','\x1f','\x8d','\xfc','\x9f','\x21','\x27','\x29','\x8d','\x5e',
'\x5d','\x6d','\x2b','\x57','\xbd','\x36','\x00','\x32','\x59','\x5c','\x91','\xc1','\xee','\xc2','\xcf','\xaf',
'\x68','\xb0','\xae','\xd8','\x47','\x99','\xbe','\x64','\xa8','\x51','\x40','\x3a','\x94','\x37','\x51','\xb8',
'\x56','\xd0','\xde','\xc0','\xbb','\x00','\x12','\x24','\x1d','\x10','\xd7','\xbe','\x99','\x40','\x3d','\xa2',
'\x66','\x8d','\x8d','\xf4','\x13','\x5a','\x6b','\x0e','\x79','\x99','\xbe','\x73','\xeb','\xb3','\x3d','\x47',
'\x35','\xa6','\xa0','\x5a','\x9c','\x17','\x1e','\xc5','\x75','\x7d','\x23','\xf7','\x78','\x12','\x7a','\x4e',
'\x59','\xce','\xb4','\xfd','\x23','\xc2','\x0a','\xc7','\xa9','\xfa','\x12','\xc2','\x20','\x07','\xee','\x81',
'\x75','\x8f','\x79','\x71','\xe0','\x18','\xc8','\x63','\xe0','\x80','\x7a','\x80','\xfc','\x74','\xaf','\x5b',
'\xe1','\x4c','\xb1','\xb6','\x15','\x5c','\x68','\x3a','\x4d','\x13','\x39','\x02','\x26','\x1d','\xb2','\x9a',
'\x5d','\x54','\xc4','\xd4','\xcb','\xd8','\x4a','\x1d','\xd7','\xb4','\x19','\x87','\x7f','\x1f','\x2c','\xe3',
'\xcd','\x3d','\xb4','\xe6','\xdb','\x3d','\x52','\xc4','\x92','\xd1','\xef','\x02','\x14','\xe9','\x50','\x46',
'\x6b','\xd4','\x50','\x63','\x20','\x83','\xff','\x17','\x98','\xd5','\x1a','\x26','\xeb','\xa8','\x6d','\x86',
'\xa0','\x8b','\xf7','\x97','\xe7','\x1d','\xec','\x72','\x8d','\x2d','\x24','\xa5','\x1d','\x62','\x97','\xb3',
'\x67','\xc3','\x3c','\xb2','\x5b','\xee','\x00','\xac','\x7a','\x32','\x9e','\xdc','\xd7','\x83','\xaa','\x3b',
'\x85','\xb5','\x3c','\x59','\x47','\x4c','\x20','\x98','\x45','\x87','\x3a','\xbd','\x6a','\x18','\x60','\xf2',
'\xa3','\x27','\x40','\xbd','\xd7','\x65','\x65','\x95','\xe3','\xb9','\x54','\xc0','\x17','\x6d','\x3b','\x44',
'\xd7','\xb0','\xd7','\x62','\x59','\x90','\x94','\xe4','\x89','\x29','\xf1','\xa6','\x95','\x34','\x3b','\x4d',
'\x87','\x89','\x38','\xc8','\x3f','\x54','\xa7','\x94','\x04','\xdb','\xe1','\x94','\xc5','\x58','\xf6','\xc5',
'\xfd','\x68','\x94','\x75','\xf3','\xb0','\x68','\xce','\xa9','\x87','\x50','\x46','\x94','\xc1','\x8e','\x51',
'\x91','\x6d','\xda','\xdd','\x9b','\x7c','\xa7','\x20','\xdb','\x8b','\x98','\x3b','\xa3','\x6f','\xcc','\x14',
'\x96','\x20','\xc6','\xb6','\xac','\x49','\x4e','\xee','\xdd','\xd4','\xbf','\x09','\xd6','\xa3','\x2a','\x1e',
'\x33','\xdb','\x61','\xb3','\x8b','\x7a','\xbb','\x6a','\x83','\xa9','\xca','\x56','\xf9','\x14','\x90','\x87',
'\xb0','\x1f','\xdf','\xc8','\xd5','\xd0','\x36','\x53','\x64','\x82','\x1a','\x2f','\x83','\xd7','\xfd','\xaa',
'\x01','\x00','\xea','\x52','\x29','\x28','\x45','\x00','\xc9','\x37','\x4b','\xa7','\xcd','\x54','\xed','\xf8',
'\xc4','\x6b','\xb6','\xc5','\xd8','\xa1','\x09','\x27','\x16','\xc9','\x2c','\x1e','\x56','\xa8','\x8f','\x8a',
'\xb0','\xc0','\x13','\x84','\xf5','\xb6','\x5e','\x22','\xcf','\x23','\x80','\x88','\xca','\xe9','\x29','\x5e',
'\x2c','\x24','\xaa','\xf7','\xfa','\xaf','\xc4','\x4d','\x71','\xdb','\xe0','\x4e','\x42','\x21','\xe5','\x4f',
'\x9f','\xdb','\xd2','\x24','\x97','\x20','\x78','\x5c','\xd8','\xdc','\x47','\x9d','\xca','\x3b','\x93','\x7b',
'\xb0','\x7d','\x2c','\x8a','\xad','\x1d','\x04','\xed','\xa7','\x7e','\x5c','\x34','\x7e','\x9a','\x58','\x63',
'\xa9','\x24','\x41','\x86','\x52','\xb7','\x64','\xef','\x33','\xed','\x46','\xbe','\x72','\x62','\xac','\x51',
'\xc9','\xee','\x16','\x88','\x1e','\xa5','\x84','\x25','\x59','\xe4','\xe1','\x2a','\x55','\x0a','\x69','\x35',
'\x35','\x3a','\xbe','\xac','\x82','\xd4','\x65','\x2c','\x2e','\x33','\x69','\x37','\x40','\xbf','\x0f','\x7b',
'\x46','\xaf','\x13','\x48','\x37','\xe5','\x9d','\xbb','\x73','\xe1','\xd1','\xae','\x68','\xef','\x06','\x9d',
'\x6f','\x0d','\xb4','\x4a','\xbe','\xa2','\x3c','\x3e','\xbb','\x80','\xa1','\xf5','\xf7','\x6b','\xd7','\xa4',
'\x59','\xd5','\x8f','\x82','\x6b','\x31','\x91','\x80','\xfe','\xbe','\x43','\xf4','\x11','\xe8','\xdc','\x61',
'\x23','\xdf','\xc6','\x6e','\xda','\x1b','\xac','\x9e','\xae','\x54','\x7c','\x41','\x44','\xf9','\x11','\x7a',
'\x29','\x84','\x90','\x65','\xf1','\xb6','\x45','\x34','\xef','\xf7','\x3f','\xa5','\xe9','\x08','\xfb','\x8d',
'\x9c','\xf2','\x43','\x8c','\xad','\x60','\x4a','\xbf','\x2a','\xdd','\x50','\x45','\x1e','\x7f','\x57','\x95',
'\x86','\xc2','\x5f','\x6f','\x9b','\x8a','\xfa','\x84','\x95','\x07','\xa0','\x54','\x13','\x9f','\x65','\xc2',
'\xb6','\x60','\xbf','\x0c','\x80','\x5b','\x72','\x52','\x55','\x3c','\xc4','\xe3','\xaa','\x0c','\x93','\x1c',
'\x3e','\xec','\xd8','\x09','\x6b','\x57','\x75','\x4c','\xfc','\xaa','\xa8','\x4f','\x6f','\xa7','\x8d','\x92',
'\x8a','\xf6','\xa3','\x9f','\x64','\x68','\x19','\x3c','\xb8','\xaa','\x92','\xdc','\x8f','\x7a','\xe6','\x6f',
'\x37','\x48','\x3d','\x0a','\xbf','\x49','\x9a','\xb7','\xca','\x8e','\x36','\x6d','\x44','\xf4','\x16','\x12',
'\xa4','\x02','\xaa','\xdb','\xdd','\x2c','\x9b','\x37','\xb8','\x55','\x4c','\x8b','\x7d','\xc3','\xca','\xa4',
'\x44','\x1e','\x48','\x27','\x1b','\x96','\x7b','\x46','\x74','\xfb','\x29','\x0c','\x82','\x68','\x03','\xf9',
'\xd4','\xa9','\xc3','\x7b','\x76','\x0b','\x98','\x3d','\xb2','\xdf','\x59','\xbc','\x34','\x31','\x06','\x41',
'\x74','\xbb','\x60','\x1b','\x98','\xfe','\x28','\x5b','\x1f','\xde','\xf7','\x37','\xf8','\x2d','\xbe','\x0a',
'\x64','\x3c','\xb5','\x37','\x06','\xe7','\x9e','\xc9','\xa8','\x14','\xa0','\x9e','\xe6','\x03','\xc8','\x8c',
'\xa6','\xa8','\xb5','\x2f','\xf7','\x18','\xf5','\xab','\x25','\x5c','\x8b','\x7c','\xa4','\x35','\x78','\x3b',
'\x81','\xb5','\xe6','\xf5','\xa9','\x69','\x43','\xf3','\x67','\x51','\x78','\x72','\x4d','\x18','\xb5','\xdb',
'\x9a','\xd4','\x1a','\xfa','\x05','\xdb','\x0e','\x7f','\xc0','\x4b','\x89','\x75','\xa8','\x81','\xa8','\x90',
'\x69','\xac','\x74','\x05','\x5e','\x85','\x4b','\x04','\xfc','\x73','\xc1','\x4f','\x9f','\x50','\xac','\x4f',
'\x4a','\x0d','\x11','\x92','\x43','\x38','\xe4','\xd8','\xe3','\x33','\x16','\x2c','\x3d','\xe4','\xbb','\x7a',
'\x85','\xb2','\x68','\x77','\xb4','\x43','\xfa','\x40','\xe7','\xde','\x61','\x5f','\xbd','\x29','\xac','\x74',
'\xc4','\xd1','\xc9','\x0b','\xfa','\xbe','\x5f','\x12','\xad','\x5a','\x7e','\xf3','\x28','\xa9','\xdb','\x70',
'\x8f','\xda','\x3d','\xd0','\x62','\x90','\x06','\x81','\x5d','\x26','\x66','\x97','\x4a','\xb5','\x53','\x9a',
'\x0b','\xa0','\xbf','\x90','\x83','\x6a','\x3b','\x56','\xa4','\xfa','\x5b','\xc3','\x16','\xc5','\xf1','\x58',
'\x8b','\x8e','\xc6','\x27','\xc1','\x54','\x90','\xb6','\xd2','\xe7','\xf8','\x99','\xc0','\xdc','\xaa','\xca',
'\x2c','\x4f','\xae','\x41','\x66','\xf2','\x4f','\xee','\x17','\xbd','\x58','\x6b','\x94','\x8a','\x91','\x70',
'\x79','\x63','\x18','\x16','\xaf','\x21','\x57','\x4c','\x93','\xe3','\xd6','\x43','\x8d','\x8a','\x7b','\x0c',
'\xf6','\x51','\x6b','\xb4','\x05','\xcd','\x3f','\xb8','\x11','\x5b','\xeb','\x16','\x57','\xc7','\x55','\x3b',
'\xa7','\x5a','\x59','\x53','\x89','\xca','\xcf','\xbc','\x94','\xa8','\x2b','\xd6','\x81','\x7a','\x18','\x11',
'\x1c','\xf3','\x55','\x7f','\x44','\xa9','\xce','\xd3','\x53','\x1f','\x29','\x6b','\x46','\xb3','\x70','\x8d',
'\xde','\xbe','\x41','\xa3','\x8a','\x75','\x58','\x8d','\x32','\x1f','\x89','\xef','\xa4','\x46','\xd2','\x3b',
'\x0a','\x27','\xcb','\xd3','\x66','\xaa','\xef','\x09','\x47','\x1f','\x1a','\x78','\xef','\x5d','\x3f','\x0e',
'\xbd','\xbe','\xdb','\x76','\x7c','\x51','\x1b','\x8b','\xba','\x04','\x15','\xa6','\x11','\x3e','\x46','\x80',
'\x9a','\x28','\x92','\x57','\x38','\xb3','\x0a','\xa7','\x8a','\x3d','\x7b','\xa2','\x62','\x31','\x04','\x5f',
'\x41','\x90','\xd9','\xc7','\x34','\xb6','\x40','\x41','\x58','\xc4','\xe3','\xb7','\x19','\x99','\x48','\x83',
'\xf8','\x27','\xac','\xa2','\x68','\x6f','\x68','\xa6','\xdc','\x07','\x2d','\x55','\x82','\x3a','\x2f','\x86',
'\x9e','\x3d','\xa6','\xf3','\xd6','\x59','\x97','\x49','\xbc','\xd4','\x4a','\x6b','\x78','\x54','\x3b','\x6a',
'\x13','\xd5','\x8b','\x38','\x51','\x1c','\xcd','\x7a','\x82','\x49','\xec','\x9b','\x5e','\x02','\xdb','\x97',
'\xbb','\x58','\x0d','\xcf','\x22','\x34','\x71','\x89','\x99','\xf5','\x07','\xc5','\x9d','\x60','\xe6','\x3c',
'\x68','\x86','\x8b','\xb3','\x5f','\xc4','\xde','\x58','\xf1','\x8d','\xbd','\x46','\xfc','\x95','\x33','\xf1',
'\x2b','\x4f','\x14' };
			}
			else if(moduleNum == 3)
			{	//loadtest module
				/*unsigned char loadkey[BLOCK_BYTES_LENGTH] = { 0x97, 0xf7, 0x81, 0x69, 0x29, 0x6d, 0x17,0xac, 0xbb, 0x3d, 0x68, 0x70, 0xfb, 0x26,0x41, 0x53 };
				out = aes.EncryptCBC(char_array, mModuleDetectionHeartBeatMessage.length() * sizeof(unsigned char)-1, loadkey, iv, len);*/
				if (Random::getRandomNumber(100) < 10)
				{
					//returning hostile request/ cheater request
				/*std::string data = { '\x12', '\x70', '\x01', '\x01', '\x01', '\x01','\x01','\x01','\x01','\x01','\x01','\x01','\x01','\x01','\x01','\x01',
					'\x01', '\x01', '\x40', '\x28', '\xd1', '\x12', '\x05', '\x32', '\x72', '\x11', '\x6b', '\xc9', '\xe1', '\x8b', '\x09', '\xc0',
					'\x07', '\x6e', '\x8f', '\xda', '\xc3', '\x88', '\x10', '\xf6', '\x49', '\x4d', '\xcf', '\x51', '\xaf', '\xcf', '\x9d', '\x8e',
					'\x77', '\x39', '\x41', '\x04', '\x4b', '\xac', '\xe8', '\x2e', '\xf4', '\xc8', '\x32', '\x19', '\xe9', '\x29', '\xfe', '\x41',
					'\xab', '\x46', '\x35', '\xde', '\x0b', '\xa5', '\x90', '\x14', '\x67', '\xfd', '\xae', '\x3b', '\xe3', '\xe6', '\x81', '\x09',
					'\xdc', '\x3d', '\xb5', '\xaa', '\x87', '\x06', '\x62', '\x44', '\xad', '\x72', '\x1d', '\x0e', '\x29', '\x58', '\x6f', '\x6e',
					'\x47', '\x91', '\xbb', '\xf0', '\x53', '\xfb', '\x49', '\x73', '\x3f', '\x1c', '\xd5', '\xc5', '\x26', '\xa9', '\x9c', '\x8c',
					'\x25', '\xe3' };*/
					

					BLAZE_INFO_LOG(BlazeRpcLog::perf,"hostile request sent by playerid:"<<playerInfo->getPlayerId());
					return { '\x12','\xde','\x0f','\x1a','\xdb','\x0f','\x08','\xc2','\xba','\x99','\x06','\x72','\xd3','\x0f','\x0a','\xd0',
'\x0f','\x52','\x46','\x05','\x52','\x32','\x57','\x5b','\x4c','\x16','\x21','\x55','\x58','\x06','\x0b','\x23',
'\x0c','\x26','\x3a','\x53','\x44','\x54','\x20','\x41','\x0c','\x12','\x52','\x05','\x12','\x5c','\x63','\x2f',
'\x10','\x1b','\x5b','\x1c','\x19','\x47','\x04','\x26','\x16','\x17','\x2c','\x2e','\x64','\x1f','\x32','\x52',
'\x52','\x3d','\x19','\x18','\x38','\x2c','\x50','\x5d','\x4d','\x1e','\x60','\x24','\x1d','\x42','\x2d','\x47',
'\x0f','\x17','\x55','\x53','\x17','\x18','\x21','\x15','\x2e','\x32','\x32','\x09','\x45','\x49','\x3e','\x3e',
'\x05','\x01','\x0d','\x0d','\x5d','\x2b','\x1d','\x18','\x10','\x27','\x09','\x23','\x50','\x3c','\x1a','\x55',
'\x06','\x58','\x49','\x19','\x03','\x0e','\x4e','\x15','\x0c','\x4e','\x57','\x43','\x12','\x53','\x58','\x01',
'\x33','\x49','\x35','\x28','\x3e','\x58','\x37','\x22','\x38','\x25','\x2e','\x34','\x45','\x31','\x17','\x14',
'\x4a','\x1d','\x21','\x61','\x31','\x33','\x17','\x58','\x4f','\x34','\x57','\x2d','\x0e','\x4d','\x16','\x5a',
'\x22','\x4c','\x04','\x5c','\x12','\x02','\x49','\x61','\x17','\x3c','\x64','\x5e','\x0c','\x54','\x17','\x18',
'\x4e','\x50','\x22','\x35','\x20','\x31','\x0c','\x4b','\x04','\x11','\x4a','\x56','\x3b','\x0d','\x2e','\x38',
'\x17','\x3c','\x02','\x1f','\x2a','\x3d','\x40','\x5d','\x14','\x0e','\x1e','\x2c','\x59','\x16','\x21','\x31',
'\x22','\x53','\x4d','\x18','\x51','\x23','\x51','\x26','\x4b','\x3c','\x57','\x5a','\x5f','\x2e','\x1a','\x11',
'\x59','\x56','\x08','\x2f','\x15','\x0e','\x57','\x50','\x04','\x5a','\x49','\x30','\x42','\x41','\x0e','\x1c',
'\x41','\x4a','\x24','\x3c','\x31','\x5c','\x57','\x42','\x48','\x52','\x58','\x09','\x20','\x47','\x57','\x49',
'\x2b','\x4a','\x40','\x01','\x2a','\x5d','\x28','\x5d','\x1f','\x0f','\x53','\x5f','\x22','\x1c','\x08','\x42',
'\x08','\x01','\x20','\x64','\x5d','\x56','\x1e','\x3f','\x49','\x52','\x26','\x37','\x40','\x39','\x4a','\x0d',
'\x08','\x06','\x44','\x14','\x64','\x09','\x47','\x2a','\x2f','\x20','\x3c','\x04','\x0b','\x0c','\x2f','\x5d',
'\x20','\x1f','\x46','\x01','\x38','\x15','\x21','\x5e','\x04','\x3b','\x22','\x07','\x17','\x24','\x5e','\x41',
'\x58','\x02','\x51','\x42','\x07','\x59','\x5a','\x55','\x4d','\x29','\x1a','\x48','\x25','\x5c','\x2f','\x51',
'\x30','\x24','\x5a','\x26','\x20','\x58','\x0a','\x4a','\x60','\x05','\x64','\x05','\x07','\x1e','\x01','\x09',
'\x5a','\x06','\x1c','\x56','\x52','\x30','\x51','\x4c','\x37','\x54','\x20','\x3d','\x24','\x27','\x5f','\x61',
'\x03','\x13','\x3c','\x27','\x61','\x62','\x51','\x02','\x59','\x3e','\x42','\x12','\x09','\x5a','\x53','\x33',
'\x0d','\x33','\x08','\x04','\x23','\x40','\x36','\x38','\x1a','\x4c','\x64','\x39','\x4f','\x36','\x1a','\x50',
'\x4c','\x5c','\x5c','\x5d','\x1c','\x02','\x3f','\x4b','\x2b','\x1a','\x2a','\x44','\x2e','\x43','\x04','\x61',
'\x0e','\x12','\x50','\x1f','\x21','\x64','\x2c','\x4a','\x51','\x04','\x4b','\x3e','\x0c','\x30','\x51','\x23',
'\x0f','\x47','\x28','\x31','\x53','\x4f','\x1a','\x43','\x09','\x13','\x5e','\x64','\x14','\x3a','\x0a','\x1f',
'\x1b','\x2b','\x37','\x52','\x16','\x61','\x1a','\x43','\x35','\x31','\x1d','\x0a','\x27','\x57','\x5c','\x19',
'\x44','\x17','\x24','\x35','\x64','\x4e','\x53','\x3b','\x39','\x60','\x32','\x4b','\x62','\x30','\x55','\x48',
'\x26','\x1b','\x0a','\x21','\x33','\x0c','\x63','\x07','\x10','\x1c','\x4f','\x5a','\x5a','\x51','\x5c','\x61',
'\x0b','\x4e','\x1c','\x1d','\x5c','\x5b','\x06','\x40','\x49','\x2b','\x52','\x4c','\x01','\x26','\x2d','\x13',
'\x40','\x44','\x4a','\x37','\x4f','\x36','\x4f','\x5b','\x01','\x57','\x02','\x5f','\x5b','\x12','\x30','\x3d',
'\x45','\x21','\x08','\x45','\x06','\x49','\x30','\x0d','\x30','\x25','\x2e','\x4b','\x20','\x0e','\x2a','\x06',
'\x1b','\x19','\x12','\x51','\x1a','\x18','\x21','\x41','\x52','\x3e','\x5e','\x13','\x37','\x06','\x3e','\x41',
'\x55','\x04','\x03','\x1f','\x34','\x07','\x61','\x1f','\x58','\x41','\x14','\x36','\x29','\x09','\x38','\x33',
'\x3e','\x14','\x3f','\x5d','\x19','\x55','\x59','\x51','\x4d','\x10','\x30','\x3c','\x1c','\x0c','\x05','\x3a',
'\x35','\x3d','\x16','\x2a','\x21','\x57','\x4e','\x4a','\x55','\x05','\x57','\x22','\x02','\x17','\x53','\x4b',
'\x15','\x0f','\x14','\x36','\x2b','\x4f','\x1e','\x1e','\x31','\x04','\x16','\x23','\x34','\x52','\x22','\x29',
'\x16','\x61','\x2f','\x01','\x42','\x4e','\x04','\x0c','\x12','\x2d','\x3c','\x4e','\x3f','\x5c','\x58','\x54',
'\x30','\x13','\x2c','\x07','\x3e','\x15','\x15','\x5a','\x03','\x23','\x25','\x4e','\x63','\x2e','\x15','\x45',
'\x2b','\x01','\x64','\x4b','\x36','\x14','\x08','\x33','\x0b','\x57','\x02','\x57','\x03','\x1c','\x1f','\x25',
'\x45','\x09','\x36','\x5c','\x64','\x22','\x14','\x0e','\x28','\x49','\x3e','\x3b','\x37','\x61','\x3c','\x22',
'\x25','\x07','\x35','\x1f','\x18','\x3f','\x08','\x47','\x25','\x01','\x15','\x5b','\x23','\x59','\x3f','\x24',
'\x4b','\x2f','\x42','\x4d','\x30','\x33','\x4a','\x3f','\x37','\x23','\x49','\x39','\x01','\x53','\x33','\x2a',
'\x31','\x4f','\x5f','\x14','\x5c','\x3b','\x42','\x4a','\x43','\x37','\x26','\x5f','\x36','\x52','\x54','\x0a',
'\x41','\x30','\x0e','\x57','\x43','\x5a','\x1e','\x37','\x52','\x3a','\x60','\x24','\x29','\x27','\x1c','\x64',
'\x0b','\x07','\x01','\x0d','\x54','\x08','\x21','\x27','\x14','\x50','\x3c','\x51','\x15','\x10','\x0f','\x34',
'\x3a','\x29','\x60','\x21','\x4d','\x4c','\x48','\x53','\x17','\x40','\x30','\x08','\x20','\x12','\x61','\x3f',
'\x24','\x28','\x02','\x4a','\x2e','\x33','\x32','\x34','\x4f','\x57','\x07','\x0c','\x5d','\x10','\x03','\x27',
'\x3a','\x0a','\x17','\x05','\x1e','\x01','\x34','\x12','\x52','\x34','\x5c','\x3b','\x5a','\x21','\x2b','\x4f',
'\x1d','\x52','\x0d','\x4a','\x51','\x21','\x32','\x29','\x25','\x38','\x53','\x61','\x1a','\x29','\x0c','\x3d',
'\x0e','\x26','\x46','\x41','\x4b','\x3b','\x2d','\x5e','\x22','\x56','\x43','\x2f','\x06','\x1c','\x1f','\x58',
'\x08','\x5a','\x33','\x60','\x3c','\x46','\x4f','\x61','\x16','\x1f','\x21','\x35','\x11','\x44','\x27','\x10',
'\x0e','\x40','\x50','\x56','\x2b','\x11','\x11','\x34','\x55','\x18','\x01','\x64','\x04','\x08','\x49','\x28',
'\x4c','\x3e','\x2d','\x3e','\x35','\x37','\x2a','\x2f','\x0f','\x3b','\x24','\x3d','\x01','\x1e','\x37','\x17',
'\x1d','\x35','\x54','\x46','\x24','\x58','\x03','\x31','\x4b','\x63','\x62','\x5d','\x1d','\x23','\x32','\x48',
'\x4b','\x28','\x23','\x1c','\x4d','\x0d','\x2b','\x40','\x0a','\x2a','\x33','\x0c','\x05','\x0d','\x0c','\x61',
'\x15','\x19','\x2a','\x4c','\x57','\x48','\x04','\x42','\x63','\x01','\x0d','\x0a','\x17','\x43','\x46','\x4c',
'\x1c','\x38','\x09','\x2d','\x5f','\x0c','\x55','\x34','\x61','\x62','\x0f','\x0f','\x01','\x38','\x4a','\x12',
'\x62','\x52','\x47','\x0b','\x0e','\x02','\x42','\x0d','\x29','\x54','\x11','\x0c','\x3c','\x50','\x2b','\x41',
'\x58','\x61','\x1a','\x03','\x5b','\x29','\x13','\x3a','\x1c','\x26','\x1d','\x26','\x59','\x06','\x06','\x61',
'\x1f','\x61','\x11','\x41','\x3c','\x4d','\x4c','\x4d','\x5f','\x0e','\x56','\x0d','\x63','\x27','\x07','\x44',
'\x21','\x40','\x26','\x3a','\x4e','\x38','\x3f','\x14','\x5d','\x62','\x3a','\x52','\x11','\x55','\x3c','\x24',
'\x05','\x0c','\x53','\x11','\x4e','\x3d','\x5b','\x4a','\x04','\x2a','\x1c','\x5d','\x0f','\x1a','\x0a','\x63',
'\x2b','\x38','\x15','\x26','\x06','\x01','\x44','\x27','\x29','\x5b','\x50','\x18','\x42','\x5a','\x29','\x5e',
'\x3e','\x2a','\x45','\x05','\x28','\x28','\x36','\x05','\x02','\x3e','\x36','\x41','\x0f','\x1a','\x31','\x05',
'\x4c','\x32','\x1a','\x31','\x47','\x1b','\x30','\x0b','\x49','\x08','\x42','\x5a','\x61','\x1e','\x3d','\x16',
'\x1e','\x32','\x5e','\x45','\x1a','\x1d','\x4c','\x3f','\x63','\x16','\x0e','\x60','\x05','\x24','\x45','\x02',
'\x5a','\x39','\x43','\x1a','\x3a','\x08','\x63','\x42','\x12','\x5c','\x32','\x06','\x48','\x59','\x47','\x45',
'\x3c','\x53','\x5b','\x2d','\x23','\x08','\x56','\x0b','\x54','\x46','\x19','\x0b','\x12','\x11','\x5d','\x31',
'\x27','\x47','\x4e','\x63','\x1a','\x3d','\x19','\x48','\x2d','\x19','\x0d','\x2e','\x2e','\x25','\x11','\x2f',
'\x2a','\x4c','\x14','\x2a','\x53','\x01','\x23','\x04','\x33','\x55','\x50','\x11','\x11','\x2f','\x15','\x47',
'\x22','\x51','\x4a','\x1c','\x1e','\x3e','\x39','\x24','\x04','\x30','\x2a','\x26','\x0b','\x13','\x4e','\x1c',
'\x09','\x52','\x4b','\x1f','\x09','\x55','\x4e','\x14','\x07','\x4d','\x23','\x4f','\x0d','\x23','\x11','\x16',
'\x50','\x62','\x0f','\x33','\x17','\x35','\x11','\x0c','\x5f','\x58','\x4d','\x4c','\x0a','\x60','\x25','\x5a',
'\x50','\x14','\x15','\x43','\x01','\x2e','\x07','\x0b','\x41','\x2c','\x33','\x26','\x36','\x1b','\x59','\x53',
'\x36','\x10','\x35','\x43','\x1c','\x15','\x5c','\x02','\x23','\x09','\x31','\x4a','\x5e','\x01','\x1c','\x0a',
'\x3a','\x40','\x02','\x54','\x40','\x63','\x60','\x64','\x1b','\x0f','\x4f','\x48','\x06','\x5b','\x25','\x2e',
'\x1a','\x0d','\x0e','\x57','\x0d','\x45','\x0f','\x63','\x37','\x4d','\x33','\x2e','\x58','\x26','\x3c','\x0b',
'\x41','\x34','\x1e','\x5e','\x2f','\x5a','\x59','\x10','\x2c','\x2b','\x2c','\x57','\x46','\x08','\x0a','\x1e',
'\x50','\x22','\x4f','\x0b','\x3b','\x1f','\x5f','\x5b','\x50','\x1c','\x13','\x61','\x44','\x57','\x09','\x04',
'\x49','\x3c','\x0c','\x2a','\x4d','\x2b','\x5a','\x5d','\x1d','\x26','\x24','\x39','\x36','\x07','\x13','\x05',
'\x44','\x5c','\x09','\x29','\x39','\x28','\x40','\x2e','\x2e','\x26','\x2c','\x22','\x61','\x32','\x2d','\x39',
'\x4e','\x48','\x06','\x4b','\x16','\x14','\x50','\x3d','\x57','\x4d','\x1e','\x08','\x49','\x58','\x0a','\x46',
'\x44','\x08','\x07','\x63','\x54','\x22','\x2b','\x1f','\x50','\x0c','\x42','\x4b','\x09','\x33','\x08','\x13',
'\x0b','\x5b','\x52','\x61','\x22','\x18','\x33','\x36','\x47','\x43','\x1e','\x61','\x4a','\x31','\x1d','\x1b',
'\x46','\x5d','\x01','\x16','\x4f','\x05','\x13','\x22','\x2f','\x12','\x3c','\x33','\x4d','\x23','\x2b','\x1d',
'\x0f','\x3c','\x46','\x48','\x01','\x5f','\x3e','\x09','\x12','\x15','\x61','\x50','\x31','\x1e','\x51','\x5f',
'\x64','\x43','\x2e','\x2a','\x1d','\x5d','\x48','\x09','\x46','\x24','\x41','\x22','\x64','\x46','\x57','\x20',
'\x61','\x32','\x48','\x39','\x1c','\x1f','\x2b','\x0a','\x28','\x0d','\x12','\x1d','\x2a','\x58','\x21','\x38',
'\x4f','\x30','\x38','\x3d','\x2d','\x31','\x62','\x4b','\x47','\x40','\x18','\x1a','\x19','\x0a','\x63','\x2c',
'\x3d','\x2d','\x42','\x54','\x1a','\x14','\x1e','\x30','\x12','\x38','\x3b','\x17','\x43','\x01','\x49','\x34',
'\x19','\x64','\x33','\x04','\x32','\x13','\x1b','\x53','\x13','\x3d','\x20','\x51','\x0b','\x16','\x57','\x2f',
'\x14','\x0a','\x43','\x07','\x31','\x42','\x58','\x5b','\x50','\x2d','\x4f','\x53','\x36','\x2d','\x4f','\x4a',
'\x13','\x4c','\x2b','\x23','\x0b','\x3d','\x4b','\x45','\x23','\x39','\x3d','\x1c','\x3d','\x08','\x3b','\x22',
'\x10','\x35','\x40','\x3a','\x09','\x3b','\x3b','\x3a','\x21','\x3a','\x1e','\x0a','\x4e','\x5c','\x53','\x09',
'\x60','\x0d','\x27','\x0d','\x42','\x54','\x60','\x36','\x10','\x16','\x5b','\x2d','\x3b','\x5c','\x58','\x22',
'\x07','\x3b','\x64','\x37','\x04','\x4a','\x22','\x51','\x0a','\x29','\x23','\x06','\x3e','\x38','\x1b','\x45',
'\x2d','\x09','\x06','\x4f','\x1e','\x63','\x2b','\x17','\x21','\x5c','\x39','\x3f','\x2a','\x20','\x13','\x1e',
'\x05','\x53','\x5a','\x22','\x23','\x24','\x56','\x05','\x27','\x47','\x55','\x55','\x4e','\x1a','\x4d','\x26',
'\x4e','\x50','\x54','\x4a','\x0f','\x54','\x46','\x2a','\x61','\x55','\x1d','\x27','\x03','\x1a','\x36','\x39',
'\x07','\x1e','\x0b','\x06','\x33','\x64','\x4d','\x38','\x17','\x53','\x43','\x33','\x5c','\x0f','\x45','\x49',
'\x2d','\x52','\x35','\x2d','\x05','\x14','\x17','\x1e','\x44','\x49','\x04','\x0a','\x45','\x3c','\x07','\x11',
'\x64','\x2c','\x21','\x44','\x07','\x57','\x63','\x50','\x4a','\x0c','\x59','\x40','\x19','\x4e','\x55','\x23',
'\x18','\x01','\x58','\x16','\x20','\x1b','\x0f','\x53','\x1e','\x2b','\x23','\x10','\x5a','\x5b','\x47','\x5e',
'\x02','\x3e','\x42','\x14','\x1d','\x30','\x30','\x06','\x0f','\x1a','\x10','\x55','\x3b','\x59','\x23','\x3b',
'\x64','\x4c','\x37','\x09','\x51','\x63','\x63','\x49','\x4d','\x2a','\x4b','\x15','\x2e','\x29','\x28','\x5e',
'\x48','\x30','\x12','\x09','\x42','\x2a','\x23','\x5f','\x5f','\x60','\x51','\x14','\x02','\x52','\x0a','\x47',
'\x52','\x2d','\x2e','\x1c','\x5b','\x3a','\x51','\x0a','\x41','\x07','\x56','\x24','\x2f','\x48','\x63','\x59',
'\x25','\x3a','\x2f','\x18','\x02','\x13','\x2b','\x3a','\x34','\x5d','\x0f','\x39','\x06','\x1c','\x1c','\x2a',
'\x22','\x16','\x5f','\x35','\x05','\x2c','\x38','\x26','\x2a','\x30','\x50','\x62','\x3b','\x5f','\x15','\x41',
'\x5c','\x0f','\x24','\x25','\x03','\x27','\x59','\x37','\x2a','\x3f','\x36','\x02','\x5d','\x4a','\x0c','\x5a',
'\x39','\x38','\x54','\x53','\x39','\x45','\x1c','\x51','\x38','\x61','\x09','\x44','\x52','\x32','\x44','\x12',
'\x10','\x1a','\x3d','\x2d','\x14','\x1d','\x1b','\x35','\x5f','\x24','\x1f','\x09','\x3d','\x52','\x5b','\x46',
'\x19','\x64','\x0d','\x5f','\x63','\x47','\x2b','\x4c','\x5f','\x4d','\x26','\x2a','\x35','\x41','\x16','\x0e',
'\x32','\x42','\x16','\x28','\x3f','\x0d','\x64','\x0f','\x16','\x5e','\x5b','\x11','\x15','\x1c','\x59','\x01',
'\x1f','\x24','\x1d','\x2f','\x08','\x44','\x39','\x27','\x11','\x2a','\x16','\x18','\x38','\x04','\x5b','\x5f',
'\x18','\x03','\x1a','\x08','\x3b','\x48','\x55','\x47','\x5c','\x1f','\x15','\x3d','\x64','\x3b','\x3d','\x07',
'\x4a','\x4c','\x25','\x23','\x1a','\x18','\x30','\x4a','\x0c','\x06','\x26','\x50','\x03','\x22','\x5d','\x52',
'\x51','\x30','\x2f','\x09','\x12','\x45','\x4d','\x35','\x39','\x08','\x03','\x01','\x02','\x21','\x18','\x4e',
'\x0a','\x38','\x0f','\x3b','\x4a','\x4b','\x59','\x4d','\x47','\x01','\x0e','\x03','\x29','\x5e','\x55','\x58',
'\x55','\x3e','\x17','\x2a','\x2d','\x50','\x47','\x23','\x2e','\x53','\x26','\x2c','\x0b','\x4a','\x5b','\x21',
'\x5a','\x63','\x39','\x56','\x1b','\x09','\x21','\x02','\x58','\x25','\x3d','\x52','\x58','\x50','\x15','\x5c',
'\x57','\x5f','\x48','\x5e','\x0e','\x11','\x17','\x56','\x49','\x5e','\x37','\x38','\x4b','\x50','\x30','\x5e',
'\x01','\x4d','\x28','\x2b','\x4d','\x30','\x17','\x47','\x3c','\x11','\x52','\x2e','\x43','\x2e','\x62','\x06',
'\x55'};
				}
				//returning non-hostile
				BLAZE_TRACE_LOG(BlazeRpcLog::perf, "non-cheater loadmodule request sent by playerid:" << playerInfo->getPlayerId());
				
				return { '\x12','\x09','\x1a','\x07','\x08','\xc1','\xba','\x99','\x06','\x72','\x00' };
			}
			//std::string mydata(reinterpret_cast<char*>(out),len);//converting char* to string
			//std::string finalMessage = initialvector + mydata;//contains initialisation vector and encrypted cipher
			////encrypted data is set as modulemessage in clientrequest
			//clientRequest->set_modulemessage(finalMessage);

			//clientRequest->SerializeToString(serialized);
			//mModuleDetectionHeartBeatMessage = *serialized;
			////delete[]char_array;
			//return mModuleDetectionHeartBeatMessage;
			return {};
		}

	}  // namespace Stress
}  // namespace Blaze
