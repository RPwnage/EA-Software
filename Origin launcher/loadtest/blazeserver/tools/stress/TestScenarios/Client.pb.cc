// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Client.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Client.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Client {
class HeartbeatDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Heartbeat>
     _instance;
} _Heartbeat_default_instance_;
class DiagnosticDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Diagnostic>
     _instance;
} _Diagnostic_default_instance_;
class SemanticVersionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SemanticVersion>
     _instance;
} _SemanticVersion_default_instance_;
class Detection_DetectionCanaryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionCanary>
     _instance;
} _Detection_DetectionCanary_default_instance_;
class Detection_DetectionDebuggerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionDebugger>
     _instance;
} _Detection_DetectionDebugger_default_instance_;
class Detection_DetectionHypervisorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionHypervisor>
     _instance;
} _Detection_DetectionHypervisor_default_instance_;
class Detection_DetectionOsQueryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionOsQuery>
     _instance;
} _Detection_DetectionOsQuery_default_instance_;
class Detection_DetectionHwid_HardwareIdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionHwid_HardwareId>
     _instance;
} _Detection_DetectionHwid_HardwareId_default_instance_;
class Detection_DetectionHwidDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionHwid>
     _instance;
} _Detection_DetectionHwid_default_instance_;
class Detection_DetectionSignatureDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionSignature>
     _instance;
} _Detection_DetectionSignature_default_instance_;
class Detection_DetectionTextDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionText>
     _instance;
} _Detection_DetectionText_default_instance_;
class Detection_DetectionHookDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionHook>
     _instance;
} _Detection_DetectionHook_default_instance_;
class Detection_DetectionForeignCodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionForeignCode>
     _instance;
} _Detection_DetectionForeignCode_default_instance_;
class Detection_DetectionScreenshotDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionScreenshot>
     _instance;
} _Detection_DetectionScreenshot_default_instance_;
class Detection_DetectionCodeIntegrityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionCodeIntegrity>
     _instance;
} _Detection_DetectionCodeIntegrity_default_instance_;
class Detection_DetectionHeartbeatTimeoutDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionHeartbeatTimeout>
     _instance;
} _Detection_DetectionHeartbeatTimeout_default_instance_;
class Detection_DetectionLoadtestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection_DetectionLoadtest>
     _instance;
} _Detection_DetectionLoadtest_default_instance_;
class DetectionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Detection>
     _instance;
  const ::Client::Detection_DetectionCanary* canary_;
  const ::Client::Detection_DetectionSignature* signature_;
  const ::Client::Detection_DetectionHook* hook_;
  const ::Client::Detection_DetectionHeartbeatTimeout* heartbeattimeout_;
  const ::Client::Detection_DetectionForeignCode* foreigncode_;
  const ::Client::Detection_DetectionScreenshot* screenshot_;
  const ::Client::Detection_DetectionCodeIntegrity* codeintegrity_;
  const ::Client::Detection_DetectionDebugger* debugger_;
  const ::Client::Detection_DetectionHypervisor* hypervisor_;
  const ::Client::Detection_DetectionOsQuery* osquery_;
  const ::Client::Detection_DetectionHwid* hwid_;
  const ::Client::Detection_DetectionText* text_;
  const ::Client::Detection_DetectionLoadtest* loadtest_;
} _Detection_default_instance_;
class ExtensionRequestMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExtensionRequestMessage>
     _instance;
} _ExtensionRequestMessage_default_instance_;
class ModuleRequestMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ModuleRequestMessage>
     _instance;
} _ModuleRequestMessage_default_instance_;
class ClientRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientRequest>
     _instance;
} _ClientRequest_default_instance_;

namespace protobuf_Client_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Heartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Diagnostic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Diagnostic, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SemanticVersion, build_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionCanary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionDebugger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHypervisor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHypervisor, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionOsQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionOsQuery, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionOsQuery, crashdumpflag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHwid_HardwareId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHwid_HardwareId, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHwid_HardwareId, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHwid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHwid, hwids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionSignature, streamoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionSignature, imagebase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionSignature, imagesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionSignature, imagename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionText, streamoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionText, imagebase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionText, imagesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionText, imagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionText, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHook, hooktype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionForeignCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionForeignCode, abnormalentropy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionForeignCode, imagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionForeignCode, imagedata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionScreenshot, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionScreenshot, sourcetype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionCodeIntegrity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionHeartbeatTimeout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionLoadtest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection_DetectionLoadtest, imagedata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, code_),
  offsetof(DetectionDefaultTypeInternal, canary_),
  offsetof(DetectionDefaultTypeInternal, signature_),
  offsetof(DetectionDefaultTypeInternal, hook_),
  offsetof(DetectionDefaultTypeInternal, heartbeattimeout_),
  offsetof(DetectionDefaultTypeInternal, foreigncode_),
  offsetof(DetectionDefaultTypeInternal, screenshot_),
  offsetof(DetectionDefaultTypeInternal, codeintegrity_),
  offsetof(DetectionDefaultTypeInternal, debugger_),
  offsetof(DetectionDefaultTypeInternal, hypervisor_),
  offsetof(DetectionDefaultTypeInternal, osquery_),
  offsetof(DetectionDefaultTypeInternal, hwid_),
  offsetof(DetectionDefaultTypeInternal, text_),
  offsetof(DetectionDefaultTypeInternal, loadtest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, contents_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtensionRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtensionRequestMessage, extensionversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtensionRequestMessage, heartbeats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtensionRequestMessage, diagnostics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleRequestMessage, moduleversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleRequestMessage, heartbeats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleRequestMessage, detections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleRequestMessage, diagnostics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, extensionmessage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, modulemessage_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Heartbeat)},
  { 5, -1, sizeof(Diagnostic)},
  { 11, -1, sizeof(SemanticVersion)},
  { 19, -1, sizeof(Detection_DetectionCanary)},
  { 24, -1, sizeof(Detection_DetectionDebugger)},
  { 29, -1, sizeof(Detection_DetectionHypervisor)},
  { 35, -1, sizeof(Detection_DetectionOsQuery)},
  { 42, -1, sizeof(Detection_DetectionHwid_HardwareId)},
  { 49, -1, sizeof(Detection_DetectionHwid)},
  { 55, -1, sizeof(Detection_DetectionSignature)},
  { 64, -1, sizeof(Detection_DetectionText)},
  { 74, -1, sizeof(Detection_DetectionHook)},
  { 80, -1, sizeof(Detection_DetectionForeignCode)},
  { 88, -1, sizeof(Detection_DetectionScreenshot)},
  { 95, -1, sizeof(Detection_DetectionCodeIntegrity)},
  { 100, -1, sizeof(Detection_DetectionHeartbeatTimeout)},
  { 105, -1, sizeof(Detection_DetectionLoadtest)},
  { 111, -1, sizeof(Detection)},
  { 131, -1, sizeof(ExtensionRequestMessage)},
  { 139, -1, sizeof(ModuleRequestMessage)},
  { 148, -1, sizeof(ClientRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Heartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Diagnostic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SemanticVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionCanary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionDebugger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionHypervisor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionOsQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionHwid_HardwareId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionHwid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionHook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionForeignCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionScreenshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionCodeIntegrity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionHeartbeatTimeout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_DetectionLoadtest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Detection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExtensionRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModuleRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Client.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Heartbeat_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Heartbeat_default_instance_);_Diagnostic_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Diagnostic_default_instance_);_SemanticVersion_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SemanticVersion_default_instance_);_Detection_DetectionCanary_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionCanary_default_instance_);_Detection_DetectionDebugger_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionDebugger_default_instance_);_Detection_DetectionHypervisor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionHypervisor_default_instance_);_Detection_DetectionOsQuery_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionOsQuery_default_instance_);_Detection_DetectionHwid_HardwareId_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionHwid_HardwareId_default_instance_);_Detection_DetectionHwid_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionHwid_default_instance_);_Detection_DetectionSignature_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionSignature_default_instance_);_Detection_DetectionText_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionText_default_instance_);_Detection_DetectionHook_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionHook_default_instance_);_Detection_DetectionForeignCode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionForeignCode_default_instance_);_Detection_DetectionScreenshot_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionScreenshot_default_instance_);_Detection_DetectionCodeIntegrity_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionCodeIntegrity_default_instance_);_Detection_DetectionHeartbeatTimeout_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionHeartbeatTimeout_default_instance_);_Detection_DetectionLoadtest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_DetectionLoadtest_default_instance_);_Detection_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Detection_default_instance_);_ExtensionRequestMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExtensionRequestMessage_default_instance_);_ModuleRequestMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ModuleRequestMessage_default_instance_);_ClientRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientRequest_default_instance_);_Detection_DetectionOsQuery_default_instance_._instance.get_mutable()->version_ = const_cast< ::Client::SemanticVersion*>(
      ::Client::SemanticVersion::internal_default_instance());
  _Detection_default_instance_.canary_ = const_cast< ::Client::Detection_DetectionCanary*>(
      ::Client::Detection_DetectionCanary::internal_default_instance());
  _Detection_default_instance_.signature_ = const_cast< ::Client::Detection_DetectionSignature*>(
      ::Client::Detection_DetectionSignature::internal_default_instance());
  _Detection_default_instance_.hook_ = const_cast< ::Client::Detection_DetectionHook*>(
      ::Client::Detection_DetectionHook::internal_default_instance());
  _Detection_default_instance_.heartbeattimeout_ = const_cast< ::Client::Detection_DetectionHeartbeatTimeout*>(
      ::Client::Detection_DetectionHeartbeatTimeout::internal_default_instance());
  _Detection_default_instance_.foreigncode_ = const_cast< ::Client::Detection_DetectionForeignCode*>(
      ::Client::Detection_DetectionForeignCode::internal_default_instance());
  _Detection_default_instance_.screenshot_ = const_cast< ::Client::Detection_DetectionScreenshot*>(
      ::Client::Detection_DetectionScreenshot::internal_default_instance());
  _Detection_default_instance_.codeintegrity_ = const_cast< ::Client::Detection_DetectionCodeIntegrity*>(
      ::Client::Detection_DetectionCodeIntegrity::internal_default_instance());
  _Detection_default_instance_.debugger_ = const_cast< ::Client::Detection_DetectionDebugger*>(
      ::Client::Detection_DetectionDebugger::internal_default_instance());
  _Detection_default_instance_.hypervisor_ = const_cast< ::Client::Detection_DetectionHypervisor*>(
      ::Client::Detection_DetectionHypervisor::internal_default_instance());
  _Detection_default_instance_.osquery_ = const_cast< ::Client::Detection_DetectionOsQuery*>(
      ::Client::Detection_DetectionOsQuery::internal_default_instance());
  _Detection_default_instance_.hwid_ = const_cast< ::Client::Detection_DetectionHwid*>(
      ::Client::Detection_DetectionHwid::internal_default_instance());
  _Detection_default_instance_.text_ = const_cast< ::Client::Detection_DetectionText*>(
      ::Client::Detection_DetectionText::internal_default_instance());
  _Detection_default_instance_.loadtest_ = const_cast< ::Client::Detection_DetectionLoadtest*>(
      ::Client::Detection_DetectionLoadtest::internal_default_instance());
  _ClientRequest_default_instance_._instance.get_mutable()->extensionmessage_ = const_cast< ::Client::ExtensionRequestMessage*>(
      ::Client::ExtensionRequestMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Client.proto\022\006Client\"\013\n\tHeartbeat\"\032\n\nD"
      "iagnostic\022\014\n\004code\030\001 \001(\004\">\n\017SemanticVersi"
      "on\022\r\n\005major\030\001 \001(\r\022\r\n\005minor\030\002 \001(\r\022\r\n\005buil"
      "d\030\003 \001(\r\"\304\014\n\tDetection\022\014\n\004code\030\001 \001(\004\0223\n\006c"
      "anary\030\002 \001(\0132!.Client.Detection.Detection"
      "CanaryH\000\0229\n\tsignature\030\003 \001(\0132$.Client.Det"
      "ection.DetectionSignatureH\000\022/\n\004hook\030\004 \001("
      "\0132\037.Client.Detection.DetectionHookH\000\022G\n\020"
      "heartbeatTimeout\030\005 \001(\0132+.Client.Detectio"
      "n.DetectionHeartbeatTimeoutH\000\022=\n\013foreign"
      "Code\030\006 \001(\0132&.Client.Detection.DetectionF"
      "oreignCodeH\000\022;\n\nscreenshot\030\007 \001(\0132%.Clien"
      "t.Detection.DetectionScreenshotH\000\022A\n\rcod"
      "eIntegrity\030\010 \001(\0132(.Client.Detection.Dete"
      "ctionCodeIntegrityH\000\0227\n\010debugger\030\t \001(\0132#"
      ".Client.Detection.DetectionDebuggerH\000\022;\n"
      "\nhypervisor\030\n \001(\0132%.Client.Detection.Det"
      "ectionHypervisorH\000\0225\n\007osQuery\030\013 \001(\0132\".Cl"
      "ient.Detection.DetectionOsQueryH\000\022/\n\004hwi"
      "d\030\014 \001(\0132\037.Client.Detection.DetectionHwid"
      "H\000\022/\n\004text\030\r \001(\0132\037.Client.Detection.Dete"
      "ctionTextH\000\0227\n\010loadTest\030\016 \001(\0132#.Client.D"
      "etection.DetectionLoadtestH\000\032\021\n\017Detectio"
      "nCanary\032\023\n\021DetectionDebugger\032#\n\023Detectio"
      "nHypervisor\022\014\n\004name\030\001 \001(\t\032S\n\020DetectionOs"
      "Query\022(\n\007version\030\001 \001(\0132\027.Client.Semantic"
      "Version\022\025\n\rcrashDumpFlag\030\002 \001(\r\032u\n\rDetect"
      "ionHwid\0229\n\005hwids\030\001 \003(\0132*.Client.Detectio"
      "n.DetectionHwid.HardwareId\032)\n\nHardwareId"
      "\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\032c\n\022Detecti"
      "onSignature\022\024\n\014streamOffset\030\001 \001(\003\022\021\n\tima"
      "geBase\030\002 \001(\003\022\021\n\timageSize\030\003 \001(\003\022\021\n\timage"
      "Name\030\004 \001(\t\032l\n\rDetectionText\022\024\n\014streamOff"
      "set\030\001 \001(\003\022\021\n\timageBase\030\002 \001(\003\022\021\n\timageSiz"
      "e\030\003 \001(\003\022\021\n\timageName\030\004 \001(\t\022\014\n\004text\030\005 \001(\t"
      "\0323\n\rDetectionHook\022\"\n\010hookType\030\001 \001(\0162\020.Cl"
      "ient.HookType\032U\n\024DetectionForeignCode\022\027\n"
      "\017abnormalEntropy\030\001 \001(\010\022\021\n\timageName\030\002 \001("
      "\t\022\021\n\timageData\030\003 \001(\014\032U\n\023DetectionScreens"
      "hot\022\014\n\004data\030\001 \001(\014\0220\n\nsourceType\030\002 \001(\0162\034."
      "Client.ScreenshotSourceType\032\030\n\026Detection"
      "CodeIntegrity\032\033\n\031DetectionHeartbeatTimeo"
      "ut\032&\n\021DetectionLoadtest\022\021\n\timageData\030\001 \001"
      "(\014B\n\n\010contents\"\203\001\n\027ExtensionRequestMessa"
      "ge\022\030\n\020extensionVersion\030\001 \001(\t\022%\n\nheartbea"
      "ts\030\002 \003(\0132\021.Client.Heartbeat\022\'\n\013diagnosti"
      "cs\030\003 \003(\0132\022.Client.Diagnostic\"\244\001\n\024ModuleR"
      "equestMessage\022\025\n\rmoduleVersion\030\001 \001(\t\022%\n\n"
      "heartbeats\030\002 \003(\0132\021.Client.Heartbeat\022%\n\nd"
      "etections\030\003 \003(\0132\021.Client.Detection\022\'\n\013di"
      "agnostics\030\004 \003(\0132\022.Client.Diagnostic\"a\n\rC"
      "lientRequest\0229\n\020extensionMessage\030\001 \001(\0132\037"
      ".Client.ExtensionRequestMessage\022\025\n\rmodul"
      "eMessage\030\002 \001(\014*)\n\010HookType\022\010\n\004NONE\020\000\022\n\n\006"
      "DETOUR\020\001\022\007\n\003IAT\020\002*d\n\024ScreenshotSourceTyp"
      "e\022\017\n\013SOURCE_NONE\020\000\022\022\n\016SOURCE_DESKTOP\020\001\022\021"
      "\n\rSOURCE_BITBLT\020\002\022\024\n\020SOURCE_BITBLT_CM\020\003b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2287);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Client.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Client_2eproto

const ::google::protobuf::EnumDescriptor* HookType_descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_enum_descriptors[0];
}
bool HookType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ScreenshotSourceType_descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_enum_descriptors[1];
}
bool ScreenshotSourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Heartbeat::Heartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Heartbeat)
}
Heartbeat::Heartbeat(const Heartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Client.Heartbeat)
}

void Heartbeat::SharedCtor() {
  _cached_size_ = 0;
}

Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:Client.Heartbeat)
  SharedDtor();
}

void Heartbeat::SharedDtor() {
}

void Heartbeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Heartbeat::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Heartbeat& Heartbeat::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Heartbeat* Heartbeat::New(::google::protobuf::Arena* arena) const {
  Heartbeat* n = new Heartbeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Heartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Heartbeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Heartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Heartbeat)
  return false;
#undef DO_
}

void Heartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Heartbeat)
}

::google::protobuf::uint8* Heartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Heartbeat)
  return target;
}

size_t Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Heartbeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Heartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const Heartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Heartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Heartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Heartbeat)
    MergeFrom(*source);
  }
}

void Heartbeat::MergeFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Heartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Heartbeat::IsInitialized() const {
  return true;
}

void Heartbeat::Swap(Heartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Heartbeat::InternalSwap(Heartbeat* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Heartbeat

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Diagnostic::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Diagnostic::Diagnostic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Diagnostic)
}
Diagnostic::Diagnostic(const Diagnostic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:Client.Diagnostic)
}

void Diagnostic::SharedCtor() {
  code_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Diagnostic::~Diagnostic() {
  // @@protoc_insertion_point(destructor:Client.Diagnostic)
  SharedDtor();
}

void Diagnostic::SharedDtor() {
}

void Diagnostic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Diagnostic::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Diagnostic& Diagnostic::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Diagnostic* Diagnostic::New(::google::protobuf::Arena* arena) const {
  Diagnostic* n = new Diagnostic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Diagnostic::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Diagnostic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Diagnostic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Diagnostic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Diagnostic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Diagnostic)
  return false;
#undef DO_
}

void Diagnostic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Diagnostic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Diagnostic)
}

::google::protobuf::uint8* Diagnostic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Diagnostic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Diagnostic)
  return target;
}

size_t Diagnostic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Diagnostic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Diagnostic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Diagnostic)
  GOOGLE_DCHECK_NE(&from, this);
  const Diagnostic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Diagnostic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Diagnostic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Diagnostic)
    MergeFrom(*source);
  }
}

void Diagnostic::MergeFrom(const Diagnostic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Diagnostic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Diagnostic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Diagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Diagnostic::CopyFrom(const Diagnostic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Diagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Diagnostic::IsInitialized() const {
  return true;
}

void Diagnostic::Swap(Diagnostic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Diagnostic::InternalSwap(Diagnostic* other) {
  using std::swap;
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Diagnostic::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Diagnostic

// uint64 code = 1;
void Diagnostic::clear_code() {
  code_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Diagnostic::code() const {
  // @@protoc_insertion_point(field_get:Client.Diagnostic.code)
  return code_;
}
void Diagnostic::set_code(::google::protobuf::uint64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:Client.Diagnostic.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SemanticVersion::kMajorFieldNumber;
const int SemanticVersion::kMinorFieldNumber;
const int SemanticVersion::kBuildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SemanticVersion::SemanticVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.SemanticVersion)
}
SemanticVersion::SemanticVersion(const SemanticVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&build_) -
    reinterpret_cast<char*>(&major_)) + sizeof(build_));
  // @@protoc_insertion_point(copy_constructor:Client.SemanticVersion)
}

void SemanticVersion::SharedCtor() {
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&build_) -
      reinterpret_cast<char*>(&major_)) + sizeof(build_));
  _cached_size_ = 0;
}

SemanticVersion::~SemanticVersion() {
  // @@protoc_insertion_point(destructor:Client.SemanticVersion)
  SharedDtor();
}

void SemanticVersion::SharedDtor() {
}

void SemanticVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SemanticVersion::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SemanticVersion& SemanticVersion::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

SemanticVersion* SemanticVersion::New(::google::protobuf::Arena* arena) const {
  SemanticVersion* n = new SemanticVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SemanticVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.SemanticVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&build_) -
      reinterpret_cast<char*>(&major_)) + sizeof(build_));
  _internal_metadata_.Clear();
}

bool SemanticVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.SemanticVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 build = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &build_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.SemanticVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.SemanticVersion)
  return false;
#undef DO_
}

void SemanticVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.SemanticVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 major = 1;
  if (this->major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->major(), output);
  }

  // uint32 minor = 2;
  if (this->minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minor(), output);
  }

  // uint32 build = 3;
  if (this->build() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->build(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.SemanticVersion)
}

::google::protobuf::uint8* SemanticVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.SemanticVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 major = 1;
  if (this->major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->major(), target);
  }

  // uint32 minor = 2;
  if (this->minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minor(), target);
  }

  // uint32 build = 3;
  if (this->build() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->build(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.SemanticVersion)
  return target;
}

size_t SemanticVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.SemanticVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 major = 1;
  if (this->major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->major());
  }

  // uint32 minor = 2;
  if (this->minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minor());
  }

  // uint32 build = 3;
  if (this->build() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->build());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SemanticVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.SemanticVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const SemanticVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SemanticVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.SemanticVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.SemanticVersion)
    MergeFrom(*source);
  }
}

void SemanticVersion::MergeFrom(const SemanticVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.SemanticVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.major() != 0) {
    set_major(from.major());
  }
  if (from.minor() != 0) {
    set_minor(from.minor());
  }
  if (from.build() != 0) {
    set_build(from.build());
  }
}

void SemanticVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.SemanticVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SemanticVersion::CopyFrom(const SemanticVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.SemanticVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SemanticVersion::IsInitialized() const {
  return true;
}

void SemanticVersion::Swap(SemanticVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SemanticVersion::InternalSwap(SemanticVersion* other) {
  using std::swap;
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  swap(build_, other->build_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SemanticVersion::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SemanticVersion

// uint32 major = 1;
void SemanticVersion::clear_major() {
  major_ = 0u;
}
::google::protobuf::uint32 SemanticVersion::major() const {
  // @@protoc_insertion_point(field_get:Client.SemanticVersion.major)
  return major_;
}
void SemanticVersion::set_major(::google::protobuf::uint32 value) {
  
  major_ = value;
  // @@protoc_insertion_point(field_set:Client.SemanticVersion.major)
}

// uint32 minor = 2;
void SemanticVersion::clear_minor() {
  minor_ = 0u;
}
::google::protobuf::uint32 SemanticVersion::minor() const {
  // @@protoc_insertion_point(field_get:Client.SemanticVersion.minor)
  return minor_;
}
void SemanticVersion::set_minor(::google::protobuf::uint32 value) {
  
  minor_ = value;
  // @@protoc_insertion_point(field_set:Client.SemanticVersion.minor)
}

// uint32 build = 3;
void SemanticVersion::clear_build() {
  build_ = 0u;
}
::google::protobuf::uint32 SemanticVersion::build() const {
  // @@protoc_insertion_point(field_get:Client.SemanticVersion.build)
  return build_;
}
void SemanticVersion::set_build(::google::protobuf::uint32 value) {
  
  build_ = value;
  // @@protoc_insertion_point(field_set:Client.SemanticVersion.build)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionCanary::Detection_DetectionCanary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionCanary)
}
Detection_DetectionCanary::Detection_DetectionCanary(const Detection_DetectionCanary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionCanary)
}

void Detection_DetectionCanary::SharedCtor() {
  _cached_size_ = 0;
}

Detection_DetectionCanary::~Detection_DetectionCanary() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionCanary)
  SharedDtor();
}

void Detection_DetectionCanary::SharedDtor() {
}

void Detection_DetectionCanary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionCanary::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionCanary& Detection_DetectionCanary::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionCanary* Detection_DetectionCanary::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionCanary* n = new Detection_DetectionCanary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionCanary::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionCanary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Detection_DetectionCanary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionCanary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionCanary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionCanary)
  return false;
#undef DO_
}

void Detection_DetectionCanary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionCanary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionCanary)
}

::google::protobuf::uint8* Detection_DetectionCanary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionCanary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionCanary)
  return target;
}

size_t Detection_DetectionCanary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionCanary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionCanary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionCanary)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionCanary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionCanary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionCanary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionCanary)
    MergeFrom(*source);
  }
}

void Detection_DetectionCanary::MergeFrom(const Detection_DetectionCanary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionCanary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Detection_DetectionCanary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionCanary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionCanary::CopyFrom(const Detection_DetectionCanary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionCanary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionCanary::IsInitialized() const {
  return true;
}

void Detection_DetectionCanary::Swap(Detection_DetectionCanary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionCanary::InternalSwap(Detection_DetectionCanary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionCanary::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionCanary

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionDebugger::Detection_DetectionDebugger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionDebugger)
}
Detection_DetectionDebugger::Detection_DetectionDebugger(const Detection_DetectionDebugger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionDebugger)
}

void Detection_DetectionDebugger::SharedCtor() {
  _cached_size_ = 0;
}

Detection_DetectionDebugger::~Detection_DetectionDebugger() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionDebugger)
  SharedDtor();
}

void Detection_DetectionDebugger::SharedDtor() {
}

void Detection_DetectionDebugger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionDebugger::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionDebugger& Detection_DetectionDebugger::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionDebugger* Detection_DetectionDebugger::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionDebugger* n = new Detection_DetectionDebugger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionDebugger::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionDebugger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Detection_DetectionDebugger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionDebugger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionDebugger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionDebugger)
  return false;
#undef DO_
}

void Detection_DetectionDebugger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionDebugger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionDebugger)
}

::google::protobuf::uint8* Detection_DetectionDebugger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionDebugger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionDebugger)
  return target;
}

size_t Detection_DetectionDebugger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionDebugger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionDebugger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionDebugger)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionDebugger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionDebugger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionDebugger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionDebugger)
    MergeFrom(*source);
  }
}

void Detection_DetectionDebugger::MergeFrom(const Detection_DetectionDebugger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionDebugger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Detection_DetectionDebugger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionDebugger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionDebugger::CopyFrom(const Detection_DetectionDebugger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionDebugger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionDebugger::IsInitialized() const {
  return true;
}

void Detection_DetectionDebugger::Swap(Detection_DetectionDebugger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionDebugger::InternalSwap(Detection_DetectionDebugger* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionDebugger::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionDebugger

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionHypervisor::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionHypervisor::Detection_DetectionHypervisor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionHypervisor)
}
Detection_DetectionHypervisor::Detection_DetectionHypervisor(const Detection_DetectionHypervisor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionHypervisor)
}

void Detection_DetectionHypervisor::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Detection_DetectionHypervisor::~Detection_DetectionHypervisor() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionHypervisor)
  SharedDtor();
}

void Detection_DetectionHypervisor::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Detection_DetectionHypervisor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionHypervisor::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionHypervisor& Detection_DetectionHypervisor::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionHypervisor* Detection_DetectionHypervisor::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionHypervisor* n = new Detection_DetectionHypervisor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionHypervisor::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionHypervisor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Detection_DetectionHypervisor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionHypervisor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Client.Detection.DetectionHypervisor.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionHypervisor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionHypervisor)
  return false;
#undef DO_
}

void Detection_DetectionHypervisor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionHypervisor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionHypervisor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionHypervisor)
}

::google::protobuf::uint8* Detection_DetectionHypervisor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionHypervisor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionHypervisor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionHypervisor)
  return target;
}

size_t Detection_DetectionHypervisor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionHypervisor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionHypervisor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionHypervisor)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionHypervisor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionHypervisor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionHypervisor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionHypervisor)
    MergeFrom(*source);
  }
}

void Detection_DetectionHypervisor::MergeFrom(const Detection_DetectionHypervisor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionHypervisor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Detection_DetectionHypervisor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionHypervisor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionHypervisor::CopyFrom(const Detection_DetectionHypervisor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionHypervisor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionHypervisor::IsInitialized() const {
  return true;
}

void Detection_DetectionHypervisor::Swap(Detection_DetectionHypervisor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionHypervisor::InternalSwap(Detection_DetectionHypervisor* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionHypervisor::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionHypervisor

// string name = 1;
void Detection_DetectionHypervisor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionHypervisor::name() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionHypervisor.name)
  return name_.GetNoArena();
}
void Detection_DetectionHypervisor::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionHypervisor.name)
}
#if LANG_CXX11
void Detection_DetectionHypervisor::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionHypervisor.name)
}
#endif
void Detection_DetectionHypervisor::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionHypervisor.name)
}
void Detection_DetectionHypervisor::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionHypervisor.name)
}
::std::string* Detection_DetectionHypervisor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionHypervisor.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionHypervisor::release_name() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionHypervisor.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionHypervisor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionHypervisor.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionOsQuery::kVersionFieldNumber;
const int Detection_DetectionOsQuery::kCrashDumpFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionOsQuery::Detection_DetectionOsQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionOsQuery)
}
Detection_DetectionOsQuery::Detection_DetectionOsQuery(const Detection_DetectionOsQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    version_ = new ::Client::SemanticVersion(*from.version_);
  } else {
    version_ = NULL;
  }
  crashdumpflag_ = from.crashdumpflag_;
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionOsQuery)
}

void Detection_DetectionOsQuery::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crashdumpflag_) -
      reinterpret_cast<char*>(&version_)) + sizeof(crashdumpflag_));
  _cached_size_ = 0;
}

Detection_DetectionOsQuery::~Detection_DetectionOsQuery() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionOsQuery)
  SharedDtor();
}

void Detection_DetectionOsQuery::SharedDtor() {
  if (this != internal_default_instance()) delete version_;
}

void Detection_DetectionOsQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionOsQuery::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionOsQuery& Detection_DetectionOsQuery::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionOsQuery* Detection_DetectionOsQuery::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionOsQuery* n = new Detection_DetectionOsQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionOsQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionOsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  crashdumpflag_ = 0u;
  _internal_metadata_.Clear();
}

bool Detection_DetectionOsQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionOsQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Client.SemanticVersion version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 crashDumpFlag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crashdumpflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionOsQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionOsQuery)
  return false;
#undef DO_
}

void Detection_DetectionOsQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionOsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Client.SemanticVersion version = 1;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->version_, output);
  }

  // uint32 crashDumpFlag = 2;
  if (this->crashdumpflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->crashdumpflag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionOsQuery)
}

::google::protobuf::uint8* Detection_DetectionOsQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionOsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Client.SemanticVersion version = 1;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->version_, deterministic, target);
  }

  // uint32 crashDumpFlag = 2;
  if (this->crashdumpflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->crashdumpflag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionOsQuery)
  return target;
}

size_t Detection_DetectionOsQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionOsQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Client.SemanticVersion version = 1;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->version_);
  }

  // uint32 crashDumpFlag = 2;
  if (this->crashdumpflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crashdumpflag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionOsQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionOsQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionOsQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionOsQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionOsQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionOsQuery)
    MergeFrom(*source);
  }
}

void Detection_DetectionOsQuery::MergeFrom(const Detection_DetectionOsQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionOsQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_version()) {
    mutable_version()->::Client::SemanticVersion::MergeFrom(from.version());
  }
  if (from.crashdumpflag() != 0) {
    set_crashdumpflag(from.crashdumpflag());
  }
}

void Detection_DetectionOsQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionOsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionOsQuery::CopyFrom(const Detection_DetectionOsQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionOsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionOsQuery::IsInitialized() const {
  return true;
}

void Detection_DetectionOsQuery::Swap(Detection_DetectionOsQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionOsQuery::InternalSwap(Detection_DetectionOsQuery* other) {
  using std::swap;
  swap(version_, other->version_);
  swap(crashdumpflag_, other->crashdumpflag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionOsQuery::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionOsQuery

// .Client.SemanticVersion version = 1;
bool Detection_DetectionOsQuery::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
void Detection_DetectionOsQuery::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) delete version_;
  version_ = NULL;
}
const ::Client::SemanticVersion& Detection_DetectionOsQuery::version() const {
  const ::Client::SemanticVersion* p = version_;
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionOsQuery.version)
  return p != NULL ? *p : *reinterpret_cast<const ::Client::SemanticVersion*>(
      &::Client::_SemanticVersion_default_instance_);
}
::Client::SemanticVersion* Detection_DetectionOsQuery::mutable_version() {
  
  if (version_ == NULL) {
    version_ = new ::Client::SemanticVersion;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionOsQuery.version)
  return version_;
}
::Client::SemanticVersion* Detection_DetectionOsQuery::release_version() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionOsQuery.version)
  
  ::Client::SemanticVersion* temp = version_;
  version_ = NULL;
  return temp;
}
void Detection_DetectionOsQuery::set_allocated_version(::Client::SemanticVersion* version) {
  delete version_;
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionOsQuery.version)
}

// uint32 crashDumpFlag = 2;
void Detection_DetectionOsQuery::clear_crashdumpflag() {
  crashdumpflag_ = 0u;
}
::google::protobuf::uint32 Detection_DetectionOsQuery::crashdumpflag() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionOsQuery.crashDumpFlag)
  return crashdumpflag_;
}
void Detection_DetectionOsQuery::set_crashdumpflag(::google::protobuf::uint32 value) {
  
  crashdumpflag_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionOsQuery.crashDumpFlag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionHwid_HardwareId::kNameFieldNumber;
const int Detection_DetectionHwid_HardwareId::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionHwid_HardwareId::Detection_DetectionHwid_HardwareId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionHwid.HardwareId)
}
Detection_DetectionHwid_HardwareId::Detection_DetectionHwid_HardwareId(const Detection_DetectionHwid_HardwareId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionHwid.HardwareId)
}

void Detection_DetectionHwid_HardwareId::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Detection_DetectionHwid_HardwareId::~Detection_DetectionHwid_HardwareId() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionHwid.HardwareId)
  SharedDtor();
}

void Detection_DetectionHwid_HardwareId::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Detection_DetectionHwid_HardwareId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionHwid_HardwareId::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionHwid_HardwareId& Detection_DetectionHwid_HardwareId::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionHwid_HardwareId* Detection_DetectionHwid_HardwareId::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionHwid_HardwareId* n = new Detection_DetectionHwid_HardwareId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionHwid_HardwareId::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionHwid.HardwareId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Detection_DetectionHwid_HardwareId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionHwid.HardwareId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Client.Detection.DetectionHwid.HardwareId.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionHwid.HardwareId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionHwid.HardwareId)
  return false;
#undef DO_
}

void Detection_DetectionHwid_HardwareId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionHwid.HardwareId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionHwid.HardwareId.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionHwid.HardwareId)
}

::google::protobuf::uint8* Detection_DetectionHwid_HardwareId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionHwid.HardwareId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionHwid.HardwareId.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionHwid.HardwareId)
  return target;
}

size_t Detection_DetectionHwid_HardwareId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionHwid.HardwareId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionHwid_HardwareId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionHwid.HardwareId)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionHwid_HardwareId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionHwid_HardwareId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionHwid.HardwareId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionHwid.HardwareId)
    MergeFrom(*source);
  }
}

void Detection_DetectionHwid_HardwareId::MergeFrom(const Detection_DetectionHwid_HardwareId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionHwid.HardwareId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Detection_DetectionHwid_HardwareId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionHwid.HardwareId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionHwid_HardwareId::CopyFrom(const Detection_DetectionHwid_HardwareId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionHwid.HardwareId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionHwid_HardwareId::IsInitialized() const {
  return true;
}

void Detection_DetectionHwid_HardwareId::Swap(Detection_DetectionHwid_HardwareId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionHwid_HardwareId::InternalSwap(Detection_DetectionHwid_HardwareId* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionHwid_HardwareId::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionHwid_HardwareId

// string name = 1;
void Detection_DetectionHwid_HardwareId::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionHwid_HardwareId::name() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionHwid.HardwareId.name)
  return name_.GetNoArena();
}
void Detection_DetectionHwid_HardwareId::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionHwid.HardwareId.name)
}
#if LANG_CXX11
void Detection_DetectionHwid_HardwareId::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionHwid.HardwareId.name)
}
#endif
void Detection_DetectionHwid_HardwareId::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionHwid.HardwareId.name)
}
void Detection_DetectionHwid_HardwareId::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionHwid.HardwareId.name)
}
::std::string* Detection_DetectionHwid_HardwareId::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionHwid.HardwareId.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionHwid_HardwareId::release_name() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionHwid.HardwareId.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionHwid_HardwareId::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionHwid.HardwareId.name)
}

// bytes value = 2;
void Detection_DetectionHwid_HardwareId::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionHwid_HardwareId::value() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionHwid.HardwareId.value)
  return value_.GetNoArena();
}
void Detection_DetectionHwid_HardwareId::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionHwid.HardwareId.value)
}
#if LANG_CXX11
void Detection_DetectionHwid_HardwareId::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionHwid.HardwareId.value)
}
#endif
void Detection_DetectionHwid_HardwareId::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionHwid.HardwareId.value)
}
void Detection_DetectionHwid_HardwareId::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionHwid.HardwareId.value)
}
::std::string* Detection_DetectionHwid_HardwareId::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionHwid.HardwareId.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionHwid_HardwareId::release_value() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionHwid.HardwareId.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionHwid_HardwareId::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionHwid.HardwareId.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionHwid::kHwidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionHwid::Detection_DetectionHwid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionHwid)
}
Detection_DetectionHwid::Detection_DetectionHwid(const Detection_DetectionHwid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hwids_(from.hwids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionHwid)
}

void Detection_DetectionHwid::SharedCtor() {
  _cached_size_ = 0;
}

Detection_DetectionHwid::~Detection_DetectionHwid() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionHwid)
  SharedDtor();
}

void Detection_DetectionHwid::SharedDtor() {
}

void Detection_DetectionHwid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionHwid::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionHwid& Detection_DetectionHwid::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionHwid* Detection_DetectionHwid::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionHwid* n = new Detection_DetectionHwid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionHwid::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionHwid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hwids_.Clear();
  _internal_metadata_.Clear();
}

bool Detection_DetectionHwid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionHwid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Client.Detection.DetectionHwid.HardwareId hwids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hwids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionHwid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionHwid)
  return false;
#undef DO_
}

void Detection_DetectionHwid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionHwid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Client.Detection.DetectionHwid.HardwareId hwids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hwids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hwids(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionHwid)
}

::google::protobuf::uint8* Detection_DetectionHwid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionHwid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Client.Detection.DetectionHwid.HardwareId hwids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hwids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->hwids(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionHwid)
  return target;
}

size_t Detection_DetectionHwid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionHwid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Client.Detection.DetectionHwid.HardwareId hwids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hwids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hwids(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionHwid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionHwid)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionHwid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionHwid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionHwid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionHwid)
    MergeFrom(*source);
  }
}

void Detection_DetectionHwid::MergeFrom(const Detection_DetectionHwid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionHwid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hwids_.MergeFrom(from.hwids_);
}

void Detection_DetectionHwid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionHwid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionHwid::CopyFrom(const Detection_DetectionHwid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionHwid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionHwid::IsInitialized() const {
  return true;
}

void Detection_DetectionHwid::Swap(Detection_DetectionHwid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionHwid::InternalSwap(Detection_DetectionHwid* other) {
  using std::swap;
  hwids_.InternalSwap(&other->hwids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionHwid::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionHwid

// repeated .Client.Detection.DetectionHwid.HardwareId hwids = 1;
int Detection_DetectionHwid::hwids_size() const {
  return hwids_.size();
}
void Detection_DetectionHwid::clear_hwids() {
  hwids_.Clear();
}
const ::Client::Detection_DetectionHwid_HardwareId& Detection_DetectionHwid::hwids(int index) const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionHwid.hwids)
  return hwids_.Get(index);
}
::Client::Detection_DetectionHwid_HardwareId* Detection_DetectionHwid::mutable_hwids(int index) {
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionHwid.hwids)
  return hwids_.Mutable(index);
}
::Client::Detection_DetectionHwid_HardwareId* Detection_DetectionHwid::add_hwids() {
  // @@protoc_insertion_point(field_add:Client.Detection.DetectionHwid.hwids)
  return hwids_.Add();
}
::google::protobuf::RepeatedPtrField< ::Client::Detection_DetectionHwid_HardwareId >*
Detection_DetectionHwid::mutable_hwids() {
  // @@protoc_insertion_point(field_mutable_list:Client.Detection.DetectionHwid.hwids)
  return &hwids_;
}
const ::google::protobuf::RepeatedPtrField< ::Client::Detection_DetectionHwid_HardwareId >&
Detection_DetectionHwid::hwids() const {
  // @@protoc_insertion_point(field_list:Client.Detection.DetectionHwid.hwids)
  return hwids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionSignature::kStreamOffsetFieldNumber;
const int Detection_DetectionSignature::kImageBaseFieldNumber;
const int Detection_DetectionSignature::kImageSizeFieldNumber;
const int Detection_DetectionSignature::kImageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionSignature::Detection_DetectionSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionSignature)
}
Detection_DetectionSignature::Detection_DetectionSignature(const Detection_DetectionSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imagename().size() > 0) {
    imagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagename_);
  }
  ::memcpy(&streamoffset_, &from.streamoffset_,
    static_cast<size_t>(reinterpret_cast<char*>(&imagesize_) -
    reinterpret_cast<char*>(&streamoffset_)) + sizeof(imagesize_));
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionSignature)
}

void Detection_DetectionSignature::SharedCtor() {
  imagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&streamoffset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imagesize_) -
      reinterpret_cast<char*>(&streamoffset_)) + sizeof(imagesize_));
  _cached_size_ = 0;
}

Detection_DetectionSignature::~Detection_DetectionSignature() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionSignature)
  SharedDtor();
}

void Detection_DetectionSignature::SharedDtor() {
  imagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Detection_DetectionSignature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionSignature::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionSignature& Detection_DetectionSignature::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionSignature* Detection_DetectionSignature::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionSignature* n = new Detection_DetectionSignature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&streamoffset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imagesize_) -
      reinterpret_cast<char*>(&streamoffset_)) + sizeof(imagesize_));
  _internal_metadata_.Clear();
}

bool Detection_DetectionSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionSignature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 streamOffset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &streamoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 imageBase = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &imagebase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 imageSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &imagesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string imageName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imagename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imagename().data(), static_cast<int>(this->imagename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Client.Detection.DetectionSignature.imageName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionSignature)
  return false;
#undef DO_
}

void Detection_DetectionSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 streamOffset = 1;
  if (this->streamoffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->streamoffset(), output);
  }

  // int64 imageBase = 2;
  if (this->imagebase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->imagebase(), output);
  }

  // int64 imageSize = 3;
  if (this->imagesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->imagesize(), output);
  }

  // string imageName = 4;
  if (this->imagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagename().data(), static_cast<int>(this->imagename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionSignature.imageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->imagename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionSignature)
}

::google::protobuf::uint8* Detection_DetectionSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 streamOffset = 1;
  if (this->streamoffset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->streamoffset(), target);
  }

  // int64 imageBase = 2;
  if (this->imagebase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->imagebase(), target);
  }

  // int64 imageSize = 3;
  if (this->imagesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->imagesize(), target);
  }

  // string imageName = 4;
  if (this->imagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagename().data(), static_cast<int>(this->imagename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionSignature.imageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->imagename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionSignature)
  return target;
}

size_t Detection_DetectionSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionSignature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string imageName = 4;
  if (this->imagename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imagename());
  }

  // int64 streamOffset = 1;
  if (this->streamoffset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->streamoffset());
  }

  // int64 imageBase = 2;
  if (this->imagebase() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->imagebase());
  }

  // int64 imageSize = 3;
  if (this->imagesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->imagesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionSignature)
    MergeFrom(*source);
  }
}

void Detection_DetectionSignature::MergeFrom(const Detection_DetectionSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imagename().size() > 0) {

    imagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagename_);
  }
  if (from.streamoffset() != 0) {
    set_streamoffset(from.streamoffset());
  }
  if (from.imagebase() != 0) {
    set_imagebase(from.imagebase());
  }
  if (from.imagesize() != 0) {
    set_imagesize(from.imagesize());
  }
}

void Detection_DetectionSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionSignature::CopyFrom(const Detection_DetectionSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionSignature::IsInitialized() const {
  return true;
}

void Detection_DetectionSignature::Swap(Detection_DetectionSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionSignature::InternalSwap(Detection_DetectionSignature* other) {
  using std::swap;
  imagename_.Swap(&other->imagename_);
  swap(streamoffset_, other->streamoffset_);
  swap(imagebase_, other->imagebase_);
  swap(imagesize_, other->imagesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionSignature::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionSignature

// int64 streamOffset = 1;
void Detection_DetectionSignature::clear_streamoffset() {
  streamoffset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Detection_DetectionSignature::streamoffset() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionSignature.streamOffset)
  return streamoffset_;
}
void Detection_DetectionSignature::set_streamoffset(::google::protobuf::int64 value) {
  
  streamoffset_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionSignature.streamOffset)
}

// int64 imageBase = 2;
void Detection_DetectionSignature::clear_imagebase() {
  imagebase_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Detection_DetectionSignature::imagebase() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionSignature.imageBase)
  return imagebase_;
}
void Detection_DetectionSignature::set_imagebase(::google::protobuf::int64 value) {
  
  imagebase_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionSignature.imageBase)
}

// int64 imageSize = 3;
void Detection_DetectionSignature::clear_imagesize() {
  imagesize_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Detection_DetectionSignature::imagesize() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionSignature.imageSize)
  return imagesize_;
}
void Detection_DetectionSignature::set_imagesize(::google::protobuf::int64 value) {
  
  imagesize_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionSignature.imageSize)
}

// string imageName = 4;
void Detection_DetectionSignature::clear_imagename() {
  imagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionSignature::imagename() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionSignature.imageName)
  return imagename_.GetNoArena();
}
void Detection_DetectionSignature::set_imagename(const ::std::string& value) {
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionSignature.imageName)
}
#if LANG_CXX11
void Detection_DetectionSignature::set_imagename(::std::string&& value) {
  
  imagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionSignature.imageName)
}
#endif
void Detection_DetectionSignature::set_imagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionSignature.imageName)
}
void Detection_DetectionSignature::set_imagename(const char* value, size_t size) {
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionSignature.imageName)
}
::std::string* Detection_DetectionSignature::mutable_imagename() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionSignature.imageName)
  return imagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionSignature::release_imagename() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionSignature.imageName)
  
  return imagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionSignature::set_allocated_imagename(::std::string* imagename) {
  if (imagename != NULL) {
    
  } else {
    
  }
  imagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagename);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionSignature.imageName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionText::kStreamOffsetFieldNumber;
const int Detection_DetectionText::kImageBaseFieldNumber;
const int Detection_DetectionText::kImageSizeFieldNumber;
const int Detection_DetectionText::kImageNameFieldNumber;
const int Detection_DetectionText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionText::Detection_DetectionText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionText)
}
Detection_DetectionText::Detection_DetectionText(const Detection_DetectionText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imagename().size() > 0) {
    imagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagename_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&streamoffset_, &from.streamoffset_,
    static_cast<size_t>(reinterpret_cast<char*>(&imagesize_) -
    reinterpret_cast<char*>(&streamoffset_)) + sizeof(imagesize_));
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionText)
}

void Detection_DetectionText::SharedCtor() {
  imagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&streamoffset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imagesize_) -
      reinterpret_cast<char*>(&streamoffset_)) + sizeof(imagesize_));
  _cached_size_ = 0;
}

Detection_DetectionText::~Detection_DetectionText() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionText)
  SharedDtor();
}

void Detection_DetectionText::SharedDtor() {
  imagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Detection_DetectionText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionText::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionText& Detection_DetectionText::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionText* Detection_DetectionText::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionText* n = new Detection_DetectionText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionText::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&streamoffset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imagesize_) -
      reinterpret_cast<char*>(&streamoffset_)) + sizeof(imagesize_));
  _internal_metadata_.Clear();
}

bool Detection_DetectionText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 streamOffset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &streamoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 imageBase = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &imagebase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 imageSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &imagesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string imageName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imagename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imagename().data(), static_cast<int>(this->imagename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Client.Detection.DetectionText.imageName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Client.Detection.DetectionText.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionText)
  return false;
#undef DO_
}

void Detection_DetectionText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 streamOffset = 1;
  if (this->streamoffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->streamoffset(), output);
  }

  // int64 imageBase = 2;
  if (this->imagebase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->imagebase(), output);
  }

  // int64 imageSize = 3;
  if (this->imagesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->imagesize(), output);
  }

  // string imageName = 4;
  if (this->imagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagename().data(), static_cast<int>(this->imagename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionText.imageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->imagename(), output);
  }

  // string text = 5;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionText)
}

::google::protobuf::uint8* Detection_DetectionText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 streamOffset = 1;
  if (this->streamoffset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->streamoffset(), target);
  }

  // int64 imageBase = 2;
  if (this->imagebase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->imagebase(), target);
  }

  // int64 imageSize = 3;
  if (this->imagesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->imagesize(), target);
  }

  // string imageName = 4;
  if (this->imagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagename().data(), static_cast<int>(this->imagename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionText.imageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->imagename(), target);
  }

  // string text = 5;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionText)
  return target;
}

size_t Detection_DetectionText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionText)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string imageName = 4;
  if (this->imagename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imagename());
  }

  // string text = 5;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // int64 streamOffset = 1;
  if (this->streamoffset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->streamoffset());
  }

  // int64 imageBase = 2;
  if (this->imagebase() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->imagebase());
  }

  // int64 imageSize = 3;
  if (this->imagesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->imagesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionText)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionText)
    MergeFrom(*source);
  }
}

void Detection_DetectionText::MergeFrom(const Detection_DetectionText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imagename().size() > 0) {

    imagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagename_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.streamoffset() != 0) {
    set_streamoffset(from.streamoffset());
  }
  if (from.imagebase() != 0) {
    set_imagebase(from.imagebase());
  }
  if (from.imagesize() != 0) {
    set_imagesize(from.imagesize());
  }
}

void Detection_DetectionText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionText::CopyFrom(const Detection_DetectionText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionText::IsInitialized() const {
  return true;
}

void Detection_DetectionText::Swap(Detection_DetectionText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionText::InternalSwap(Detection_DetectionText* other) {
  using std::swap;
  imagename_.Swap(&other->imagename_);
  text_.Swap(&other->text_);
  swap(streamoffset_, other->streamoffset_);
  swap(imagebase_, other->imagebase_);
  swap(imagesize_, other->imagesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionText::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionText

// int64 streamOffset = 1;
void Detection_DetectionText::clear_streamoffset() {
  streamoffset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Detection_DetectionText::streamoffset() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionText.streamOffset)
  return streamoffset_;
}
void Detection_DetectionText::set_streamoffset(::google::protobuf::int64 value) {
  
  streamoffset_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionText.streamOffset)
}

// int64 imageBase = 2;
void Detection_DetectionText::clear_imagebase() {
  imagebase_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Detection_DetectionText::imagebase() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionText.imageBase)
  return imagebase_;
}
void Detection_DetectionText::set_imagebase(::google::protobuf::int64 value) {
  
  imagebase_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionText.imageBase)
}

// int64 imageSize = 3;
void Detection_DetectionText::clear_imagesize() {
  imagesize_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Detection_DetectionText::imagesize() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionText.imageSize)
  return imagesize_;
}
void Detection_DetectionText::set_imagesize(::google::protobuf::int64 value) {
  
  imagesize_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionText.imageSize)
}

// string imageName = 4;
void Detection_DetectionText::clear_imagename() {
  imagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionText::imagename() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionText.imageName)
  return imagename_.GetNoArena();
}
void Detection_DetectionText::set_imagename(const ::std::string& value) {
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionText.imageName)
}
#if LANG_CXX11
void Detection_DetectionText::set_imagename(::std::string&& value) {
  
  imagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionText.imageName)
}
#endif
void Detection_DetectionText::set_imagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionText.imageName)
}
void Detection_DetectionText::set_imagename(const char* value, size_t size) {
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionText.imageName)
}
::std::string* Detection_DetectionText::mutable_imagename() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionText.imageName)
  return imagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionText::release_imagename() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionText.imageName)
  
  return imagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionText::set_allocated_imagename(::std::string* imagename) {
  if (imagename != NULL) {
    
  } else {
    
  }
  imagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagename);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionText.imageName)
}

// string text = 5;
void Detection_DetectionText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionText::text() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionText.text)
  return text_.GetNoArena();
}
void Detection_DetectionText::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionText.text)
}
#if LANG_CXX11
void Detection_DetectionText::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionText.text)
}
#endif
void Detection_DetectionText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionText.text)
}
void Detection_DetectionText::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionText.text)
}
::std::string* Detection_DetectionText::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionText::release_text() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionText.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionText.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionHook::kHookTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionHook::Detection_DetectionHook()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionHook)
}
Detection_DetectionHook::Detection_DetectionHook(const Detection_DetectionHook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hooktype_ = from.hooktype_;
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionHook)
}

void Detection_DetectionHook::SharedCtor() {
  hooktype_ = 0;
  _cached_size_ = 0;
}

Detection_DetectionHook::~Detection_DetectionHook() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionHook)
  SharedDtor();
}

void Detection_DetectionHook::SharedDtor() {
}

void Detection_DetectionHook::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionHook::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionHook& Detection_DetectionHook::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionHook* Detection_DetectionHook::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionHook* n = new Detection_DetectionHook;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionHook::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionHook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hooktype_ = 0;
  _internal_metadata_.Clear();
}

bool Detection_DetectionHook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionHook)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Client.HookType hookType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hooktype(static_cast< ::Client::HookType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionHook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionHook)
  return false;
#undef DO_
}

void Detection_DetectionHook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionHook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Client.HookType hookType = 1;
  if (this->hooktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->hooktype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionHook)
}

::google::protobuf::uint8* Detection_DetectionHook::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionHook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Client.HookType hookType = 1;
  if (this->hooktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->hooktype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionHook)
  return target;
}

size_t Detection_DetectionHook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionHook)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Client.HookType hookType = 1;
  if (this->hooktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hooktype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionHook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionHook)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionHook* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionHook>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionHook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionHook)
    MergeFrom(*source);
  }
}

void Detection_DetectionHook::MergeFrom(const Detection_DetectionHook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionHook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hooktype() != 0) {
    set_hooktype(from.hooktype());
  }
}

void Detection_DetectionHook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionHook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionHook::CopyFrom(const Detection_DetectionHook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionHook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionHook::IsInitialized() const {
  return true;
}

void Detection_DetectionHook::Swap(Detection_DetectionHook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionHook::InternalSwap(Detection_DetectionHook* other) {
  using std::swap;
  swap(hooktype_, other->hooktype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionHook::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionHook

// .Client.HookType hookType = 1;
void Detection_DetectionHook::clear_hooktype() {
  hooktype_ = 0;
}
::Client::HookType Detection_DetectionHook::hooktype() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionHook.hookType)
  return static_cast< ::Client::HookType >(hooktype_);
}
void Detection_DetectionHook::set_hooktype(::Client::HookType value) {
  
  hooktype_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionHook.hookType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionForeignCode::kAbnormalEntropyFieldNumber;
const int Detection_DetectionForeignCode::kImageNameFieldNumber;
const int Detection_DetectionForeignCode::kImageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionForeignCode::Detection_DetectionForeignCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionForeignCode)
}
Detection_DetectionForeignCode::Detection_DetectionForeignCode(const Detection_DetectionForeignCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imagename().size() > 0) {
    imagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagename_);
  }
  imagedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imagedata().size() > 0) {
    imagedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagedata_);
  }
  abnormalentropy_ = from.abnormalentropy_;
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionForeignCode)
}

void Detection_DetectionForeignCode::SharedCtor() {
  imagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abnormalentropy_ = false;
  _cached_size_ = 0;
}

Detection_DetectionForeignCode::~Detection_DetectionForeignCode() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionForeignCode)
  SharedDtor();
}

void Detection_DetectionForeignCode::SharedDtor() {
  imagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Detection_DetectionForeignCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionForeignCode::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionForeignCode& Detection_DetectionForeignCode::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionForeignCode* Detection_DetectionForeignCode::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionForeignCode* n = new Detection_DetectionForeignCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionForeignCode::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionForeignCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abnormalentropy_ = false;
  _internal_metadata_.Clear();
}

bool Detection_DetectionForeignCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionForeignCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool abnormalEntropy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &abnormalentropy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string imageName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imagename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imagename().data(), static_cast<int>(this->imagename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Client.Detection.DetectionForeignCode.imageName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes imageData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imagedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionForeignCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionForeignCode)
  return false;
#undef DO_
}

void Detection_DetectionForeignCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionForeignCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool abnormalEntropy = 1;
  if (this->abnormalentropy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->abnormalentropy(), output);
  }

  // string imageName = 2;
  if (this->imagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagename().data(), static_cast<int>(this->imagename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionForeignCode.imageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->imagename(), output);
  }

  // bytes imageData = 3;
  if (this->imagedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->imagedata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionForeignCode)
}

::google::protobuf::uint8* Detection_DetectionForeignCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionForeignCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool abnormalEntropy = 1;
  if (this->abnormalentropy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->abnormalentropy(), target);
  }

  // string imageName = 2;
  if (this->imagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagename().data(), static_cast<int>(this->imagename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.Detection.DetectionForeignCode.imageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->imagename(), target);
  }

  // bytes imageData = 3;
  if (this->imagedata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->imagedata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionForeignCode)
  return target;
}

size_t Detection_DetectionForeignCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionForeignCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string imageName = 2;
  if (this->imagename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imagename());
  }

  // bytes imageData = 3;
  if (this->imagedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imagedata());
  }

  // bool abnormalEntropy = 1;
  if (this->abnormalentropy() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionForeignCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionForeignCode)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionForeignCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionForeignCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionForeignCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionForeignCode)
    MergeFrom(*source);
  }
}

void Detection_DetectionForeignCode::MergeFrom(const Detection_DetectionForeignCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionForeignCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imagename().size() > 0) {

    imagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagename_);
  }
  if (from.imagedata().size() > 0) {

    imagedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagedata_);
  }
  if (from.abnormalentropy() != 0) {
    set_abnormalentropy(from.abnormalentropy());
  }
}

void Detection_DetectionForeignCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionForeignCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionForeignCode::CopyFrom(const Detection_DetectionForeignCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionForeignCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionForeignCode::IsInitialized() const {
  return true;
}

void Detection_DetectionForeignCode::Swap(Detection_DetectionForeignCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionForeignCode::InternalSwap(Detection_DetectionForeignCode* other) {
  using std::swap;
  imagename_.Swap(&other->imagename_);
  imagedata_.Swap(&other->imagedata_);
  swap(abnormalentropy_, other->abnormalentropy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionForeignCode::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionForeignCode

// bool abnormalEntropy = 1;
void Detection_DetectionForeignCode::clear_abnormalentropy() {
  abnormalentropy_ = false;
}
bool Detection_DetectionForeignCode::abnormalentropy() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionForeignCode.abnormalEntropy)
  return abnormalentropy_;
}
void Detection_DetectionForeignCode::set_abnormalentropy(bool value) {
  
  abnormalentropy_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionForeignCode.abnormalEntropy)
}

// string imageName = 2;
void Detection_DetectionForeignCode::clear_imagename() {
  imagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionForeignCode::imagename() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionForeignCode.imageName)
  return imagename_.GetNoArena();
}
void Detection_DetectionForeignCode::set_imagename(const ::std::string& value) {
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionForeignCode.imageName)
}
#if LANG_CXX11
void Detection_DetectionForeignCode::set_imagename(::std::string&& value) {
  
  imagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionForeignCode.imageName)
}
#endif
void Detection_DetectionForeignCode::set_imagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionForeignCode.imageName)
}
void Detection_DetectionForeignCode::set_imagename(const char* value, size_t size) {
  
  imagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionForeignCode.imageName)
}
::std::string* Detection_DetectionForeignCode::mutable_imagename() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionForeignCode.imageName)
  return imagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionForeignCode::release_imagename() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionForeignCode.imageName)
  
  return imagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionForeignCode::set_allocated_imagename(::std::string* imagename) {
  if (imagename != NULL) {
    
  } else {
    
  }
  imagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagename);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionForeignCode.imageName)
}

// bytes imageData = 3;
void Detection_DetectionForeignCode::clear_imagedata() {
  imagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionForeignCode::imagedata() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionForeignCode.imageData)
  return imagedata_.GetNoArena();
}
void Detection_DetectionForeignCode::set_imagedata(const ::std::string& value) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionForeignCode.imageData)
}
#if LANG_CXX11
void Detection_DetectionForeignCode::set_imagedata(::std::string&& value) {
  
  imagedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionForeignCode.imageData)
}
#endif
void Detection_DetectionForeignCode::set_imagedata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionForeignCode.imageData)
}
void Detection_DetectionForeignCode::set_imagedata(const void* value, size_t size) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionForeignCode.imageData)
}
::std::string* Detection_DetectionForeignCode::mutable_imagedata() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionForeignCode.imageData)
  return imagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionForeignCode::release_imagedata() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionForeignCode.imageData)
  
  return imagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionForeignCode::set_allocated_imagedata(::std::string* imagedata) {
  if (imagedata != NULL) {
    
  } else {
    
  }
  imagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagedata);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionForeignCode.imageData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionScreenshot::kDataFieldNumber;
const int Detection_DetectionScreenshot::kSourceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionScreenshot::Detection_DetectionScreenshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionScreenshot)
}
Detection_DetectionScreenshot::Detection_DetectionScreenshot(const Detection_DetectionScreenshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  sourcetype_ = from.sourcetype_;
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionScreenshot)
}

void Detection_DetectionScreenshot::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourcetype_ = 0;
  _cached_size_ = 0;
}

Detection_DetectionScreenshot::~Detection_DetectionScreenshot() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionScreenshot)
  SharedDtor();
}

void Detection_DetectionScreenshot::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Detection_DetectionScreenshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionScreenshot::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionScreenshot& Detection_DetectionScreenshot::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionScreenshot* Detection_DetectionScreenshot::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionScreenshot* n = new Detection_DetectionScreenshot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourcetype_ = 0;
  _internal_metadata_.Clear();
}

bool Detection_DetectionScreenshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionScreenshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.ScreenshotSourceType sourceType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sourcetype(static_cast< ::Client::ScreenshotSourceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionScreenshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionScreenshot)
  return false;
#undef DO_
}

void Detection_DetectionScreenshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // .Client.ScreenshotSourceType sourceType = 2;
  if (this->sourcetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->sourcetype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionScreenshot)
}

::google::protobuf::uint8* Detection_DetectionScreenshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // .Client.ScreenshotSourceType sourceType = 2;
  if (this->sourcetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->sourcetype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionScreenshot)
  return target;
}

size_t Detection_DetectionScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionScreenshot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .Client.ScreenshotSourceType sourceType = 2;
  if (this->sourcetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sourcetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionScreenshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionScreenshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionScreenshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionScreenshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionScreenshot)
    MergeFrom(*source);
  }
}

void Detection_DetectionScreenshot::MergeFrom(const Detection_DetectionScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.sourcetype() != 0) {
    set_sourcetype(from.sourcetype());
  }
}

void Detection_DetectionScreenshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionScreenshot::CopyFrom(const Detection_DetectionScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionScreenshot::IsInitialized() const {
  return true;
}

void Detection_DetectionScreenshot::Swap(Detection_DetectionScreenshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionScreenshot::InternalSwap(Detection_DetectionScreenshot* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(sourcetype_, other->sourcetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionScreenshot::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionScreenshot

// bytes data = 1;
void Detection_DetectionScreenshot::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionScreenshot::data() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionScreenshot.data)
  return data_.GetNoArena();
}
void Detection_DetectionScreenshot::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionScreenshot.data)
}
#if LANG_CXX11
void Detection_DetectionScreenshot::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionScreenshot.data)
}
#endif
void Detection_DetectionScreenshot::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionScreenshot.data)
}
void Detection_DetectionScreenshot::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionScreenshot.data)
}
::std::string* Detection_DetectionScreenshot::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionScreenshot.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionScreenshot::release_data() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionScreenshot.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionScreenshot::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionScreenshot.data)
}

// .Client.ScreenshotSourceType sourceType = 2;
void Detection_DetectionScreenshot::clear_sourcetype() {
  sourcetype_ = 0;
}
::Client::ScreenshotSourceType Detection_DetectionScreenshot::sourcetype() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionScreenshot.sourceType)
  return static_cast< ::Client::ScreenshotSourceType >(sourcetype_);
}
void Detection_DetectionScreenshot::set_sourcetype(::Client::ScreenshotSourceType value) {
  
  sourcetype_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionScreenshot.sourceType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionCodeIntegrity::Detection_DetectionCodeIntegrity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionCodeIntegrity)
}
Detection_DetectionCodeIntegrity::Detection_DetectionCodeIntegrity(const Detection_DetectionCodeIntegrity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionCodeIntegrity)
}

void Detection_DetectionCodeIntegrity::SharedCtor() {
  _cached_size_ = 0;
}

Detection_DetectionCodeIntegrity::~Detection_DetectionCodeIntegrity() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionCodeIntegrity)
  SharedDtor();
}

void Detection_DetectionCodeIntegrity::SharedDtor() {
}

void Detection_DetectionCodeIntegrity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionCodeIntegrity::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionCodeIntegrity& Detection_DetectionCodeIntegrity::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionCodeIntegrity* Detection_DetectionCodeIntegrity::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionCodeIntegrity* n = new Detection_DetectionCodeIntegrity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionCodeIntegrity::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionCodeIntegrity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Detection_DetectionCodeIntegrity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionCodeIntegrity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionCodeIntegrity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionCodeIntegrity)
  return false;
#undef DO_
}

void Detection_DetectionCodeIntegrity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionCodeIntegrity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionCodeIntegrity)
}

::google::protobuf::uint8* Detection_DetectionCodeIntegrity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionCodeIntegrity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionCodeIntegrity)
  return target;
}

size_t Detection_DetectionCodeIntegrity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionCodeIntegrity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionCodeIntegrity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionCodeIntegrity)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionCodeIntegrity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionCodeIntegrity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionCodeIntegrity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionCodeIntegrity)
    MergeFrom(*source);
  }
}

void Detection_DetectionCodeIntegrity::MergeFrom(const Detection_DetectionCodeIntegrity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionCodeIntegrity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Detection_DetectionCodeIntegrity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionCodeIntegrity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionCodeIntegrity::CopyFrom(const Detection_DetectionCodeIntegrity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionCodeIntegrity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionCodeIntegrity::IsInitialized() const {
  return true;
}

void Detection_DetectionCodeIntegrity::Swap(Detection_DetectionCodeIntegrity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionCodeIntegrity::InternalSwap(Detection_DetectionCodeIntegrity* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionCodeIntegrity::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionCodeIntegrity

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionHeartbeatTimeout::Detection_DetectionHeartbeatTimeout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionHeartbeatTimeout)
}
Detection_DetectionHeartbeatTimeout::Detection_DetectionHeartbeatTimeout(const Detection_DetectionHeartbeatTimeout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionHeartbeatTimeout)
}

void Detection_DetectionHeartbeatTimeout::SharedCtor() {
  _cached_size_ = 0;
}

Detection_DetectionHeartbeatTimeout::~Detection_DetectionHeartbeatTimeout() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionHeartbeatTimeout)
  SharedDtor();
}

void Detection_DetectionHeartbeatTimeout::SharedDtor() {
}

void Detection_DetectionHeartbeatTimeout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionHeartbeatTimeout::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionHeartbeatTimeout& Detection_DetectionHeartbeatTimeout::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionHeartbeatTimeout* Detection_DetectionHeartbeatTimeout::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionHeartbeatTimeout* n = new Detection_DetectionHeartbeatTimeout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionHeartbeatTimeout::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionHeartbeatTimeout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Detection_DetectionHeartbeatTimeout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionHeartbeatTimeout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionHeartbeatTimeout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionHeartbeatTimeout)
  return false;
#undef DO_
}

void Detection_DetectionHeartbeatTimeout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionHeartbeatTimeout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionHeartbeatTimeout)
}

::google::protobuf::uint8* Detection_DetectionHeartbeatTimeout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionHeartbeatTimeout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionHeartbeatTimeout)
  return target;
}

size_t Detection_DetectionHeartbeatTimeout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionHeartbeatTimeout)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionHeartbeatTimeout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionHeartbeatTimeout)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionHeartbeatTimeout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionHeartbeatTimeout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionHeartbeatTimeout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionHeartbeatTimeout)
    MergeFrom(*source);
  }
}

void Detection_DetectionHeartbeatTimeout::MergeFrom(const Detection_DetectionHeartbeatTimeout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionHeartbeatTimeout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Detection_DetectionHeartbeatTimeout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionHeartbeatTimeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionHeartbeatTimeout::CopyFrom(const Detection_DetectionHeartbeatTimeout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionHeartbeatTimeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionHeartbeatTimeout::IsInitialized() const {
  return true;
}

void Detection_DetectionHeartbeatTimeout::Swap(Detection_DetectionHeartbeatTimeout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionHeartbeatTimeout::InternalSwap(Detection_DetectionHeartbeatTimeout* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionHeartbeatTimeout::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionHeartbeatTimeout

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection_DetectionLoadtest::kImageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection_DetectionLoadtest::Detection_DetectionLoadtest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection.DetectionLoadtest)
}
Detection_DetectionLoadtest::Detection_DetectionLoadtest(const Detection_DetectionLoadtest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imagedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imagedata().size() > 0) {
    imagedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagedata_);
  }
  // @@protoc_insertion_point(copy_constructor:Client.Detection.DetectionLoadtest)
}

void Detection_DetectionLoadtest::SharedCtor() {
  imagedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Detection_DetectionLoadtest::~Detection_DetectionLoadtest() {
  // @@protoc_insertion_point(destructor:Client.Detection.DetectionLoadtest)
  SharedDtor();
}

void Detection_DetectionLoadtest::SharedDtor() {
  imagedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Detection_DetectionLoadtest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection_DetectionLoadtest::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection_DetectionLoadtest& Detection_DetectionLoadtest::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection_DetectionLoadtest* Detection_DetectionLoadtest::New(::google::protobuf::Arena* arena) const {
  Detection_DetectionLoadtest* n = new Detection_DetectionLoadtest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection_DetectionLoadtest::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection.DetectionLoadtest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Detection_DetectionLoadtest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection.DetectionLoadtest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes imageData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imagedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection.DetectionLoadtest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection.DetectionLoadtest)
  return false;
#undef DO_
}

void Detection_DetectionLoadtest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection.DetectionLoadtest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes imageData = 1;
  if (this->imagedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->imagedata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection.DetectionLoadtest)
}

::google::protobuf::uint8* Detection_DetectionLoadtest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection.DetectionLoadtest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes imageData = 1;
  if (this->imagedata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->imagedata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection.DetectionLoadtest)
  return target;
}

size_t Detection_DetectionLoadtest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection.DetectionLoadtest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes imageData = 1;
  if (this->imagedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imagedata());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection_DetectionLoadtest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection.DetectionLoadtest)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection_DetectionLoadtest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection_DetectionLoadtest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection.DetectionLoadtest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection.DetectionLoadtest)
    MergeFrom(*source);
  }
}

void Detection_DetectionLoadtest::MergeFrom(const Detection_DetectionLoadtest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection.DetectionLoadtest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imagedata().size() > 0) {

    imagedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagedata_);
  }
}

void Detection_DetectionLoadtest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection.DetectionLoadtest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection_DetectionLoadtest::CopyFrom(const Detection_DetectionLoadtest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection.DetectionLoadtest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection_DetectionLoadtest::IsInitialized() const {
  return true;
}

void Detection_DetectionLoadtest::Swap(Detection_DetectionLoadtest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection_DetectionLoadtest::InternalSwap(Detection_DetectionLoadtest* other) {
  using std::swap;
  imagedata_.Swap(&other->imagedata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection_DetectionLoadtest::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection_DetectionLoadtest

// bytes imageData = 1;
void Detection_DetectionLoadtest::clear_imagedata() {
  imagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Detection_DetectionLoadtest::imagedata() const {
  // @@protoc_insertion_point(field_get:Client.Detection.DetectionLoadtest.imageData)
  return imagedata_.GetNoArena();
}
void Detection_DetectionLoadtest::set_imagedata(const ::std::string& value) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.Detection.DetectionLoadtest.imageData)
}
#if LANG_CXX11
void Detection_DetectionLoadtest::set_imagedata(::std::string&& value) {
  
  imagedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.Detection.DetectionLoadtest.imageData)
}
#endif
void Detection_DetectionLoadtest::set_imagedata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.Detection.DetectionLoadtest.imageData)
}
void Detection_DetectionLoadtest::set_imagedata(const void* value, size_t size) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.Detection.DetectionLoadtest.imageData)
}
::std::string* Detection_DetectionLoadtest::mutable_imagedata() {
  
  // @@protoc_insertion_point(field_mutable:Client.Detection.DetectionLoadtest.imageData)
  return imagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Detection_DetectionLoadtest::release_imagedata() {
  // @@protoc_insertion_point(field_release:Client.Detection.DetectionLoadtest.imageData)
  
  return imagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Detection_DetectionLoadtest::set_allocated_imagedata(::std::string* imagedata) {
  if (imagedata != NULL) {
    
  } else {
    
  }
  imagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagedata);
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.DetectionLoadtest.imageData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection::kCodeFieldNumber;
const int Detection::kCanaryFieldNumber;
const int Detection::kSignatureFieldNumber;
const int Detection::kHookFieldNumber;
const int Detection::kHeartbeatTimeoutFieldNumber;
const int Detection::kForeignCodeFieldNumber;
const int Detection::kScreenshotFieldNumber;
const int Detection::kCodeIntegrityFieldNumber;
const int Detection::kDebuggerFieldNumber;
const int Detection::kHypervisorFieldNumber;
const int Detection::kOsQueryFieldNumber;
const int Detection::kHwidFieldNumber;
const int Detection::kTextFieldNumber;
const int Detection::kLoadTestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection::Detection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.Detection)
}
Detection::Detection(const Detection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  clear_has_contents();
  switch (from.contents_case()) {
    case kCanary: {
      mutable_canary()->::Client::Detection_DetectionCanary::MergeFrom(from.canary());
      break;
    }
    case kSignature: {
      mutable_signature()->::Client::Detection_DetectionSignature::MergeFrom(from.signature());
      break;
    }
    case kHook: {
      mutable_hook()->::Client::Detection_DetectionHook::MergeFrom(from.hook());
      break;
    }
    case kHeartbeatTimeout: {
      mutable_heartbeattimeout()->::Client::Detection_DetectionHeartbeatTimeout::MergeFrom(from.heartbeattimeout());
      break;
    }
    case kForeignCode: {
      mutable_foreigncode()->::Client::Detection_DetectionForeignCode::MergeFrom(from.foreigncode());
      break;
    }
    case kScreenshot: {
      mutable_screenshot()->::Client::Detection_DetectionScreenshot::MergeFrom(from.screenshot());
      break;
    }
    case kCodeIntegrity: {
      mutable_codeintegrity()->::Client::Detection_DetectionCodeIntegrity::MergeFrom(from.codeintegrity());
      break;
    }
    case kDebugger: {
      mutable_debugger()->::Client::Detection_DetectionDebugger::MergeFrom(from.debugger());
      break;
    }
    case kHypervisor: {
      mutable_hypervisor()->::Client::Detection_DetectionHypervisor::MergeFrom(from.hypervisor());
      break;
    }
    case kOsQuery: {
      mutable_osquery()->::Client::Detection_DetectionOsQuery::MergeFrom(from.osquery());
      break;
    }
    case kHwid: {
      mutable_hwid()->::Client::Detection_DetectionHwid::MergeFrom(from.hwid());
      break;
    }
    case kText: {
      mutable_text()->::Client::Detection_DetectionText::MergeFrom(from.text());
      break;
    }
    case kLoadTest: {
      mutable_loadtest()->::Client::Detection_DetectionLoadtest::MergeFrom(from.loadtest());
      break;
    }
    case CONTENTS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Client.Detection)
}

void Detection::SharedCtor() {
  code_ = GOOGLE_ULONGLONG(0);
  clear_has_contents();
  _cached_size_ = 0;
}

Detection::~Detection() {
  // @@protoc_insertion_point(destructor:Client.Detection)
  SharedDtor();
}

void Detection::SharedDtor() {
  if (has_contents()) {
    clear_contents();
  }
}

void Detection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Detection::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection& Detection::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

Detection* Detection::New(::google::protobuf::Arena* arena) const {
  Detection* n = new Detection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Detection::clear_contents() {
// @@protoc_insertion_point(one_of_clear_start:Client.Detection)
  switch (contents_case()) {
    case kCanary: {
      delete contents_.canary_;
      break;
    }
    case kSignature: {
      delete contents_.signature_;
      break;
    }
    case kHook: {
      delete contents_.hook_;
      break;
    }
    case kHeartbeatTimeout: {
      delete contents_.heartbeattimeout_;
      break;
    }
    case kForeignCode: {
      delete contents_.foreigncode_;
      break;
    }
    case kScreenshot: {
      delete contents_.screenshot_;
      break;
    }
    case kCodeIntegrity: {
      delete contents_.codeintegrity_;
      break;
    }
    case kDebugger: {
      delete contents_.debugger_;
      break;
    }
    case kHypervisor: {
      delete contents_.hypervisor_;
      break;
    }
    case kOsQuery: {
      delete contents_.osquery_;
      break;
    }
    case kHwid: {
      delete contents_.hwid_;
      break;
    }
    case kText: {
      delete contents_.text_;
      break;
    }
    case kLoadTest: {
      delete contents_.loadtest_;
      break;
    }
    case CONTENTS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENTS_NOT_SET;
}


void Detection::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = GOOGLE_ULONGLONG(0);
  clear_contents();
  _internal_metadata_.Clear();
}

bool Detection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.Detection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionCanary canary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_canary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionSignature signature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionHook hook = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hook()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionHeartbeatTimeout heartbeatTimeout = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heartbeattimeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionForeignCode foreignCode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foreigncode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionScreenshot screenshot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_screenshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionCodeIntegrity codeIntegrity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_codeintegrity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionDebugger debugger = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_debugger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionHypervisor hypervisor = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hypervisor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionOsQuery osQuery = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_osquery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionHwid hwid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hwid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionText text = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Client.Detection.DetectionLoadtest loadTest = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loadtest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.Detection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.Detection)
  return false;
#undef DO_
}

void Detection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->code(), output);
  }

  // .Client.Detection.DetectionCanary canary = 2;
  if (has_canary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *contents_.canary_, output);
  }

  // .Client.Detection.DetectionSignature signature = 3;
  if (has_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *contents_.signature_, output);
  }

  // .Client.Detection.DetectionHook hook = 4;
  if (has_hook()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *contents_.hook_, output);
  }

  // .Client.Detection.DetectionHeartbeatTimeout heartbeatTimeout = 5;
  if (has_heartbeattimeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *contents_.heartbeattimeout_, output);
  }

  // .Client.Detection.DetectionForeignCode foreignCode = 6;
  if (has_foreigncode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *contents_.foreigncode_, output);
  }

  // .Client.Detection.DetectionScreenshot screenshot = 7;
  if (has_screenshot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *contents_.screenshot_, output);
  }

  // .Client.Detection.DetectionCodeIntegrity codeIntegrity = 8;
  if (has_codeintegrity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *contents_.codeintegrity_, output);
  }

  // .Client.Detection.DetectionDebugger debugger = 9;
  if (has_debugger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *contents_.debugger_, output);
  }

  // .Client.Detection.DetectionHypervisor hypervisor = 10;
  if (has_hypervisor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *contents_.hypervisor_, output);
  }

  // .Client.Detection.DetectionOsQuery osQuery = 11;
  if (has_osquery()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *contents_.osquery_, output);
  }

  // .Client.Detection.DetectionHwid hwid = 12;
  if (has_hwid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *contents_.hwid_, output);
  }

  // .Client.Detection.DetectionText text = 13;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *contents_.text_, output);
  }

  // .Client.Detection.DetectionLoadtest loadTest = 14;
  if (has_loadtest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *contents_.loadtest_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.Detection)
}

::google::protobuf::uint8* Detection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->code(), target);
  }

  // .Client.Detection.DetectionCanary canary = 2;
  if (has_canary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *contents_.canary_, deterministic, target);
  }

  // .Client.Detection.DetectionSignature signature = 3;
  if (has_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *contents_.signature_, deterministic, target);
  }

  // .Client.Detection.DetectionHook hook = 4;
  if (has_hook()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *contents_.hook_, deterministic, target);
  }

  // .Client.Detection.DetectionHeartbeatTimeout heartbeatTimeout = 5;
  if (has_heartbeattimeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *contents_.heartbeattimeout_, deterministic, target);
  }

  // .Client.Detection.DetectionForeignCode foreignCode = 6;
  if (has_foreigncode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *contents_.foreigncode_, deterministic, target);
  }

  // .Client.Detection.DetectionScreenshot screenshot = 7;
  if (has_screenshot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *contents_.screenshot_, deterministic, target);
  }

  // .Client.Detection.DetectionCodeIntegrity codeIntegrity = 8;
  if (has_codeintegrity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *contents_.codeintegrity_, deterministic, target);
  }

  // .Client.Detection.DetectionDebugger debugger = 9;
  if (has_debugger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *contents_.debugger_, deterministic, target);
  }

  // .Client.Detection.DetectionHypervisor hypervisor = 10;
  if (has_hypervisor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *contents_.hypervisor_, deterministic, target);
  }

  // .Client.Detection.DetectionOsQuery osQuery = 11;
  if (has_osquery()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *contents_.osquery_, deterministic, target);
  }

  // .Client.Detection.DetectionHwid hwid = 12;
  if (has_hwid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *contents_.hwid_, deterministic, target);
  }

  // .Client.Detection.DetectionText text = 13;
  if (has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *contents_.text_, deterministic, target);
  }

  // .Client.Detection.DetectionLoadtest loadTest = 14;
  if (has_loadtest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *contents_.loadtest_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.Detection)
  return target;
}

size_t Detection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.Detection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->code());
  }

  switch (contents_case()) {
    // .Client.Detection.DetectionCanary canary = 2;
    case kCanary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.canary_);
      break;
    }
    // .Client.Detection.DetectionSignature signature = 3;
    case kSignature: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.signature_);
      break;
    }
    // .Client.Detection.DetectionHook hook = 4;
    case kHook: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.hook_);
      break;
    }
    // .Client.Detection.DetectionHeartbeatTimeout heartbeatTimeout = 5;
    case kHeartbeatTimeout: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.heartbeattimeout_);
      break;
    }
    // .Client.Detection.DetectionForeignCode foreignCode = 6;
    case kForeignCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.foreigncode_);
      break;
    }
    // .Client.Detection.DetectionScreenshot screenshot = 7;
    case kScreenshot: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.screenshot_);
      break;
    }
    // .Client.Detection.DetectionCodeIntegrity codeIntegrity = 8;
    case kCodeIntegrity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.codeintegrity_);
      break;
    }
    // .Client.Detection.DetectionDebugger debugger = 9;
    case kDebugger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.debugger_);
      break;
    }
    // .Client.Detection.DetectionHypervisor hypervisor = 10;
    case kHypervisor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.hypervisor_);
      break;
    }
    // .Client.Detection.DetectionOsQuery osQuery = 11;
    case kOsQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.osquery_);
      break;
    }
    // .Client.Detection.DetectionHwid hwid = 12;
    case kHwid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.hwid_);
      break;
    }
    // .Client.Detection.DetectionText text = 13;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.text_);
      break;
    }
    // .Client.Detection.DetectionLoadtest loadTest = 14;
    case kLoadTest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *contents_.loadtest_);
      break;
    }
    case CONTENTS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Detection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.Detection)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.Detection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.Detection)
    MergeFrom(*source);
  }
}

void Detection::MergeFrom(const Detection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.Detection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
  switch (from.contents_case()) {
    case kCanary: {
      mutable_canary()->::Client::Detection_DetectionCanary::MergeFrom(from.canary());
      break;
    }
    case kSignature: {
      mutable_signature()->::Client::Detection_DetectionSignature::MergeFrom(from.signature());
      break;
    }
    case kHook: {
      mutable_hook()->::Client::Detection_DetectionHook::MergeFrom(from.hook());
      break;
    }
    case kHeartbeatTimeout: {
      mutable_heartbeattimeout()->::Client::Detection_DetectionHeartbeatTimeout::MergeFrom(from.heartbeattimeout());
      break;
    }
    case kForeignCode: {
      mutable_foreigncode()->::Client::Detection_DetectionForeignCode::MergeFrom(from.foreigncode());
      break;
    }
    case kScreenshot: {
      mutable_screenshot()->::Client::Detection_DetectionScreenshot::MergeFrom(from.screenshot());
      break;
    }
    case kCodeIntegrity: {
      mutable_codeintegrity()->::Client::Detection_DetectionCodeIntegrity::MergeFrom(from.codeintegrity());
      break;
    }
    case kDebugger: {
      mutable_debugger()->::Client::Detection_DetectionDebugger::MergeFrom(from.debugger());
      break;
    }
    case kHypervisor: {
      mutable_hypervisor()->::Client::Detection_DetectionHypervisor::MergeFrom(from.hypervisor());
      break;
    }
    case kOsQuery: {
      mutable_osquery()->::Client::Detection_DetectionOsQuery::MergeFrom(from.osquery());
      break;
    }
    case kHwid: {
      mutable_hwid()->::Client::Detection_DetectionHwid::MergeFrom(from.hwid());
      break;
    }
    case kText: {
      mutable_text()->::Client::Detection_DetectionText::MergeFrom(from.text());
      break;
    }
    case kLoadTest: {
      mutable_loadtest()->::Client::Detection_DetectionLoadtest::MergeFrom(from.loadtest());
      break;
    }
    case CONTENTS_NOT_SET: {
      break;
    }
  }
}

void Detection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.Detection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection::CopyFrom(const Detection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.Detection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection::IsInitialized() const {
  return true;
}

void Detection::Swap(Detection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection::InternalSwap(Detection* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(contents_, other->contents_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Detection::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Detection

// uint64 code = 1;
void Detection::clear_code() {
  code_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Detection::code() const {
  // @@protoc_insertion_point(field_get:Client.Detection.code)
  return code_;
}
void Detection::set_code(::google::protobuf::uint64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:Client.Detection.code)
}

// .Client.Detection.DetectionCanary canary = 2;
bool Detection::has_canary() const {
  return contents_case() == kCanary;
}
void Detection::set_has_canary() {
  _oneof_case_[0] = kCanary;
}
void Detection::clear_canary() {
  if (has_canary()) {
    delete contents_.canary_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionCanary& Detection::canary() const {
  // @@protoc_insertion_point(field_get:Client.Detection.canary)
  return has_canary()
      ? *contents_.canary_
      : ::Client::Detection_DetectionCanary::default_instance();
}
::Client::Detection_DetectionCanary* Detection::mutable_canary() {
  if (!has_canary()) {
    clear_contents();
    set_has_canary();
    contents_.canary_ = new ::Client::Detection_DetectionCanary;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.canary)
  return contents_.canary_;
}
::Client::Detection_DetectionCanary* Detection::release_canary() {
  // @@protoc_insertion_point(field_release:Client.Detection.canary)
  if (has_canary()) {
    clear_has_contents();
    ::Client::Detection_DetectionCanary* temp = contents_.canary_;
    contents_.canary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_canary(::Client::Detection_DetectionCanary* canary) {
  clear_contents();
  if (canary) {
    set_has_canary();
    contents_.canary_ = canary;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.canary)
}

// .Client.Detection.DetectionSignature signature = 3;
bool Detection::has_signature() const {
  return contents_case() == kSignature;
}
void Detection::set_has_signature() {
  _oneof_case_[0] = kSignature;
}
void Detection::clear_signature() {
  if (has_signature()) {
    delete contents_.signature_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionSignature& Detection::signature() const {
  // @@protoc_insertion_point(field_get:Client.Detection.signature)
  return has_signature()
      ? *contents_.signature_
      : ::Client::Detection_DetectionSignature::default_instance();
}
::Client::Detection_DetectionSignature* Detection::mutable_signature() {
  if (!has_signature()) {
    clear_contents();
    set_has_signature();
    contents_.signature_ = new ::Client::Detection_DetectionSignature;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.signature)
  return contents_.signature_;
}
::Client::Detection_DetectionSignature* Detection::release_signature() {
  // @@protoc_insertion_point(field_release:Client.Detection.signature)
  if (has_signature()) {
    clear_has_contents();
    ::Client::Detection_DetectionSignature* temp = contents_.signature_;
    contents_.signature_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_signature(::Client::Detection_DetectionSignature* signature) {
  clear_contents();
  if (signature) {
    set_has_signature();
    contents_.signature_ = signature;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.signature)
}

// .Client.Detection.DetectionHook hook = 4;
bool Detection::has_hook() const {
  return contents_case() == kHook;
}
void Detection::set_has_hook() {
  _oneof_case_[0] = kHook;
}
void Detection::clear_hook() {
  if (has_hook()) {
    delete contents_.hook_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionHook& Detection::hook() const {
  // @@protoc_insertion_point(field_get:Client.Detection.hook)
  return has_hook()
      ? *contents_.hook_
      : ::Client::Detection_DetectionHook::default_instance();
}
::Client::Detection_DetectionHook* Detection::mutable_hook() {
  if (!has_hook()) {
    clear_contents();
    set_has_hook();
    contents_.hook_ = new ::Client::Detection_DetectionHook;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.hook)
  return contents_.hook_;
}
::Client::Detection_DetectionHook* Detection::release_hook() {
  // @@protoc_insertion_point(field_release:Client.Detection.hook)
  if (has_hook()) {
    clear_has_contents();
    ::Client::Detection_DetectionHook* temp = contents_.hook_;
    contents_.hook_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_hook(::Client::Detection_DetectionHook* hook) {
  clear_contents();
  if (hook) {
    set_has_hook();
    contents_.hook_ = hook;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.hook)
}

// .Client.Detection.DetectionHeartbeatTimeout heartbeatTimeout = 5;
bool Detection::has_heartbeattimeout() const {
  return contents_case() == kHeartbeatTimeout;
}
void Detection::set_has_heartbeattimeout() {
  _oneof_case_[0] = kHeartbeatTimeout;
}
void Detection::clear_heartbeattimeout() {
  if (has_heartbeattimeout()) {
    delete contents_.heartbeattimeout_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionHeartbeatTimeout& Detection::heartbeattimeout() const {
  // @@protoc_insertion_point(field_get:Client.Detection.heartbeatTimeout)
  return has_heartbeattimeout()
      ? *contents_.heartbeattimeout_
      : ::Client::Detection_DetectionHeartbeatTimeout::default_instance();
}
::Client::Detection_DetectionHeartbeatTimeout* Detection::mutable_heartbeattimeout() {
  if (!has_heartbeattimeout()) {
    clear_contents();
    set_has_heartbeattimeout();
    contents_.heartbeattimeout_ = new ::Client::Detection_DetectionHeartbeatTimeout;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.heartbeatTimeout)
  return contents_.heartbeattimeout_;
}
::Client::Detection_DetectionHeartbeatTimeout* Detection::release_heartbeattimeout() {
  // @@protoc_insertion_point(field_release:Client.Detection.heartbeatTimeout)
  if (has_heartbeattimeout()) {
    clear_has_contents();
    ::Client::Detection_DetectionHeartbeatTimeout* temp = contents_.heartbeattimeout_;
    contents_.heartbeattimeout_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_heartbeattimeout(::Client::Detection_DetectionHeartbeatTimeout* heartbeattimeout) {
  clear_contents();
  if (heartbeattimeout) {
    set_has_heartbeattimeout();
    contents_.heartbeattimeout_ = heartbeattimeout;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.heartbeatTimeout)
}

// .Client.Detection.DetectionForeignCode foreignCode = 6;
bool Detection::has_foreigncode() const {
  return contents_case() == kForeignCode;
}
void Detection::set_has_foreigncode() {
  _oneof_case_[0] = kForeignCode;
}
void Detection::clear_foreigncode() {
  if (has_foreigncode()) {
    delete contents_.foreigncode_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionForeignCode& Detection::foreigncode() const {
  // @@protoc_insertion_point(field_get:Client.Detection.foreignCode)
  return has_foreigncode()
      ? *contents_.foreigncode_
      : ::Client::Detection_DetectionForeignCode::default_instance();
}
::Client::Detection_DetectionForeignCode* Detection::mutable_foreigncode() {
  if (!has_foreigncode()) {
    clear_contents();
    set_has_foreigncode();
    contents_.foreigncode_ = new ::Client::Detection_DetectionForeignCode;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.foreignCode)
  return contents_.foreigncode_;
}
::Client::Detection_DetectionForeignCode* Detection::release_foreigncode() {
  // @@protoc_insertion_point(field_release:Client.Detection.foreignCode)
  if (has_foreigncode()) {
    clear_has_contents();
    ::Client::Detection_DetectionForeignCode* temp = contents_.foreigncode_;
    contents_.foreigncode_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_foreigncode(::Client::Detection_DetectionForeignCode* foreigncode) {
  clear_contents();
  if (foreigncode) {
    set_has_foreigncode();
    contents_.foreigncode_ = foreigncode;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.foreignCode)
}

// .Client.Detection.DetectionScreenshot screenshot = 7;
bool Detection::has_screenshot() const {
  return contents_case() == kScreenshot;
}
void Detection::set_has_screenshot() {
  _oneof_case_[0] = kScreenshot;
}
void Detection::clear_screenshot() {
  if (has_screenshot()) {
    delete contents_.screenshot_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionScreenshot& Detection::screenshot() const {
  // @@protoc_insertion_point(field_get:Client.Detection.screenshot)
  return has_screenshot()
      ? *contents_.screenshot_
      : ::Client::Detection_DetectionScreenshot::default_instance();
}
::Client::Detection_DetectionScreenshot* Detection::mutable_screenshot() {
  if (!has_screenshot()) {
    clear_contents();
    set_has_screenshot();
    contents_.screenshot_ = new ::Client::Detection_DetectionScreenshot;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.screenshot)
  return contents_.screenshot_;
}
::Client::Detection_DetectionScreenshot* Detection::release_screenshot() {
  // @@protoc_insertion_point(field_release:Client.Detection.screenshot)
  if (has_screenshot()) {
    clear_has_contents();
    ::Client::Detection_DetectionScreenshot* temp = contents_.screenshot_;
    contents_.screenshot_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_screenshot(::Client::Detection_DetectionScreenshot* screenshot) {
  clear_contents();
  if (screenshot) {
    set_has_screenshot();
    contents_.screenshot_ = screenshot;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.screenshot)
}

// .Client.Detection.DetectionCodeIntegrity codeIntegrity = 8;
bool Detection::has_codeintegrity() const {
  return contents_case() == kCodeIntegrity;
}
void Detection::set_has_codeintegrity() {
  _oneof_case_[0] = kCodeIntegrity;
}
void Detection::clear_codeintegrity() {
  if (has_codeintegrity()) {
    delete contents_.codeintegrity_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionCodeIntegrity& Detection::codeintegrity() const {
  // @@protoc_insertion_point(field_get:Client.Detection.codeIntegrity)
  return has_codeintegrity()
      ? *contents_.codeintegrity_
      : ::Client::Detection_DetectionCodeIntegrity::default_instance();
}
::Client::Detection_DetectionCodeIntegrity* Detection::mutable_codeintegrity() {
  if (!has_codeintegrity()) {
    clear_contents();
    set_has_codeintegrity();
    contents_.codeintegrity_ = new ::Client::Detection_DetectionCodeIntegrity;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.codeIntegrity)
  return contents_.codeintegrity_;
}
::Client::Detection_DetectionCodeIntegrity* Detection::release_codeintegrity() {
  // @@protoc_insertion_point(field_release:Client.Detection.codeIntegrity)
  if (has_codeintegrity()) {
    clear_has_contents();
    ::Client::Detection_DetectionCodeIntegrity* temp = contents_.codeintegrity_;
    contents_.codeintegrity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_codeintegrity(::Client::Detection_DetectionCodeIntegrity* codeintegrity) {
  clear_contents();
  if (codeintegrity) {
    set_has_codeintegrity();
    contents_.codeintegrity_ = codeintegrity;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.codeIntegrity)
}

// .Client.Detection.DetectionDebugger debugger = 9;
bool Detection::has_debugger() const {
  return contents_case() == kDebugger;
}
void Detection::set_has_debugger() {
  _oneof_case_[0] = kDebugger;
}
void Detection::clear_debugger() {
  if (has_debugger()) {
    delete contents_.debugger_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionDebugger& Detection::debugger() const {
  // @@protoc_insertion_point(field_get:Client.Detection.debugger)
  return has_debugger()
      ? *contents_.debugger_
      : ::Client::Detection_DetectionDebugger::default_instance();
}
::Client::Detection_DetectionDebugger* Detection::mutable_debugger() {
  if (!has_debugger()) {
    clear_contents();
    set_has_debugger();
    contents_.debugger_ = new ::Client::Detection_DetectionDebugger;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.debugger)
  return contents_.debugger_;
}
::Client::Detection_DetectionDebugger* Detection::release_debugger() {
  // @@protoc_insertion_point(field_release:Client.Detection.debugger)
  if (has_debugger()) {
    clear_has_contents();
    ::Client::Detection_DetectionDebugger* temp = contents_.debugger_;
    contents_.debugger_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_debugger(::Client::Detection_DetectionDebugger* debugger) {
  clear_contents();
  if (debugger) {
    set_has_debugger();
    contents_.debugger_ = debugger;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.debugger)
}

// .Client.Detection.DetectionHypervisor hypervisor = 10;
bool Detection::has_hypervisor() const {
  return contents_case() == kHypervisor;
}
void Detection::set_has_hypervisor() {
  _oneof_case_[0] = kHypervisor;
}
void Detection::clear_hypervisor() {
  if (has_hypervisor()) {
    delete contents_.hypervisor_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionHypervisor& Detection::hypervisor() const {
  // @@protoc_insertion_point(field_get:Client.Detection.hypervisor)
  return has_hypervisor()
      ? *contents_.hypervisor_
      : ::Client::Detection_DetectionHypervisor::default_instance();
}
::Client::Detection_DetectionHypervisor* Detection::mutable_hypervisor() {
  if (!has_hypervisor()) {
    clear_contents();
    set_has_hypervisor();
    contents_.hypervisor_ = new ::Client::Detection_DetectionHypervisor;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.hypervisor)
  return contents_.hypervisor_;
}
::Client::Detection_DetectionHypervisor* Detection::release_hypervisor() {
  // @@protoc_insertion_point(field_release:Client.Detection.hypervisor)
  if (has_hypervisor()) {
    clear_has_contents();
    ::Client::Detection_DetectionHypervisor* temp = contents_.hypervisor_;
    contents_.hypervisor_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_hypervisor(::Client::Detection_DetectionHypervisor* hypervisor) {
  clear_contents();
  if (hypervisor) {
    set_has_hypervisor();
    contents_.hypervisor_ = hypervisor;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.hypervisor)
}

// .Client.Detection.DetectionOsQuery osQuery = 11;
bool Detection::has_osquery() const {
  return contents_case() == kOsQuery;
}
void Detection::set_has_osquery() {
  _oneof_case_[0] = kOsQuery;
}
void Detection::clear_osquery() {
  if (has_osquery()) {
    delete contents_.osquery_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionOsQuery& Detection::osquery() const {
  // @@protoc_insertion_point(field_get:Client.Detection.osQuery)
  return has_osquery()
      ? *contents_.osquery_
      : ::Client::Detection_DetectionOsQuery::default_instance();
}
::Client::Detection_DetectionOsQuery* Detection::mutable_osquery() {
  if (!has_osquery()) {
    clear_contents();
    set_has_osquery();
    contents_.osquery_ = new ::Client::Detection_DetectionOsQuery;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.osQuery)
  return contents_.osquery_;
}
::Client::Detection_DetectionOsQuery* Detection::release_osquery() {
  // @@protoc_insertion_point(field_release:Client.Detection.osQuery)
  if (has_osquery()) {
    clear_has_contents();
    ::Client::Detection_DetectionOsQuery* temp = contents_.osquery_;
    contents_.osquery_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_osquery(::Client::Detection_DetectionOsQuery* osquery) {
  clear_contents();
  if (osquery) {
    set_has_osquery();
    contents_.osquery_ = osquery;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.osQuery)
}

// .Client.Detection.DetectionHwid hwid = 12;
bool Detection::has_hwid() const {
  return contents_case() == kHwid;
}
void Detection::set_has_hwid() {
  _oneof_case_[0] = kHwid;
}
void Detection::clear_hwid() {
  if (has_hwid()) {
    delete contents_.hwid_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionHwid& Detection::hwid() const {
  // @@protoc_insertion_point(field_get:Client.Detection.hwid)
  return has_hwid()
      ? *contents_.hwid_
      : ::Client::Detection_DetectionHwid::default_instance();
}
::Client::Detection_DetectionHwid* Detection::mutable_hwid() {
  if (!has_hwid()) {
    clear_contents();
    set_has_hwid();
    contents_.hwid_ = new ::Client::Detection_DetectionHwid;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.hwid)
  return contents_.hwid_;
}
::Client::Detection_DetectionHwid* Detection::release_hwid() {
  // @@protoc_insertion_point(field_release:Client.Detection.hwid)
  if (has_hwid()) {
    clear_has_contents();
    ::Client::Detection_DetectionHwid* temp = contents_.hwid_;
    contents_.hwid_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_hwid(::Client::Detection_DetectionHwid* hwid) {
  clear_contents();
  if (hwid) {
    set_has_hwid();
    contents_.hwid_ = hwid;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.hwid)
}

// .Client.Detection.DetectionText text = 13;
bool Detection::has_text() const {
  return contents_case() == kText;
}
void Detection::set_has_text() {
  _oneof_case_[0] = kText;
}
void Detection::clear_text() {
  if (has_text()) {
    delete contents_.text_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionText& Detection::text() const {
  // @@protoc_insertion_point(field_get:Client.Detection.text)
  return has_text()
      ? *contents_.text_
      : ::Client::Detection_DetectionText::default_instance();
}
::Client::Detection_DetectionText* Detection::mutable_text() {
  if (!has_text()) {
    clear_contents();
    set_has_text();
    contents_.text_ = new ::Client::Detection_DetectionText;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.text)
  return contents_.text_;
}
::Client::Detection_DetectionText* Detection::release_text() {
  // @@protoc_insertion_point(field_release:Client.Detection.text)
  if (has_text()) {
    clear_has_contents();
    ::Client::Detection_DetectionText* temp = contents_.text_;
    contents_.text_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_text(::Client::Detection_DetectionText* text) {
  clear_contents();
  if (text) {
    set_has_text();
    contents_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.text)
}

// .Client.Detection.DetectionLoadtest loadTest = 14;
bool Detection::has_loadtest() const {
  return contents_case() == kLoadTest;
}
void Detection::set_has_loadtest() {
  _oneof_case_[0] = kLoadTest;
}
void Detection::clear_loadtest() {
  if (has_loadtest()) {
    delete contents_.loadtest_;
    clear_has_contents();
  }
}
 const ::Client::Detection_DetectionLoadtest& Detection::loadtest() const {
  // @@protoc_insertion_point(field_get:Client.Detection.loadTest)
  return has_loadtest()
      ? *contents_.loadtest_
      : ::Client::Detection_DetectionLoadtest::default_instance();
}
::Client::Detection_DetectionLoadtest* Detection::mutable_loadtest() {
  if (!has_loadtest()) {
    clear_contents();
    set_has_loadtest();
    contents_.loadtest_ = new ::Client::Detection_DetectionLoadtest;
  }
  // @@protoc_insertion_point(field_mutable:Client.Detection.loadTest)
  return contents_.loadtest_;
}
::Client::Detection_DetectionLoadtest* Detection::release_loadtest() {
  // @@protoc_insertion_point(field_release:Client.Detection.loadTest)
  if (has_loadtest()) {
    clear_has_contents();
    ::Client::Detection_DetectionLoadtest* temp = contents_.loadtest_;
    contents_.loadtest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Detection::set_allocated_loadtest(::Client::Detection_DetectionLoadtest* loadtest) {
  clear_contents();
  if (loadtest) {
    set_has_loadtest();
    contents_.loadtest_ = loadtest;
  }
  // @@protoc_insertion_point(field_set_allocated:Client.Detection.loadTest)
}

bool Detection::has_contents() const {
  return contents_case() != CONTENTS_NOT_SET;
}
void Detection::clear_has_contents() {
  _oneof_case_[0] = CONTENTS_NOT_SET;
}
Detection::ContentsCase Detection::contents_case() const {
  return Detection::ContentsCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtensionRequestMessage::kExtensionVersionFieldNumber;
const int ExtensionRequestMessage::kHeartbeatsFieldNumber;
const int ExtensionRequestMessage::kDiagnosticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtensionRequestMessage::ExtensionRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.ExtensionRequestMessage)
}
ExtensionRequestMessage::ExtensionRequestMessage(const ExtensionRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      heartbeats_(from.heartbeats_),
      diagnostics_(from.diagnostics_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extensionversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extensionversion().size() > 0) {
    extensionversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extensionversion_);
  }
  // @@protoc_insertion_point(copy_constructor:Client.ExtensionRequestMessage)
}

void ExtensionRequestMessage::SharedCtor() {
  extensionversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ExtensionRequestMessage::~ExtensionRequestMessage() {
  // @@protoc_insertion_point(destructor:Client.ExtensionRequestMessage)
  SharedDtor();
}

void ExtensionRequestMessage::SharedDtor() {
  extensionversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExtensionRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtensionRequestMessage::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtensionRequestMessage& ExtensionRequestMessage::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExtensionRequestMessage* ExtensionRequestMessage::New(::google::protobuf::Arena* arena) const {
  ExtensionRequestMessage* n = new ExtensionRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExtensionRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.ExtensionRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heartbeats_.Clear();
  diagnostics_.Clear();
  extensionversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExtensionRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.ExtensionRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string extensionVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extensionversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extensionversion().data(), static_cast<int>(this->extensionversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Client.ExtensionRequestMessage.extensionVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Client.Heartbeat heartbeats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heartbeats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Client.Diagnostic diagnostics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.ExtensionRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.ExtensionRequestMessage)
  return false;
#undef DO_
}

void ExtensionRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.ExtensionRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string extensionVersion = 1;
  if (this->extensionversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extensionversion().data(), static_cast<int>(this->extensionversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.ExtensionRequestMessage.extensionVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->extensionversion(), output);
  }

  // repeated .Client.Heartbeat heartbeats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heartbeats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heartbeats(static_cast<int>(i)), output);
  }

  // repeated .Client.Diagnostic diagnostics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diagnostics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->diagnostics(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.ExtensionRequestMessage)
}

::google::protobuf::uint8* ExtensionRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.ExtensionRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string extensionVersion = 1;
  if (this->extensionversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extensionversion().data(), static_cast<int>(this->extensionversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.ExtensionRequestMessage.extensionVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->extensionversion(), target);
  }

  // repeated .Client.Heartbeat heartbeats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heartbeats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->heartbeats(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Client.Diagnostic diagnostics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diagnostics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->diagnostics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.ExtensionRequestMessage)
  return target;
}

size_t ExtensionRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.ExtensionRequestMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Client.Heartbeat heartbeats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->heartbeats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heartbeats(static_cast<int>(i)));
    }
  }

  // repeated .Client.Diagnostic diagnostics = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->diagnostics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->diagnostics(static_cast<int>(i)));
    }
  }

  // string extensionVersion = 1;
  if (this->extensionversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extensionversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtensionRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.ExtensionRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtensionRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtensionRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.ExtensionRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.ExtensionRequestMessage)
    MergeFrom(*source);
  }
}

void ExtensionRequestMessage::MergeFrom(const ExtensionRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.ExtensionRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heartbeats_.MergeFrom(from.heartbeats_);
  diagnostics_.MergeFrom(from.diagnostics_);
  if (from.extensionversion().size() > 0) {

    extensionversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extensionversion_);
  }
}

void ExtensionRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.ExtensionRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtensionRequestMessage::CopyFrom(const ExtensionRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.ExtensionRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionRequestMessage::IsInitialized() const {
  return true;
}

void ExtensionRequestMessage::Swap(ExtensionRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtensionRequestMessage::InternalSwap(ExtensionRequestMessage* other) {
  using std::swap;
  heartbeats_.InternalSwap(&other->heartbeats_);
  diagnostics_.InternalSwap(&other->diagnostics_);
  extensionversion_.Swap(&other->extensionversion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExtensionRequestMessage::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtensionRequestMessage

// string extensionVersion = 1;
void ExtensionRequestMessage::clear_extensionversion() {
  extensionversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExtensionRequestMessage::extensionversion() const {
  // @@protoc_insertion_point(field_get:Client.ExtensionRequestMessage.extensionVersion)
  return extensionversion_.GetNoArena();
}
void ExtensionRequestMessage::set_extensionversion(const ::std::string& value) {
  
  extensionversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.ExtensionRequestMessage.extensionVersion)
}
#if LANG_CXX11
void ExtensionRequestMessage::set_extensionversion(::std::string&& value) {
  
  extensionversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.ExtensionRequestMessage.extensionVersion)
}
#endif
void ExtensionRequestMessage::set_extensionversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extensionversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.ExtensionRequestMessage.extensionVersion)
}
void ExtensionRequestMessage::set_extensionversion(const char* value, size_t size) {
  
  extensionversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.ExtensionRequestMessage.extensionVersion)
}
::std::string* ExtensionRequestMessage::mutable_extensionversion() {
  
  // @@protoc_insertion_point(field_mutable:Client.ExtensionRequestMessage.extensionVersion)
  return extensionversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExtensionRequestMessage::release_extensionversion() {
  // @@protoc_insertion_point(field_release:Client.ExtensionRequestMessage.extensionVersion)
  
  return extensionversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExtensionRequestMessage::set_allocated_extensionversion(::std::string* extensionversion) {
  if (extensionversion != NULL) {
    
  } else {
    
  }
  extensionversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extensionversion);
  // @@protoc_insertion_point(field_set_allocated:Client.ExtensionRequestMessage.extensionVersion)
}

// repeated .Client.Heartbeat heartbeats = 2;
int ExtensionRequestMessage::heartbeats_size() const {
  return heartbeats_.size();
}
void ExtensionRequestMessage::clear_heartbeats() {
  heartbeats_.Clear();
}
const ::Client::Heartbeat& ExtensionRequestMessage::heartbeats(int index) const {
  // @@protoc_insertion_point(field_get:Client.ExtensionRequestMessage.heartbeats)
  return heartbeats_.Get(index);
}
::Client::Heartbeat* ExtensionRequestMessage::mutable_heartbeats(int index) {
  // @@protoc_insertion_point(field_mutable:Client.ExtensionRequestMessage.heartbeats)
  return heartbeats_.Mutable(index);
}
::Client::Heartbeat* ExtensionRequestMessage::add_heartbeats() {
  // @@protoc_insertion_point(field_add:Client.ExtensionRequestMessage.heartbeats)
  return heartbeats_.Add();
}
::google::protobuf::RepeatedPtrField< ::Client::Heartbeat >*
ExtensionRequestMessage::mutable_heartbeats() {
  // @@protoc_insertion_point(field_mutable_list:Client.ExtensionRequestMessage.heartbeats)
  return &heartbeats_;
}
const ::google::protobuf::RepeatedPtrField< ::Client::Heartbeat >&
ExtensionRequestMessage::heartbeats() const {
  // @@protoc_insertion_point(field_list:Client.ExtensionRequestMessage.heartbeats)
  return heartbeats_;
}

// repeated .Client.Diagnostic diagnostics = 3;
int ExtensionRequestMessage::diagnostics_size() const {
  return diagnostics_.size();
}
void ExtensionRequestMessage::clear_diagnostics() {
  diagnostics_.Clear();
}
const ::Client::Diagnostic& ExtensionRequestMessage::diagnostics(int index) const {
  // @@protoc_insertion_point(field_get:Client.ExtensionRequestMessage.diagnostics)
  return diagnostics_.Get(index);
}
::Client::Diagnostic* ExtensionRequestMessage::mutable_diagnostics(int index) {
  // @@protoc_insertion_point(field_mutable:Client.ExtensionRequestMessage.diagnostics)
  return diagnostics_.Mutable(index);
}
::Client::Diagnostic* ExtensionRequestMessage::add_diagnostics() {
  // @@protoc_insertion_point(field_add:Client.ExtensionRequestMessage.diagnostics)
  return diagnostics_.Add();
}
::google::protobuf::RepeatedPtrField< ::Client::Diagnostic >*
ExtensionRequestMessage::mutable_diagnostics() {
  // @@protoc_insertion_point(field_mutable_list:Client.ExtensionRequestMessage.diagnostics)
  return &diagnostics_;
}
const ::google::protobuf::RepeatedPtrField< ::Client::Diagnostic >&
ExtensionRequestMessage::diagnostics() const {
  // @@protoc_insertion_point(field_list:Client.ExtensionRequestMessage.diagnostics)
  return diagnostics_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleRequestMessage::kModuleVersionFieldNumber;
const int ModuleRequestMessage::kHeartbeatsFieldNumber;
const int ModuleRequestMessage::kDetectionsFieldNumber;
const int ModuleRequestMessage::kDiagnosticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleRequestMessage::ModuleRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.ModuleRequestMessage)
}
ModuleRequestMessage::ModuleRequestMessage(const ModuleRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      heartbeats_(from.heartbeats_),
      detections_(from.detections_),
      diagnostics_(from.diagnostics_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  moduleversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.moduleversion().size() > 0) {
    moduleversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moduleversion_);
  }
  // @@protoc_insertion_point(copy_constructor:Client.ModuleRequestMessage)
}

void ModuleRequestMessage::SharedCtor() {
  moduleversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModuleRequestMessage::~ModuleRequestMessage() {
  // @@protoc_insertion_point(destructor:Client.ModuleRequestMessage)
  SharedDtor();
}

void ModuleRequestMessage::SharedDtor() {
  moduleversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModuleRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleRequestMessage::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleRequestMessage& ModuleRequestMessage::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModuleRequestMessage* ModuleRequestMessage::New(::google::protobuf::Arena* arena) const {
  ModuleRequestMessage* n = new ModuleRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModuleRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.ModuleRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heartbeats_.Clear();
  detections_.Clear();
  diagnostics_.Clear();
  moduleversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ModuleRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.ModuleRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string moduleVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_moduleversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->moduleversion().data(), static_cast<int>(this->moduleversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Client.ModuleRequestMessage.moduleVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Client.Heartbeat heartbeats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heartbeats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Client.Detection detections = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_detections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Client.Diagnostic diagnostics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.ModuleRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.ModuleRequestMessage)
  return false;
#undef DO_
}

void ModuleRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.ModuleRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string moduleVersion = 1;
  if (this->moduleversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->moduleversion().data(), static_cast<int>(this->moduleversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.ModuleRequestMessage.moduleVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->moduleversion(), output);
  }

  // repeated .Client.Heartbeat heartbeats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heartbeats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heartbeats(static_cast<int>(i)), output);
  }

  // repeated .Client.Detection detections = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detections_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->detections(static_cast<int>(i)), output);
  }

  // repeated .Client.Diagnostic diagnostics = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diagnostics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->diagnostics(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.ModuleRequestMessage)
}

::google::protobuf::uint8* ModuleRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.ModuleRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string moduleVersion = 1;
  if (this->moduleversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->moduleversion().data(), static_cast<int>(this->moduleversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Client.ModuleRequestMessage.moduleVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->moduleversion(), target);
  }

  // repeated .Client.Heartbeat heartbeats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heartbeats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->heartbeats(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Client.Detection detections = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detections_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->detections(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Client.Diagnostic diagnostics = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diagnostics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->diagnostics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.ModuleRequestMessage)
  return target;
}

size_t ModuleRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.ModuleRequestMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Client.Heartbeat heartbeats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->heartbeats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heartbeats(static_cast<int>(i)));
    }
  }

  // repeated .Client.Detection detections = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->detections_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->detections(static_cast<int>(i)));
    }
  }

  // repeated .Client.Diagnostic diagnostics = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->diagnostics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->diagnostics(static_cast<int>(i)));
    }
  }

  // string moduleVersion = 1;
  if (this->moduleversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->moduleversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.ModuleRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.ModuleRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.ModuleRequestMessage)
    MergeFrom(*source);
  }
}

void ModuleRequestMessage::MergeFrom(const ModuleRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.ModuleRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heartbeats_.MergeFrom(from.heartbeats_);
  detections_.MergeFrom(from.detections_);
  diagnostics_.MergeFrom(from.diagnostics_);
  if (from.moduleversion().size() > 0) {

    moduleversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moduleversion_);
  }
}

void ModuleRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.ModuleRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleRequestMessage::CopyFrom(const ModuleRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.ModuleRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleRequestMessage::IsInitialized() const {
  return true;
}

void ModuleRequestMessage::Swap(ModuleRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleRequestMessage::InternalSwap(ModuleRequestMessage* other) {
  using std::swap;
  heartbeats_.InternalSwap(&other->heartbeats_);
  detections_.InternalSwap(&other->detections_);
  diagnostics_.InternalSwap(&other->diagnostics_);
  moduleversion_.Swap(&other->moduleversion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModuleRequestMessage::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModuleRequestMessage

// string moduleVersion = 1;
void ModuleRequestMessage::clear_moduleversion() {
  moduleversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModuleRequestMessage::moduleversion() const {
  // @@protoc_insertion_point(field_get:Client.ModuleRequestMessage.moduleVersion)
  return moduleversion_.GetNoArena();
}
void ModuleRequestMessage::set_moduleversion(const ::std::string& value) {
  
  moduleversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.ModuleRequestMessage.moduleVersion)
}
#if LANG_CXX11
void ModuleRequestMessage::set_moduleversion(::std::string&& value) {
  
  moduleversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.ModuleRequestMessage.moduleVersion)
}
#endif
void ModuleRequestMessage::set_moduleversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  moduleversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.ModuleRequestMessage.moduleVersion)
}
void ModuleRequestMessage::set_moduleversion(const char* value, size_t size) {
  
  moduleversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.ModuleRequestMessage.moduleVersion)
}
::std::string* ModuleRequestMessage::mutable_moduleversion() {
  
  // @@protoc_insertion_point(field_mutable:Client.ModuleRequestMessage.moduleVersion)
  return moduleversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModuleRequestMessage::release_moduleversion() {
  // @@protoc_insertion_point(field_release:Client.ModuleRequestMessage.moduleVersion)
  
  return moduleversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModuleRequestMessage::set_allocated_moduleversion(::std::string* moduleversion) {
  if (moduleversion != NULL) {
    
  } else {
    
  }
  moduleversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), moduleversion);
  // @@protoc_insertion_point(field_set_allocated:Client.ModuleRequestMessage.moduleVersion)
}

// repeated .Client.Heartbeat heartbeats = 2;
int ModuleRequestMessage::heartbeats_size() const {
  return heartbeats_.size();
}
void ModuleRequestMessage::clear_heartbeats() {
  heartbeats_.Clear();
}
const ::Client::Heartbeat& ModuleRequestMessage::heartbeats(int index) const {
  // @@protoc_insertion_point(field_get:Client.ModuleRequestMessage.heartbeats)
  return heartbeats_.Get(index);
}
::Client::Heartbeat* ModuleRequestMessage::mutable_heartbeats(int index) {
  // @@protoc_insertion_point(field_mutable:Client.ModuleRequestMessage.heartbeats)
  return heartbeats_.Mutable(index);
}
::Client::Heartbeat* ModuleRequestMessage::add_heartbeats() {
  // @@protoc_insertion_point(field_add:Client.ModuleRequestMessage.heartbeats)
  return heartbeats_.Add();
}
::google::protobuf::RepeatedPtrField< ::Client::Heartbeat >*
ModuleRequestMessage::mutable_heartbeats() {
  // @@protoc_insertion_point(field_mutable_list:Client.ModuleRequestMessage.heartbeats)
  return &heartbeats_;
}
const ::google::protobuf::RepeatedPtrField< ::Client::Heartbeat >&
ModuleRequestMessage::heartbeats() const {
  // @@protoc_insertion_point(field_list:Client.ModuleRequestMessage.heartbeats)
  return heartbeats_;
}

// repeated .Client.Detection detections = 3;
int ModuleRequestMessage::detections_size() const {
  return detections_.size();
}
void ModuleRequestMessage::clear_detections() {
  detections_.Clear();
}
const ::Client::Detection& ModuleRequestMessage::detections(int index) const {
  // @@protoc_insertion_point(field_get:Client.ModuleRequestMessage.detections)
  return detections_.Get(index);
}
::Client::Detection* ModuleRequestMessage::mutable_detections(int index) {
  // @@protoc_insertion_point(field_mutable:Client.ModuleRequestMessage.detections)
  return detections_.Mutable(index);
}
::Client::Detection* ModuleRequestMessage::add_detections() {
  // @@protoc_insertion_point(field_add:Client.ModuleRequestMessage.detections)
  return detections_.Add();
}
::google::protobuf::RepeatedPtrField< ::Client::Detection >*
ModuleRequestMessage::mutable_detections() {
  // @@protoc_insertion_point(field_mutable_list:Client.ModuleRequestMessage.detections)
  return &detections_;
}
const ::google::protobuf::RepeatedPtrField< ::Client::Detection >&
ModuleRequestMessage::detections() const {
  // @@protoc_insertion_point(field_list:Client.ModuleRequestMessage.detections)
  return detections_;
}

// repeated .Client.Diagnostic diagnostics = 4;
int ModuleRequestMessage::diagnostics_size() const {
  return diagnostics_.size();
}
void ModuleRequestMessage::clear_diagnostics() {
  diagnostics_.Clear();
}
const ::Client::Diagnostic& ModuleRequestMessage::diagnostics(int index) const {
  // @@protoc_insertion_point(field_get:Client.ModuleRequestMessage.diagnostics)
  return diagnostics_.Get(index);
}
::Client::Diagnostic* ModuleRequestMessage::mutable_diagnostics(int index) {
  // @@protoc_insertion_point(field_mutable:Client.ModuleRequestMessage.diagnostics)
  return diagnostics_.Mutable(index);
}
::Client::Diagnostic* ModuleRequestMessage::add_diagnostics() {
  // @@protoc_insertion_point(field_add:Client.ModuleRequestMessage.diagnostics)
  return diagnostics_.Add();
}
::google::protobuf::RepeatedPtrField< ::Client::Diagnostic >*
ModuleRequestMessage::mutable_diagnostics() {
  // @@protoc_insertion_point(field_mutable_list:Client.ModuleRequestMessage.diagnostics)
  return &diagnostics_;
}
const ::google::protobuf::RepeatedPtrField< ::Client::Diagnostic >&
ModuleRequestMessage::diagnostics() const {
  // @@protoc_insertion_point(field_list:Client.ModuleRequestMessage.diagnostics)
  return diagnostics_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRequest::kExtensionMessageFieldNumber;
const int ClientRequest::kModuleMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRequest::ClientRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Client_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Client.ClientRequest)
}
ClientRequest::ClientRequest(const ClientRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  modulemessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modulemessage().size() > 0) {
    modulemessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulemessage_);
  }
  if (from.has_extensionmessage()) {
    extensionmessage_ = new ::Client::ExtensionRequestMessage(*from.extensionmessage_);
  } else {
    extensionmessage_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Client.ClientRequest)
}

void ClientRequest::SharedCtor() {
  modulemessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extensionmessage_ = NULL;
  _cached_size_ = 0;
}

ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:Client.ClientRequest)
  SharedDtor();
}

void ClientRequest::SharedDtor() {
  modulemessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extensionmessage_;
}

void ClientRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientRequest::descriptor() {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientRequest& ClientRequest::default_instance() {
  protobuf_Client_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientRequest* ClientRequest::New(::google::protobuf::Arena* arena) const {
  ClientRequest* n = new ClientRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Client.ClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modulemessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && extensionmessage_ != NULL) {
    delete extensionmessage_;
  }
  extensionmessage_ = NULL;
  _internal_metadata_.Clear();
}

bool ClientRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Client.ClientRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Client.ExtensionRequestMessage extensionMessage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extensionmessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes moduleMessage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_modulemessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Client.ClientRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Client.ClientRequest)
  return false;
#undef DO_
}

void ClientRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Client.ClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Client.ExtensionRequestMessage extensionMessage = 1;
  if (this->has_extensionmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->extensionmessage_, output);
  }

  // bytes moduleMessage = 2;
  if (this->modulemessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->modulemessage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Client.ClientRequest)
}

::google::protobuf::uint8* ClientRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Client.ClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Client.ExtensionRequestMessage extensionMessage = 1;
  if (this->has_extensionmessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->extensionmessage_, deterministic, target);
  }

  // bytes moduleMessage = 2;
  if (this->modulemessage().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->modulemessage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Client.ClientRequest)
  return target;
}

size_t ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Client.ClientRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes moduleMessage = 2;
  if (this->modulemessage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->modulemessage());
  }

  // .Client.ExtensionRequestMessage extensionMessage = 1;
  if (this->has_extensionmessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->extensionmessage_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Client.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Client.ClientRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Client.ClientRequest)
    MergeFrom(*source);
  }
}

void ClientRequest::MergeFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Client.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.modulemessage().size() > 0) {

    modulemessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulemessage_);
  }
  if (from.has_extensionmessage()) {
    mutable_extensionmessage()->::Client::ExtensionRequestMessage::MergeFrom(from.extensionmessage());
  }
}

void ClientRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Client.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRequest::CopyFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Client.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRequest::IsInitialized() const {
  return true;
}

void ClientRequest::Swap(ClientRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRequest::InternalSwap(ClientRequest* other) {
  using std::swap;
  modulemessage_.Swap(&other->modulemessage_);
  swap(extensionmessage_, other->extensionmessage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientRequest::GetMetadata() const {
  protobuf_Client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Client_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientRequest

// .Client.ExtensionRequestMessage extensionMessage = 1;
bool ClientRequest::has_extensionmessage() const {
  return this != internal_default_instance() && extensionmessage_ != NULL;
}
void ClientRequest::clear_extensionmessage() {
  if (GetArenaNoVirtual() == NULL && extensionmessage_ != NULL) delete extensionmessage_;
  extensionmessage_ = NULL;
}
const ::Client::ExtensionRequestMessage& ClientRequest::extensionmessage() const {
  const ::Client::ExtensionRequestMessage* p = extensionmessage_;
  // @@protoc_insertion_point(field_get:Client.ClientRequest.extensionMessage)
  return p != NULL ? *p : *reinterpret_cast<const ::Client::ExtensionRequestMessage*>(
      &::Client::_ExtensionRequestMessage_default_instance_);
}
::Client::ExtensionRequestMessage* ClientRequest::mutable_extensionmessage() {
  
  if (extensionmessage_ == NULL) {
    extensionmessage_ = new ::Client::ExtensionRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:Client.ClientRequest.extensionMessage)
  return extensionmessage_;
}
::Client::ExtensionRequestMessage* ClientRequest::release_extensionmessage() {
  // @@protoc_insertion_point(field_release:Client.ClientRequest.extensionMessage)
  
  ::Client::ExtensionRequestMessage* temp = extensionmessage_;
  extensionmessage_ = NULL;
  return temp;
}
void ClientRequest::set_allocated_extensionmessage(::Client::ExtensionRequestMessage* extensionmessage) {
  delete extensionmessage_;
  extensionmessage_ = extensionmessage;
  if (extensionmessage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Client.ClientRequest.extensionMessage)
}

// bytes moduleMessage = 2;
void ClientRequest::clear_modulemessage() {
  modulemessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientRequest::modulemessage() const {
  // @@protoc_insertion_point(field_get:Client.ClientRequest.moduleMessage)
  return modulemessage_.GetNoArena();
}
void ClientRequest::set_modulemessage(const ::std::string& value) {
  
  modulemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Client.ClientRequest.moduleMessage)
}
#if LANG_CXX11
void ClientRequest::set_modulemessage(::std::string&& value) {
  
  modulemessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Client.ClientRequest.moduleMessage)
}
#endif
void ClientRequest::set_modulemessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modulemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Client.ClientRequest.moduleMessage)
}
void ClientRequest::set_modulemessage(const void* value, size_t size) {
  
  modulemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Client.ClientRequest.moduleMessage)
}
::std::string* ClientRequest::mutable_modulemessage() {
  
  // @@protoc_insertion_point(field_mutable:Client.ClientRequest.moduleMessage)
  return modulemessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientRequest::release_modulemessage() {
  // @@protoc_insertion_point(field_release:Client.ClientRequest.moduleMessage)
  
  return modulemessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientRequest::set_allocated_modulemessage(::std::string* modulemessage) {
  if (modulemessage != NULL) {
    
  } else {
    
  }
  modulemessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modulemessage);
  // @@protoc_insertion_point(field_set_allocated:Client.ClientRequest.moduleMessage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Client

// @@protoc_insertion_point(global_scope)
