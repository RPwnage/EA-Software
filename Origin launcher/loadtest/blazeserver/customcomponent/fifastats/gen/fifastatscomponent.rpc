// Defines the RPCs and async notifications used in the fifastats component.
//  RPC classes are compiled with RPCComp, generating C++ classes (or class stubs) that the component must implement.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/RPCComp for info on the .rpc file/lang spec and the compiler, RpcComp
//
// We assume that all request and response types are valid and just use them
// directly in the code generation.
//
// The compiler should ensure that all commands within a component have a unique ID.
// The compiler should ensure that all components within a file have a unique ID.
// Zero is not a valid component or command ID
// Enforce that method names must start with lowercase letter.
// Enforce C++ rules for method names and TDF type names.
// Allow C++ style comments.
//

[ headername="fifastats/tdf/fifastatstypes.h" ]
#include "fifastats/gen/fifastatstypes.tdf"

[ 
  client_include = false,
  headername="fifastats/tdf/fifastatstypes_server.h" 
]
#include "fifastats/gen/fifastatstypes_server.tdf"


namespace Blaze  
{
namespace FifaStats
{
[
  id = custom/26,
  description = "A component used strictly as a template.",
  details = "This component will compile.  It will not be configured to run by default.",
  configurationType=FifaStatsConfig //Configuration TDF that describes what the component configuration looks like.
]
component FifaStats
{                              
    errors
    {
        [ description = "An unknown error occurred." ]
        FIFASTATS_ERR_UNKNOWN = 1;
        [ description = "invalid data." ]
		FIFASTATS_ERR_TOKEN_RETRIEVAL_FAILED = 2;
        [ description = "invalid data." ]
		FIFASTATS_ERR_INVALID_DATA = 3;
    }

    slave
    {                           
        methods
        {
            [
              id = 1,
              errors = {FIFASTATS_ERR_UNKNOWN},
              errortype = FifaStatsError,
              description = "This command will poke the Blaze server and return a response.",
              details = "If a negative number is passed in the num field, this command will return an error."
            ]
            FifaStatsResponse poke(FifaStatsRequest);

            [
              id = 2,
              errors = {
                         FIFASTATS_ERR_UNKNOWN,
                         FIFASTATS_ERR_TOKEN_RETRIEVAL_FAILED,
                         FIFASTATS_ERR_INVALID_DATA
                       }				
            ]
            UpdateStatsResponse updateStats(UpdateStatsRequest);

            [
              id = 3,
              description = "Update stats for groups internally",
              details = "Update stats internally without requiring a user session",
              client_export = false,
              internal = true,
              requiresUserSession = false,
              errors = {
                         FIFASTATS_ERR_UNKNOWN,
                         FIFASTATS_ERR_TOKEN_RETRIEVAL_FAILED,
                         FIFASTATS_ERR_INVALID_DATA
                       }
            ]
            UpdateStatsResponse updateStatsInternal(UpdateStatsRequest);

        } // methods
    } // slave

    master
    {        
        methods
        {
            [
              id = 1,
              errors = {FIFASTATS_ERR_UNKNOWN} 
            ]
            FifaStatsResponse pokeMaster(FifaStatsRequest);         
        } // methods
    } // master
}
}
}


