[ headername="friends/tdf/friends.h" ]
#include "friends/gen/friends.tdf"

[
    client_include = false
]

namespace Blaze
{
namespace Social
{
namespace Friends
{

[
    id = core/1031,
    description = "Component used for friends lists for EA players, accessible across products and platforms.",
    details = "The Friends service allows you to store a friends list, invite list, pending incoming invites, and block lists for each player. ",
    proxyOnly = true,
    http = {
        use_response_header_blazeerror = true
    }
]

component Friends
{
    errors
    {
        [ description = "An unknown error occurred within the server", http_status_code = 500 ]
        FRIENDS_UNKNOWN_ERR = 504;
        
        [ description = "Requires API Key or Client Certificate", http_status_code = 401 ]
        FRIENDS_API_KEY_INVALID = 11100;

        [ description = "Unable to locate a user with the specified ID", http_status_code = 400 ]
        FRIENDS_NO_SUCH_USER = 901;

        [ description = "Invalid type", http_status_code = 400 ]
        FRIENDS_INVALID_ARGUMENT_TYPE = 909;

        [ description = "Neither a Nucleus ID nor a Persona ID were passed to a method that expected one", http_status_code = 400 ]
        FRIENDS_NO_ID_SPECIFIED = 20006;

        [ description = "No friend ID was specified", http_status_code = 400 ]
        FRIENDS_NO_FRIEND_SPECIFIED = 20007;

        [ description = "An invalid privacy setting was specified", http_status_code = 400 ]
        FRIENDS_BAD_PRIVACY_SETTING = 20008;

        [ description = "The inviter or invitee's friends list is at or above the limit", http_status_code = 400 ]
        FRIENDS_FRIENDS_LIST_FULL = 22001;

        [ description = "No group name was specified when trying to remove a user from a group", http_status_code = 400 ]
        FRIENDS_NO_GROUP_NAME_SPECIFIED = 22002;

        [ description = "Can not remove a user from the global group", http_status_code = 400 ]
        FRIENDS_GLOBAL_GROUP_LOCKED = 22003;

        [ description = "The AuthToken in the request is invalid", http_status_code = 400 ]
        FRIENDS_AUTHTOKEN_INVALID = 22004;

        [ description = "The AuthToken does not match the Nucleus ID", http_status_code = 400 ]
        FRIENDS_AUTHTOKEN_INVALID_FOR_USER = 22005;

        [ description = "The specified invitation was not found", http_status_code = 400 ]
        FRIENDS_INVITATION_NOT_FOUND = 22006;

        [ description = "The target user is not a friend", http_status_code = 400 ]
        FRIENDS_TARGET_NOT_FRIEND = 22007;

        [ description = "The target user is in a non-default group and must be removed", http_status_code = 400 ]
        FRIENDS_TARGET_IN_CUSTOM_GROUP = 22008;

        [ description = "The invitee is in the inviter's block list", http_status_code = 400 ]
        FRIENDS_INVITEE_BLOCKED_BY_INVITER = 22009;

        [ description = "The invitee is already in the inviter's friend list", http_status_code = 400 ]
        FRIENDS_INVITEE_ALREADY_FRIEND = 22010;

        [ description = "The friend isn't in the specified group", http_status_code = 400 ]
        FRIENDS_FRIEND_NOT_IN_GROUP = 22013;

        [ description = "The user is trying to block their own ID", http_status_code = 400 ]
        FRIENDS_BLOCKING_SELF = 22015;

        [ description = "An error was encountered while doing a batch invite operation", http_status_code = 400 ]
        FRIENDS_BATCH_INVITE_ERROR = 22016;

        [ description = "The user is trying to invite their own ID", http_status_code = 400 ]
        FRIENDS_INVITEE_IS_INVITER = 22017;

        [ description = "The specified ID list is empty", http_status_code = 400 ]
        FRIENDS_ID_LIST_EMPTY = 22018;

        [ description = "The user's outbound invite list is full", http_status_code = 400 ]
        FRIENDS_OUTBOUND_INVITES_FULL = 22020;

        [ description = "The user's inbound invite list is full", http_status_code = 400 ]
        FRIENDS_INBOUND_INVITES_FULL = 22021;

        [ description = "You can't favorite yourself", http_status_code = 400 ]
        FRIENDS_FAVORITING_SELF = 22022;

        [ description = "You can't unfavorite yourself", http_status_code = 400 ]
        FRIENDS_UNFAVORITING_SELF = 22023;

        [ description = "You can't favorite a user who is not a friend", http_status_code = 400 ]
        FRIENDS_FAVORITING_NON_FRIEND = 22024;

        [ description = "You can't unfavorite a user who is not a friend", http_status_code = 400 ]
        FRIENDS_UNFAVORITING_NON_FRIEND = 22025;

        [ description = "The namespaces don't match for the Persona IDs", http_status_code = 400 ]
        FRIENDS_NAMESPACE_MISTMATCH = 22026;
    }

    slave
    {
        methods
        {
            [
                id = 1,
                description = "Mute and unfriend the target user",
                details = "Mute the target user and un-friend them (if friends), preventing communication to or from them.",
                requires_authentication = true,
                client_export = true,
                errors = {
                    FRIENDS_UNKNOWN_ERR,
                    FRIENDS_API_KEY_INVALID,
                    FRIENDS_NO_SUCH_USER,
                    FRIENDS_INVALID_ARGUMENT_TYPE,
                    FRIENDS_NO_ID_SPECIFIED,
                    FRIENDS_NO_FRIEND_SPECIFIED,
                    FRIENDS_BAD_PRIVACY_SETTING,
                    FRIENDS_FRIENDS_LIST_FULL,
                    FRIENDS_NO_GROUP_NAME_SPECIFIED,
                    FRIENDS_GLOBAL_GROUP_LOCKED,
                    FRIENDS_AUTHTOKEN_INVALID,
                    FRIENDS_AUTHTOKEN_INVALID_FOR_USER,
                    FRIENDS_INVITATION_NOT_FOUND,
                    FRIENDS_TARGET_NOT_FRIEND,
                    FRIENDS_TARGET_IN_CUSTOM_GROUP,
                    FRIENDS_INVITEE_BLOCKED_BY_INVITER,
                    FRIENDS_INVITEE_ALREADY_FRIEND,
                    FRIENDS_FRIEND_NOT_IN_GROUP,
                    FRIENDS_BLOCKING_SELF,
                    FRIENDS_BATCH_INVITE_ERROR,
                    FRIENDS_INVITEE_IS_INVITER,
                    FRIENDS_ID_LIST_EMPTY,
                    FRIENDS_OUTBOUND_INVITES_FULL,
                    FRIENDS_INBOUND_INVITES_FULL,
                    FRIENDS_FAVORITING_SELF,
                    FRIENDS_UNFAVORITING_SELF,
                    FRIENDS_FAVORITING_NON_FRIEND,
                    FRIENDS_UNFAVORITING_NON_FRIEND,
                    FRIENDS_NAMESPACE_MISTMATCH
                },
                http = {
                    resource = "friends/2/users/{nucleusId}/muted/{friendId}",
                    method = "PUT",
                    custom_request_headers = {
                        "Authorization" = "authCredentials.authorization",
                        "X-Application-Key" = "authCredentials.applicationKey",
                        "X-Api-Version" = "authCredentials.apiVersion"
                    },
                    encodeEnumsAsStrings = true
                }
            ]
            void muteUser(MuteUserRequest);

            [
                id = 2,
                description = "Fetches user's list of muted players",
                details = "If an ID list is passed, this call will check the mute state of each user with respect to the requesting user. If not, this call will return the requesting user's list of muted users.",
                requires_authentication = true,
                client_export = true,
                errors = {
                    FRIENDS_UNKNOWN_ERR,
                    FRIENDS_API_KEY_INVALID,
                    FRIENDS_NO_SUCH_USER,
                    FRIENDS_INVALID_ARGUMENT_TYPE,
                    FRIENDS_NO_ID_SPECIFIED,
                    FRIENDS_NO_FRIEND_SPECIFIED,
                    FRIENDS_BAD_PRIVACY_SETTING,
                    FRIENDS_FRIENDS_LIST_FULL,
                    FRIENDS_NO_GROUP_NAME_SPECIFIED,
                    FRIENDS_GLOBAL_GROUP_LOCKED,
                    FRIENDS_AUTHTOKEN_INVALID,
                    FRIENDS_AUTHTOKEN_INVALID_FOR_USER,
                    FRIENDS_INVITATION_NOT_FOUND,
                    FRIENDS_TARGET_NOT_FRIEND,
                    FRIENDS_TARGET_IN_CUSTOM_GROUP,
                    FRIENDS_INVITEE_BLOCKED_BY_INVITER,
                    FRIENDS_INVITEE_ALREADY_FRIEND,
                    FRIENDS_FRIEND_NOT_IN_GROUP,
                    FRIENDS_BLOCKING_SELF,
                    FRIENDS_BATCH_INVITE_ERROR,
                    FRIENDS_INVITEE_IS_INVITER,
                    FRIENDS_ID_LIST_EMPTY,
                    FRIENDS_OUTBOUND_INVITES_FULL,
                    FRIENDS_INBOUND_INVITES_FULL,
                    FRIENDS_FAVORITING_SELF,
                    FRIENDS_UNFAVORITING_SELF,
                    FRIENDS_FAVORITING_NON_FRIEND,
                    FRIENDS_UNFAVORITING_NON_FRIEND,
                    FRIENDS_NAMESPACE_MISTMATCH
                },
                http = {
                    resource = "friends/2/users/{nucleusId}/muted",
                    method = "GET",
                    custom_request_headers = {
                        "Authorization" = "authCredentials.authorization",
                        "X-Application-Key" = "authCredentials.applicationKey",
                        "X-Api-Version" = "authCredentials.apiVersion"
                    },
                    url_params = {
                        "start" = "start",
                        "count" = "count",
                        "names" = "names",
                        "ids" = "ids"
                    },
                    encodeEnumsAsStrings = true
                }
            ]
            PagedListUser checkMuteStatus(CheckMuteStatusRequest);

            [
                id = 3,
                description = "Un-mute target user",
                details = " Un-mute the target user, restoring the ability to communicate with them.",
                requires_authentication = true,
                client_export = true,
                errors = {
                    FRIENDS_UNKNOWN_ERR,
                    FRIENDS_API_KEY_INVALID,
                    FRIENDS_NO_SUCH_USER,
                    FRIENDS_INVALID_ARGUMENT_TYPE,
                    FRIENDS_NO_ID_SPECIFIED,
                    FRIENDS_NO_FRIEND_SPECIFIED,
                    FRIENDS_BAD_PRIVACY_SETTING,
                    FRIENDS_FRIENDS_LIST_FULL,
                    FRIENDS_NO_GROUP_NAME_SPECIFIED,
                    FRIENDS_GLOBAL_GROUP_LOCKED,
                    FRIENDS_AUTHTOKEN_INVALID,
                    FRIENDS_AUTHTOKEN_INVALID_FOR_USER,
                    FRIENDS_INVITATION_NOT_FOUND,
                    FRIENDS_TARGET_NOT_FRIEND,
                    FRIENDS_TARGET_IN_CUSTOM_GROUP,
                    FRIENDS_INVITEE_BLOCKED_BY_INVITER,
                    FRIENDS_INVITEE_ALREADY_FRIEND,
                    FRIENDS_FRIEND_NOT_IN_GROUP,
                    FRIENDS_BLOCKING_SELF,
                    FRIENDS_BATCH_INVITE_ERROR,
                    FRIENDS_INVITEE_IS_INVITER,
                    FRIENDS_ID_LIST_EMPTY,
                    FRIENDS_OUTBOUND_INVITES_FULL,
                    FRIENDS_INBOUND_INVITES_FULL,
                    FRIENDS_FAVORITING_SELF,
                    FRIENDS_UNFAVORITING_SELF,
                    FRIENDS_FAVORITING_NON_FRIEND,
                    FRIENDS_UNFAVORITING_NON_FRIEND,
                    FRIENDS_NAMESPACE_MISTMATCH
                },
                http = {
                    resource = "friends/2/users/{nucleusId}/muted/{friendId}",
                    method = "DELETE",
                    custom_request_headers = {
                        "Authorization" = "authCredentials.authorization",
                        "X-Application-Key" = "authCredentials.applicationKey",
                        "X-Api-Version" = "authCredentials.apiVersion"
                    },
                    encodeEnumsAsStrings = true
                }
            ]
            void unmuteUser(MuteUserRequest);
        }
    }
}

}
}
}
