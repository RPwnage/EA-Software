[ headername="xblreputationservice/tdf/xblreputationservice.h" ]
#include "xblreputationservice/gen/xblreputationservice.tdf"


namespace Blaze
{
namespace XBLReputationService
{

[
    id = core/1023,
    description = "Proxy component used to SET xbl reputation",
    details = "xbl reputation",
    proxyOnly = true,
    http = {
        payloadEncoderSubType = "NORMAL"
    }
]
component XBLReputationService
{
    slave
    {
        methods
        {
            [
                id = 1,
                description = "Send feedback to a single user",
                details = "Send feedback to a single user to make its reputation flip",
                requires_authentication = false,
                client_export = false,
                http = {
                    resource = "/users/xuid({xuid})/feedback",
                    method = "POST",
                    custom_request_headers = {
                        "x-xbl-contract-version" = "postFeedbackRequestHeader.contractVersion",
                        "Authorization"          = "postFeedbackRequestHeader.authToken"
                    },
                    requestPayloadMember = "postFeedbackRequestBody"
                }
            ]
            void postFeedback(PostFeedbackRequest);
            
            
            [
                id = 2,
                description = "Reset reputation by user",
                details = "Reset reputation by user",
                requires_authentication = false,
                client_export = false,
                http = {
                    resource = "/users/xuid({xuid})/resetreputation",
                    method = "POST",
                    custom_request_headers = {
                        "x-xbl-contract-version" = "postResetReputationRequestHeader.contractVersion"
                    },
                    requestPayloadMember = "postResetReputationRequestBody"
                }
            ]
            void postResetReputation(PostResetReputationRequest);           

        }
    }
}


}
}
