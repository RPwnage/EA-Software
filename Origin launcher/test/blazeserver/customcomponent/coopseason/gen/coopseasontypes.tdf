// Defines the TDF classes used in the coopseason component.
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp

[headername="coopseason/tdf/coopseasontypes_base.h"]
#include "coopseasontypes_base.tdf"

namespace Blaze
{
namespace CoopSeason
{
[
	description = "The request object for a poke command.",
	details = "This class a bare minimal set of parameters."
]

    typedef string(1024) Metadata;

	class CoopPairData
    {
	    [tag="cpid", description="Coop id for a coop pair"]
	    uint64_t mCoopId;
	
	    [tag="mone", description="blaze Id of member one"]
	    BlazeId mMemberOneBlazeId;
	
	    [tag="mtwo", description="blaze Id of member two"]
	    BlazeId mMemberTwoBlazeId;
	
    	[tag="meta", description="meta data for coop pair"]
    	Metadata mMetadata;
    };

    typedef map<BlazeId,CoopPairData> CoopPairDataMap;
    typedef list<CoopPairData> CoopPairDataList;

    class GetAllCoopIdsRequest
    {
	    [tag="tgid", description="blaze Id of search target"]
	    BlazeId mTargetBlazeId;
    };

    class GetAllCoopIdsResponse
    {
	    [tag="rcnt", description="Number of coop pair found for the target blaze id"]
	    int32_t mResultCount;

    	[tag="cmap", description="List of coop pair data."]
    	CoopPairDataList mCoopPairDataList;
    };

    class GetCoopIdDataRequest
    {
    	[tag="cpid", description="coop id for a coop pair"]
    	uint64_t mCoopId;
	
    	[tag="mone", description="blaze Id of member one"]
	    BlazeId mMemberOneBlazeId;
	
    	[tag="mtwo", description="blaze Id of member two"]
    	BlazeId mMemberTwoBlazeId;
    };

    class GetCoopIdDataResponse
    {
    	[tag="cdat", description="coop pair data obj"] 
    	CoopPairData mCoopPairData;
    };

    class SetCoopIdDataRequest
    {
    	[tag="cpid", description="coop id for a coop pair"]
    	uint64_t mCoopId;
	
    	[tag="mone", description="blaze Id of member one"]
    	BlazeId mMemberOneBlazeId;
	
    	[tag="mtwo", description="blaze Id of member two"]
    	BlazeId mMemberTwoBlazeId;
	
    	[tag="meta", description="meta data for coop pair"]
    	Metadata mMetadata;
    };

    class SetCoopIdDataResponse
    {
    	[tag="rest", description="result of the set coop Id Data Request"] 
    	bool mResultSuccess;
	
    	[tag="cpid", description="coop id for a coop pair"]
    	CoopId mCoopId;
    };

    class RemoveCoopIdDataRequest
    {
    	[tag="cpid", description="coop id for a coop pair"]
    	uint64_t mCoopId;
	
    	[tag="mone", description="blaze Id of member one"]
    	BlazeId mMemberOneBlazeId;
	
    	[tag="mtwo", description="blaze Id of member two"]
    	BlazeId mMemberTwoBlazeId;
    };

    class RemoveCoopIdDataResponse
    {
    	[tag="rest", description="result of the remove coop Id Data Request"] 
    	bool mResultSuccess;
    };

    class Nested
    {
        [tag="num", description="A number value greater than 0."]
    	int32_t mNum;
	
        [tag="text", description="Text to send up to the server."] 
        string(256) mText;
    
        [tag="nmpa"] map<string(32),string(32), ignorecase> mStringMap;
    };

    class CoopSeasonRequest
    {
        [tag="num", description="A number value greater than 0."]
    	int32_t mNum;
	
        [tag="text", description="Text to send up to the server."] 
        string(256) mText;
    
        [tag="smap"] map<string(32),string(32), ignorecase> mStringMap;

        [tag="nmap"] map<string(32),Nested, ignorecase> mNestedMap;
    };

    class CoopSeasonResponse
    {
    	enum CoopSeasonResponseEnum
	    {
		    [description="Unknown response."] 
    		COOPSEASON_ENUM_UNKNOWN = 0,
		
		    [description="Succeeded!"] 
		    COOPSEASON_ENUM_SUCCESS,
		
		    [description="Failed"] 
		    COOPSEASON_ENUM_FAILED
	    };

        [tag="map"] map<int32_t,CoopSeasonRequest> mMyMap;
    
        typedef list<int32_t> IntList;
        [tag="list"] IntList mMyList;

        [tag="enum", description="Enum response type."] 
        CoopSeasonResponseEnum mRegularEnum;
    
    	[tag="msg"] 
    	string(256) mMessage;
    };

    class CoopSeasonError
    {
	    [tag="msg"] 
	    string(256) mMessage;
    };


} // CoopSeason
} // Blaze



