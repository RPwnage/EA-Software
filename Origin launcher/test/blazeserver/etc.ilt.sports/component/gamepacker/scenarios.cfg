
//scenariosConfig = {

    //scenarios = {
       
        "ILT_Packer" = {
            totalDuration = "15s"   // Overridden by SESSION_DURATION
            subsessions = {
                
                "ILTSession" = {                         // Sub session names are arbitrary. Displayed via GOSCC.
                    
                    // Not specifying any rules, because this is a packer session
                    filtersList = [
                        "participantCapacityFilter" // PACKER_TODO: conditionally use global createGameTemplate filter, but that needs to be subsession-specific(if subsession does not use a template, it shouldn't apply, this means we need to make a caller.createGameTemplate property, and make the createGameFilter conditional on existence of caller.createGameTemplate property)
                    ]

                    matchmakingSettings = {
                        sessionMode = [ "CreateGame"]    // Overridden by globalAttributes at the top of this file, see: SESSION_MODE, passed up from the stress client!
                    }

                    createGameAttributes = {

                        "Blaze::GameManager::GameCreationData.networkTopology" = { attrName = "NET_TOPOLOGY", isOptional=true }

                        // Note: only one attribute is currently provided for the create game settings:
                        "Blaze::GameManager::GameCreationData.gameAttribs[OSDK_gameMode]" = { attrName = "GAME_MODE", isOptional=true }

                        "Blaze::GameManager::GameCreationData.gameSettings" = { attrName = "GAME_SETTINGS", isOptional=true }
                        "Blaze::GameManager::GameCreationData.roleInformation" = { attrName = "ROLE_INFORMATION", isOptional=true }
                    }


                    // The CreateGameTemplate will be used as the basis for the create game request:
                    createGameTemplate = "packerGameILT"
                }
            }
        }
    //}
//}
