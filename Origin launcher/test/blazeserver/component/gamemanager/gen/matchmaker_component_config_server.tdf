/*! ************************************************************************************************/
/*!
    \file matchmaker_component_config_server.tdf

    \attention
        (c) Electronic Arts. All Rights Reserved.
*/
/*! ************************************************************************************************/
[headername="gamemanager/tdf/gamemanagerconfig_server.h"]
#include "gamemanager/gen/gamemanagerconfig_server.tdf"

[headername="gamemanager/tdf/scenarios_config_server.h"]
#include "gamemanager/gen/scenarios_config_server.tdf"

namespace Blaze
{
namespace Matchmaker
{

class MatchmakerSlavePreconfig
{
    // required to decode the scenarios config (even though we don't actually need the scenario definitions beyond the timeouts.)
    [tag="ram", reconfigurable="yes", description="The attributes available to the rules."]
    Blaze::GameManager::ScenarioRuleAttributeMap mRuleAttributeMap;
};

class MatchmakerConfig
{

    [tag="gcfg", description="GameSession configuration."]
    Blaze::GameManager::GameSessionServerConfig gameSession;
    
    [tag="mmsc", description="MatchmakingServerConfig object."]
    Blaze::GameManager::MatchmakingServerConfig matchmakerSettings;

    [tag="sncg", reconfigurable="yes", description="Configuration used for matchmaking scenarios."]
    Blaze::GameManager::ScenariosConfig mScenariosConfig;

    [tag="mftm", reconfigurable="yes", description="This defines the filters used."]
    Blaze::GameManager::MatchmakingFilterMap mFilters;

    [tag="prop", reconfigurable="yes", description="Properties config."]
    Blaze::GameManager::PropertyConfig mProperties;

    [tag="cgtc", reconfigurable="yes", description="Configuration used for create game templates."]
    Blaze::GameManager::CreateGameTemplatesConfig mCreateGameTemplatesConfig;

    [tag="rnc", description="ReteNetworkConfig object."]
    Blaze::GameManager::ReteNetworkConfig rete;
};

} // namespace Matchmaker
} // namespace Blaze