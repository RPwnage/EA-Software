// for CreateGameTemplatesConfig and GameSessionServerConfig // PACKER_TODO: move to separate file
[headername="gamemanager/tdf/gamemanagerconfig_server.h"]
#include "gamemanager/gen/gamemanagerconfig_server.tdf"

// for MatchmakingFilterMap // PACKER_TODO: move to separate file
[headername="gamemanager/tdf/matchmaking_properties_config_server.h"]
#include "gamemanager/gen/matchmaking_properties_config_server.tdf"

// for ReteNetworkConfig
[headername="gamemanager/tdf/retenetwork_config_server.h"]
#include "gamemanager/gen/retenetwork_config_server.tdf"

namespace Blaze
{
namespace GamePacker
{

[description="Settings specific to game packer slaves, aka workers", reconfigurable="yes", advanced="yes"]
class WorkerSettings
{
    [tag="sdur", default="4s", description="Maximum amount of time that a claimed work slot remains assigned to a claimant mm worker without a reclaim. Exceeding this point unassigns the slot. Unassigned slots are reassigned on a first come basis."]
    TimeValue maxSlotClaimDuration;

    [tag="mivl", default="250ms", description="Minimum amount of time between successive claims from a single mm worker instance. Acts as circuit breaker to avoid spamming situations in case of frequent failures."]
    TimeValue minTimeBetweenSlotClaims;

    [tag="tcpu", default=70, description="Target cpu % before load balancer code on the master begins to involve the worker with the next slot id. When 0 all workers are engaged."]
    uint32_t targetCpuThreshold;
};

// PACKER_TODO: Remove dependencies on MatchmakerConfig

[reconfigurable="yes", description = "GamePacker component configuration"]
class GamePackerConfig
{
    [tag="gcfg", reconfigurable="yes", description="GameSession configuration."]
    Blaze::GameManager::GameSessionServerConfig gameSession;

    [tag="gftm", reconfigurable="yes", description="This defines the global filters used by the scenarios."]
    Blaze::GameManager::MatchmakingFilterList globalFilters;

    [tag="mftm", reconfigurable="yes", description="This defines the filters used by the scenarios."]
    Blaze::GameManager::MatchmakingFilterMap filters;

    [tag="prop", reconfigurable="yes", description="Properties config."]
    Blaze::GameManager::PropertyConfig mProperties;

    [tag="cgtc", reconfigurable="yes", description="Configuration used for create game templates."]
    Blaze::GameManager::CreateGameTemplatesConfig createGameTemplatesConfig;

    [tag="rnc", reconfigurable="yes", description="ReteNetworkConfig object."]
    Blaze::GameManager::ReteNetworkConfig rete;

    [tag="wset", reconfigurable="yes", description="Settings used by the packer workers."]
    WorkerSettings workerSettings;

    [tag="exgr", reconfigurable="yes", description="Grace period added to scenario duration.", default = "2s"]
    TimeValue scenarioExpiryGracePeriod;
};


} // GamePacker
} // Blaze



