<project> 
	<property name="IGOProxy.module.name" value="IGOProxy" />

  <dependent name="OriginConfig" />
  <dependent name="OriginVersion" />
  <dependent name="DirectX" />
  <dependent name="WindowsSDK" />
  <dependent name="IGO" />

  <property name="package.WindowsSDK.TargetPlatformVersion" value="win8" />
  <property name="runtime.buildmodules" value="${property.value} IGOProxy" />

  <property name="runtime.${IGOProxy.module.name}.outputdir" value="${package.IGO.bin}" />
  <property name="runtime.${IGOProxy.module.name}.outputname" value="${IGOProxy.module.name}${debug-suffix}" if="${config-system} == 'pc'"/>
  <property name="runtime.${IGOProxy.module.name}.outputname" value="${IGOProxy.module.name}64${debug-suffix}" if="${config-system} == 'pc64'"/>
  <property name="manifest.filename" value="IGOProxy.exe.intermediate.manifest" if="${config-system} == 'pc'"/>
  <property name="manifest.filename" value="IGOProxy64.exe.intermediate.manifest" if="${config-system} == 'pc64'"/>
  <property name="package.VisualStudio.platformtoolset" value="v120_xp"/>
  
  <property name="runtime.${IGOProxy.module.name}.usedependencies" >
  </property>
  
	<!-- Add special compiler options and create new buidtype -->
	<property name="runtime.${IGOProxy.module.name}.remove.defines">
		_CHAR16T
	</property>	
	<BuildType name="${IGOProxy.module.name}" from="OriginProgram">
    <option name="buildset.link.options">
      ${option.value}
      /MANIFEST 
      /ManifestFile:"${manifest.filename}" 
      /ALLOWISOLATION 
      /MANIFESTUAC:"level='asInvoker' uiAccess='false'"
    </option>    
    <option name="multithreadeddynamiclib"        value="on" />
	</BuildType>
	
  <!-- ${IGOProxy.module.name} build properties -->
	<property name="runtime.${IGOProxy.module.name}.buildtype" value="${IGOProxy.module.name}" />

  <property name="runtime.${IGOProxy.module.name}.includedirs" >
    ${property.value}
    ${package.DirectX.appdir}/Include
    ${package.WindowsSDK.kitdir}\Include\${package.WindowsSDK.TargetPlatformVersion}\um
    ${package.WindowsSDK.kitdir}\Include\${package.WindowsSDK.TargetPlatformVersion}\shared
	</property>

  <fileset name="runtime.${IGOProxy.module.name}.libs"  if="${config-system} == 'pc'">
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\kernel32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\user32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\gdi32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\winspool.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\comdlg32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\advapi32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\shell32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\ole32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\oleaut32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\uuid.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\odbc32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\odbccp32.lib" />
  </fileset>

  <fileset name="runtime.${IGOProxy.module.name}.libs"  if="${config-system} == 'pc64'">
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\kernel32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\user32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\gdi32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\winspool.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\comdlg32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\advapi32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\shell32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\ole32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\oleaut32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\uuid.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\odbc32.lib" />
    <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x64\odbccp32.lib" />
  </fileset>
  
  <fileset name="runtime.${IGOProxy.module.name}.headerfiles" basedir="${module.${IGOProxy.module.name}.dir}" >
    <includes name="**/*.h" />
  </fileset>

  <fileset name="runtime.${IGOProxy.module.name}.sourcefiles" basedir="${module.${IGOProxy.module.name}.dir}">
		<includes name="igoproxy.cpp" />
		<includes name="helpers.cpp" />
		<includes name="md5.cpp" />
		<includes name="DX10.cpp" />
		<includes name="DX11.cpp" />
		<includes name="DX12.cpp" />
  </fileset>

	<property name="runtime.${IGOProxy.module.name}.res.includedirs">
		${package.OriginVersion.dir}/include
	</property>
    
  <fileset name="runtime.${IGOProxy.module.name}.resourcefiles">
          <includes name="${module.IGOProxy.dir}/resources.rc" />
  </fileset>
  
	<target name="cleanIGOProxy">
		<delete dir="${package.configbuilddir}" />
	</target>
	
  <!-- ************************** -->
  <!-- Postbuild property targets -->
  <!-- ************************** -->

	<property name="postbuild.target.list">
		${property.value}
		embed-manifest
	</property>
	
	<target name="embed-manifest">
		<exec program="${package.WindowsSDK.kitbin.dir}\mt.exe">
			<args>
				<arg value="/manifest ${package.${IGOProxy.module.name}.dir}\${manifest.filename} /outputresource:${runtime.${IGOProxy.module.name}.outputdir}\${runtime.${IGOProxy.module.name}.outputname}.exe;1" /> 
			</args>
			</exec>
	</target>		
	
	<target name="post-build-tasks">
		<foreach property="runtarget" item="String" in="${postbuild.target.list}">
			<call target="${runtarget}" />
		</foreach>
	</target>
	
	<!-- NANT Postbuild target. Will execute this after compiling happens. -->
	<property name="runtime.postbuildtarget" value="post-build-tasks" />
  
	<!-- VS POSTBUILD target. Will set this to execute in the VS project. -->
	<property name="runtime.vcproj.post-build-step">
		${nant.location}\nant.exe -buildfile:${nant.project.buildfile}  -masterconfigfile:${nant.project.masterconfigfile} -D:config=${config} ${runtime.postbuildtarget}
	</property>	
  
  <target name="clean-igoproxy">
    <delete>
			<fileset basedir="${runtime.${IGOProxy.module.name}.outputdir}">
				<includes name="${runtime.${IGOProxy.module.name}.outputname}.*"/>
			</fileset>
		</delete>
  </target>
  
</project>
