// Callback for SDK Presence Event handling
OriginErrorT APresenceEventCallback (int32_t eventId, void* pContext, void* eventData, uint32_t count)
{
   OriginPresenceT *event = (OriginPresenceT *)eventData;
   return ORIGIN_SUCCESS;
}

int main ()
{
       
   OriginStartupOutputT out;
   OriginErrorT err;

   // Establish a connection to the Origin client if it is running; start it and establish the
   // connection if it is not running.
   if((err = OriginStartup(0, ORIGIN_LSX_PORT, &DebugAppIdentifier, &out)) != ORIGIN_SUCCESS)
   {
       OriginShutdown();
   }

   OriginRegisterEventCallback(ORIGIN_EVENT_PRESENCE, APresenceEventCallback, NULL);

   exampleSynchronousCall();

   // Add this to the main program loop to ensure events and callbacks are processed.
   err = OriginUpdate();

   exampleAsynchronousCall();
   for (int i=0; i<1000; i++)
   {
       err = OriginUpdate();
   }
   printf("Asynchronous callback updated g_TicketReceived to %d", g_TicketReceived);

   exampleEnumerator();

   err = OriginShutdown();
}