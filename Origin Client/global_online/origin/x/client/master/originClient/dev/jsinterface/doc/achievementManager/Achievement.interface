<?xml version="1.0"?>
<interface>
  <description>
    Object that describes a singular achievement
  </description>

  <property type="String" name="id" readonly="true">
    <description>
      The identifier of the achievement. 
    </description>
  </property>

  <property type="String" name="expansionId" readonly="true">
    <description>
      The identifier for the expansion this achievement is in. Empty for base game. 
    </description>
  </property>

  <property type="Date?" name="updateTime" readonly="true">
    <description>
      The time of the latest modification to the achievement.
    </description>
  </property>

  <property type="Date?" name="expirationTime" readonly="true">
    <description>
      The time when the achievement will expire. This is used as the expiration date of quests.
    </description>
  </property>

  <property type="Integer" name="progress" readonly="true">
    <description>
      The progress on the achievement. 
    </description>
  </property>

  <property type="Integer" name="total" readonly="true">
    <description>
      The total counts you need to get the achievement.
    </description>
  </property>

  <property type="Integer" name="count" readonly="true">
    <description>
      The number of times awarded.
    </description>
  </property>

  <property type="String" name="xp" readonly="true">
    <description>
      The experience points visual.
    </description>
  </property>

  <property type="String" name="rp" readonly="true">
    <description>
      The reward points visual.
    </description>
  </property>

  <property type="String" name="name" readonly="true">
    <description>
      The name of the achievement in the Origin locale.
    </description>
  </property>

  <property type="String" name="description" readonly="true">
    <description>
      A detailed description of the achievement.
    </description>
  </property>

  <property type="String" name="howto" readonly="true">
    <description>
      A description on how to get the achievement.
    </description>
  </property>
  
  <property type="AchievementSet" name="achievementSet" readonly="true">
    <description>
      Returns the owning achievement set.
    </description>
  </property>
  
  <property type="Boolean" name="achieved" readonly="true">
    <description>
      Returns true when the achievement is granted, else false. In some cases the progress may go to zero when the achievement is achieved. Always check whether achieved returns true
    </description>
  </property>

  <property type="Float" name="percent" readonly="true">
    <description>
      Returns the normalized progress [0, 1]
    </description>
  </property>
  
  <property type="Boolean" name="pinned" readonly="false">
    <description>
      Boolean controlling whether the achievement is pinned in the within reach table or not. The pinned property can be written to.
    </description>
  </property>

  <property type="Boolean" name="withinReachHidden" readonly="false">
    <description>
      Boolean controlling whether the achievement is visible in the within reach table or not. The withinReachHidden property can be written to.
    </description>
  </property>

  <method return="String" name="getImageUrl">
    <param name="size" type="Integer" />
    <description>
      The image url.
    </description>
  </method>
    
  <signal name="achievementGranted">
    <description>
      Fired when the achievement is granted.      
    </description>
  </signal>

  <signal name="achievementProgressChanged">
    <param name="progress" type="Integer" />
    <param name="total" type="Integer" />
    <param name="count" type="Integer" />
    <description>
      Fires when progress is made on the achievement.         
    </description>
  </signal>

  <signal name="achievementUpdated">
    <description>
      Fired when any of the configuration parameters changed. (Strings etc.)      
    </description>
  </signal>
  
  <signal name="pinnedChanged">
    <param name="bPinned" type="Boolean" />
    <description>
       Fired when the user changes the pinning state of this achievement.        
     </description>
  </signal>  
  
  <signal name="withinReachHiddenChanged">
    <param name="bWithinReachHidden" type="Boolean" />
    <description>
       Fired when the user changes the hidden state of this achievement.        
     </description>
  </signal>  

</interface>
