<?xml version="1.0"?>
<interface>
	<description>
		Object describing a game or addon an user is entitled to 
	</description>


	<property type="Date" name="entitleDate" readonly="true">
		<description>
			Date the entitlement was granted to the user. This is referred to as the purchase date in the user interface.
		</description>
	</property>

	<property type="String" name="id" readonly="true">
		<description>
			Internal unique identifier for the entitlement. A user may only have one entitlement for a given ID. This can be used as a stable identifier for the user's entitlement.
		</description>
	</property>
	
	<property type="String" name="productId" readonly="true">
		<description>
			Product ID of the entitlement. This roughly corresponds to a game but various editions and regional versions of a game may have different product IDs
		</description>
	</property>
	
	<property type="String?" name="contentId" readonly="true">
		<description>
			Content ID of the entitlement. This value is deprecated in favor of product IDs. Some addons or expansions may not have associated content IDs
		</description>
	</property>
	
	<property type="String?" name="masterTitleId" readonly="true">
		<description>
			Master Title Id of the entitlement. This ID is shared between related entitlements. For example, Battlefield 3 and Battlefield 3 Limited Edition have different content IDs, but the same master title ID. This id is used when we want to access related entitlements.
		</description>
	</property>	

    <property type="String?" name="franchiseId" readonly="true">
		<description>
			Franchise Id of the entitlement. This ID is shared between entitlements from the same franchise - eg., Battlefield or Mass Effect. This id is only being used to generate the achievement set Id override in ODT.
		</description>
	</property>	
    
	<property type="String" name="title" readonly="true">
		<description>
			User visible localized title of the entitlement
		</description>
	</property>

	<property type="String[]" name="boxartUrls" readonly="true">
		<description>
			Array of URLs for the entitlement's box art in descending order of preference. These are images styled to resemble the front art of a physical game package. URLs in this array may not exist; the next URL should be tried if a URL fails to load. 
		</description>
	</property>
	
	<property type="String[]" name="bannerUrls" readonly="true">
		<description>
			Array of URLs for the entitlement's banner image in descending order of preference. This is a large abstract image suitable for a page background. This will be empty if no banner image is configured. A non-null URL may not exist on the network.
		</description>
	</property>

    <property type="String[]" name="thumbnailUrls" readonly="true">
        <description>
            Array of URLs for the entitlement's thumbnail image in descending order of preference. This is a small image. URLs in this array may not exist; the next URL should be tried if a URL fails to load.
        </description>
    </property>

	<property type="String?" name="manualUrl" readonly="true">
		<description>
			URL for the entitlement's manual or null if none is configured. Manuals are frequently downloadable ZIP files which are not viewable in the client; it is recommended that clientNavigation.launchExternalBrowser is used to view manual URLs.
		</description>
	</property>

	<property type="Date?" name="lastPlayedDate" readonly="true">
		<description>
			Date the user last played the entitlement on this machine. This property will be null if the user has never played the entitlement.
		</description>
	</property>

	<property type="Date?" name="displayDownloadStartDate" readonly="true">
		<description>
			Date the entitlement is available to download. This is referred to as the preload date in the user interface. If a reliable date has not been configured null will be returned. This is using a server clock which may not be synchronized with the client clock; use the releaseStatus property for a reliable determination if an entitlement is available for preload.
		</description>
	</property>

	<property type="Date?" name="displayUnlockStartDate" readonly="true">
		<description>
			Date the entitlement is available to play. This is referred to as the release date in the user interface. If a reliable date has not been configured null will be returned. This is using a server clock which may not be synchronized with the client clock; use the releaseStatus property for a reliable determination if an entitlement is unlocked.
		</description>
	</property>

	<property type="Date?" name="displayExpirationDate" readonly="true">
		<description>
			Date the entitlement expires. If a reliable date has not been configured null will be returned. This is using a server clock which may not be synchronized with the client clock; use the releaseStatus property for a reliable determination if an entitlement is expired.
		</description>
	</property>
    
   	<property type="String?" name="preAnnouncementDisplayString" readonly="true">
		<description>
			String to display when the entitlement is unreleased. Will supercede unlock and download dates being shown. 
        </description>
	</property>

	<property type="EntitlementCloudSaves?" name="cloudSaves" readonly="true">
		<description>
			Cloud saves related information for the entitlement. If the entitlement does not support cloud saves this property will be null.
		</description>
	</property>
	
	<property type="PlatformType[]" name="platformsSupported" readonly="true">
		<description>
			List of platforms supported by the entitlement. If unknown platforms, this will be an empty array. ["PC", "MAC", "OTHER"]
		</description>
	</property>

    <property type="String[]" name="localesSupported" readonly="true">
        <description>
            List of locales supported by the entitlement. The locales will be in standard ISO format (i.e. "en_US", "es_MX", etc.).
        </description>
    </property>
	
	<property type="String" name="achievementSet" readonly="true">
		<description>
			This is the product id that identifies the achievements for this entitlement on the achievement services. Use this string to get the achievements belonging to this entitlement from the achievementManager.
		</description>
	</property>
		
    <property name="longDescription" type="String" readonly="true">
        <description>
            A long description of the entitlement as HTML.
        </description>
    </property>
    
    <property name="shortDescription" type="String" readonly="true">
        <description>
            A brief description of the entitlement as HTML.
        </description>
    </property>

    <property name="productType" type="String" readonly="true">
        <description>
            The OFB-configured product type.
        </description>
    </property>

    <property name="packageType" type="PackageType" readonly="true">
        <description>
            The configured download package type.
        </description>
    </property>

    <property name="twitchBlacklisted" type="Boolean" readonly="true">
        <description>
            True if this game does not support the Twitch broadcast feature.
        </description>
    </property>

    <property name="originStorePreview" type="Boolean" readonly="true">
        <description>
            Indicates if the expansion/addon is hidden from end-user because of store preview mode.
        </description>
    </property>
    
	<method name="play">
		<description>
			Launches the entitlement
		</description>
	</method>

	<method name="startDownload">
		<description>
			Starts a download for the entitlement
		</description>
	</method>

	<signal name="changed">
		<description>
			Emitted whenever any property of the entitlement or its subobjects changes value
		</description>
	</signal>

    <signal name="boxartUrlsChanged">
        <description>
            Emitted whenever the boxart urls for the entitlement have changed
        </description>
    </signal>

	<property name="registrationCode" type="String" readonly="true">
		<description>
			Registration code (also known as product key) for the entitlement
		</description>
	</property>

	<property name="repairSupported" type="Boolean" readonly="true">
		<description>
			Indicates if this entitlement supports repair operations. Legacy titles typically do not support repair unless they have been recently repackaged.
		</description>
	</property>

	<method name="repair">
		<description>
			Starts repairing the entitlement and displays a native dialog informing the user of the repair progress
		</description>
	</method>

	<method name="uninstall">
		<description>
			Prompts the user to uninstall the entitlement. The entitlement will be downloadable if the uninstall completes.
		</description>
	</method>

	<property name="updateSupported" type="Boolean" readonly="true">
		<description>
			Indicates if this entitlement supports update operations. Legacy titles typically do not support repair unless they have been recently repackaged.
		</description>
	</property>
	
	<property name="availableUpdateVersion" type="String?" readonly="true">
		<description>
			Latest version of the content that can be updated to. If the content is already up-to-date or updates are not supported this property will be null. Versions strings are currently internal and don't reliably map to user visible version numbers.
		</description>
	</property>

	<method name="installUpdate">
		<description>
			Installs an update if one is available. This will not check for an update from the server; it should only be called if the updateAvailable property is true.
		</description>
	</method>
	
	<method name="checkForUpdateAndInstall">
		<description>
			Checks for new updates from the server while showing a native progress dialog. If an update is available it will be automatically installed. 
		</description>
	</method>

	<property name="repairOperation" type="EntitlementOperation?" readonly="true">
		<description>
			The current repair operation if one is in progress, null otherwise
		</description>
	</property>

	<property name="updateOperation" type="EntitlementOperation?" readonly="true">
		<description>
			The current update operation if one is in progress, null otherwise
		</description>
	</property>

	<property name="downloadOperation" type="EntitlementOperation?" readonly="true">
		<description>
			The current download operation if one is in progress, null otherwise
		</description>
	</property>
	
	<property name="unpackOperation" type="EntitlementOperation?" readonly="true">
		<description>
			The current unpack operation if one is in progress, null otherwise
		</description>
	</property>
	
	<property name="autoUpdateEnabled" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement will automatically check for and apply updates before the entitlement is played
		</description>
	</property>

	<property name="downloadable" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement is currently downloadable by calling startDownload(). This means that the entitlement isn't already downloaded and no date-based restrictions are active. Additional restrictions may be placed on downloadability by the client.
		</description>
	</property>

    <property name="published" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement has been published.  Addons that have not been published are not visible under normal conditions in the client.
        </description>
    </property>

    <property name="newlyPublished" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement has been published in the past 28 days.  Child content that is newly published have special callouts in the game details page.
        </description>
    </property>

    <property name="downloadDateBypassed" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement's download date has been bypassed.  This could mean that the entitlement is a special 1103 Early Access entitlement.
        </description>
    </property>

    <property name="releaseDateBypassed" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement's release date has been bypassed.  This could mean that the entitlement is a special 1102/1103 Early Access entitlement.
        </description>
    </property>

	<property name="installed" type="Boolean?" readonly="true">
		<description>
			Indicates if the entitlement is installed. Null will be returned if the entitlement's configuration does not provide a method for determining if the content is installed. This is common for unlockable addons and expansions.
		</description>
	</property>
	
	<property name="uninstallable" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement can be uninstalled. Uninstallable implies that the entitlement is installed.
		</description>
	</property>

    <property name="hasUninstaller" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement has a custom uninstaller specified in the DiP manifest.
        </description>
    </property>

	<property name="playable" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement can currently be played by calling play(). This means that entitlement is installed, no date-based restrictions are active, and isn't currently being played. Additional restrictions may be placed on playability by the client.
		</description>
	</property>
    
    <property name="playableBitSet" type="Boolean" readonly="true">
		<description>
			Indicates if the game can be played the user's machine bitset.
		</description>
	</property>

	<signal name="ensureVisible">
		<description>
			Emitted when the application wants to ensure an entitlement is visible to the user. This is typically emitted after a new entitlement has been added. This only a hint to the primary entitlement view; other users of this object can safely ignore this signal.
		</description>
	</signal>

	<property name="playing" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement is currently being played
		</description>
	</property>
	
	<property name="totalSecondsPlayed" type="Integer" readonly="true">
		<description>
			Total number of seconds the game has been played for
		</description>
	</property>

	<property name="debugInfo" type="EntitlementDebugInfo?" readonly="true">
		<description>
			Dictionary of summary and detailed debug infomation for the entitlement or null if none should be shown. These values are internal and may change at any time.
		</description>
	</property>

	<property name="addons" type="Entitlement[]" readonly="true">
		<description>
			Array of addons for this game that the user is entitled to
		</description>
	</property>
	
	<property name="expansions" type="Entitlement[]" readonly="true">
		<description>
			Array of expansions for this game the user is entitled to
		</description>
	</property>

	<property name="type" type="EntitlementType" readonly="true">
		<description>
            Type of the entitlement
        </description>
	</property>

    <property name="displayLocation" type="EntitlementDisplayLocation" readonly="true">
        <description>
            Description of where the entitlement should be displayed
        </description>
    </property>
	
	<property name="parent" type="Entitlement?" readonly="true">
		<description>
			Parent entitlement for addons and expansions; null for games
		</description>
	</property>
	
	<property name="installOperation" type="EntitlementOperation?" readonly="true">
		<description>
			The current install operation if one is in progress, null otherwise
		</description>
	</property>

	<property name="releaseStatus" type="EntitlementReleaseStatus" readonly="true">
		<description>
			The current release status of the entitlement
		</description>
	</property>
	
	<property name="isPULC" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement is a premium unlockable addon or expansion, indicating that it has no downloadable content.
		</description>
	</property>
	
	<property name="isPreorder" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement is an explicit PREORDER entitlement via entitlementTag == ORIGIN_PREORDER check
		</description>
	</property>

    <property name="isBrowserGame" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement is a browser game.
        </description>
    </property>
	
    <property name="nonOriginGame" type="NonOriginGame?" readonly="true">
        <description>
            Non-Origin game related information for the entitlement. If the entitlement is not a non-Origin game this property will be null.
        </description>
    </property>

    <property name="boxart" type="Boxart?" readonly="true">
        <description>
            Boxart related information for the entitlement.
        </description>
    </property>
    
	<property name="itemSubType" type="EntitlementItemSubType" readonly="true">
		<description>
			The sub type of the entitlement. Free trials, Alpha/Beta entitlements, non-Origin entitlements are identified with this property.
		</description>
	</property>	

	<property name="testCode" type="Integer?" readonly="true">
		<description>
			Publishing test code associated with the test code associated with the entitlement or null if no test code is associated
		</description>
	</property>

	<property name="hasPDLCStore" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement has a PDLC storefront. This can be shown with ClientNavigator.showPDLCStore to allow the user to purchase addons and expansions.
		</description>
	</property>

	<property type="Boolean" name="favorite">
		<description>
			Indicates if the entitlement has been favorited by the user. This value is stored server side and can be updated by assigning to the property.
		</description>
	</property>
	
	<property type="Boolean" name="hidden">
		<description>
			Indicates if the entitlement has been hidden by the user. This value is stored server side and can be updated by assigning to the property.
		</description>
	</property>

	<property type="Boolean" name="installable" readonly="true">
		<description>
			Indicates if the entitlement has been successfully downloaded and can be installed
		</description>
	</property>

	<method name="install">
		<description>
			Installs the downloaded entitlement. Note that installation is normally automatic; only games packaged in a legacy format and newer games in some corner cases require manual installation.
		</description>
	</method>
	
	<signal name="addonAdded">
		<param name="entitlement" type="Entitlement" />
		<description>
			Emitted when an addon has been added to the entitlement
		</description>
	</signal>
	
	<signal name="addonRemoved">
		<param name="entitlement" type="Entitlement" />
		<description>
			Emitted when an addon has been removed from the entitlement
		</description>
	</signal>
	
	<signal name="expansionAdded">
		<param name="entitlement" type="Entitlement" />
		<description>
			Emitted when an expansion has been added to the entitlement
		</description>
	</signal>
	
	<signal name="expansionRemoved">
		<param name="entitlement" type="Entitlement" />
		<description>
			Emitted when an expansion has been removed from the entitlement
		</description>
	</signal>

	<property name="debugActions" type="Action[]" readonly="true">
		<description>
			Array of debugging actions that can be performed on the entitlement. The actions can either be directly triggered using Action.trigger() or added to a Menu instance. These actions are internal and may change at any time.
		</description>
	</property>
  
    <property name="unownedContentAvailable" type="Boolean" readonly="true">
		<description>
			Indicates if the entitlement has adjunct content that is not owned.
		</description>
	</property>

    <property name="newUnownedContentAvailable" type="Boolean" readonly="true">
        <description>
            Indicates if this entitlement has adjunct content that has been released within the past 7 days.
        </description>
    </property>
	
	<property type="Date" name="latestChildPublishedDate" readonly="true">
		<description>
			Latest 'published date' for unowned and purchasable child content
		</description>
	</property>
	
	<property type="Date" name="terminationDate" readonly="true">
		<description>
			Termination date for free trial
		</description>
	</property>
	
	<property type="String[]" name="relatedGameContentIds" readonly="true">
		<description>
			Array of content IDs of games related to the entitlement including the entitlement's content ID. Related games are typically other editions or regional variants of the entitlement. Currently used in determining friends playing games you have.
		</description>
	</property>

    <property type="Integer" name="sortOrderDescending">
        <description>
            The sort order value for extra content.  Will be null if the content is not extra content or if the sort order is not defined.
        </description>
    </property>

    <property type="Integer" name="timeRemainingTilTerminationInSecs" readonly="true">
        <description>
            Time remaining for a trial entitlement in seconds. If termination date is not set or it is not a trial, the property will be null
        </description>
    </property>

    <property name="thumbnailUrls" type="String[]" readonly="true">
        <description>
            A list of thumbnail image urls for this entitlement. None of the urls are guaranteed to exist, and image retrieval should be attmepted using the urls in the order in which they appear in the list.
        </description>
    </property>

    <property name="owned" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement owned by the current user.
        </description>
    </property>

    <property name="purchasable" type="Boolean" readonly="true">
        <description>
            Indicates if the current user purchase this entitlement. Will be false if already purchased.
        </description>
    </property>

    <property name="previewContent" type="Boolean" readonly="true">
        <description>
            Indicates if the current user can download this content without an entitlement.
        </description>
    </property>

    <property name="associations" type="Entitlement[]" readonly="true">
        <description>
            For bundled entitlements, a list of Entitlement objects for content contained within the bundle. Will be an empty list for entitlements which are not bundles.
        </description>
    </property>

    <property name="freeProduct" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement is free.
        </description>
    </property>
    
    <property name="normalPrice" type="String?" readonly="true">
        <description>
            If this entitlement is purchasable, returns a string which represents the price of the entitlement. The string will be localized.
        </description>
    </property>

    <property name="reducedPrice" type="String?" readonly="true">
        <description>
            If this entitlement is purchasable and has had a price reduction, returns a which reprents the new price of the entitlement. The string will be localized.
        </description>
    </property>

    <property name="priceDescription" type="String?" readonly="true">
        <description>
            If this entitlement is purchasable and the price is in virtual currency, returns a localized descripition of the currency with html tags.
        </description>
    </property>

    <property name="originStorePreview" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement is configured as a preview-type entitlement.
        </description>
    </property>
    
    <property name="freeTrial" type="Boolean" readonly="true">
        <description>
            Indicates if the entitlement is configured as a free trial.
        </description>
    </property> 
    
    <method name="purchase">
        <description>
            Purchase this entitlement for the current user. If the entitlement is not purchasable or already purchased, the request for purchase is ignored.  If the IGO is active, the PDLC store will appear in the IGO.
        </description>
    </method>

    <property name="inTrash" type="Boolean" readonly="true">
      <description>
        Indicates if the entitlement is currently in the .Trash folder on Mac.
      </description>
    </property>

    <method name="restoreFromTrash">
      <description>
        Restores the entitlement moving it from the .Trash folder back to the Applications folder.  If this fails a pop-up informs the user they need to empty their trash bin and re-download the game.
      </description>
    </method>

    <property name="lastInstallFlowAction" type="EntitlementInstallFlowLastAction" readonly="true">
        <description>
            Retrieves the last action taken by the install flow.
        </description>
    </property>

    <property name="lastInstallFlowActionTotalDataSize" type="Integer" readonly="true">
        <description>
            Retrieves the total amount of bytes attempted to transfer by the last install flow action.
        </description>
    </property>    
</interface>
