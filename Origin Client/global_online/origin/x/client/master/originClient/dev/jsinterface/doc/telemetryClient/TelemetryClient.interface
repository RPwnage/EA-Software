<?xml version="1.0"?>
<interface root="true">
  <description>Object for accessing Telemetry API</description>

  <method name="sendFreeTrialPurchase">
    <param name="contentId" type="String">
      <description>
        Content ID of the free trial to show in store for purchase. This is exposed as Entitlement.contentId
      </description>
    </param>
    <description>Sends METRIC_FREETRIAL_PURCHASE telemetry event with passed content ID</description>
  </method>

  <method name="sendFreeTrialPurchaseExpired">
    <param name="contentId" type="String">
      <description>
        Content ID of the expired free trial to show in store for purchase. This is exposed as Entitlement.contentId
      </description>
    </param>
    <description>Sends METRIC_FREETRIAL_PURCHASE_EXPIRED telemetry event with passed content ID</description>
  </method>

  <method name="sendContentSalesPurchase">
    <param name="id" type="String">
      <description>
        Content/Product ID of the game being purchased. This is exposed as Entitlement.id
      </description>
    </param>
    <param name="productType" type="String">
      <description>
        Product type of the game being purchased. This is exposed as Entitlement.productType
      </description>
    </param>
    <param name="context" type="String">
      <description>
        Description of the method the user used to initiate purchase.
      </description>
    </param>
    <description>Sends METRIC_CONTENTSALES_PURCHASE telemetry event with passed information</description>
  </method>

  <method name="sendContentSalesViewInStore">
    <param name="id" type="String">
      <description>
        Content/Product ID of the game being purchased. This is exposed as Entitlement.id
      </description>
    </param>
    <param name="productType" type="String">
      <description>
        Product type of the game being purchased. This is exposed as Entitlement.productType
      </description>
    </param>
    <param name="context" type="String">
      <description>
        Description of the method the user used to initiate purchase.
      </description>
    </param>
    <description>Sends METRIC_CONTENTSALES_VIEW_IN_STORE telemetry event with passed information</description>
  </method>

  <method name="sendAchievementWidgetPageView">
    <param name="pageName" type="String">
      <description>Page name identifier</description>
    </param>
    <param name="productId" type="String?">
      <description>Product ID for product-specific pages, null otherwise</description>
    </param>
    <param name="inIgo" type="String">
      <description>True if being viewed in IGO, false otherwise</description>
    </param>

    <description>Sends METRIC_ACHIEVEMENT_WIDGET_PAGE_VIEW telemetry event with passed information</description>
  </method>

  <method name="sendAchievementWidgetPurchaseClick">
    <param name="productId" type="String">
      <description>Product ID being purchased</description>
    </param>

    <description>Sends METRIC_ACHIEVEMENT_WIDGET_PURCHASE_CLICK telemetry event with passed information</description>
  </method>

  <method name="sendMyGamesCloudStorageTabView">
    <param name="productId" type="String">
      <description>Product ID having its cloud storage information viewed</description>
    </param>

    <description>Sends METRIC_GUI_MYGAMES_CLOUD_STORAGE_TAB_VIEW telemetry event with passed information</description>
  </method>

  <method name="sendMyGamesManualLinkClick">
    <param name="productId" type="String">
      <description>Product ID having its manual link clicked</description>
    </param>

    <description>Sends METRIC_GUI_MYGAMES_MANUAL_LINK_CLICK telemetry event with passed information</description>
  </method>

  <method name="sendBroadcastJoined">
    <param name="source" type="String">
      <description>Source that we're joining the broadcast from</description>
    </param>

    <description>Sends METRIC_BROADCAST_JOINED telemetry event</description>
  </method>

  <method name="sendAchievementSharing">
    <param name="value" type="String">
      <description>either 'show' or 'dismiss'</description>
    </param>
    <param name="source" type="String">
      <description>Source that we're choosing to share from</description>
    </param>
    <description>Sends Metric_ACHIEVEMENT_SHARE_ACHIEVEMENT_SHOW or the Metric_ACHIEVEMENT_SHARE_ACHIEVEMENT_DISMISSED telemetry event</description>
  </method>
  
  <method name="sendFeatureCalloutDimissed">
    <param name="seriesName" type="String">
      <description>Callout series name</description>
    </param>
    <param name="parentName" type="String">
      <description>Name of object the callout is binded to</description>
    </param>
    <param name="wasEngaged" type="Boolean">
      <description>Tells us if the binded widget was clicked on or the callout was dismissed from clicking on the X button</description>
    </param>
    <description>Sends METRIC_FEATURE_CALLOUT_DISMISSED telemetry event with passed information</description>
  </method>
  
  <method name="sendFeatureCalloutSeriesComplete">
    <param name="seriesName" type="String">
      <description>Callout series name</description>
    </param>
    <param name="isComplete" type="Boolean">
      <description>Tells us if the callout series was completed.</description>
    </param>
    <description>Sends Metric_FEATURE_CALLOUT_SERIES_COMPLETE telemetry event with passed information</description>
  </method>
</interface>
