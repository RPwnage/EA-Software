<?xml version="1.0"?>
<interface root="true">
    <description>
        The achievement manager object. This gives you access to all the achievements of your owned games. 
    </description>

  <!-- PROPERTIES -->
  
  <property type="AchievementPortfolio[]" name="achievementPortfolios" readonly="true">
    <description>
      All the achievement portfolios controlled by the achievement manager.
    </description>
  </property>

  <property type="AchievementSet[]" name="achievementSets" readonly="true">
        <description>
            All the achievementSets in the current users achievement portfolio.
        </description>
    </property>

  <property type="AchievementSetReleaseInfo[]" name="achievementSetReleaseInfo" readonly="true">
        <description>
            Get the achievement set release info. This returns all the published achievement sets.
        </description>
    </property>

    <property type="Integer" name="xp" readonly="true">
        <description>
            The amount of experience points the current user has collected.
        </description>
    </property>
    
    <property type="Integer" name="rp" readonly="true">
        <description>
            The amount of reward points the current user has.
        </description>
    </property>

    <property type="Integer" name="total" readonly="true">
        <description>
            The total achievements the current user can get based on his owned games.
        </description>
    </property>

    <property type="Integer" name="achieved" readonly="true">
    <description>
             The number of achievements the current user has achieved.
        </description>
    </property>

  <property type="Boolean" name="enabled" readonly="true">
    <description>
      Indicator of whether achievements should be visible.
    </description>
  </property>

  <!-- METHODS -->

  <method name="getAchievementSet" return="AchievementSet?" >
    <param name="setId" type="String" />
    <description>
      Get achievement set by set id
    </description>
  </method>

  <method name="updateAchievementSet" >
    <param name="setId" type="String" />
    <description>
      Invoke a refresh on the achievement set.
    </description>
  </method>

  <method name="updatePoints" >
    <description>
      Refresh the experience points, and reward points
    </description>
  </method>

  <method name="updateAchievementPortfolio">
    <param name="userId" type="String" />
    <param name="personaId" type="String" />
    <description>
      Get the achievement portfolio for a user. (can be any user)
    </description>
  </method>

  <method name="getAchievementPortfolioByUserId" return="AchievementPortfolio?" >
    <param name="userId" type="String" />
    <description>
      Get a achievement portfolio by UserId
    </description>
  </method>

  <method name="getAchievementPortfolioByPersonaId" return="AchievementPortfolio?" >
    <param name="userId" type="String" />
    <description>
      Get a achievement portfolio by PersonaId
    </description>
  </method>

  <method name="getAchievementStatistics" return="AchievementStatistics?" >
    <description>
      Get an object that can do statistics on the achievement portfolio of the current user.
    </description>
  </method>


  <!-- SIGNALS -->

  <signal name="achievementSetAdded">
    <param name="set" type="AchievementSet" />
    <description>
          When an achievementSet is added in the current users portfolio this signal will fire.
      </description>
  </signal>

  <signal name="achievementSetRemoved">
    <param name="set" type="AchievementSet" />
    <description>
      When an achievementSet is removed from the current users portfolio this signal will fire.
    </description>
  </signal>

  <signal name="xpChanged">
    <param name="newXPValue" type="Integer" />
    <description>
      When the experience points value changes for the current user this signal will fire.
    </description>
  </signal>

  <signal name="rpChanged">
    <param name="newRPValue" type="Integer" />
    <description>
      When the reward points value changes for the current user this signal will fire.
    </description>
  </signal>

  <signal name="achievementGranted">
    <param name="achievementSet" type="AchievementSet" />
    <param name="achievement" type="Achievement" />
    <description>
      Signal the page that an achievement has been awarded to the current user.
    </description>
  </signal>
  
  <signal name="achievementPortfolioAdded">
    <param name="portfolio" type="AchievementPortfolio" />
    <description>
      Signals when a new achievement portfolio is added.
    </description>
  </signal>
  
  <signal name="achievementPortfolioRemoved">
    <param name="portfolio" type="AchievementPortfolio" />
    <description>Signals when an achievement portfolio is removed.</description>
  </signal>
  
  <signal name="enabledChanged">
    <param name="bEnable" type="Boolean" />
    <description>
      Signals that the achievements are enabled/disabled.
    </description>
  </signal>
  
  <signal name="achievementSetReleaseInfoUpdated">
    <description>
      Signals that achievement set release info has been updated.
    </description>
  </signal>
</interface>
