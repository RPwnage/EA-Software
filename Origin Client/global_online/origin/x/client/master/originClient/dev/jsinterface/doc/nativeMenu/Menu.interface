<?xml version="1.0"?> 
<interface>
	<description>
		Represents a native popup menu
	</description>

	<method name="addAction" return="Action">
		<param name="text" type="String" />
		<description>Adds a new action with the given label to the bottom of the menu</description>
	</method>
	
	<method name="addMenu" return="Menu">
		<param name="text" type="String" />
		<description>Adds a new submenu with the given label to the bottom of the menu</description>
	</method>
	
	<method name="addAction">
		<param name="action" type="Action" />
		<description>Adds an exisiting Action object to the bottom of the menu</description>
	</method>

	<method name="addSeparator" return="Action">
		<description>Adds a separator to the bottom of the menu. An action is returned that can be used to hide and show the separator.</description>
	</method>

    <method name="addObjectName">
        <param name="text" type="String" />
		<description>Adds an objectName to the menu so that the Qt can have access to the menu</description>
	</method>
        
	<method name="removeAction">
		<param name="action" type="Action" />
		<description>Removes an action from the menu</description>
	</method>

	<property name="menuAction" type="Action" readonly="true">
		<description>Returns the action associated with this menu. This is useful for controlling the parent menu entry of a submenu.</description>
	</property>

	<method name="popup">
		<param name="point" type="Point" optional="true">
			<description>
				Position to display the menu. The point is interpreted as pixels from the top left corner of the viewport. If this parameter is not specified the cursor position will be used. 
			</description>
		</param>

		<description>Pops the menu up</description>
	</method>

	<method name="clear">
		<description>Clears all actions and separators from the menu</description>
	</method>

	<signal name="aboutToShow">
		<description>Emitted before the menu is about to be shown to the user</description>
	</signal>

	<signal name="aboutToHide">
		<description>Emitted before the menu is hidden from the user</description>
	</signal>

	<method name="hide">
		<description>Closes the context menu if it is visible</description>
	</method>
</interface>
