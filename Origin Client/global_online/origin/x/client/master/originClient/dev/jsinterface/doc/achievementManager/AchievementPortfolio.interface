<?xml version="1.0"?>
<interface>
	<description>
		The achievement portfolio object. This object contains all the achievement information for a user. 
	</description>

  <!-- PROPERTIES -->
  <property type="AchievementSet[]" name="achievementSets" readonly="true">
		<description>
			All the achievementSets in the users achievement portfolio.
		</description>
	</property>

  <property type="Integer" name="totalXp" readonly="true">
    <description>
      The total amount of experience points in this set. (note: doesn't account for repeatable achievements.)
    </description>
  </property>

  <property type="Integer" name="totalRp" readonly="true">
    <description>
      The total amount of reward points in this set. (note: doesn't account for repeatable achievements.)
    </description>
  </property>
  
  <property type="Integer" name="earnedXp" readonly="true">
		<description>
			The amount of experience points the user has collected.
		</description>
	</property>
	
	<property type="Integer" name="earnedRp" readonly="true">
		<description>
			The amount of reward points the user has.
		</description>
	</property>
  
	<property type="Integer" name="total" readonly="true">
		<description>
			The total achievements the user can get based on his owned games.
		</description>
	</property>

	<property type="Integer" name="achieved" readonly="true">
    <description>
			 The number of achievements the user has achieved.
		</description>
	</property>
  
  <property type="Integer" name="userId" readonly="true">
    <description>
      The userId of the user associated with this portfolio.
    </description>
  </property>

  <property type="Integer" name="personaId" readonly="true">
    <description>
      The personaId of the origin persona associated with this portfolio.
    </description>
  </property>


  <!-- METHODS -->

  <method name="getAchievementSet" return="AchievementSet?" >
    <param name="setId" type="String" />
    <description>
      Get achievement set by set id
    </description>
  </method>

  <method name="updateAchievementSet" >
    <param name="setId" type="String" />
    <description>
      Invoke a refresh on the achievement set. This can cause a new achievement set to be created if it didn't already existed.
    </description>
  </method>

  <method name="updatePoints" >
    <description>
      Refresh the experience points, and reward points
    </description>
  </method>

  <!-- SIGNALS -->
  
  <signal name="availableUpdated">
    <description>
          Signals that the portfolio availability is updated. When a user makes public/private his achievements this signal will fire. The signal will not fire unless a request for information is done.
      </description>
  </signal>
  
  <signal name="achievementSetAdded">
    <param name="set" type="AchievementSet" />
    <description>
          When an achievementSet is added in the users portfolio this signal will fire.
      </description>
  </signal>

  <signal name="achievementSetRemoved">
    <param name="set" type="AchievementSet" />
    <description>
      When an achievementSet is removed from the users portfolio this signal will fire.
    </description>
  </signal>

  <signal name="achievementGranted">
    <param name="achievementSet" type="AchievementSet" />
    <param name="achievement" type="Achievement" />
    <description>
      Signal the page that an achievement has been awarded to the user.
    </description>
  </signal>
  
  <signal name="xpChanged">
    <param name="newXPValue" type="Integer" />
    <description>
      When the experience points value changes for the user this signal will fire.
    </description>
  </signal>

  <signal name="rpChanged">
    <param name="newRPValue" type="Integer" />
    <description>
      When the reward points value changes for the user this signal will fire.
    </description>
  </signal>
</interface>
