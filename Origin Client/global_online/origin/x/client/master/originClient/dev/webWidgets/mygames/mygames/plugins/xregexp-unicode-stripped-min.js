/*!
 * XRegExp v2.0.0
 * (c) 2007-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 */
;var XRegExp;XRegExp=XRegExp||(function(undef){var self,addToken,add,features={natives:false,extensibility:false},nativ={exec:RegExp.prototype.exec,test:RegExp.prototype.test,match:String.prototype.match,replace:String.prototype.replace,split:String.prototype.split},fixed={},cache={},tokens=[],defaultScope="default",classScope="class",nativeTokens={"default":/^(?:\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Za-z]|[\s\S])|\(\?[:=!]|[?*+]\?|{\d+(?:,\d*)?}\??)/,"class":/^(?:\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Za-z]|[\s\S]))/},replacementToken=/\$(?:{([\w$]+)}|(\d\d?|[\s\S]))/g,duplicateFlags=/([\s\S])(?=[\s\S]*\1)/g,quantifier=/^(?:[?*+]|{\d+(?:,\d*)?})\??/,compliantExecNpcg=nativ.exec.call(/()??/,"")[1]===undef,hasNativeY=RegExp.prototype.sticky!==undef,isInsideConstructor=false,registeredFlags="gim"+(hasNativeY?"y":"");function augment(regex,captureNames,isNative){var p;for(p in self.prototype){if(self.prototype.hasOwnProperty(p)){regex[p]=self.prototype[p];}}regex.xregexp={captureNames:captureNames,isNative:!!isNative};return regex;}function getNativeFlags(regex){return(regex.global?"g":"")+(regex.ignoreCase?"i":"")+(regex.multiline?"m":"")+(regex.extended?"x":"")+(regex.sticky?"y":"");}function copy(regex,addFlags,removeFlags){if(!self.isRegExp(regex)){throw new TypeError("type RegExp expected");}var flags=nativ.replace.call(getNativeFlags(regex)+(addFlags||""),duplicateFlags,"");if(removeFlags){flags=nativ.replace.call(flags,new RegExp("["+removeFlags+"]+","g"),"");}if(regex.xregexp&&!regex.xregexp.isNative){regex=augment(self(regex.source,flags),regex.xregexp.captureNames?regex.xregexp.captureNames.slice(0):null);}else{regex=augment(new RegExp(regex.source,flags),null,true);}return regex;}function lastIndexOf(array,value){var i=array.length;if(Array.prototype.lastIndexOf){return array.lastIndexOf(value);}while(i--){if(array[i]===value){return i;}}return -1;}function isType(value,type){return Object.prototype.toString.call(value).toLowerCase()==="[object "+type+"]";}function prepareOptions(value){value=value||{};if(value==="all"||value.all){value={natives:true,extensibility:true};}else{if(isType(value,"string")){value=self.forEach(value,/[^\s,]+/,function(m){this[m]=true;},{});}}return value;}function runTokens(pattern,pos,scope,context){var i=tokens.length,result=null,match,t;isInsideConstructor=true;try{while(i--){t=tokens[i];if((t.scope==="all"||t.scope===scope)&&(!t.trigger||t.trigger.call(context))){t.pattern.lastIndex=pos;match=fixed.exec.call(t.pattern,pattern);if(match&&match.index===pos){result={output:t.handler.call(context,match,scope),match:match};break;}}}}catch(err){throw err;}finally{isInsideConstructor=false;}return result;}function setExtensibility(on){self.addToken=addToken[on?"on":"off"];features.extensibility=on;}function setNatives(on){RegExp.prototype.exec=(on?fixed:nativ).exec;RegExp.prototype.test=(on?fixed:nativ).test;String.prototype.match=(on?fixed:nativ).match;String.prototype.replace=(on?fixed:nativ).replace;String.prototype.split=(on?fixed:nativ).split;features.natives=on;}self=function(pattern,flags){if(self.isRegExp(pattern)){if(flags!==undef){throw new TypeError("can't supply flags when constructing one RegExp from another");}return copy(pattern);}if(isInsideConstructor){throw new Error("can't call the XRegExp constructor within token definition functions");}var output=[],scope=defaultScope,tokenContext={hasNamedCapture:false,captureNames:[],hasFlag:function(flag){return flags.indexOf(flag)>-1;}},pos=0,tokenResult,match,chr;pattern=pattern===undef?"":String(pattern);flags=flags===undef?"":String(flags);if(nativ.match.call(flags,duplicateFlags)){throw new SyntaxError("invalid duplicate regular expression flag");}pattern=nativ.replace.call(pattern,/^\(\?([\w$]+)\)/,function($0,$1){if(nativ.test.call(/[gy]/,$1)){throw new SyntaxError("can't use flag g or y in mode modifier");}flags=nativ.replace.call(flags+$1,duplicateFlags,"");return"";});self.forEach(flags,/[\s\S]/,function(m){if(registeredFlags.indexOf(m[0])<0){throw new SyntaxError("invalid regular expression flag "+m[0]);}});while(pos<pattern.length){tokenResult=runTokens(pattern,pos,scope,tokenContext);if(tokenResult){output.push(tokenResult.output);pos+=(tokenResult.match[0].length||1);}else{match=nativ.exec.call(nativeTokens[scope],pattern.slice(pos));if(match){output.push(match[0]);pos+=match[0].length;}else{chr=pattern.charAt(pos);if(chr==="["){scope=classScope;}else{if(chr==="]"){scope=defaultScope;}}output.push(chr);++pos;}}}return augment(new RegExp(output.join(""),nativ.replace.call(flags,/[^gimy]+/g,"")),tokenContext.hasNamedCapture?tokenContext.captureNames:null);};addToken={on:function(regex,handler,options){options=options||{};if(regex){tokens.push({pattern:copy(regex,"g"+(hasNativeY?"y":"")),handler:handler,scope:options.scope||defaultScope,trigger:options.trigger||null});}if(options.customFlags){registeredFlags=nativ.replace.call(registeredFlags+options.customFlags,duplicateFlags,"");}},off:function(){throw new Error("extensibility must be installed before using addToken");}};self.addToken=addToken.off;self.cache=function(pattern,flags){var key=pattern+"/"+(flags||"");return cache[key]||(cache[key]=self(pattern,flags));};self.escape=function(str){return nativ.replace.call(str,/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");};self.exec=function(str,regex,pos,sticky){var r2=copy(regex,"g"+(sticky&&hasNativeY?"y":""),(sticky===false?"y":"")),match;r2.lastIndex=pos=pos||0;match=fixed.exec.call(r2,str);if(sticky&&match&&match.index!==pos){match=null;}if(regex.global){regex.lastIndex=match?r2.lastIndex:0;}return match;};self.forEach=function(str,regex,callback,context){var pos=0,i=-1,match;while((match=self.exec(str,regex,pos))){callback.call(context,match,++i,str,regex);pos=match.index+(match[0].length||1);}return context;};self.globalize=function(regex){return copy(regex,"g");};self.install=function(options){options=prepareOptions(options);if(!features.natives&&options.natives){setNatives(true);}if(!features.extensibility&&options.extensibility){setExtensibility(true);}};self.isInstalled=function(feature){return !!(features[feature]);};self.isRegExp=function(value){return isType(value,"regexp");};self.matchChain=function(str,chain){return(function recurseChain(values,level){var item=chain[level].regex?chain[level]:{regex:chain[level]},matches=[],addMatch=function(match){matches.push(item.backref?(match[item.backref]||""):match[0]);},i;for(i=0;i<values.length;++i){self.forEach(values[i],item.regex,addMatch);}return((level===chain.length-1)||!matches.length)?matches:recurseChain(matches,level+1);}([str],0));};self.replace=function(str,search,replacement,scope){var isRegex=self.isRegExp(search),search2=search,result;if(isRegex){if(scope===undef&&search.global){scope="all";}search2=copy(search,scope==="all"?"g":"",scope==="all"?"":"g");}else{if(scope==="all"){search2=new RegExp(self.escape(String(search)),"g");}}result=fixed.replace.call(String(str),search2,replacement);if(isRegex&&search.global){search.lastIndex=0;}return result;};self.split=function(str,separator,limit){return fixed.split.call(str,separator,limit);};self.test=function(str,regex,pos,sticky){return !!self.exec(str,regex,pos,sticky);};self.uninstall=function(options){options=prepareOptions(options);if(features.natives&&options.natives){setNatives(false);}if(features.extensibility&&options.extensibility){setExtensibility(false);}};self.union=function(patterns,flags){var parts=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*]/g,numCaptures=0,numPriorCaptures,captureNames,rewrite=function(match,paren,backref){var name=captureNames[numCaptures-numPriorCaptures];if(paren){++numCaptures;if(name){return"(?<"+name+">";}}else{if(backref){return"\\"+(+backref+numPriorCaptures);}}return match;},output=[],pattern,i;if(!(isType(patterns,"array")&&patterns.length)){throw new TypeError("patterns must be a nonempty array");}for(i=0;i<patterns.length;++i){pattern=patterns[i];if(self.isRegExp(pattern)){numPriorCaptures=numCaptures;captureNames=(pattern.xregexp&&pattern.xregexp.captureNames)||[];output.push(self(pattern.source).source.replace(parts,rewrite));}else{output.push(self.escape(pattern));}}return self(output.join("|"),flags);};self.version="2.0.0";fixed.exec=function(str){var match,name,r2,origLastIndex,i;if(!this.global){origLastIndex=this.lastIndex;}match=nativ.exec.apply(this,arguments);if(match){if(!compliantExecNpcg&&match.length>1&&lastIndexOf(match,"")>-1){r2=new RegExp(this.source,nativ.replace.call(getNativeFlags(this),"g",""));nativ.replace.call(String(str).slice(match.index),r2,function(){var i;for(i=1;i<arguments.length-2;++i){if(arguments[i]===undef){match[i]=undef;}}});}if(this.xregexp&&this.xregexp.captureNames){for(i=1;i<match.length;++i){name=this.xregexp.captureNames[i-1];if(name){match[name]=match[i];}}}if(this.global&&!match[0].length&&(this.lastIndex>match.index)){this.lastIndex=match.index;}}if(!this.global){this.lastIndex=origLastIndex;}return match;};fixed.test=function(str){return !!fixed.exec.call(this,str);};fixed.match=function(regex){if(!self.isRegExp(regex)){regex=new RegExp(regex);}else{if(regex.global){var result=nativ.match.apply(this,arguments);regex.lastIndex=0;return result;}}return fixed.exec.call(regex,this);};fixed.replace=function(search,replacement){var isRegex=self.isRegExp(search),captureNames,result,str,origLastIndex;if(isRegex){if(search.xregexp){captureNames=search.xregexp.captureNames;}if(!search.global){origLastIndex=search.lastIndex;}}else{search+="";}if(isType(replacement,"function")){result=nativ.replace.call(String(this),search,function(){var args=arguments,i;if(captureNames){args[0]=new String(args[0]);for(i=0;i<captureNames.length;++i){if(captureNames[i]){args[0][captureNames[i]]=args[i+1];}}}if(isRegex&&search.global){search.lastIndex=args[args.length-2]+args[0].length;}return replacement.apply(null,args);});}else{str=String(this);result=nativ.replace.call(str,search,function(){var args=arguments;return nativ.replace.call(String(replacement),replacementToken,function($0,$1,$2){var n;if($1){n=+$1;if(n<=args.length-3){return args[n]||"";}n=captureNames?lastIndexOf(captureNames,$1):-1;if(n<0){throw new SyntaxError("backreference to undefined group "+$0);}return args[n+1]||"";}if($2==="$"){return"$";}if($2==="&"||+$2===0){return args[0];}if($2==="`"){return args[args.length-1].slice(0,args[args.length-2]);}if($2==="'"){return args[args.length-1].slice(args[args.length-2]+args[0].length);}$2=+$2;if(!isNaN($2)){if($2>args.length-3){throw new SyntaxError("backreference to undefined group "+$0);}return args[$2]||"";}throw new SyntaxError("invalid token "+$0);});});}if(isRegex){if(search.global){search.lastIndex=0;}else{search.lastIndex=origLastIndex;}}return result;};fixed.split=function(separator,limit){if(!self.isRegExp(separator)){return nativ.split.apply(this,arguments);}var str=String(this),origLastIndex=separator.lastIndex,output=[],lastLastIndex=0,lastLength;limit=(limit===undef?-1:limit)>>>0;self.forEach(str,separator,function(match){if((match.index+match[0].length)>lastLastIndex){output.push(str.slice(lastLastIndex,match.index));if(match.length>1&&match.index<str.length){Array.prototype.push.apply(output,match.slice(1));}lastLength=match[0].length;lastLastIndex=match.index+lastLength;}});if(lastLastIndex===str.length){if(!nativ.test.call(separator,"")||lastLength){output.push("");}}else{output.push(str.slice(lastLastIndex));}separator.lastIndex=origLastIndex;return output.length>limit?output.slice(0,limit):output;};add=addToken.on;add(/\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4})|x(?![\dA-Fa-f]{2}))/,function(match,scope){if(match[1]==="B"&&scope===defaultScope){return match[0];}throw new SyntaxError("invalid escape "+match[0]);},{scope:"all"});add(/\[(\^?)]/,function(match){return match[1]?"[\\s\\S]":"\\b\\B";});add(/(?:\(\?#[^)]*\))+/,function(match){return nativ.test.call(quantifier,match.input.slice(match.index+match[0].length))?"":"(?:)";});add(/\\k<([\w$]+)>/,function(match){var index=isNaN(match[1])?(lastIndexOf(this.captureNames,match[1])+1):+match[1],endIndex=match.index+match[0].length;if(!index||index>this.captureNames.length){throw new SyntaxError("backreference to undefined group "+match[0]);}return"\\"+index+(endIndex===match.input.length||isNaN(match.input.charAt(endIndex))?"":"(?:)");});add(/(?:\s+|#.*)+/,function(match){return nativ.test.call(quantifier,match.input.slice(match.index+match[0].length))?"":"(?:)";},{trigger:function(){return this.hasFlag("x");},customFlags:"x"});add(/\./,function(){return"[\\s\\S]";},{trigger:function(){return this.hasFlag("s");},customFlags:"s"});add(/\(\?P?<([\w$]+)>/,function(match){if(!isNaN(match[1])){throw new SyntaxError("can't use integer as capture name "+match[0]);}this.captureNames.push(match[1]);this.hasNamedCapture=true;return"(";});add(/\\(\d+)/,function(match,scope){if(!(scope===defaultScope&&/^[1-9]/.test(match[1])&&+match[1]<=this.captureNames.length)&&match[1]!=="0"){throw new SyntaxError("can't use octal escape or backreference to undefined group "+match[0]);}return match[0];},{scope:"all"});add(/\((?!\?)/,function(){if(this.hasFlag("n")){return"(?:";}this.captureNames.push(null);return"(";},{customFlags:"n"});if(typeof exports!=="undefined"){exports.XRegExp=self;}return self;}());
/*!
 * XRegExp Unicode Base v1.0.0
 * (c) 2008-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Uses Unicode 6.1 <http://unicode.org/>
 */
(function(XRegExp){var unicode={};function slug(name){return name.replace(/[- _]+/g,"").toLowerCase();}function expand(str){return str.replace(/\w{4}/g,"\\u$&");}function pad4(str){while(str.length<4){str="0"+str;}return str;}function dec(hex){return parseInt(hex,16);}function hex(dec){return parseInt(dec,10).toString(16);}function invert(range){var output=[],lastEnd=-1,start;XRegExp.forEach(range,/\\u(\w{4})(?:-\\u(\w{4}))?/,function(m){start=dec(m[1]);if(start>(lastEnd+1)){output.push("\\u"+pad4(hex(lastEnd+1)));if(start>(lastEnd+2)){output.push("-\\u"+pad4(hex(start-1)));}}lastEnd=dec(m[2]||m[1]);});if(lastEnd<65535){output.push("\\u"+pad4(hex(lastEnd+1)));if(lastEnd<65534){output.push("-\\uFFFF");}}return output.join("");}function cacheInversion(item){return unicode["^"+item]||(unicode["^"+item]=invert(unicode[item]));}XRegExp.install("extensibility");XRegExp.addUnicodePackage=function(pack,aliases){var p;if(!XRegExp.isInstalled("extensibility")){throw new Error("extensibility must be installed before adding Unicode packages");}if(pack){for(p in pack){if(pack.hasOwnProperty(p)){unicode[slug(p)]=expand(pack[p]);}}}if(aliases){for(p in aliases){if(aliases.hasOwnProperty(p)){unicode[slug(aliases[p])]=unicode[slug(p)];}}}};XRegExp.addToken(/\\([pP]){(\^?)([^}]*)}/,function(match,scope){var inv=(match[1]==="P"||match[2])?"^":"",item=slug(match[3]);if(match[1]==="P"&&match[2]){throw new SyntaxError("invalid double negation \\P{^");}if(!unicode.hasOwnProperty(item)){throw new SyntaxError("invalid or unknown Unicode property "+match[0]);}return scope==="class"?(inv?cacheInversion(item):unicode[item]):"["+inv+unicode[item]+"]";},{scope:"all"});}(XRegExp));
/*!
 * XRegExp Unicode Categories v1.2.0
 * (c) 2010-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Uses Unicode 6.1 <http://unicode.org/>
 */
(function(XRegExp){if(!XRegExp.addUnicodePackage){throw new ReferenceError("Unicode Base must be loaded before Unicode Categories");}XRegExp.install("extensibility");XRegExp.addUnicodePackage({P:"0021-00230025-002A002C-002F003A003B003F0040005B-005D005F007B007D00A100A700AB00B600B700BB00BF037E0387055A-055F0589058A05BE05C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F3A-0F3D0F850FD0-0FD40FD90FDA104A-104F10FB1360-13681400166D166E169B169C16EB-16ED1735173617D4-17D617D8-17DA1800-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD32010-20272030-20432045-20512053-205E207D207E208D208E2329232A2768-277527C527C627E6-27EF2983-299829D8-29DB29FC29FD2CF9-2CFC2CFE2CFF2D702E00-2E2E2E30-2E3B3001-30033008-30113014-301F3030303D30A030FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFD3EFD3FFE10-FE19FE30-FE52FE54-FE61FE63FE68FE6AFE6BFF01-FF03FF05-FF0AFF0C-FF0FFF1AFF1BFF1FFF20FF3B-FF3DFF3FFF5BFF5DFF5F-FF65"},{P:"Punctuation"});}(XRegExp));
/*!
 * XRegExp Unicode Scripts v1.2.0
 * (c) 2010-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Uses Unicode 6.1 <http://unicode.org/>
 */
(function(XRegExp){if(!XRegExp.addUnicodePackage){throw new ReferenceError("Unicode Base must be loaded before Unicode Scripts");}XRegExp.install("extensibility");XRegExp.addUnicodePackage({Common:"0000-0040005B-0060007B-00A900AB-00B900BB-00BF00D700F702B9-02DF02E5-02E902EC-02FF0374037E038503870589060C061B061F06400660-066906DD096409650E3F0FD5-0FD810FB16EB-16ED173517361802180318051CD31CE11CE9-1CEC1CEE-1CF31CF51CF62000-200B200E-2064206A-20702074-207E2080-208E20A0-20B92100-21252127-2129212C-21312133-214D214F-215F21892190-23F32400-24262440-244A2460-26FF2701-27FF2900-2B4C2B50-2B592E00-2E3B2FF0-2FFB3000-300430063008-30203030-3037303C-303F309B309C30A030FB30FC3190-319F31C0-31E33220-325F327F-32CF3358-33FF4DC0-4DFFA700-A721A788-A78AA830-A839FD3EFD3FFDFDFE10-FE19FE30-FE52FE54-FE66FE68-FE6BFEFFFF01-FF20FF3B-FF40FF5B-FF65FF70FF9EFF9FFFE0-FFE6FFE8-FFEEFFF9-FFFD",Latin:"0041-005A0061-007A00AA00BA00C0-00D600D8-00F600F8-02B802E0-02E41D00-1D251D2C-1D5C1D62-1D651D6B-1D771D79-1DBE1E00-1EFF2071207F2090-209C212A212B2132214E2160-21882C60-2C7FA722-A787A78B-A78EA790-A793A7A0-A7AAA7F8-A7FFFB00-FB06FF21-FF3AFF41-FF5A"});}(XRegExp));