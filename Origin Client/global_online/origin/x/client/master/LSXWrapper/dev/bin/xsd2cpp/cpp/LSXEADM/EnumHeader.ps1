if($Schema.SimpleTypes.Count -ne 0)
{
$SchemaFilename = $Generator.NamespaceToFilename($Schema.Namespace).Replace('/','.')
$SchemaFilename + "Enum.h"

$HeaderGuard = "__" + ($Generator.NamespaceToFilename($Schema.Namespace) + "Enum.h").Replace('.','_').Replace('/','_').ToUpper() + "__"

"#ifndef " + $HeaderGuard
"#define " + $HeaderGuard
"
// Generated By: XSD2CPP V2.0
// Author: Hans van Veenendaal
//
// !!!! This file is automatically generated please do not modify !!!!
"
#Write out the namespace
$NamespaceParts = $SchemaFilename.Split('.')
foreach($i in $NamespaceParts)
{
	"namespace " + $i
	"{"
}

foreach($i in $Schema.SimpleTypes)
{
	if($i.Enumerations.Count -ne 0)
	{
		if($i.Documentation.Length -gt 0)
		{
			"// " + $i.Documentation
		}

		"enum " + $Generator.ConvertType($i)
		"{"
		if($i.EnumValuesSet)
		{
			for($e = 0; $e -lt $i.Enumerations.Count; $e++)
			{
				if($i.EnumerationDocumentation[$e].Length -gt 0)
				{
					"    // " + $i.EnumerationDocumentation[$e]
				}
				"    " + $i.Name.ToUpper() + "_" + $i.Enumerations[$e] + " = " + $i.EnumerationValues[$e] + ","
			}
			"    " + $i.Name.ToUpper() + "_ITEM_COUNT = " + $i.Enumerations.Count
		}
		else
		{
			for($e = 0; $e -lt $i.Enumerations.Count; $e++)
			{
				if($i.EnumerationDocumentation[$e].Length -gt 0)
				{
					"    // " + $i.EnumerationDocumentation[$e]
				}
				"    " + $i.Name.ToUpper() + "_" + $i.Enumerations[$e] + ","
			}
			"    " + $i.Name.ToUpper() + "_ITEM_COUNT" 
		}
		"};"
		""
	}
}





[array]::Reverse($NamespaceParts)
foreach($i in $NamespaceParts)
{
	"} // namespace " + $i
}

"
#endif //__" + $HeaderGuard

}