$SchemaFilename = $Generator.NamespaceToFilename($Schema.Namespace).Replace('/','.')
$SchemaFilename + "Reader.h"
$HeaderGuard = "__" + ($Generator.NamespaceToFilename($Schema.Namespace) + "_Reader.h").Replace('.','_').Replace('/','_').ToUpper() + "__"

"#ifndef " + $HeaderGuard
"#define " + $HeaderGuard
"
// Generated By: XSD2CPP V2.0
// Author: Hans van Veenendaal
//
// !!!! This file is automatically generated please do not modify !!!!
"
"#include ""NodeDocument.h"""
"#include """ + $SchemaFilename + ".h"""
""

#Write out the namespace
$NamespaceParts = $SchemaFilename.Split('.')
foreach($i in $NamespaceParts)
{
	"namespace " + $i
	"{"
}

""
"// Readers used to read the content of a complex type"
foreach($i in $Schema.ComplexTypes)
{
	if(-not $i.IsArrayContainer)
	{
		"bool Read(INodeDocument * pDoc, " + $Generator.ConvertType($i) + " &data);"
		"bool ReadClass(INodeDocument * pDoc, " + $Generator.ConvertType($i) + " &data);"
	}
}
""
"// Readers used to read the content of an array of a complex type"
foreach($i in $Schema.ComplexTypes)
{
	if($i.IsArrayContainer)
	{
		"bool Read(INodeDocument * pDoc, " + $Generator.ConvertType($i) + " &data);"
	}
}

""
[array]::Reverse($NamespaceParts)
foreach($i in $NamespaceParts)
{
	"} // namespace " + $i
}

"
#endif // " + $HeaderGuard

