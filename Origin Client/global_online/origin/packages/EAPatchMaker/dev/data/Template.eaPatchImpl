<?xml version="1.0" encoding="utf-8"?>

<!-- This is a template Patch Info file for creating EAPatch patches with EAPatchMaker. 

     Only four of the fields below are required: 
        <PatchInfoURL>
        <PatchId>
        <PatchImplURL>
        <IgnoreFileArray> or <UsedFileArray> (can use both). 
-->

<PatchImpl>
    <!-- Type: String -->
    <!-- Required     -->
    <!-- URL to the .eaPatchInfo file associated with this PatchInfo.
         This doesn't need to be filled in by the person who creates this patch. 
         It's filled in at runtime from the actual URL location the file came from.
         This URL can also be server-relative and thus not have the http://<server>:<port> 
         portion present, as it will be assumed to be the default patch server set 
         at runtime by the application. If the URL doesn't begin with http[s]:// then
         it is assuemed to be relative. You can't just use (e.g.) patch.ea.com/Madden_2014/TeamUpdates/en_us/Patch.eaPatchImpl
         Paths are expected to be in a form compatible with paths used as HTML links,
         which means, for example, that special characters need to be escaped, etc.
         Example:
            <PatchInfoURL>http://patch.ea.com/Madden_2014/TeamUpdates/Patch1.eaPatchInfo</PatchInfoURL>
         Example (server-relative):
            <PatchInfoURL>Madden_2014/TeamUpdates/Patch1.eaPatchInfo</PatchInfoURL>
    -->
    <PatchInfoURL></PatchInfoURL>

    <!-- Type: String -->
    <!-- Required     -->
    <!-- Unique string, like a GUID. This is not meant to be read by users; mPatchName is 
         the user-readable name of the patch. The format of the id is application-specific.
         Example:
            <PatchId>1234-3e21-4352-3893</PatchId>
    -->
    <PatchId></PatchId>

    <!-- Type: String -->
    <!-- Not required -->
    <!-- Indicates whether the patch is a fix, add-on, etc. Case-insensitive.
         The valid string options are application-specific, but the term "patch" is 
         reserved to mean non-optional content. Other strings like "plug-in" are possible.
         Example:
            <PatchClass>patch</PatchClass>
    -->
    <PatchClass></PatchClass>

    <!-- Type: bool   -->
    <!-- Not required -->
    <!-- True if the patch is required in order to further run the application.
         Example:
            <Required>true</Required>
    -->
    <Required></Required>

    <!-- Type: LocalizedString -->
    <!-- Required              -->
    <!-- URL for the patch implementation itself. May get redirected by the server.
         This URL can also be server-relative and thus not have the http://<server>:<port> 
         portion present, as it will be assumed to be the default patch server set 
         at runtime by the application. If the URL doesn't begin with http[s]:// then
         it is assuemed to be relative. You can't just use (e.g.) patch.ea.com/Madden_2014/TeamUpdates/en_us/Patch.eaPatchImpl
         Paths are expected to be in a form compatible with paths used as HTML links,
         which means, for example, that special characters need to be escaped, etc.
         Example:
            <PatchImplURL L="en_us">http://patch.ea.com/Madden_2014/TeamUpdates/en_us/Patch.eaPatchImpl</PatchImplURL>
            <PatchImplURL L="de_de">http://patch.ea.com/Madden_2014/TeamUpdates/de_de/Patch.eaPatchImpl</PatchImplURL>
         Example (demonstrates a patch that works for any language used in the country of germany):
            <PatchImplURL L="*_de">http://patch.ea.com/Madden_2014/TeamUpdates/de/Patch.eaPatchImpl</PatchImplURL>
         Example (demonstrates a patch that works for all locales):
            <PatchImplURL L="*_*">http://patch.ea.com/Madden_2014/TeamUpdates/Patch.eaPatchImpl</PatchImplURL>
         Example (server-relative):
            <PatchImplURL L="*_*">Madden_2014/TeamUpdates/Patch.eaPatchImpl</PatchImplURL>
    -->
    <PatchImplURL L="en_us"></PatchImplURL>

    <!-- Type: StringArray -->
    <!-- Not required -->
    <!-- Entitlement ids, defined by the people who tie SKUs and users to downloadable entitlements. -->
    <!-- Identifies the patch for the purpose of entitlements (rights to use it).
         The format of this is application dependent and can be any kind of string 
         the application may find useful for matching patches.
         Example (showing two ContentIds this patch is valid for):
            <ContentIdArray>12345</ContentIdArray>
            <ContentIdArray>67890</ContentIdArray>
    -->
    <ContentIdArray></ContentIdArray>

    <!-- Type: StringArray -->
    <!-- Not required -->
    <!-- List of SKUs which this patch is valid for.
         The format of this is application dependent and can be any kind of string the
         application may find useful for matching patches.
         Example (showing two SKUs this patch is valid for):
            <SKUIdArray>12345</SKUIdArray>
            <SKUIdArray>abcde</SKUIdArray>
    -->
    <SKUIdArray></SKUIdArray>

    <!-- Type: LocalizedString -->
    <!-- Not required -->
    <!-- Human readable brief patch name (title). Must be localized Unicode text only, and not HTML, RTF, DOC, etc.
         Example:
            <LocalizedString L="en_us">Team Updates</LocalizedString>
            <LocalizedString L="de_de">Team Aktuelles</LocalizedString>
    -->
    <PatchName L="en_us"></PatchName>

    <!-- Type: LocalizedString -->
    <!-- Not required -->
    <!-- Human readable patch description. May be Unicode text, HTML (beginning with <!DOCTYPE html ..>),  
         or may be a URL to an HTML page (beginning with "http" or "https"). Your app should have an 
         embedded HTML display (e.g. EAWebKit) in order to display this HTML content.
         The format of the URL doesn't matter to the patching app.
         Example:
            <PatchDescription L="en_us">Team Updates (can be a paragraph of text)</PatchDescription>
            <PatchDescription L="de_de">Team Aktuelles (can be a paragraph of text)</PatchDescription>
         Example:
            <PatchDescription L="en_us"><!DOCTYPE html><HTML> Team Updates... </HTML></PatchDescription>
            <PatchDescription L="de_de"><!DOCTYPE html><HTML> Team Aktuelles... </HTML></PatchDescription>
         Example:
            <PatchDescription L="en_us">http://patch.ea.com/Madden_2014/TeamUpdates/en_us/PatchDescription.html</PatchDescription>
            <PatchDescription L="de_de">http://patch.ea.com/Madden_2014/TeamUpdates/de_de/PatchDescription.html</PatchDescription>
    -->
    <PatchDescription L="en_us"></PatchDescription>

    <!-- Type: LocalizedString -->
    <!-- Not required -->
    <!-- Optional EULA (End User License Agreement) that the user of the patch must agree
         to before installing the patch.
         Example:
            <PatchEULA L="en_us">You agree to the terms of this software...</PatchEULA>
    -->
    <PatchEULA L="en_us"></PatchEULA>

    <!-- Type: String -->
    <!-- Not required -->
    <!-- Name of application which this patch applies to. The client app may wish to 
         test against this to validate that the patch belongs to it. This is not a 
         localized string, as it's not meant to be shown to users.
         Example:
            <AppId>Madden Football 2014</AppId>
    -->
    <AppId></AppId>

    <!-- Type: StringArray -->
    <!-- Not required -->
    <!-- OSs which this patch applies to.
         Options include "*" "Win32" "Win64" "XBox 360" "PS3" "Wii" "WiiU" plus future platform names.
         Example (demonstrates that both Win32 and Win64 are supported):
            <OSNameArray>Win32</OSNameArray>
            <OSNameArray>Win64</OSNameArray>
    -->
    <OSIdArray>*</OSIdArray>

    <!-- Type: StringArray -->
    <!-- Not required -->
    <!-- Minimum OS versions needed to be able to download and use the patch. 
         Synchronized with mOSIdArray. 
    -->
    <MinOSVersionArray></MinOSVersionArray>

    <!-- Type: String -->
    <!-- Not required -->
    <!-- Date in an ISO 8601 format: "yyyy-MM-dd hh:mm:ss GMT", such as 
         "1994-11-06 08:49:37 GMT" for November 6, 1994. 
         Example:
            <ReleaseDate>2014-6-28 08:49:00 GMT</ReleaseDate>
    -->
    <ReleaseDate></ReleaseDate>

    <!-- Type: LocalizedString -->
    <!-- Not required -->
    <!-- List of supported locales. GetString returns NULL if the locale isn't 
         supported returns a non-NULL empty string if supported. 
         Example demonstrating that this patch supports the following two languages:
            <LocaleSupport L="en_us">(any text here is currently ignored)</LocaleSupport>
            <LocaleSupport L="de_de"></LocaleSupport>
    -->
    <LocaleSupport L="*_*"></LocaleSupport>

    <!-- Type: StringArray -->
    <!-- Not required -->
    <!-- List of patches which this patch supercedes, and thus aren't necessary 
         if you install this patch. This section may be absent if there are no 
         patches this patches supercedes.
         Example:
            <SupercedentPatchIdArray>5556-3e21-4352-4321</SupercedentPatchIdArray>
    -->
    <SupercedentPatchIdArray></SupercedentPatchIdArray>

    <!-- Type: StringArray -->
    <!-- Not required -->
    <!-- List of patches (PatchIds) which supercede this patch. This section
         may be absent if there are no superceding patches.
         Example:
            <SupercedingPatchIdArray>1234-3e21-4352-3893</SupercedingPatchIdArray>
            <SupercedingPatchIdArray>2345-3893-1234-2654</SupercedingPatchIdArray>
    -->
    <SupercedingPatchIdArray></SupercedingPatchIdArray>

    <!-- Type: StringArray -->
    <!-- Not required -->
    <!-- List of patches which this patch depends on being installed before 
         this one can be installed. This section may be absent if there are no dependent patches.
         Example:
            <DependentPatchIdArray>2222-1212-5454-6868</DependentPatchIdArray>
            <DependentPatchIdArray>3333-1212-5454-5656</DependentPatchIdArray>
    -->
    <DependentPatchIdArray></DependentPatchIdArray>

    <!-- Type: String -->
    <!-- Not required -->
    <!-- Where the patch goes. The format of this string is platform and 
         possibly application-specific. You can use either kind of directory
         separator (/ or \) and it will be converted to the platform type 
         at runtime. Normally this is a relative path, and thus doesn't begin
         with a leading '/' char (as that would refer to a full path). Be relative
         we mean relative to the base runtime data directory specified by the app.
         This can also be empty, which indicates that the patch occurs in the 
         base data directory.
         Example:
            <PatchBaseDirectory>GameData/Updates/</PatchBaseDirectory>
         Example:
            <PatchBaseDirectory></PatchBaseDirectory>
    -->
    <PatchBaseDirectory></PatchBaseDirectory>


    <!-- Type: String -->
    <!-- Not required -->
    <!-- Optional arbitrary information the user might want to associate with the patch.
         Example:
            <UserInfo>Four score and seven years ago today...</UserInfo>
         Example:
            <UserInfo></UserInfo>
    -->
    <UserInfo></UserInfo>


    <!-- Type: String -->
    <!-- Not required -->
    <!-- Optional checksum/hash the user might want to associate with the patch. May have a 
         different meaning than any kind of hash we use elsewhere within this library.
         Example:
            <UserChecksum>3e4a286d929216da</UserChecksum>
         Example:
            <UserChecksum>235,334,991,14,225</UserChecksum>
         Example:
            <UserChecksum></UserChecksum>
    -->
    <UserInfo></UserInfo>


    <!-- Type: uint64_t: 64 bit non-negative integer, without commas, decimal or hex (beginning with 0x) -->
    <!-- Not required -->
    <!-- The sum of the file sizes that an installed version of this patch uses. 
         Doesn't include ignored directories includes just the files in the patch. 
         This value is filled in by the Patch Maker.
         Example:
            <FinalFileSizeUsage>34895342</FinalFileSizeUsage>
    -->
    <FinalFileSizeUsage></FinalFileSizeUsage>

    <!-- Type: uint64_t: 64 bit non-negative integer, without commas, decimal or hex (beginning with 0x) -->
    <!-- Not required -->
    <!-- The amount of disk space an installed version of this patch uses. 
         Doesn't include ignored directories includes just the files in the patch. 
         This is usually a value a little greater than the sum of the file sizes, 
         due to things like file system sector sizes. This value is filled in by 
         the Patch Maker, though it can be overridden by a user edit afterwards.
         Example:
            <FinalDiskSpaceUsage>28489024</FinalDiskSpaceUsage>
    -->
    <FinalDiskSpaceUsage></FinalDiskSpaceUsage>

    <!-- Type: uint64_t: 64 bit non-negative integer, without commas, decimal or hex (beginning with 0x) -->
    <!-- Not required -->
    <!-- The max amount of disk space the patch requires to have as part of its 
         download and install. This is > mFinalDiskSpaceUsage, as in the simplest 
         case it could need a full patch image plus intermediate files created 
         by the build process. This value is filled in by the Patch Maker, though it
         can be overridden by a user edit afterwards.
         Example:
            <IntermediateDiskSpaceUsage>3728489025</IntermediateDiskSpaceUsage>
    -->
    <IntermediateDiskSpaceUsage></IntermediateDiskSpaceUsage>


    <!-- Type: String  -->
    <!-- Not required -->
    <!-- 
         Script to run before installing the patch. May be a URL to a Lua script 
         instead of a script itself. See the EAPatch documentation for what the
         Lua script can do.
         This field may be omitted.
    -->
    <PreRunScript></PreRunScript>

    <!-- Type: String -->
    <!-- Not required -->
    <!-- 
         Script to run after installing the patch. May be a URL to a Lua script 
         instead of a script itself. See the EAPatch documentation for what the
         Lua script can do.
         This field may be omitted.
    --> 
    <PostRunScript></PostRunScript>

    <!-- Type: FileFilterArray  -->
    <!-- Required (need to specify at least one of IgnoredFileArray and UsedFileArray) -->
    <!-- 
         Array of files to ignore, specified by wild-card-like filters. The files may be in subdirectories or in the root. 
         Subdirectories can be specified with wildcards as per the FnMatch function:
         http://linux.die.net/man/3/fnmatch. Options include:
            Pathname   - Wildcard don't can't see past directory separator chars.
            NoEscape   - Escape sequences (e.g. '\t') are not recognized. Escape sequences are only ever recognized with Unix-style paths and not DOS-style paths that use '\' chars. It's as if this flag is always active when DOS paths are in use.
            Period     - A leading '.' is matched only explicitly and not by * or ?.
            LeadingDir - Match a leading directory and allow ignoring after it.
            PrefixDir  - Directory path text that precedes the string can match the pattern.
            CaseFold   - Act case-insensitively.
            DosPath    - Force the path to be interpreted as a DOS path (e.g. '\') instead of native path.
            UnixPath   - Force the path to be interpreted as a Unix path (e.g. '/') instead of native path.
         The flags field may be empty, but must be present.
         See the example below for the syntax of the flags and path specification.
         This field may be omitted.
         FnMatch example behavior:
            Pattern               String              Flags                           Result
            _________________________________________________________________________________
            ""                    ""                  0                               true  
            "blah.txt",           "",                 0,                              false
            "*",                  "",                 0,                              true
            "",                   "blah.txt",         0,                              false
            "blah.txt"            "blah.txt"          0                               true  
            "a/b/c"               "a/b/c"             kFNMUnixPath                    true  
            "a/b/c"               "a/b/c"             kFNMUnixPath | kFNMPathname     true  
            "a\\b\\c"             "a\\b\\c"           kFNMDosPath                     true  
            "a\\b\\c"             "a\\b\\c"           kFNMDosPath | kFNMPathname      true  
            "a/b/c"               "a/_/c"             kFNMUnixPath                    false 
            "a/b/c"               "A/B/C"             kFNMUnixPath                    false 
            "a/b/c"               "A/B/C"             kFNMUnixPath | kFNMCaseFold     true  
            "a/b/?"               "a/b/c"             kFNMUnixPath                    true  
            "a/b/?"               "a/b/"              kFNMUnixPath                    false 
            "a\\b\\?"             "a\\b\\"            kFNMDosPath                     false 
            "*"                   "a/b/c"             kFNMUnixPath                    true  
            "*"                   "a\\b\\c"           kFNMDosPath                     true  
            "**"                  "a/b/c"             kFNMUnixPath                    true  
            "**"                  "a\\b\\c"           kFNMDosPath                     true  
            "???"                 "ab"                0                               false 
            "???"                 "abc"               0                               true  
            "a/b/c/*.?[ab]"       "a/b/c/d.qa"        kFNMUnixPath                    true  
            "a\\b\\c\\*.?[ab]"    "a\\b\\c\\d.qa"     kFNMDosPath                     true  
            "a/b/c/*.?[ab]"       "a/b/c/d.qq"        kFNMUnixPath                    false 
            "a\\b\\c\\*.?[ab]"    "a\\b\\c\\d.qq"     kFNMDosPath                     false 
            "a/*/*/d"             "a/bbbb/c/d"        kFNMUnixPath                    true  
            "a\\*\\*\\d"          "a\\bbbb\\c\\d"     kFNMDosPath                     true  
            "a/*/*/d"             "a/bbbb/c/d"        kFNMUnixPath | kFNMPathname     true  
            "a\\*\\*\\d"          "a\\bbbb\\c\\d"     kFNMDosPath | kFNMPathname      true  
            "/abc/def.txt"        "/abc/def.txt"      kFNMUnixPath                    true  
            "C:\\abc\\def.txt"    "C:\\abc\\def.txt"  kFNMDosPath                     true  
            "/abc/def.txt"        "/abc/Xef.txt"      kFNMUnixPath                    false 
            "C:\\abc\\def.txt"    "C:\\abc\\Xef.txt"  kFNMDosPath                     false
         Example usage:
            <IgnoredFileArray flags="CaseFold UnixPath">GameData/AddOnData/*</IgnoredFileArray>
            <IgnoredFileArray flags="CaseFold UnixPath">GameData/Language.dat/</IgnoredFileArray>
            <IgnoredFileArray flags="CaseFold UnixPath">GameData/Locale*.dat</IgnoredFileArray>
    -->
    <IgnoredFileArray></IgnoredFileArray>

    <!-- Type: FileFilterArray  -->
    <!-- Required (need to specify at least one of IgnoredFileArray and UsedFileArray) -->
    <!-- 
         This is similar to IgnoredFileArray except it defines a whitelist instead of a blacklist.
    -->
    <UsedFileArray></UsedFileArray>

</PatchImpl>
