<xs:schema id="GamePersona" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="lsx" xmlns:tns="lsx">

  <!--**************************************************************************************
  **** This file describes the payload part of the LSX messages.
  **** Wrap with <LSX><Request recipient="Presence" id="1"> <payload Version="1"/> </Request></LSX>
  **** Wrap with <LSX><Response sender="Presence" id="1"> <payloadResponse/> </Request></LSX>
  -->

  <!-- Error return -->
  <xs:complexType name="ErrorSuccess">
    <xs:attribute name="Code" type="xs:int"/>
    <xs:attribute name="Description" type="xs:string"/>
  </xs:complexType>

  <!--OriginErrorT ORIGIN_SDK_API OriginCheckPermission(OriginUserT user, int32_t iPermission)-->

  <xs:simpleType name="PermissionType">
    <xs:restriction base="xs:int">
      <xs:enumeration id="MULTIPLAYER" value="0"/>
      <xs:enumeration id="PURCHASE" value="1"/>
      <xs:enumeration id="TRIAL" value="2"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="CheckPermission" >
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="PermissionId" type="tns:PermissionType" />
  </xs:complexType>

  <xs:simpleType name="GrantedType">
    <xs:restriction base="xs:int">
      <xs:enumeration id="UNKNOWN" value="0"/>
      <xs:enumeration id="DENIED" value="1"/>
      <xs:enumeration id="GRANTED" value="2" />
      <xs:enumeration id="FRIENDS_ONLY" value="3" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="CheckPermissionResponse">
    <xs:attribute name="Access" type="tns:GrantedType" />
  </xs:complexType>

  <!-- LSX Message definition for OriginErrorT OriginGetProfile(int32_t iIndex, OriginProfileT *pProfile)-->
  <xs:complexType name="GetProfile">
    <!-- Should always be 0 -->
    <xs:attribute name="index" type="xs:int" />
  </xs:complexType>

  <!-- The LSX reply for OriginErrorT OriginGetProfile(int32_t iIndex, OriginProfileT *pProfile) -->
  <xs:complexType name="GetProfileResponse">
    <xs:attribute name="UserIndex" type="xs:int" />
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="PersonaId"	type="xs:unsignedLong"/>
    <xs:attribute name="Persona" type="xs:string" />
    <xs:attribute name="AvatarId" type="xs:string" />
    <xs:attribute name="Country" type="xs:string" />
    <xs:attribute name="IsUnderAge" type="xs:boolean" />
    <xs:attribute name="IsSubscriber" type="xs:boolean" />
    <xs:attribute name="IsTrialSubscriber" type="xs:boolean" />
    <xs:attribute name="SubscriberLevel" type="xs:int" />
    <xs:attribute name="GeoCountry" type="xs:string" />
    <xs:attribute name="CommerceCountry" type="xs:string" />
    <xs:attribute name="CommerceCurrency" type="xs:string" />
    <xs:attribute name="IsSteamSubscriber" type="xs:boolean" />
  </xs:complexType>


  <!-- Enum specifying the IGO windows. -->
  <xs:simpleType name="IGOWindow">
    <xs:restriction base="xs:int" >
      <xs:enumeration id="LOGIN" value="1"/>
      <xs:enumeration id="PROFILE" value="2"/>
      <xs:enumeration id="RECENT" value="3"/>
      <xs:enumeration id="FEEDBACK" value="4"/>
      <xs:enumeration id="FRIENDS" value="5"/>
      <xs:enumeration id="FRIEND_REQUEST" value="6"/>
      <xs:enumeration id="CHAT" value="7"/>
      <xs:enumeration id="COMPOSE_CHAT" value="8"/>
      <xs:enumeration id="INVITE" value="9"/>
      <xs:enumeration id="ACHIEVEMENTS" value="10"/>
      <xs:enumeration id="STORE" value="11"/>
      <xs:enumeration id="CODE_REDEMPTION" value="12"/>
      <xs:enumeration id="CHECKOUT" value="13"/>
      <xs:enumeration id="BLOCKED" value="14"/>
      <xs:enumeration id="BROWSER" value="15"/>
      <xs:enumeration id="FIND_FRIENDS" value="16"/>
      <xs:enumeration id="CHANGE_AVATAR" value="17"/>
      <xs:enumeration id="GAMEDETAILS" value="18"/>
      <xs:enumeration id="BROADCAST" value="19"/>
      <xs:enumeration id="UPSELL" value="20"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Backend LSX message for any OriginShowXXXXUI function, except for commerce.-->
  <xs:complexType name="ShowIGOWindow">
    <xs:sequence>
      <xs:element name="TargetId" minOccurs="0" maxOccurs="unbounded" type="xs:unsignedLong"/>
      <xs:element name="String" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Args" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="MasterTitleIds" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Categories" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Offers" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>

    <xs:attribute name="UserId" type="xs:unsignedLong" use="optional"/>
    <xs:attribute name="WindowId" type="tns:IGOWindow" />
    <xs:attribute name="Show" type="xs:boolean" default="true"/>
    <xs:attribute name="Flags" type="xs:int" use="optional"/>
    <xs:attribute name="ContentId" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ShowIGO">
    <xs:attribute name="bShow" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="IGOUnavailable">
    <xs:attribute name="Reason" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="MinimizeRequest">
  </xs:complexType>

  <xs:complexType name="RestoreRequest">
  </xs:complexType>

  <xs:complexType name="GetUTCTime"/>

  <xs:complexType name="GetUTCTimeResponse">
    <xs:attribute name="Time" type="xs:dateTime"/>
  </xs:complexType>
  <!-- 
  This will add a list of users to your recent player list. 
  OriginErrorT OriginAddRecentPlayers(const OriginUserT *pUser, const OriginUserT *pRecentList, int32 iRecentCount)
  -->
  <xs:complexType name="AddRecentPlayers">
    <xs:sequence>
      <xs:element name="Player" type="xs:unsignedLong" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <!--OriginErrorT OriginQueryFriends(const OriginUserT *pUser, int32 *pBufLen, HANDLE *pHandle); -->
  <xs:complexType name="QueryFriends">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:simpleType name="Presence">
    <xs:restriction base="xs:int">
      <xs:enumeration id="UNKNOWN" value="0"/>
      <xs:enumeration id="OFFLINE" value="1"/>
      <xs:enumeration id="ONLINE" value="2"/>
      <xs:enumeration id="INGAME" value="3"/>
      <xs:enumeration id="BUSY" value="4"/>
      <xs:enumeration id="IDLE" value="5"/>
      <xs:enumeration id="JOINABLE" value="6"/>
      <xs:enumeration id="JOINABLE_INVITE_ONLY" value="7"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LoginReasonCode">
    <xs:restriction base="xs:int">
      <xs:enumeration id="UNDEFINED" value="0"/>
      <xs:enumeration id="USER_INITIATED" value="1"/>
      <xs:enumeration id="ALREADY_ONLINE" value="2"/>
      <xs:enumeration id="NETWORK_ERROR" value="3"/>
      <xs:enumeration id="INVALID_CREDENTIALS" value="4"/>
      <xs:enumeration id="ACCESSTOKEN_REFRESH_ERROR" value="5"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="FriendState">
    <xs:restriction base="xs:int">
      <xs:enumeration id="UNKNOWN" value="0"/>
      <xs:enumeration id="NONE" value="1"/>
      <xs:enumeration id="MUTUAL" value="2"/>
      <xs:enumeration id="INVITED" value="3"/>
      <xs:enumeration id="DECLINED" value="4"/>
      <xs:enumeration id="REQUEST" value="5"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Friend">
    <xs:attribute name="UserId"	type="xs:unsignedLong"/>
    <xs:attribute name="PersonaId"	type="xs:unsignedLong"/>
    <xs:attribute name="Persona" type="xs:string"/>
    <xs:attribute name="AvatarId" type="xs:string" />
    <xs:attribute name="Group" type="xs:string"/>
    <xs:attribute name="GroupId" type="xs:string"/>
    <xs:attribute name="Presence" type="tns:Presence" />
    <xs:attribute name="State" type="tns:FriendState"	/>
    <xs:attribute name="TitleId" type="xs:string" />
    <xs:attribute name="Title" type="xs:string"/>
    <xs:attribute name="MultiplayerId" type="xs:string"/>
    <xs:attribute name="RichPresence" type="xs:string" />
    <xs:attribute name="GamePresence" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="RequestFriend">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="UserToAdd" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="RemoveFriend">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="UserToRemove" type="xs:unsignedLong"/>
  </xs:complexType>

  <!-- The response for OriginErrorT OriginQueryFriends(const OriginUserT *pUser, int32 *pBufLen, HANDLE *pHandle); -->
  <xs:complexType name="QueryFriendsResponse">
    <xs:sequence>
      <xs:element name="Friends" type="tns:Friend" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="User" >
    <xs:attribute name="EAID" type="xs:string" />
    <xs:attribute name="MAIL" type="xs:string" />
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="PersonaId" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="GetBlockList" />

  <xs:complexType name="GetBlockListResponse">
    <xs:sequence>
      <xs:element name="User" type="tns:User" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Return" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="BlockUser" >
    <xs:attribute name ="UserId" type="xs:unsignedLong" />
    <xs:attribute name ="UserIdToBlock" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="UnblockUser" >
    <xs:attribute name ="UserId" type="xs:unsignedLong" />
    <xs:attribute name ="UserIdToUnblock" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="GetUserProfileByEmailorEAID">
    <xs:attribute name="KeyWord" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="GetUserProfileByEmailorEAIDResponse">
    <xs:sequence>
      <xs:element name="User" type="tns:User" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Return" type="xs:string"/>
  </xs:complexType>

  <!-- Request for OriginErrorT OriginCheckFriends(OriginUserT user, const OriginUserT *pUserList, int32 iUserCount, int32 *pBufLen, HANDLE *pHandle);-->
  <xs:complexType name="QueryAreFriends">
    <xs:sequence>
      <xs:element name="Friends" type="xs:unsignedLong" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="FriendStatus">
    <xs:attribute name="FriendId" type="xs:unsignedLong"/>
    <xs:attribute name="State" type="tns:FriendState" />
  </xs:complexType>

  <!-- The middleware reply for the Check Friends request.-->
  <xs:complexType name="QueryAreFriendsResponse">
    <xs:sequence>
      <xs:element name="Users" type="tns:FriendStatus" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!--int32 OriginSubscribePresence(const OriginUserT *pUser, const OriginUserT *pPeerList, int32 iPeerCount) -->
  <xs:complexType name="SubscribePresence">
    <xs:sequence>
      <xs:element name="Users" type="xs:unsignedLong" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <!--int32 OriginUnsubscribePresence(const OriginUserT *pUser, const OriginUserT *pPeerList, int32 iPeerCount)-->
  <xs:complexType name="UnsubscribePresence">
    <xs:sequence>
      <xs:element name="Users" type="xs:unsignedLong" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <!--int32 OriginQueryPresence(const OriginUserT *pUser, int32 *pBufLen, HANDLE *pHandle)-->
  <xs:complexType name="QueryPresence">
    <xs:sequence>
      <xs:element name="Users" type="xs:unsignedLong" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <!--The response for int32 OriginQueryPresence(const OriginUserT *pUser, int32 *pBufLen, HANDLE *pHandle)
  This is currently the friend structure, but we may change this to a lighter weight structure.-->
  <xs:complexType name="QueryPresenceResponse">
    <xs:sequence>
      <xs:element name="Friends" type="tns:Friend" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!--int32 OriginSetPresence(const OriginUserT *pUser, int32 iContext, int32 iValue, const char *pCustom, const OriginCharT *pSession)-->
  <xs:complexType name="SetPresence">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Presence" type="tns:Presence"/>
    <xs:attribute name="RichPresence" type="xs:string" use="optional"/>
    <xs:attribute name="GamePresence" type="xs:string" use="optional"/>
    <xs:attribute name="SessionId" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="SetPresenceVisibility">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Visible" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="GetPresenceVisibility">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="GetPresenceVisibilityResponse">
    <xs:attribute name="Visible" type="xs:boolean"/>
  </xs:complexType>

  <!--int32 OriginGetPresence(const OriginUserT *pUser, int32 *pContext, int32 *pValue, char *pCustom, int iCustom, OriginCharT *pSession)-->
  <xs:complexType name="GetPresence">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="GetPresenceResponse">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Presence" type="tns:Presence"/>
    <xs:attribute name="Title" type="xs:string" use="optional"/>
    <xs:attribute name="TitleId" type="xs:string" use="optional"/>
    <xs:attribute name="MultiplayerId" type="xs:string" use="optional"/>
    <xs:attribute name="RichPresence" type="xs:string" use="optional"/>
    <xs:attribute name="GamePresence" type="xs:string" use="optional"/>
    <xs:attribute name="SessionId" type="xs:string" use="optional"/>
    <xs:attribute name="Group" type="xs:string" use="optional"/>
    <xs:attribute name="GroupId" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="CurrentUserPresenceEvent">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Presence" type="tns:Presence"/>
    <xs:attribute name="Title" type="xs:string" use="optional"/>
    <xs:attribute name="TitleId" type="xs:string" use="optional"/>
    <xs:attribute name="MultiplayerId" type="xs:string" use="optional"/>
    <xs:attribute name="RichPresence" type="xs:string" use="optional"/>
    <xs:attribute name="GamePresence" type="xs:string" use="optional"/>
    <xs:attribute name="SessionId" type="xs:string" use="optional"/>
    <xs:attribute name="Group" type="xs:string" use="optional"/>
    <xs:attribute name="GroupId" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="QueryImage">
    <xs:attribute name="ImageId" type="xs:string" />
    <xs:attribute name="Width" type="xs:int" />
    <xs:attribute name="Height" type="xs:int" />
  </xs:complexType>


  <xs:complexType name="Image">
    <xs:attribute name="ImageId" type="xs:string" />
    <xs:attribute name="Width" type="xs:int" />
    <xs:attribute name="Height" type="xs:int" />
    <xs:attribute name="ResourcePath" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="QueryImageResponse">
    <xs:sequence>
      <xs:element name="Images" type="tns:Image" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Result" type="xs:int" />
  </xs:complexType>


  <!--int32 OriginSendInvite(const OriginUserT *pUser, const OriginUserT *pInviteList, int32 iInviteCount, char *pInviteText);-->
  <xs:complexType name="SendInvite">
    <xs:sequence>
      <xs:element name="Invitees" type="xs:unsignedLong" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Invitation" type="xs:string" />
  </xs:complexType>

  <!--<xs:complexType name="Invite">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Reply" type="tns:InviteReply" />
  </xs:complexType>

  <xs:complexType name="SendInviteResponse">
    <xs:sequence>
      <xs:element name="PendingInvites" type="tns:Invite" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>-->

  <xs:simpleType name="SettingType">
    <xs:restriction base="xs:int">
      <xs:enumeration id="LANGUAGE" value="0"/>
      <xs:enumeration id="ENVIRONMENT" value="1"/>
      <xs:enumeration id="IS_IGO_AVAILABLE" value="2"/>
      <xs:enumeration id="IS_IGO_ENABLED" value="3"/>
      <xs:enumeration id="IS_TELEMETRY_ENABLED" value="4"/>
      <xs:enumeration id="IS_MANUAL_OFFLINE" value="5"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="GetSetting" >
    <xs:attribute name="SettingId" type="tns:SettingType" />
  </xs:complexType>

  <xs:complexType name="GetSettingResponse">
    <xs:attribute name="Setting" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GetSettings" >
  </xs:complexType>

  <xs:complexType name="GetSettingsResponse" >
    <xs:attribute name="Language" type="xs:string" />
    <xs:attribute name="Environment" type="xs:string" />
    <xs:attribute name="IsIGOAvailable" type="xs:boolean" />
    <xs:attribute name="IsIGOEnabled" type="xs:boolean" />
    <xs:attribute name="IsTelemetryEnabled" type="xs:boolean"/>
    <xs:attribute name="IsManualOffline" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="GetAllGameInfo">
  </xs:complexType>

  <xs:complexType name="GetAllGameInfoResponse">
    <xs:attribute name="UpToDate" type="xs:boolean"/>
    <xs:attribute name="Languages" type="xs:string"/>
    <xs:attribute name="FreeTrial" type="xs:boolean"/>
    <xs:attribute name="FullGamePurchased" type="xs:boolean"/>
    <xs:attribute name="FullGameReleased" type="xs:boolean"/>
    <xs:attribute name="FullGameReleaseDate" type="xs:dateTime"/>
    <xs:attribute name="Expiration" type="xs:dateTime"/>
    <xs:attribute name="SystemTime" type="xs:dateTime"/>
    <xs:attribute name="HasExpiration" type="xs:boolean"/>
    <xs:attribute name="InstalledVersion" type="xs:string"/>
    <xs:attribute name="InstalledLanguage" type="xs:string"/>
    <xs:attribute name="AvailableVersion" type="xs:string"/>
    <xs:attribute name="DisplayName" type="xs:string"/>
    <xs:attribute name="MaxGroupSize" type="xs:int"/>
    <xs:attribute name="EntitlementSource" type="xs:string"/>
  </xs:complexType>

  <xs:simpleType name="GameInfoType">
    <xs:restriction base="xs:int">
      <xs:enumeration id="UPTODATE" value="0"/>
      <xs:enumeration id="LANGUAGES" value="1"/>
      <xs:enumeration id="FREETRIAL" value="2"/>
      <xs:enumeration id="EXPIRATION" value="3"/>
      <xs:enumeration id="EXPIRATION_DURATION" value="4"/>
      <xs:enumeration id="INSTALLED_VERSION" value="5"/>
      <xs:enumeration id="INSTALLED_LANGUAGE" value="6"/>
      <xs:enumeration id="AVAILABLE_VERSION" value="7"/>
      <xs:enumeration id="DISPLAY_NAME" value="8"/>
      <xs:enumeration id="FULLGAME_PURCHASED" value="9"/>
      <xs:enumeration id="FULLGAME_IS_RELEASED" value="10"/>
      <xs:enumeration id="FULLGAME_RELEASE_DATE" value="11"/>
      <xs:enumeration id="MAX_GROUP_SIZE" value="12"/>
      <xs:enumeration id="ENTITLEMENT_SOURCE" value="13"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="GetGameInfo" >
    <xs:attribute name="GameInfoId" type="tns:GameInfoType" />
  </xs:complexType>

  <xs:complexType name="GetGameInfoResponse">
    <xs:attribute name="GameInfo" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GetEnvironmentResponse">
    <xs:attribute name="Environment" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GetAuthToken">
  </xs:complexType>


  <xs:complexType name="AuthToken">
    <xs:attribute name="value" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GetAuthCode">
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="ClientId" type="xs:string" />
    <xs:attribute name="Scope" type="xs:string" />
    <xs:attribute name="AppendAuthSource" type="xs:boolean" />

  </xs:complexType>

  <xs:complexType name="AuthCode">
    <xs:attribute name="value" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GetInternetConnectedState" />

  <xs:complexType name="InternetConnectedState" >
    <xs:attribute name="connected" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="GoOnline" />

  <xs:complexType name="BroadcastStart" />
  <xs:complexType name="BroadcastStop" />
  <xs:complexType name="BroadcastStatus" >
    <xs:attribute name="status" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="GetBroadcastStatus" />

  <!--****************************************  Origin Event messages *************************************************-->

  <xs:simpleType name="IGOState">
    <xs:restriction base="xs:int">
      <xs:enumeration id="DOWN" value="0"/>
      <xs:enumeration id="UP" value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="IGOEvent">
    <xs:attribute name="State" type="tns:IGOState" />
  </xs:complexType>

  <xs:simpleType name="BroadcastState">
    <xs:restriction base="xs:int">
      <xs:enumeration id="DIALOG_OPEN" value="0"/>
      <xs:enumeration id="DIALOG_CLOSED" value="1"/>
      <xs:enumeration id="ACCOUNTLINKDIALOG_OPEN" value="2"/>
      <xs:enumeration id="ACCOUNT_DISCONNECTED" value="3"/>
      <xs:enumeration id="STARTED" value="4"/>
      <xs:enumeration id="STOPPED" value="5"/>
      <xs:enumeration id="BLOCKED" value="6"/>
      <xs:enumeration id="START_PENDING" value="7"/>
      <xs:enumeration id="ERROR" value="8"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="BroadcastEvent">
    <xs:attribute name="State" type="tns:BroadcastState" />
  </xs:complexType>

  <xs:complexType name="MultiplayerInvite">
    <xs:sequence>
      <xs:element name="SessionInformation" type="xs:string"/>
    </xs:sequence>
    <xs:attribute name="GroupId" type="xs:string" />
    <xs:attribute name="GroupName" type="xs:string" />
    <xs:attribute name="multiplayerId" alias="MultiplayerId" type="xs:string" />
    <xs:attribute name="initial" alias="Initial" type="xs:boolean" />
    <xs:attribute name="from"	alias="FromId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="MultiplayerInvitePending">
    <xs:attribute name="MultiplayerId" type="xs:string"/>
    <xs:attribute name="GroupName" type="xs:string" />
    <xs:attribute name="GroupId" type="xs:string" />
    <xs:attribute name="from"	alias="FromId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="Login">
    <xs:attribute name="IsLoggedIn" type="xs:boolean" />
    <xs:attribute name="UserIndex" type="xs:int" />
    <xs:attribute name="LoginReasonCode" type="tns:LoginReasonCode"/>
  </xs:complexType>

  <xs:complexType name="Logout">
    <xs:attribute name="UserIndex" type="xs:int" />
  </xs:complexType>

  <xs:simpleType name="ProfileStateChange">
    <xs:restriction base="xs:int">
      <xs:enumeration id="UNKNOWN" value="0" />
      <xs:enumeration id="EAID" value="1" />
      <xs:enumeration id="AVATAR" value="2" />
      <xs:enumeration id="SUBSCRIPTION" value="3" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ProfileEvent">
    <xs:attribute name="Changed" type="tns:ProfileStateChange" />
    <xs:attribute name="UserId" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="PresenceEvent">
    <xs:attribute name="userid" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="FriendsEvent">
    <xs:attribute name="value" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="PurchaseEvent">
    <xs:attribute name="manifest" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="ChatMessageEvent">
    <xs:attribute name="FromId" type="xs:unsignedLong" />
    <xs:attribute name="GroupId" type="xs:string" />
    <xs:attribute name="Thread" type="xs:string"/>
    <xs:attribute name="Message" type="xs:string"/>
  </xs:complexType>

  <!--<xs:complexType name="ChatInviteEvent">
    <xs:attribute name="ChatId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="ChatCreatedEvent">
    <xs:attribute name="ChatId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="ChatFinishedEvent">
    <xs:attribute name="ChatId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="ChatUpdatedEvent">
    <xs:attribute name="ChatId" type="xs:string" />
  </xs:complexType>-->

  <xs:simpleType name="ContentState">
    <xs:restriction base="xs:int">
      <xs:enumeration id="UNKNOWN" value="0"/>
      <xs:enumeration id="READY_TO_DOWNLOAD" value="1"/>
      <xs:enumeration id="SERVER_QUEUED" value="2"/>
      <xs:enumeration id="DOWNLOADING" value="3"/>
      <xs:enumeration id="DOWNLOAD_PAUSED" value="4"/>
      <xs:enumeration id="READY_TO_ACTIVATE" value="5"/>
      <xs:enumeration id="READY_TO_DECRYPT" value="6"/>
      <xs:enumeration id="DECRYPTING" value="7"/>
      <xs:enumeration id="READY_TO_UNPACK" value="8"/>
      <xs:enumeration id="UNPACKING" value="9"/>
      <xs:enumeration id="READY_TO_INSTALL" value="10"/>
      <xs:enumeration id="INSTALLING" value="11"/>
      <xs:enumeration id="READY_TO_PLAY" value="12"/>
      <xs:enumeration id="READY_TO_USE" value="13"/>
      <xs:enumeration id="INSTALLED" value="14"/>
      <xs:enumeration id="WAITING_TO_DOWNLOAD" value="15"/>
      <xs:enumeration id="WAITING_TO_DECRYPT" value="16"/>
      <xs:enumeration id="DOWNLOAD_EXPIRED" value="17"/>
      <xs:enumeration id="DECRYPT_EXPIRED" value="18"/>
      <xs:enumeration id="INVALID_CONTENT" value="19"/>
      <xs:enumeration id="PLAYING" value="20"/>
      <xs:enumeration id="FINALIZING_DOWNLOAD" value="21" />
      <xs:enumeration id="PREPARING_DOWNLOAD" value="22" />
      <xs:enumeration id="UPDATING" value="23" />
      <xs:enumeration id="VERIFYING" value="24" />
      <xs:enumeration id="READY_TO_UPDATE" value="25" />
      <xs:enumeration id="UPDATE_PAUSED" value="26" />
      <xs:enumeration id="DOWNLOAD_QUEUED" value="27" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Game">
    <xs:attribute name="contentID" type="xs:string" />
    <xs:attribute name="progressValue" type="xs:float" />
    <xs:attribute name="state" type="tns:ContentState" />
    <xs:attribute name="installedVersion" type="xs:string"/>
    <xs:attribute name="availableVersion" type="xs:string"/>
    <xs:attribute name="displayName" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="CoreContentUpdated">
    <xs:sequence>
      <xs:element name="Games" type="tns:Game" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="BlockListUpdated"/>

  <xs:complexType name="OnlineStatusEvent">
    <xs:attribute name="isOnline" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="PresenceVisibilityEvent">
    <xs:attribute name="Visible" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="UserInvitedEvent" event="true" groups="Events">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="Challenge">
    <xs:attribute name="key" type="xs:string"/>
    <xs:attribute name="version" type="xs:string"/>
    <xs:attribute name="build" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ChallengeResponse">
    <xs:sequence>
      <xs:element name="ContentId" type="xs:string"/>
      <xs:element name="Title" type="xs:string"/>
      <xs:element name="MultiplayerId" type="xs:string"/>
      <xs:element name="Language" type="xs:string"/>
      <xs:element name="Version" type="xs:string"/>
    </xs:sequence>
    <xs:attribute name="response" type="xs:string"/>
    <xs:attribute name="key" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ChallengeAccepted">
    <xs:attribute name="response" type="xs:string"/>
  </xs:complexType>

  <xs:simpleType name="Facility">
    <xs:restriction base="xs:int">
      <xs:enumeration id="SDK" value="0" />
      <xs:enumeration id="PROFILE" value="1" />
      <xs:enumeration id="PRESENCE" value="2" />
      <xs:enumeration id="FRIENDS" value="3" />
      <xs:enumeration id="COMMERCE" value="4" />
      <xs:enumeration id="RECENTPLAYER" value="5" />
      <xs:enumeration id="IGO" value="6" />
      <xs:enumeration id="MISC" value="7" />
      <xs:enumeration id="LOGIN" value="8" />
      <xs:enumeration id="UTILITY" value="9" />
      <xs:enumeration id="XMPP" value="10" />
      <xs:enumeration id="CHAT" value="11" />
      <xs:enumeration id="IGO_EVENT" value="12" />
      <xs:enumeration id="EALS_EVENTS" value="13" />
      <xs:enumeration id="LOGIN_EVENT" value="14" />
      <xs:enumeration id="INVITE_EVENT" value="15" />
      <xs:enumeration id="PROFILE_EVENT" value="16" />
      <xs:enumeration id="PRESENCE_EVENT" value="17" />
      <xs:enumeration id="FRIENDS_EVENT" value="18" />
      <xs:enumeration id="COMMERCE_EVENT" value="19" />
      <xs:enumeration id="CHAT_EVENT" value="20" />
      <xs:enumeration id="DOWNLOAD_EVENT" value="21" />
      <xs:enumeration id="PERMISSION" value="22" />
      <xs:enumeration id="RESOURCES" value="23" />
      <xs:enumeration id="BLOCKED_USERS" value="24" />
      <xs:enumeration id="BLOCKED_USER_EVENT" value="25" />
      <xs:enumeration id="GET_USERID" value="26" />
      <xs:enumeration id="ONLINE_STATUS_EVENT" value="27" />
      <xs:enumeration id="ACHIEVEMENT" value="28" />
      <xs:enumeration id="ACHIEVEMENT_EVENT" value="29" />
      <xs:enumeration id="BROADCAST_EVENT" value="30" />
      <xs:enumeration id="PROGRESSIVE_INSTALLATION" value="31" />
      <xs:enumeration id="PROGRESSIVE_INSTALLATION_EVENT" value="32" />
      <xs:enumeration id="CONTENT" value="33" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Service">
    <xs:attribute name="Name" type="xs:string"/>
    <xs:attribute name="Facility" type="tns:Facility" />
  </xs:complexType>

  <xs:complexType name="GetConfig" />

  <xs:complexType name="GetConfigResponse">
    <xs:sequence>
      <xs:element name="Services" type="tns:Service" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MiddlewareConnectResult">
    <xs:attribute name="reason" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="SelectStore">
    <xs:attribute name="StoreId" type="xs:unsignedLong"/>
    <xs:attribute name="CatalogId" type="xs:unsignedLong"/>
    <xs:attribute name="EWalletCategoryId" type="xs:unsignedLong"/>
    <xs:attribute name="VirtualCurrency" type="xs:string"/>
    <xs:attribute name="LockboxUrl" type="xs:string"/>
    <xs:attribute name="SuccessUrl" type="xs:string"/>
    <xs:attribute name="FailedUrl" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="Store">
    <xs:sequence>
      <xs:element name="Catalog" type="tns:Catalog" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="Title" type="xs:string" />
    <xs:attribute name="Group" type="xs:string" />
    <xs:attribute name="Status" type="xs:string" />
    <xs:attribute name="DefaultCurrency" type="xs:string" />
    <xs:attribute name="StoreId" type="xs:unsignedLong" />
    <xs:attribute name="IsDemoStore" type="xs:boolean" />
  </xs:complexType>


  <xs:complexType name="GetStore" >
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <!-- Optional Parameter if not specified (== 0) The store Id in select store is used.-->
    <xs:attribute name="StoreId" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="GetStoreResponse" >
    <xs:sequence>
      <xs:element name="Store" type="tns:Store" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GetCatalog" >
    <xs:attribute name="UserId" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name ="Catalog" >
    <xs:sequence>
      <xs:element name="Categories" type="tns:Category" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="Status" type="xs:string" />
    <xs:attribute name="CurrencyType" type="xs:string" />
    <xs:attribute name="Group" type="xs:string" />
    <xs:attribute name="CatalogId" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="GetCatalogResponse">
    <xs:sequence>
      <xs:element name="Catalog" type="tns:Catalog" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GetWalletBalance">
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="Currency" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GetWalletBalanceResponse">
    <xs:attribute name="Balance" type="xs:long" />
  </xs:complexType>

  <xs:complexType name="Checkout">
    <xs:sequence>
      <xs:element name="Offers" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="Currency" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="QueryCategories">
    <xs:sequence>
      <xs:element name="FilterCategories" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="QueryCategoriesResponse">
    <xs:sequence>
      <xs:element name="Categories" type="tns:Category" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="QueryOffers">
    <xs:sequence>
      <xs:element name="FilterCategories" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="FilterMasterTitleIds" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="FilterOffers" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="QueryOffersResponse">
    <xs:sequence>
      <xs:element name="Offers" type="tns:Offer" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="QueryContent">
    <xs:sequence>
      <xs:element name="MasterTitleId" alias="GameId" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="MultiplayerId" type="xs:string" />
    <xs:attribute name="ContentType" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="QueryContentResponse">
    <xs:sequence>
      <xs:element name="Content" type="tns:Game" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="QueryEntitlements">
    <xs:sequence>
      <xs:element name="FilterOffers" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="FilterItems" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="FilterGroups" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="OfferId" type="xs:string" />
    <xs:attribute name="ItemId" type="xs:string" />
    <xs:attribute name="Group" type="xs:string" />
    <xs:attribute name="includeChildGroups" type="xs:boolean" />
    <xs:attribute name="includeExpiredTrialDLC" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="QueryEntitlementsResponse">
    <xs:sequence>
      <xs:element name="Entitlements" type="tns:Entitlement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Category">
    <xs:sequence>
      <xs:element name="Categories" type="tns:Category" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Offers" type="tns:Offer" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="Type" type="xs:string"/>
    <xs:attribute name="CategoryId" type="xs:string" />
    <xs:attribute name="ParentId" type="xs:string" />
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="Description" type="xs:string" />
    <xs:attribute name="MostPopular" type="xs:int" />
    <xs:attribute name="ImageId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="Entitlement">
    <xs:attribute name="Type" type="xs:string" />
    <xs:attribute name="ItemId" type="xs:string" />
    <xs:attribute name="EntitlementId" type="xs:string" />
    <xs:attribute name="EntitlementTag" type="xs:string" />
    <xs:attribute name="Group" type="xs:string" />
    <xs:attribute name="ResourceId" type="xs:string" />
    <xs:attribute name="UseCount" type="xs:int" />
    <xs:attribute name="Expiration" type="xs:dateTime" />
    <xs:attribute name="GrantDate" type="xs:dateTime" />
    <xs:attribute name="LastModifiedDate" type="xs:dateTime" />
    <xs:attribute name="Version" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="Offer">
    <xs:sequence>
      <xs:element name="Entitlements" type="tns:Entitlement" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:string" />
    <xs:attribute name="OfferId" type="xs:string" />
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="Description" type="xs:string" />
    <xs:attribute name="ImageId" type="xs:string" />
    <xs:attribute name="GameDistributionSubType" type="xs:string" />
    <xs:attribute name="bIsOwned" type="xs:boolean" />
    <xs:attribute name="bHidden" type="xs:boolean" />
    <xs:attribute name="bCanPurchase" type="xs:boolean" />
    <xs:attribute name="PurchaseDate" type="xs:dateTime" />
    <xs:attribute name="DownloadDate" type="xs:dateTime" />
    <xs:attribute name="PlayableDate" type="xs:dateTime" />
    <xs:attribute name="UseEndDate" type="xs:dateTime" />
    <xs:attribute name="DownloadSize" type="xs:unsignedLong" />
    <xs:attribute name="Currency" type="xs:string" />
    <xs:attribute name="bIsDiscounted" type="xs:boolean" />
    <xs:attribute name="Price" type="xs:double" />
    <xs:attribute name="LocalizedPrice" type="xs:string" />
    <xs:attribute name="OriginalPrice" type="xs:double" />
    <xs:attribute name="LocalizedOriginalPrice" type="xs:string" />
    <xs:attribute name="InventoryCap" type="xs:int" />
    <xs:attribute name="InventorySold" type="xs:int" />
    <xs:attribute name="InventoryAvailable" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="QueryManifest">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Manifest" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="QueryManifestResponse">
    <xs:sequence>
      <xs:element name="Entitlements" type="tns:Entitlement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ConsumeEntitlement">
    <xs:sequence>
      <xs:element name="Entitlement" type="tns:Entitlement" />
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Uses" type="xs:int"/>
    <xs:attribute name="bOveruse" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="ConsumeEntitlementResponse">
    <xs:sequence>
      <xs:element name="Entitlement" type="tns:Entitlement" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Achievement">
    <xs:attribute name="Id" type="xs:string" />
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="Progress" type="xs:int" />
    <xs:attribute name="Total" type="xs:int" />
    <xs:attribute name="Count" type="xs:int" />
    <xs:attribute name="Description" type="xs:string" />
    <xs:attribute name="HowTo" type="xs:string" />
    <xs:attribute name="ImageId" type="xs:string" />
    <xs:attribute name="GrantDate" type="xs:dateTime" />
    <xs:attribute name="Expiration" type="xs:dateTime" />
  </xs:complexType>

  <xs:complexType name="AchievementSet">
    <xs:sequence>
      <xs:element name="Achievement" type="tns:Achievement" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="GameName" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="AchievementSets">
    <xs:sequence>
      <xs:element name="AchievementSet" type="tns:AchievementSet" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GrantAchievement">
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="PersonaId" type="xs:unsignedLong" />
    <xs:attribute name="AchievementId" type="xs:int" />
    <xs:attribute name="Progress" type="xs:int" />
    <xs:attribute name="AchievementCode" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="EventParam">
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="Value" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="Event">
    <xs:sequence>
      <xs:element name="Attributes" type="tns:EventParam" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="EventId" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="PostAchievementEvents">
    <xs:sequence>
      <xs:element name="Events" type="tns:Event" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="PersonaId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="Wincode">
    <xs:attribute name="key" type="xs:string" />
    <xs:attribute name="value" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="PostWincodes">
    <xs:sequence>
      <xs:element name="Code" type="tns:Wincode" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="AuthCode" type="xs:string" />
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="PersonaId" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="QueryAchievements">
    <xs:sequence>
      <xs:element name="GameId" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="PersonaId" type="xs:unsignedLong" />
    <xs:attribute name="All" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="AcceptInvite">
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="OtherId" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="AcceptFriendInvite">
    <xs:attribute name="UserId" type="xs:unsignedLong" />
    <xs:attribute name="OtherId" type="xs:unsignedLong" />
  </xs:complexType>

  <xs:complexType name="SetDownloaderUtilization">
    <xs:attribute name="Utilization" type="xs:float" />
  </xs:complexType>

  <!-- Progressive installation data structures. -->

  <xs:complexType name="IsProgressiveInstallationAvailable">
    <xs:attribute name="ItemId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="IsProgressiveInstallationAvailableResponse">
    <xs:attribute name="ItemId" type="xs:string" />
    <xs:attribute name="Available" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="AreChunksInstalled">
    <xs:sequence>
      <xs:element name="ChunkIds" type="xs:int" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="ItemId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="AreChunksInstalledResponse">
    <xs:sequence>
      <xs:element name="ChunkIds" type="xs:int" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="ItemId" type="xs:string" />
    <xs:attribute name="Installed" type="xs:boolean" />
  </xs:complexType>

  <xs:simpleType name="ChunkState">
    <xs:restriction base="xs:int" >
      <xs:enumeration id="UNKNOWN" value="0"/>
      <xs:enumeration id="PAUSED" value="1"/>
      <xs:enumeration id="QUEUED" value="2"/>
      <xs:enumeration id="ERROR" value="3"/>
      <xs:enumeration id="DOWNLOADING" value="4"/>
      <xs:enumeration id="INSTALLING" value="5"/>
      <xs:enumeration id="INSTALLED" value="6"/>
      <xs:enumeration id="BUSY" value="7"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ChunkType">
    <xs:restriction base="xs:int" >
      <xs:enumeration id="UNKNOWN" value="0"/>
      <xs:enumeration id="REQUIRED" value="1"/>
      <xs:enumeration id="RECOMMENDED" value="2"/>
      <xs:enumeration id="NORMAL" value="3"/>
      <xs:enumeration id="ONDEMAND" value="4"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ChunkStatus">
    <xs:attribute name="ChunkId" type="xs:int" />
    <xs:attribute name="Name" type="xs:string" />
    <xs:attribute name="ItemId" type="xs:string" />
    <xs:attribute name="Type" type="tns:ChunkType"/>
    <xs:attribute name="State" type="tns:ChunkState"/>
    <xs:attribute name="Progress" type="xs:float"/>
    <xs:attribute name="Size" type="xs:unsignedLong" />
    <xs:attribute name="ChunkETA" type="xs:int"/>
    <xs:attribute name="TotalETA" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="QueryChunkStatus">
    <xs:attribute name="ItemId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="QueryChunkStatusResponse">
    <xs:sequence>
      <xs:element name="ChunkStatus" type="tns:ChunkStatus" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="IsFileDownloaded">
    <xs:attribute name="ItemId" type="xs:string" />
    <xs:attribute name="Filepath" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="IsFileDownloadedResponse">
    <xs:attribute name="ItemId" type="xs:string" />
    <xs:attribute name="Filepath" type="xs:string" />
    <xs:attribute name="Downloaded" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="SetChunkPriority">
    <xs:sequence>
      <xs:element name="ChunkIds" type="xs:int" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="ItemId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GetChunkPriority">
    <xs:attribute name="ItemId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GetChunkPriorityResponse">
    <xs:sequence>
      <xs:element name="ChunkIds" type="xs:int" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="ItemId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="QueryChunkFiles">
    <xs:attribute name="ItemId" type="xs:string" />
    <xs:attribute name="ChunkId" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="QueryChunkFilesResponse">
    <xs:sequence>
      <xs:element name="Files" type="xs:string" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CreateChunk">
    <xs:sequence>
      <xs:element name="Files" type="xs:string" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="ItemId" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="CreateChunkResponse">
    <xs:attribute name="ChunkId" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="StartDownload">
    <xs:attribute name="ItemId" type="xs:string" />
  </xs:complexType>

  <xs:simpleType name="RestartOptions">
    <xs:restriction base="xs:int">
      <xs:enumeration id="NORMAL" value="0">
        <xs:annotation>
          <xs:documentation>When the current game terminates relaunch the game and have the default update flow take place.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration id="FORCE_UPDATE_FOR_GAME" value="1">
        <xs:annotation>
          <xs:documentation>When the current game terminates, initiate an update, and relaunch the game.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="RestartGame">
    <xs:annotation>
      <xs:documentation>Restart the game after the current game has terminated.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="UserId" type="xs:unsignedLong" >
      <xs:annotation>
        <xs:documentation>The user for whom the restart is requested for.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Options" type="tns:RestartOptions" >
      <xs:annotation>
        <xs:documentation>Specify how to restart the game.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="StartGame" facility="CONTENT" groups="Content">
    <xs:annotation>
      <xs:documentation>Start any basegame.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="GameId" type="xs:string" >
      <xs:annotation>
        <xs:documentation>The masterTitleId or offerId of the game to start. This will start the 'best' version under the masterTitleId of the owned content, or the exact match when an offerId is passed in.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name ="MultiplayerId" type="xs:string">
      <xs:annotation>
        <xs:documentation>An optional parameter to further narrow down what game to start. The multiplayerId is usually set to the MDM item Id of the standard edition of the game.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="CommandLine" type="xs:string" >
      <xs:annotation>
        <xs:documentation>The command line arguments to be passed to the game.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ExtendTrial">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="RequestTicket" type="xs:string"/>
    <xs:attribute name="TicketEngine" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="ExtendTrialResponse">
    <xs:attribute name="Code" type="xs:int"/>
    <xs:attribute name="TotalTimeRemaining" type="xs:int"/>
    <xs:attribute name="TimeGranted" type="xs:int"/>
    <xs:attribute name="ResponseTicket" type="xs:string"/>
    <xs:attribute name="RetryCount" type="xs:int" default="5"/>
    <xs:attribute name="RetryAfterFailSec" type="xs:int" default="10"/>
    <xs:attribute name="ExtendBeforeExpireSec" type="xs:int" default="60"/>
    <xs:attribute name="SleepBeforeNukeSec" type="xs:int" default="20"/>
  </xs:complexType>

  <xs:complexType name="RequestLicense">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="RequestTicket" type="xs:string"/>
    <xs:attribute name="TicketEngine" type="xs:int" />
  </xs:complexType>

  <xs:complexType name="RequestLicenseResponse">
    <xs:attribute name="License" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="InvalidateLicense">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="SendGameMessage">
    <xs:attribute name="GameId" type="xs:string" />
    <xs:attribute name="Message" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="GameMessageEvent">
    <xs:attribute name="GameId" type="xs:string" />
    <xs:attribute name="Message" type="xs:string" />
  </xs:complexType>


  <xs:complexType name="QueryGroup">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="GroupId" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="QueryGroupResponse">
    <xs:sequence>
      <xs:element name="Members" type="tns:Friend" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GetGroupInfo">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="GroupId" type="xs:string"/>
  </xs:complexType>

  <xs:simpleType name="GroupType">
    <xs:restriction base="xs:int">
      <xs:enumeration id="PUBLIC" value="0" />
      <xs:enumeration id="PRIVATE" value="1" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="GroupInfo">
    <xs:attribute name="GroupName" type="xs:string"/>
    <xs:attribute name="GroupId" type="xs:string"/>
    <xs:attribute name="GroupType" type="tns:GroupType"/>
    <xs:attribute name="CanInviteNewMembers" type="xs:boolean"/>
    <xs:attribute name="CanRemoveMembers" type="xs:boolean"/>
    <xs:attribute name="CanSendGameInvites" type="xs:boolean"/>
    <xs:attribute name="MaxGroupSize" type="xs:int" default="16"/>
  </xs:complexType>

  <xs:complexType name="SendGroupGameInvite">
    <xs:sequence>
      <xs:element name="Invitees" type="xs:unsignedLong" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="Message" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="CreateGroup">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="GroupName" type="xs:string"/>
    <xs:attribute name="GroupType" type="tns:GroupType"/>
  </xs:complexType>

  <xs:complexType name="EnterGroup">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="GroupId" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="LeaveGroup">
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="InviteUsersToGroup">
    <xs:sequence>
      <xs:element name="FriendId" type="xs:unsignedLong" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="RemoveUsersFromGroup">
    <xs:sequence>
      <xs:element name="FriendId" type="xs:unsignedLong" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="SendChatMessage">
    <xs:attribute name="FromId" type="xs:unsignedLong"/>
    <xs:attribute name="ToId" type="xs:unsignedLong"/>
    <xs:attribute name="Thread" type="xs:string"/>
    <xs:attribute name="Message" type="xs:string"/>
    <xs:attribute name="GroupId" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="GroupEvent">
    <xs:sequence>
      <xs:element name="Members" type="tns:Friend" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GroupEnterEvent">
    <xs:sequence>
      <xs:element name="GroupInfo" type="tns:GroupInfo" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GroupLeaveEvent">
    <xs:attribute name="GroupId" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="GroupInviteEvent">
    <xs:attribute name="GroupName" type="xs:string"/>
    <xs:attribute name="GroupId" type="xs:string"/>
    <xs:attribute name="GroupType" type="tns:GroupType"/>
    <xs:attribute name="FromId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="EnableVoip">
    <xs:attribute name="Enable" type="xs:boolean" />
  </xs:complexType>

  <xs:complexType name="GetVoipStatus"/>

  <xs:complexType name="GetVoipStatusResponse">
    <xs:attribute name="Available" type="xs:boolean" />
    <xs:attribute name="Active" type="xs:boolean" />
  </xs:complexType>

  <xs:simpleType name="VoipStatus">
    <xs:restriction base="xs:int">
      <xs:enumeration id="UNKNOWN" value="-1"/>
      <xs:enumeration id="CHANNEL_DISCONNECTED" value="0"/>
      <xs:enumeration id="CHANNEL_CONNECTING" value="1"/>
      <xs:enumeration id="CHANNEL_CONNECTED" value="2"/>
      <xs:enumeration id="USER_TALKING_START" value="3"/>
      <xs:enumeration id="USER_TALKING_END" value="4"/>
      <xs:enumeration id="USER_MUTED_LOCALLY" value="5"/>
      <xs:enumeration id="USER_MUTED_REMOTELY" value="6"/>
      <xs:enumeration id="USER_UNMUTED_LOCALLY" value="7"/>
      <xs:enumeration id="USER_UNMUTED_REMOTELY" value="8"/>
      <xs:enumeration id="USER_JOINED" value="9"/>
      <xs:enumeration id="USER_LEFT" value="10"/>
      <xs:enumeration id="UNAVAILABLE" value="11"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="VoipStatusEvent" event="true" groups="Events">
    <xs:attribute name="Status" type="tns:VoipStatus"/>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:simpleType name="ChatState">
    <xs:restriction base="xs:int">
      <xs:enumeration id="USER_WRITING_START" value="0"/>
      <xs:enumeration id="USER_WRITING_END" value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ChatStateUpdateEvent" >
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
    <xs:attribute name="State" type="tns:ChatState" />
  </xs:complexType>

  <xs:complexType name="MuteUser">
    <xs:attribute name="bMute" type="xs:boolean"/>
    <xs:attribute name="GroupId" type="xs:string"/>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="QueryMuteState">
    <xs:attribute name="GroupId" type="xs:string"/>
  </xs:complexType>

  <xs:simpleType name="EnumMuteState">
    <xs:restriction base="xs:int">
      <xs:enumeration id="NONE" value="0"/>
      <xs:enumeration id="UNMUTED" value="1"/>
      <xs:enumeration id="MUTED_LOCALLY" value="2"/>
      <xs:enumeration id="MUTED_REMOTELY" value="3"/>
      <xs:enumeration id="MUTED_LOCALLY_AND_REMOTELY" value="4"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="MuteState">
    <xs:attribute name="State" type="tns:EnumMuteState"/>
    <xs:attribute name="UserId" type="xs:unsignedLong"/>
  </xs:complexType>

  <xs:complexType name="QueryMuteStateResponse">
    <xs:sequence>
      <xs:element name="MuteStateArray" type="tns:MuteState" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="OverlayStateChanged" facility="SDK" groups="IGO" response="ErrorSuccess">
    <xs:annotation>
      <xs:documentation>Send this command to Origin to indicate that the overlay is up or down. This will in turn inform the game through the Origin SDK.</xs:documentation>
    </xs:annotation>

    <xs:attribute name="State" type="tns:IGOState"/>
  </xs:complexType>

  <xs:complexType name="SteamPurchaseConfirmation" facility="COMMERCE" groups="Commerce" response="ErrorSuccess">
    <xs:annotation>
      <xs:documentation>Send this command to Origin to indicate that the overlay is up or down. This will in turn inform the game through the Origin SDK.</xs:documentation>
    </xs:annotation>

    <xs:attribute name="AppId" type="xs:int"/>
    <xs:attribute name="OrderId" type="xs:unsignedLong"/>
    <xs:attribute name="Authorized" type="xs:boolean"/>
  </xs:complexType>


  <xs:simpleType name="SteamOverlayToStoreFlag">
    <xs:restriction base="xs:int">
      <xs:enumeration id="NONE" value="0"/>
      <xs:enumeration id="ADDTOCART" value="1"/>
      <xs:enumeration id="ADDTOCARTANDSHOW" value="2"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="SteamActivateOverlayToStoreEvent" event="true" groups="Events">
    <xs:attribute name="AppId" type="xs:string"/>
    <xs:attribute name="OfferId" type="xs:string"/>
    <xs:attribute name="IsBaseGame" type="xs:boolean"/>
    <xs:attribute name="Flag" type="tns:SteamOverlayToStoreFlag"/>
  </xs:complexType>

  <xs:complexType name="RefreshEntitlements" >
  </xs:complexType>

  <xs:complexType name="DLC">
    <xs:attribute name="Name" type="xs:string"/>
    <xs:attribute name="Id" type="xs:string"/>
    <xs:attribute name="Installed" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="SetDLCInstalledState">
    <xs:sequence>
      <xs:element name="Offers" type="tns:DLC" maxOccurs="unbounded" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DetermineCommerceCurrency">
  </xs:complexType>

  <xs:complexType name="SteamAchievementEvent" event="true" group="Events">
    <xs:attribute name="AchievementId" type="xs:string"/>
    <xs:attribute name="Points" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name ="SteamAchievementErrorTelemetry">
    <xs:attribute name ="validStats" type="xs:boolean"/>
    <xs:attribute name ="setStat" type="xs:boolean"/>
    <xs:attribute name ="getStat" type="xs:boolean"/>
  </xs:complexType>
 
  <xs:complexType name="SetSteamLocale">
    <xs:attribute name="Language" type="xs:string"/>
  </xs:complexType>
  
</xs:schema>
