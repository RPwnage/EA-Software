	// ////////////////////////////////////////////////////////////////////
	// ORIGIN IGO API RENDERER IMPLEMENTATION
	// //////////////////////////////////////////////////////////////////// 

	class OriginIGORenderer : public IOriginIGORenderer
	{
	public:
		OriginIGORenderer();
		~OriginIGORenderer();

		uint32_t getStreamWidth() { return m_streamingProperties.width; }
		uint32_t getStreamHeight() { return m_streamingProperties.height; }
		RenderFormat getStreamFormat() { return RenderFormat_B8G8R8A8_UNORM; /* no YUV444 / h264 / h265 encoding yet supported in FB */ }

		// rendering support
		virtual OriginErrorT beginFrame();
		virtual OriginErrorT endFrame();
		
		virtual int32_t createTexture2D(const OriginIGORenderingTexture2D_T* input);
		virtual OriginErrorT updateTexture2D(const OriginIGORenderingTexture2D_T* input);
		virtual OriginErrorT deleteTexture2D(int32_t inputTextureId);

		virtual OriginErrorT renderQuad(const OriginIGORenderingQuad_T* input);

		// OriginIGOCaptureModule.h
		void captureStreamWrite(const void* data, uint size);
		void captureStreamDone();

		// streaming support
		virtual OriginErrorT streamingSetup(const OriginIGOStreamingInfo_T* input);
		virtual OriginErrorT transferFrame(OriginIGOStreamingInfo_T* output);

	private:
		// OIG textures
		typedef eastl::hash_map<int32_t, SmartRef<ITexture>> TextureMap;
		TextureMap m_textures;
		int32_t m_textureId;
		bool m_isSRGB;

		// OIG streaming
		OriginIGOStreamingInfo_T m_streamingProperties;
		OriginIGORenderingTexture2D_T m_streamData;
	};