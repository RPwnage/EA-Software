OriginErrorT FriendsEventCallback2 (int32_t eventId, void* pContext, void* eventData, uint32_t count);
void exampleInvites()
{
   OriginRegisterEventCallback(ORIGIN_EVENT_FRIENDS, FriendsEventCallback2, NULL);

   // 1. Find friends.
   OriginHandleT handle;
   uint32_t TotalCount;

   // Call the function to retrieve a handle that allows the friends to be retrieved.
   // Data associated with this query is only valid for as long as the handle exists.
   OriginErrorT err = OriginQueryFriendsSync(OriginGetDefaultUser(), &TotalCount, 10000, &handle);

   if (err == ORIGIN_SUCCESS)
   {
       uint32_t total, available;
       // Check that there is data available.
       err = OriginGetEnumerateStatus(handle, &total, &available);

       if ((err == ORIGIN_SUCCESS) && TotalCount)
       {
           // This is the list of friends to which we can send invites.
           OriginFriendT * Friends = new OriginFriendT[TotalCount];
           uint32_t count;
           // Read data from the enumerator using the handle.
           err = OriginReadEnumeration(handle, Friends, TotalCount, 0, ORIGIN_READ_ALL_DATA, &count);
           if ((err == ORIGIN_SUCCESS) && count)
           {
               OriginUserT * inviteList = new OriginUserT[count];
               for (uint32_t i=0; i<count; i++)
                   inviteList[i] = Friends[i].UserId;

               // 2. Send an invite to each friend.
               OriginSendInviteSync(OriginGetDefaultUser(), inviteList, count, "Come play with me!", 1000);
               delete[] inviteList;
           }
           delete[] Friends;
       }
   }
   // By destroying the handle, the data associated with it becomes invalid.
   err = OriginDestroyHandle(handle);
}

// 3.2 This is the callback for SDK Friends Event handling.
OriginErrorT FriendsEventCallback2 (int32_t eventId, void* pContext, void* eventData, uint32_t count)
{
   OriginFriendT *aFriend = (OriginFriendT *)eventData;
   if (aFriend)
       printf("Friends EventId: %d, Number of Friends: %d, Friend State: %d", eventId, count, aFriend, aFriend->FriendState);

   return ORIGIN_SUCCESS;
}