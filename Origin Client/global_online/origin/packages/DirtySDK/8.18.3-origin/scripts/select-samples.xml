<project>

    <!-- create a define that describes the root path of the package, relative to the packages directory -->
    <property name="DIRTYSDKPATH" value="DirtySDK/${package.targetversion}" />
    <property name="runtime.${dirtysock_modulename}.defines">
        ${property.value}
        DIRTYSDKPATH=${DIRTYSDKPATH}
    </property>

    <!-- Create a list of sample libraries to use, based on the platform in question -->

    <!-- =================  Android  =================== -->
    <property if="${config-system} == 'android'" name="package.DirtySDK.samples.available">
        ticker
    </property>

    <!-- =================  iPhone  =================== -->
    <property if="${config-system} == 'iphone'" name="package.DirtySDK.samples.available">
        tester2host
    </property>

    <!-- =================  OSX  =================== -->
    <property if="${config-system} == 'osx'" name="package.DirtySDK.samples.available">
        tester2host
    </property>

    <!-- =================  PC  =================== -->
    <property if="${config-system} == 'pc'" name="package.DirtySDK.samples.available">
        libstat
        offering
        tester2host
        tester2client
        tester2driver
    </property>

    <!-- =================  PC64  =================== -->
    <property if="${config-system} == 'pc64'" name="package.DirtySDK.samples.available">
        tester2host
    </property>

  <!-- =================  Playbook  =================== -->
    <property if="@{StrStartsWith('${config-system}', 'playbook')}" name="package.DirtySDK.samples.available">
        ticker
    </property>

    <!-- =================  PS3  =================== -->
    <property if="${config-platform} == 'ps3-gcc' or ${config-platform} == 'ps3-sn'" name="package.DirtySDK.samples.available">
        libstat
        tester2host
        ticker
    </property>

    <!-- =================  PSP2  =================== -->
    <property if="${config-system} == 'psp2'" name="package.DirtySDK.samples.available">
        ticker
    </property>

    <!-- =================  Revolution  ============= -->
    <property if="${config-system} == 'rev'" name="package.DirtySDK.samples.available">
        libstat
        ticker
        upnptest
    </property>

    <!-- =================  UNIX  =================== -->
    <property if="${config-system} == 'unix'" name="package.DirtySDK.samples.available">
        tester2host
    </property>

    <!-- =================  UNIX64  =================== -->
    <property if="${config-system} == 'unix64'" name="package.DirtySDK.samples.available">
        tester2host
    </property>

    <!-- =================  XENON  =================== -->
    <property if="${config-system} == 'xenon'" name="package.DirtySDK.samples.available">
        <!-- atgframework -->
        <!-- tester2host *must* come before other samples, until /XEXSECTION
             is done properly at the sample level instead of globally -->
        tester2host
        <!-- other samples must follow tester2host -->
        libstat
    </property>

    <!-- clear out the selected extensions and then add in the extenstions as requested -->
    <property name="package.DirtySDK.samples.selected"/>

    <foreach property="package.DirtySDK.forloop.sample" item="String" in="${package.DirtySDK.samples.available}">

        <!-- If we are building DirtySDK and we don't have a parent project, then DirtySDK is being built by itself,
             so build all samples. -->

        <!-- do if="@{PropertyExists('package.DirtySDK.inbuild')}" -->
            <do unless="@{PropertyExists('package.DirtySDK.nosample')}" >
                <!-- echo message="Enabling ${package.DirtySDK.forloop.sample} since we are building DirtySDK itself." / -->
                <property name="package.DirtySDK.sample.${package.DirtySDK.forloop.sample}" value="1"/>
            </do>
        <!-- /do -->

        <!-- If the property for the sample wasn't provided, then assume they don't want the sample! -->
        <do unless="@{PropertyExists('package.DirtySDK.sample.${package.DirtySDK.forloop.sample}')}" >
            <!-- echo message="Disabling ${package.DirtySDK.forloop.sample} since the property package.DirtySDK.sample.${package.DirtySDK.forloop.sample} wasn't provided." / -->
            <property name="package.DirtySDK.sample.${package.DirtySDK.forloop.sample}" value="0"/>
        </do>

        <do if="${package.DirtySDK.sample.${package.DirtySDK.forloop.sample}} == '1'">
            <!-- Don't echo the message, but leave in the functionality...
            <echo message="DirtySDK [platform ${config-system}] sample ${package.DirtySDK.forloop.sample} enabled.  To disable sample, set property package.DirtySDK.sample.${package.DirtySDK.forloop.sample} to 0." />
            -->
            <property name="package.DirtySDK.samples.selected">
                ${property.value}
                ${package.DirtySDK.forloop.sample}
            </property>
        </do>

        <!-- Don't echo this message either...
        <do unless="${package.DirtySDK.sample.${package.DirtySDK.forloop.sample}} == '1'">
            <echo message="DirtySDK [platform ${config-system}] sample ${package.DirtySDK.forloop.sample} disabled.  To enable sample, set property package.DirtySDK.sample.${package.DirtySDK.forloop.sample} to 1." />
        </do>
        -->
    </foreach>

</project>
