<project>
  <!-- TODO: Check if these warningsuppression exports are being used -->
  <!-- expose DirtySDK warningsuppression -->
  <do unless="@{PropertyExists('package.DirtySDK.warningsuppression')}">
    <property name="package.DirtySDK.warningsuppression" value="" />

    <!-- =================  Android/iPhone/Unix  =================== -->
    <do if="${config-compiler} == 'gcc'">
      <property name="package.DirtySDK.warningsuppression">
        ${property.value}
        -Wno-multichar          <!-- multi-character character literal -->
      </property>
    </do>

    <!-- =================  PS3  =================== -->
    <do if="${config-compiler} == 'sn'">
      <property name="package.DirtySDK.warningsuppression">
        ${property.value}
        --diag_suppress=1437    <!-- multi-character character literal -->
      </property>
    </do>
  </do>

  <!-- task AddDirtySDKLibsToModule: bring in the libs that are required for DirtySDK -->
  <createtask name="AddDirtySDKLibsToModule">
    <parameters>
      <option name="module" value="Required"/>
      <!-- Need to pass in the group name as well.  That is pass in <group> or <group>.<module_name> for this variable. -->
    </parameters>
    <code>
      <!-- capilano libs -->
      <fileset if="${config-system} == 'capilano'" name="${AddDirtySDKLibsToModule.module}.libs" append="true">
        <includes name="${eaconfig.PlatformSDK.dir.lib}/bcrypt.lib" asis="true" />
      </fileset>

      <!-- kettle libs -->
      <fileset if="${config-system} == 'kettle'" name="${AddDirtySDKLibsToModule.module}.libs" append="true">
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceNet_stub_weak.a"       asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceNetCtl_stub_weak.a"    asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceNpCommon_stub_weak.a"  asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceNpManager_stub_weak.a" asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceHttp_stub_weak.a"      asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceSsl_stub_weak.a"       asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceVoice_stub_weak.a"     asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceAudioIn_stub_weak.a"   asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceAjm_stub_weak.a"       asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceUserService_stub_weak.a"  asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceSysmodule_stub_weak.a"    asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceNpAuth_stub_weak.a"       asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceNpWebApi_stub_weak.a"     asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceCommonDialog_stub_weak.a" asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceNpCommerce_stub_weak.a"   asis="true" />
        <includes name="${package.kettlesdk.libdir}/${lib-prefix}SceInvitationDialog_stub_weak.a" asis="true" />
      </fileset>

      <!-- pc libs -->
      <do if="${config-system} == 'pc' or ${config-system} == 'pc64'">
        <fileset name="${AddDirtySDKLibsToModule.module}.libs" append="true">
          <includes name="${eaconfig.PlatformSDK.dir.lib}/iphlpapi.lib" asis="true" />
          <includes name="${eaconfig.PlatformSDK.dir.lib}/winmm.lib" asis="true" />
          <includes name="${eaconfig.PlatformSDK.dir.lib}/ws2_32.lib" asis="true" />
          <includes name="${eaconfig.PlatformSDK.dir.lib}/tapi32.lib" asis="true" />
        </fileset>
      </do>

      <!-- ps3 libs -->
      <do if="${config-system} == 'ps3'">
        <dependent name="ps3sdk" />
        <fileset name="${AddDirtySDKLibsToModule.module}.libs" append="true">
          <includes name="${package.ps3sdk.appdir}/target/ppu/lib/${lib-prefix}rtc_stub${lib-suffix}" asis="true"  />
          <includes name="${package.ps3sdk.appdir}/target/ppu/lib/${lib-prefix}mic_stub${lib-suffix}" asis="true"  />
          <includes name="${package.ps3sdk.appdir}/target/ppu/lib/${lib-prefix}adec_stub${lib-suffix}" asis="true"  />
          <includes name="${package.ps3sdk.appdir}/target/ppu/lib/${lib-prefix}celpenc_stub${lib-suffix}" asis="true"  />
          <includes name="${package.ps3sdk.appdir}/target/ppu/lib/${lib-prefix}celp8enc_stub${lib-suffix}" asis="true"  />
        </fileset>
      </do>

      <!-- xenon libs -->
      <do if="${config-system} == xenon">
        <dependent name="xenonsdk" />
        <do if="${config-name} == 'dev-opt'">
          <fileset name="${AddDirtySDKLibsToModule.module}.libs" append="true">
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xbdm.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xhv2.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xonline.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xnet.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xauth.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xhttp.lib" asis="true"  />
          </fileset>
        </do>
        <do if="${config-name} != 'dev-opt'">
          <fileset name="${AddDirtySDKLibsToModule.module}.libs" append="true">
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xhvd2.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xonlined.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xnetd.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xauthd.lib" asis="true"  />
            <includes name="${package.xenonsdk.appdir}/lib/xbox/xhttpd.lib" asis="true"  />
          </fileset>
        </do>
      </do>
    </code>
  </createtask>

  <!-- task AddDirtySDKNetworkManifest: bring in the NetworkManifest that are required for DirtySDK -->
  <createtask name="AddDirtySDKNetworkManifest">
    <parameters>
      <option name="module" value="Required"/>
      <!-- Need to pass in the group name as well.  That is pass in <group> or <group>.<module_name> for this variable. -->
    </parameters>
    <code>
      <do if="${config-system} == 'capilano'">
        <property name="${AddDirtySDKNetworkManifest.module}.networking-manifest-files">
          ${property.value}
          ${package.DirtySDK.networking-manifest-files}
        </property>
      </do>
    </code>
  </createtask>

</project>
