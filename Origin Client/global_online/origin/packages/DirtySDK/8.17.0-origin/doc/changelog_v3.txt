DirtySock SDK 3.9.5.1 - November 16, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v2.5.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

Changes/bugfixes in this release:

    Contrib (All)
        LobbyGlue
            Changed handling of the strExtraPresence field to cohabit better with OSDK's
            use of the field.

DirtySock SDK 3.9.5.0 - November 8, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v2.5.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

Changes/bugfixes in this release:

    Contrib (All)
        LobbyGlue
            Only send buddy score to the ticker if the strExtraPresence field contains the
            tagfield parameters required to format scoring info.
        
        GameManager
            Fixed to cancel any pending LobbyApi callbacks when calling GameManagerDestroy().
            This prevents a LobbyApi callback from firing after the module memory has been
            released with the module memory as reference.
            
            Fixed to pass the correct user data pointer to the user's ConnApi callback.
            Previously, GameManager's user data was being passed instead of the application's
            user data.

    Contrib (Xbox)
        VoIP
            Fixed to update last received time when receiving a connect packet.
            
            Fixed to use connection timeout (not configurable by client) instead of idle timeout
            (configurable by the client) when in connecting state.
            
    Contrib (Xenon)
        ConnApiXenon
            ConnApiStop() now executes the ProtoMangle 'stop' command.  ConnApiDisconnect()
            now executes 'dele', and is no longer deprecated.
            
            Added in unique connection identifiers passed to CommUdp.  This prevents clients
            listening for more than one connection from connecting to the wrong clients.

        VoIP
        	Don't process remote status unless the connection is active.  Previously, the
            status would be processed when the connection was in a connecting state, which
            could on some occasions produce an XDK assert.

            Fixed to update last received time when receiving a connect packet.
            
            Fixed to use connection timeout (not configurable by client) instead of idle timeout
            (configurable by the client) when in connecting state.

    DirtySock (PSP)
        DirtyNetPSPAdhoc
            Acquire ethernet address in SocketCreate() using sceWlanGetEtherAddr() instead of
            after a connection event.
            
        DirtyNetPSPInet
            Acquire ethernet address in SocketCreate() using sceWlanGetEtherAddr() instead of
            after a connection event.

            Increased apctl stack size from 8k to 12k as required by the 2.x libraries.
            
    DirtySock (Xenon)
        LobbyLogin
            Fixed acct callback to save code response.
            
        ProtoMangle
            Split 'stop' command into two commands - 'stop' and 'dele'.  This allows
            XSessionEnd() ('stop') to be executed separately from XSessionDelete()
            ('dele') in cases where it is desirable to stop and start the session
            without ever deleting it.  Previously, the 'stop' command executed
            XSessionEnd() and XSessionDelete() in sequence.


DirtySock SDK 3.9.4.0 - October 21, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v2.0.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

New in this release

    Contrib (PC)
        PCIsp
            First release version of PCIsp.

    Contrib (PSP)
        DirtyGraph
            Included pre-built libraries for PSP.

Changes/bugfixes in this release:

    Contrib (Xenon)
        GameManager
            Removed vestiges of Xenon-specific quickmatch searching code that should have
            been completely removed from the last release.

    DirtySock (All)
        LobbyApi
            Protect callbackIDs from overflowing into the LOBBYAPI_GLOBALCB bit (4096).
        
    DirtySock (PC)
        DirtyNetWin
            Fixed memory leak in SocketLookup() when trying to look up a dot-notation address.

    DirtySock (Xenon)
        NetConnXenon
            Changed to make _XAccountGetUserInfo() call asynchronous.  This fixes the case
            where signing on immediately after pulling the plug can lock up the thread
            calling NetConnConnect() for ~ten seconds.

        ProtoMangle
            Fixed bug introduced in last update - searches were being excluded when the
            session handle was zero, but searches can only happen in that condition.

            Fixed a bug where some _ProtoMangleEncodeBinary7() strings (specifically the
            session nonce) were unterminated.
                    

DirtySock SDK 3.9.3.0 - October 13, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v2.0.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2099.6

Changes/bugfixes in this release:

    Contrib (All)
        GameManager
            Added lobby command snooping to make sure GameManager state is maintained
            correctly in the event of an error response.  GameManager now uses its own
            LobbyApi callback internally, and queues user callbacks when they are issued.
            When the response is received, the user callback is dequeued and called by
            GameManager.  This fixes cases where GameManager would send a g* command to
            the lobby, and the command would fail, but GameManager wouldn't know about it,
            and not correctly update its state.

    Contrib (Xenon)
        ConnApiXenon
            Fixed 'hosting' to be correctly determined in peer-web mode, which fixes peer-web
            mode.

        GameManager
            Removed code that handled auto-invite on Xenon.  Since invites have to work when
            the user is offline as well, GameManager can't handle that case and thus this code
            becomes redundant, since the game has to implement the other case anyway.
            
            Removed code that handles auto-search on Xenon.  Auto-search is now handled by
            LobbyApiXenon and this code is therefore redundant.

    DirtySock (All)
        HLBudApi
            Fixed a bug in HLBListGetIndexByName() that caused it to skip every other entry,
            and made it an externally callable function.

    DirtySock (Xenon)
        HLBudApi
            Fixed a bug in HLBListGetBuddiesByName() that was caused by HLBListGetIndexByName()
            skipping every other entry.

        NetConnXenon
            Fixed to clear all user info on NetConnDisconnect(), so no stale data is left over.
        
        ProtoMangle
            Removed 'zero address' hack, as it was preventing ConnApi's 'peer-web' mode from
            working correctly.  ConnApi is now responsible for making sure a zero address is
            passed for the 'listening' side.

            Added a check to ProtoMangleControl() to make sure a session exists before issuing
            any async call other than session creation.


DirtySock SDK 3.9.2.0 - October 4, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v2.0.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2099.6

Changes/bugfixes in this release:

    Contrib (Xenon)
        ConnApiXenon
            Implemented 'skil' selector, used to write to the skill leaderboard.

        VoIP
            Fixed a bug where VoipStartup() followed immediately by VoipShutdown()
            would leave the main thread endlessly waiting for the Voip thread to shut
            down, which would never happen.

    DirtySock (All)
        ProtoHttp
            Fixed loophole in chunking code that could allow an incomplete chunk header to be
            parsed.
            
        LobbyLocalize
            French Perecent bug fix--we now add a space before the % sign for French language.

        RoomlistApi
            Fixed rare crash bug in roomlist API by cancelling outstanding callbacks in
            LobbyRoomlistDestroy().

    DirtySock (Xenon)
        NetConnXenon
            Changed to re-get user information if either XUID or gamertag has changed.  This
            fixes a problem where netconn would not properly update the status of a gamertag
            that had been changed in the GUIDE.
        
        ProtoMangle
            Implemented 'skil' selector, used to write to the skill leaderboard.

            Fixed async XSessionEnd() handling to continue through to session deletion
            even if the XSessionEnd() call fails.  This ensures the state is reset properly
            in this case (which can be caused by plug pulling) for a future game session
            without having to destroy and recreate ConnApi.

            Only call XSessionEnd() if we are online, as per XDS instructions.


DirtySock SDK 3.9.1.0 - September 27, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v2.0.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2099.4

Changes/bugfixes in this release:

    Contrib (PC)
        PCIsp
            Miscelleneous cleanup.

            Added a call to NetConnConnect() in PCIspCreate()
            
    DirtySock (All)
        LobbyApi
            Changed LobbyApiRequestCB() 'madr' snoop code to return zero instead of negative
            one, and made it so the first valid callback ID is one.  Also changed
            LobbyApiCancelCB() to ignore a callback ID of zero.
            
            Fixed LobbyApiRequestCB() 'madr' snoop code to declare a local buffer big enough
            to store a Xenon machine address.

    DirtySock (PC)
        NetConnWin
            Changed NetConnStatus('conn') return type to match that of other platforms.

    DirtySock (PSP)
        Changed DebugX and Final builds to compile with -O3 (requested by Fusion).
    
        DirtyNetPsp
            Disabled async recv thread.

        DirtyNetPspInet
            Fix for Sony 2.0 - bumped up stack size by 4k in debug mode of apctrl handler to
            account for 4k used by NetPrintf() handler.

    DirtySock (Xenon)
        LobbyApiXenon
            Fixed to never mute messages with NOFILT set.


DirtySock SDK 3.9.0.0 - September 20, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v2.0.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 1881

    NOTE: Starting with this release, DirtySock PSP is built against the Sony PSP Runtime
    Libraries v2.0.0.  From Sony, here are dates for the transition from 1.5.2 to 2.0.0:

        Now to Oct 30th:
            OK to submit with SDK 1.5.2 or 2.0.0 - (Game Master Disc package 2.0.0 is 
            required)

        After Oct 31th:
            Submit with SDK 2.0.0 only (SDK 1.5.2 terminated) - Also, Game Master Disc 
            package 2.0.0 is required.    

New in this release

    Contrib (PC)
        PCIsp
            First version of PCIsp module.  Primarily used to read shared login
            account information generated with PC EA Connect, as the network startup
            process on PCs is handled by the OS.

    DirtySock (Xenon)
        LobbyApiXenon
            New module to handle Xenon-specific tasks that are Lobby related.  Some
            functionality that was currently implemented in other modules has been
            implemented here, so as to make its operation transparent.  Current
            functionality includes:
                - Augmentation of 'gqwk' and 'gsea' with Microsoft session search
                information.  Search parameters can be specified with XNMODE=, XNPROC=,
                and XNRANK= to specify the game mode, search process index, and ranked
                game status respectively.
                - Text message muting of filtered messages that are from a user in the
                local user's mute list.  This is required to fulfill TCR 90.
                - Text verification of all filtered text sent to the lobby server.  The
                text is  submitted to XStringVerify(), and when the async verification is
                complete the text is sent to the lobby server.  If the text is not
                validated, all non-space characters are replaced with asterisks.  This
                is required to fulfill TCR 92.

Changes/bugfixes in this release:

    Contrib (All)
        ConnApi
            Fixed demangling bug introduced in last update.  Now is tested and working for
            2p and 3p demangling using the Ping application as well as the internal
            DirtySock tester.

        GameManager
            Added support for detecting private games, and setting up the matching ConnApi
            game to be private.

        LobbyGlue
            Added some missing protection for pHLBRef being NULL.

            Marked LobbyGlueShouldMuteMessage() as deprecated - the functionality was moved
            internal to LobbyApi.

    Contrib (Xenon)
        ConnApiXenon
            Fixed it so ConnApiStatus() 'slot' selector will override default behavior.

            Get address and port from NetGameUtil() when transitioning the game link to
            CONNAPI_STATUS_ACTV status.
            
            New selector 'gdsc' to destroy the given game connection.

            Added ConnApiControl() 'stat' selector, which enables stat writing for any
            user in a game.  Previously, the 'stat' selector was handled implicitly by
            ProtoMangle and could only handle stats for the host and a single peer, which
            was only sufficient for two-player games.

    DirtySock (All)
        LobbyApi
            Rewrote _LobbyApiDebug() packet display code to be able to display binary7
            data, long packets, and to word wrap at 80 columns.  Packet data is also
            indented to make it easier to distinguish between packets.

            Changes to allow out-of-order retirement of LobbyApi callback queue.

            Cleaned up queueing based on new assumption that queue head is always index
            zero and therefore the queue cannot wrap.
            
            Implemented snoop of 'madr' command that looks first in the user list to see
            if the machine address of the given user is available locally, before issuing
            the server command.

    Dirtysock (PSP)
        DirtyNetPspAdhoc
        DirtyNetPspInet
            Set stack size specified for CALLOUT and NETINTR threads in sceNetInit() to
            zero, as per Sony 2.0.0 technote.
        
    DirtySock (Xenon)
        LobbyLogin
            Fixed an ininitialized stack buffer bug that could result in a user's MADDR
            being reported to the server as just the XUID, instead of the XUID+XNADDR pair
            that is supposed to be reported.  This would result in game connection failures
            for these users.

            Bumped up tagfield buffer used to submit 'acct' request on Xenon from 512 to
            768 bytes.  Because of the potential size of the account data, the original
            buffer size could be too small.

        ProtoMangle
            ProtoMangleControl() selectors 'sflg' and 'slot' were in the async section but
            are not async operations, so they have been moved to the non-async section.

            Added a debug warning for case where someone is trying to connect with a peer
            address that does not include the xnaddr.
        
            Added ability to set game mode session creation will use.  Defaults to zero
            (previous behavior).

            Fixed XSessionJoinLocal() and XSessionJoinRemote() calls to properly set whether
            the user is being added to a private slot, if private slots are enabled.

            Added ProtoMangleControl() 'suid' selector, to set the XUID that is used for
            stats reporting.  This allows stats reporting to work for >2p games.  Also fixed
            broken state transition when writing a stat with the 'stat' selector.

            Use current game mode for search, instead of using a hard-coded zero.  Also
            changed to take search proc index in 'srch' command.
            

DirtySock SDK 3.8.5.0 - September 13, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v2.0.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 1881

    NOTE: Starting with this release, DirtySock Xenon is built against the August Final
    1881 QFE.

    NOTE: Starting with this release, DirtySock PSP is built against the Sony PSP Runtime
    Libraries v2.0.0.  From Sony, here are dates for the transition from 1.5.2 to 2.0.0:

        Now to Oct 30th:
            OK to submit with SDK 1.5.2 or 2.0.0 - (Game Master Disc package 2.0.0 is 
            required)

        After Oct 31th:
            Submit with SDK 2.0.0 only (SDK 1.5.2 terminated) - Also, Game Master Disc 
            package 2.0.0 is required.    

Changes/bugfixes in this release:

    Contrib (All)
        ConnApi
            Fixed a bug with back-to-back sessions requiring demangling.  The shared socket
            ref was not being cleared between sessions and this would result in the second
            session trying to use a socket ref that didn't exist, and failing as a result.

            When multi-demangling, if multiple connection attempts were attempted sequentially
            that required demangling, the first connection could time out and demangling
            could start while the second connection attempt was still ongoing.  This second
            connection attempt would interfere with the demangling process and prevent it
            from working.  To fix this, ConnApi's demangling process has been changed to
            wait to initiate a demangle until no clients are in the connecting state, which
            ensures the demangle happens when there are no ongoing connection attempts.

        GameManager
            Made all functions that wrap 'g***' commands take async callbacks just like the
            LobbyApiRequestCB() call they are wrapping.

    Contrib (Xenon)
        ConnApi
            Call VoipSetLocalUser() in ConnApiOnline(), instead of when the clientlist is
            created in ConnApiHost() or ConnApiConnect().  This allows VoIP to track headset
            status for the active user as long as ConnApiOnline() has been called.

            Added support for setting Microsoft session slot count correctly.  The number of
            slots is dictated by the maximum number of clients allocated for by
            ConnApiCreate().  Whether the slots are private or public is controlled based on
            whether the game flags passed to ConnApiHost2() and ConnApiConnect2() include
            CONNAPI_GAMEFLAG_PRIVATE or not.

            Added non-blocking stall waiting for XSessionJoinLocal() after session creation
            to complete before proceeding to the connect phase.  This fixes a bug where the
            JoinLocal() would sometimes take long enough that the connect would be attempted
            before the JoinLocal() call was complete, which would cause the connect attempt
            to fail.

            Changed ConnApiControl() and ConnApiStatus2() to call directly through to
            ProtoMangleControl() and ProtoMangleStatus2() directly, in the case where
            ConnApi is given a selector it does not recognize.  Individual selectors were
            already being forwarded explictly; this just formalizes the relationship and
            means that ConnApi doesn't need to explicitly implement selectors for everything
            that ends up being a pass-through to ProtoMangle.

            ConnApi will now call ConnApiDisconnect() when ConnApiDestroy() is called, if
            not already disconnected.

        VoIP
            Rewrote headset status polling to fix a bug and to also get VOIP_STATUS_HEADSETOK
            working properly.

    DirtySock (Xenon)
        LobbyApiUtil
            Fixed to include dirtysock.h so DIRTYCODE_PLATFORM and DIRTYCODE_XENON are
            defined.  These defines are used to compile out automatic session generation code
            in LobbyApiExtractPlayRecord() for Xenon.  The automatic session generation code
            is harmless, but confusing since the session generated is useless on Xenon.
        
        NetConnXenon
            Fixed NetConnStatus('type') to always return IFTYPE_ETHER.  This is the same fix
            that was applied to Xbox in DirtySock 3.4.1.

        ProtoMangle
            Added ability to set max public and max private slots, instead of just hardcoding
            them.
            
            Added documentation for ProtoMangleControl() and ProtoMangleStatus() selectors.

            Implemented blocking of async calls if a previous async call is still ongoing.
            This fixes some rare cases where back-to-back async calls could be initiated
            quickly enough that the second would be started while the first was ongoing, and
            as a result fail.
                            

DirtySock SDK 3.8.4.0 - September 7, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 1873

New in this release:

    Contrib (All)
        Added a new function, LobbyGlueShouldMuteMessage().  This function takes as input
        a LobbyApiMsgT, and returns whether the message should be muted (not displayed
        locally) or not.  Note that this function currently returns FALSE for platforms
        other than Xenon.  On Xenon, the determination of whether to mute the message is
        made based on the local user's mute list.  For this functionality to work as
        intended, EAFN 3.8.4 or later must be used.

Changes/bugfixes in this release:

    Contrib (All)
        ConnApi
            Fixed a rare bug where a disconnect packet and timeout condition happening at
            the same time could cause an invalid access to a previously destroyed
            NetGameLinkRef().
        
        GameManager
            Fixed GameManagerLeave() to pass input parameters on to server.

            Removed unnecessary ST_INGM state that was causing problems when leaving a game.

    Contrib (Xenon)
        ConnApi
            Fixed ConnApiRemoveClient() to also remove the client from the Microsoft session.
            
            Fixed session deletion to consider deletion complete if ProtoMangle ends up in
            the failure state because the async XSessionDelete() call failed.  This can
            happen when the network plug is pulled during session deletion, and prevents
            ConnApi from getting stuck in the ST_DELETING state.
        
        GameManager
            Fixed a bug where the tagfield buffer that holds the session string and platform
            parameters (nonce) wasn't big enough, so the nonce wasn't getting updated on the
            server and this was causing ranked match arbitration to fail.
        
        VoIP
            Added headset status support via VoipStatus2('hset').
            
            Fixed to close listener at shutdown.
            
            Removed polling for XN_SYS_SIGNINCHANGED event, as no useful work was being
            done when the event was detected.

            Made VoipMicrophone() and VoipSpeaker() implementations empty functions.  On
            Xenon, the send/recv masks are controlled internally based on the Mute list,
            which is managed through the HUD.  This removes any necessity for game-side
            code to manage the send/recv masks.
            
    DirtySock (All)
        LobbyLogin
            Added 'ikey' (invalid reg key) error to mapping table, and added
            LOBBYLOGIN_ALERT_INV_REGKEY enumeration to match.
    
        LobbyTagField
            Removed TagFieldGetPackedDate() and TagFieldSetPackedDate() from header.  These
            functions had previously been removed from the code.

        ProtoHttp
            Fixed a bug where ProtoHttpGet() would use the bHeadOnly parameter from the
            previous ProtoHttpGet().

    DirtySock (Xbox)
        LobbyLogin
            Updated LobbyLogin code that parses the address remap table from the server to
            use the serviceID included in the remap table instead of simply hardcoding the
            'host' (service index zero) address.  If the serviceID in the remap table is not
            valid, it will fall back on the old behavior.

    DirtySock (Xenon)
        HLBudApi
            Fixed "unreachable" code in xenon hlbudapi -due to earlier stub.
        
        LobbyLogin
            Updated LobbyLogin code that parses the address remap table from the server to
            use the serviceID included in the remap table instead of simply hardcoding the
            'host' (service index zero) address.  If the serviceID in the remap table is not
            valid, it will fall back on the old behavior.

            Added set of PUID=Xuid.  PUID is the Platform User ID and is currently used only
            by Xenon.

            Changed to only send account info for 'acct' transaction.

        NetConnXenon
            Get initial state of logged on users when connecting to Xbox Live.  We should be
            able to rely on the notification listener for this, but if multiple listeners
            are created only the first listener gets the initial sign-in message, and
            netconn would therefore miss the event.
            
            Moved poll of XN_LIVE_INVITE_ACCEPTED event outside of "connected" status in
            _NetConnUpdate().  This change reflects the fact that Invites can be received at
            any time regardless of NetConn state, as long as the user accepting the Invite
            is logged into Xbox Live.

        ProtoMangle
            Fixed to set session handle to zero after XSessionDelete() completion.  This
            allows subsequent sessions to be created successfully without destroying and
            recreating the ProtoMangle object.

            Added ProtoMangleControl('remv') selector, used to remove a user from a game
            by XUID.

            Added ProtoMangleStatus2('fail') selector, used to indicate whether ProtoMangle
            is in a failure state or not.

    Platform (IOP)
        Minor fix to debug vsprintf() memory trashing detection code (debug only).
            

DirtySock SDK 3.8.3.0 - August 30, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 1873

New in this release:

    Contrib (All)
        GameManager
            GameManager is a new API that binds lobby server game object creation and
            management to ConnApi.  While the API is cross-platform, it has special
            Xenon support transparently included:
               - Session creation/distribution
               - Ranked match support
               - Automatic invite accept
               - Xenon match searches
            GameManager was based on the sample code previously found in the Tester2
            command 'game', so if you are familiar with that code you will be familiar
            with GameManager.  The 'game' sample is still used to drive the matchmaking
            process, but the interesting parts have been incorporated into GameManager.

Changes/bugfixes in this release:

    Contrib (Xenon)
        ConnApiXenon
            Reworked ProtoMangle creation so ref is always available.  This is helpful in
            cases where certain actions need to take place when there is no session
            active.        

        VoIP
            Fixed to not attempt to unregister local talker on shutdown if no local talker
            is registered.  This fixes an XDK assert condition.

    DirtySock (Xenon)
        DirtyErrXenon
            Added two new error definitions.

        NetConnXenon
            Fixed NetConnQuery() to return -1 if the specified gamertag or xuid is not
            logged in.

        ProtoMangle
            Added support for Microsoft session search.

        XnFriends
            Fixed bug where if had 0 friends, it did not update.

    Platform (All)
        plat-str
            Due to a conditional compile bug, vsnzprintf() was using vsprintf() on all
            platforms instead of using vsnprintf().  This meant that buffer trashing could
            take place instead of being guarded as the function is supposed to do.
        

DirtySock SDK 3.8.2.1 - August 26, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 QFE 1838.1
        
    NOTE: The next release (3.8.3, August 30th) will be built against the Xenon
    August 2005 Final XDK.  The included binaries will only work with Final hardware;
    any other XDK/hardware combination should make sure to rebuild all dependent libraries
    before use.

New in this release:

    Contrib (All)
        GameManager
            GameManager is a new API that binds lobby server game object creation and
            management to ConnApi.  This version is a preview version only; the first
            official version will be in next week's release.
            
    DirtySock (Xenon)
        HLBudApi
            HLBudApi is now available for Xenon.  Due to the fact that Microsoft does not expose
            exactly the same feature set as is implemented by HLBudApi, not all HLBudApi features
            are supported by Xenon.  Here is a list of the supported APIs:
        
                HLBApiRefT *HLBApiCreate(const char *pProduct, const char *pRelease)
                HLBApiRefT *HLBApiCreate2( BuddyMemAllocT *pAlloc,  BuddyMemFreeT *pFree,
                       const char *pProduct, const char *pRelease)
                void   HLBApiSetDebugFunction (  HLBApiRefT  * pApiRef, void *pDebugData, 
                void (*pDebugProc)(void *pData, const char *pText))
                int    HLBApiConnect( HLBApiRefT  * pApiRef, const char * pServer, int port, 
                const  char *key, const char *pRsrc )  // except for api, params are irrelevant.
                void   HLBApiDisconnect ( HLBApiRefT  * pApiRef) 
                void   HLBApiDestroy( HLBApiRefT *pApiRef)  
                void   HLBApiUpdate (HLBApiRefT  * pApiRef) 
                int    HLBApiRegisterBuddyChangeCallback( HLBApiRefT  * pApiRef, HLBOpCallbackT * pListCallback, 
                void * pAppData) 

                char * HLBBudGetName(  HLBBudT  *pBuddy )
                int    HLBBudWannaBeMyBuddy( HLBBudT  *pBuddy )
                int    HLBBudIsIWannaBeHisBuddy( HLBBudT  *pBuddy )
                int    HLBBudIsRealBuddy( HLBBudT  *pBuddy )  
                int    HLBBudIsPassive(  HLBBudT  *pBuddy) // i.e. in game..
                int    HLBBudGetState(  HLBBudT  *pBuddy)
                int    HLBBudIsAvailableForChat (  HLBBudT  *pBuddy)
                int    HLBBudIsJoinable(  HLBBudT  *pBuddy)
                int    HLBBudCanVoiceChat (  HLBBudT  *pBuddy)

                HLBBudT*   HLBListGetBuddyByName ( HLBApiRefT *  pApiRef, const char * name  )
                HLBBudT*   HLBListGetBuddyByIndex ( HLBApiRefT  * pApiRef, int index )
                int        HLBListGetBuddyCount ( HLBApiRefT  *pApiRef)

                void HLBListSetSortFunction (HLBApiRefT  * pApiRef, HLBRosterSortFunctionT  * sortCallbackFunction)   
                int  HLBListSort (HLBApiRefT  * pApiRef)    //sort buddy  list using sort function.
                void HLBListDisableSorting( HLBApiRefT  *pApiRef  )
                int  HLBListChanged(HLBApiRefT  * pApiRef)

                //following Bud functions arent relevant and simply return false..
                int HLBBudIsTemporary(  HLBBudT *pBuddy )  
                int HLBBudIsBlocked(  HLBBudT  *pBuddy )  
                int HLBBudTempBuddyIs(  HLBBudT  *pBuddy, int tempBuddyType )
                int HLBBudIsInGroup(  HLBBudT  *pBuddy )  
                int HLBBudIsSameProduct (  HLBBudT  *pBuddy) 
                int HLBBudIsNoReplyBud(  HLBBudT  *pBuddy);  

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added selectors to return currently set user callback and user callback data
            pointer.

    Contrib (Xenon)
        ConnApi
            Fixed to pass XUID of self to ProtoMangle on creation, so ProtoMangle can
            correctly determine if the host is the local user or not.  This fixes hosting
            from a non-zero user index.
            
            Fixed 'sflg' selector to cache the flag value, and set it after ProtoMangle
            creation and before session creation in ConnApiHost() and ConnApiControl().
            Without this fix, there was no way to set the flags at the appropriate time
            as it would either be before ProtoMangle creation or after the ProtoMangle
            session was already created.

            Added ConnApiStatus2() call 'invt', which uses ProtoMangle to check for pending
            accepted invitations.  If there is a pending accepted invitation, the session
            info for that invitation is returned.  This selector can be called at any point
            after the module is created.  For an example of use, see the Tester2 game sample.

        VoIP
            Various VoIP fixes and cleanup to muting, send/recv mask tracking, and user
            registration/unregistration.  Muting now works much more predictably and is
            handled fully transparently.

            Fixed a recursion issue with _VoipUpdateRemoteUsers().

    DirtySock (Xenon)
        DirtyLibWin
            Added new function NetPrintMem(), which is used to display memory dumps in an
            easy-to-read format.

        NetConnXenon
            Added NetConnStatus() 'invt' selector.  NetConn will now notice when an
            XN_LIVE_INVITE_ACCEPTED event is thrown.  If NetConnStatus() 'invt' is subsequently
            called, the invitation is pulled with a call to XInviteGetAcceptedInfo() and
            returned to caller.  Note that once XInviteGetAcceptedInfo() is called, the
            invitation is consumed and will no longer be available.

            Now handles XN_LIVE_CONNECTIONCHANGED.  If the result is not
            XONLINE_S_LOGON_CONNECTION_ESTABLISHED, the connection status returned by
            NetConnStatus('conn') is set to an error condition (one of -net, -svc, -upd, -bsy,
            -lst, -dup, -inv, or -xbl) and NetConn is marked as offline (NetConnStatus('onln')
            == FALSE).
            
        ProtoMangle
            Changed to accept XUID of the local user in ProtoMangleCreate(), as we need that
            to determine if the host is the local user or not.

            Removed XSESSION_CREATE_JOIN_VIA_PRESENCE_DISABLED flag from default session flags.
            This flag does more than originally expected, and prevents a user who has created
            a session from inviting someone else to that session.

            Fixed invite support to work with user index zero.                

            Moved debug memory print function to dirtylibwin.c.
            
            Added ProtoMangleStatus2() 'invt' selector.  When polled, this selector will call
            NetConnStatus('invt') for user indices zero through three to see if there is an
            accepted invite pending.  If there is, the invite is retrieved, encoded in
            Binary7, and returned to caller.  At this point, if using the game object interface,
            the game can be joined with a 'gjoi' with SESS=encodedString.

        LobbyApiUtil
            Disabled automatic session generation in LobbyApiExtractPlayRecord() for Xenon.
            The session generated here is not useful for Xenon and simply confuses things.
            

DirtySock SDK 3.8.2.0 - August 23, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 QFE 1838.1

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Changed connident generation to be at init time, instead of on-demand.  This
            fixed a bug introduced in DirtySock 3.7.1 which resulted in inconsistent connidents
            being generated after demangling, preventing demangled connections from being
            successfully established.  All PS2/PC/PSP teams that are able should take this
            update to fix demangling problems.  If it is not possible to take this fix, please
            contact your DirtySock server contact as there is a config-based workaround
            available.

            Added ability to optionally disable auto-update (NetConnIdle() updating) using
            the ConnApiControl() selector 'auto'.  If auto-update is disabled, the application
            is responsible for polling ConnApiUpdate() directly.  By default, audo-update is
            enabled, preserving previous functionality.

    Contrib (Xenon)
        ConnApi
            Added ConnApiControl() 'sflg' selector to allow override of default session flags
            for subsequently invoked sessions.  Note that XSESSION_CREATE_USES_ARBITRATION and
            XSESSION_CREATE_HOST should not be included in these flags - they are added as
            needed based on whether the session is ranked or not, and whether the client is
            the host or not, respectively.

            Changed default session flags to include XSESSION_CREATE_JOIN_VIA_PRESENCE_DISABLED
            and XSESSION_CREATE_JOIN_IN_PROGRESS_DISABLED.

        VoIP
            Call VoipSetLocalUser() when initializing client list.

            Updated to be able to handle a user in any slot (use VoipSetLocalUser() to set
            by XUID).

            Added mutelist and global communication privilege support.

    DirtySock (All)
        BuddyApi
        HLBudApi
            Added non-Xbox support for the game invite session id. The APIs are
            HLBListGetGameSessionID() and HLBListSetGameInviteSessionID().  This uses the
            GSTR field on GINV to the buddy server
        
        WebOffer
            Changed WebOfferHttpComplete() to return -1 if the http transfer failed and there
            was no script handler for that case.

    DirtySock (Xenon)
        LobbyLogin
            Modified to log in user based on index, instead of assuming user index zero.
    
        NetConnXenon
            Switched to listening to all events so as to get sign-in events again.  The August
            XDK moved sign-in events from the "live" category to the "system" category, so with
            that change DirtySock no longer caught sign-in notifications.
            
            Implemented NetConnQuery(), which can now be used to find the local index of a
            user based on gamertag or xuid.

            Disabled call to XInviteGetAcceptedInfo(), since it was consuming information
            required by applications.

            Fixed NetConnStatus() 'serv' selector to return the service ID of the service in
            question, regardless of whether a buffer was passed to store the full service info
            structure.  This restores functionality that is relied upon by ProtoPing for the
            server pinging, and fixes it as a result.

        ProtoMangle
            Updated to work for any user index, instead of being hardcoded to work only for
            users signed into index zero.

            Changed default session flags to include XSESSION_CREATE_JOIN_VIA_PRESENCE_DISABLED
            and XSESSION_CREATE_JOIN_IN_PROGRESS_DISABLED.

            Added ProtoMangleControl() 'sflg' selector to allow override of default session
            flags for subsequently invoked sessions.  Note that XSESSION_CREATE_USES_ARBITRATION
            and XSESSION_CREATE_HOST should not be included in these flags - they are added
            as needed based on whether the session is ranked or not, and whether the client
            is the host or not, respectively.
                

DirtySock SDK 3.8.1.0 - August 16, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 QFE 1838.1

    NOTE: New to this release is Xenon Session API ranked matchup support.  See the
    sample\common\tester2\source\modules\game.c source file for sample code.  Note that
    The 3.8.1.0 version of EAFNSDK must be used in conjunction with the 3.8.1.0 version
    of DirtySock for this support to work as designed.

Changes/Bugfixes in this release:

    Contrib (PS2)
        DirtyDnas
            Added pre-built elfs for SCEE, SCEK, and SCEI.

    Contrib (Xenon)
        ConnApi
            Added ConnApiStatus2() and ConnApiControl() 'nonc' selectors, used for passing
            the nonce (number used once) required by Xenon ranked matchups.

    DirtySock (All)
        LobbyApi
            Added LobbyApiPlayT.strPlatParams field (16 bytes), used for custom platform-
            specific parameter passing.
            
        LobbyApiUtil
            Added extraction of new PLATPARAMS field in LobbyApiExtractPlayRecord().

    DirtySock (Xenon)
        ProtoMangle
            Added ProtoMangleStatus() and ProtoMangleControl() 'nonc' selectors, used
            for passing the nonce (number used once) required by Xenon ranked matchups.


DirtySock SDK 3.8.0.0 - August 11, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 QFE 1838.0

    NOTE: Starting with the next release, future Xenon releases will be built against the
    August 1838.1 Xenon SDK.

Changes/Bugfixes in this release:

    Contrib (Xenon)
        ConnApiXenon
            Added ConnApiControl() selectors 'cbfp' and 'cbup' to set callback function
            and user data pointers.  Also added 'stat' selector to write statistics using
            the XSessionWriteStats() API, which is required for arbitrated (ranked) matches.
            
            Added async session end/deletion on ConnApiDisconnect().  Because of the async
            nature of this operation, after ConnApiDisconnect() is called, ConnApiDestroy()
            may not be called until the CONNAPI_CBTYPE_SESSEVENT callback event is thrown.
            In addition, ConnApiDestroy() has been changed to only allow destruction in the
            IDLE state.  This change makes it so ConnApiDisconnect() will properly shut down
            and dispose of the Microsoft session, allowing multiple sessions to be executed
            back to back without error.

    DirtySock (PSP)
        DirtyNetPSPAdhoc
            Fixed a problem where the wlan switch could be flipped on and off quickly,
            causing the Sony libraries to signal a "timeout" condition when, in
            actuality, it was still scanning.  This fix only sets a timeout error as
            '-err' if we're not scanning at the time.

    DirtySock (Unix)
        DirtyUnix
            Fixed a bug in unix SocketImport() where the socket list wasn't being searched
            correctly.

    DirtySock (Xbox)
        BuddyApi
            Increased number of pumps to Xonline, to account for rare case where title name
            does not return from XDK.

    DirtySock (Xenon)
        DirtyErrXenon
            Added new errors for August XDK.  Made error table only compile in for August
            or later XDKs so that the new error defines won't cause DirtySock to not build
            against previous XDKs.

        NetConnXenon
            Added code to acquire info for multiple users, instead of just user index zero.
            Also extended NetConnStatus() selectors 'gtag', 'locl', 'xnfo', and 'xuid' to
            allow addition of zero to three (eg, 'gtag'+0, 'gtag'+1, 'gtag'+2, 'gtag'+3) to
            return info for users not logged into any index.
            
        ProtoMangle
            Cleanup, changed to use async operations, work in progress on ranked matchup
            using XSessionArbitration API.
            
            Fixed 'stop' to start an async XSessionEnd() if a session is in progress,
            followed by an async XSessionDelete().  If no session is in progress, only the
            Delete() takes place.  This properly cleans up the Microsoft session, allowing
            multiple sessions to be executed without error.
            

DirtySock SDK 3.7.4.1 (patch) - August 3, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640

Changes/Bugfixes in this release:

    Contrib (Xbox)
        XboxIsp    
            Handle the situation where NetConnDisconnect() is called after the network
            is already shut down.

    DirtySock (Xbox)
        DirtyNetWin
            Handle the situation where NetConnDisconnect() is called after the network
            is already shut down.

        
DirtySock SDK 3.7.4 - August 2, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640
    
    NOTE: This is the last SDK release which will be built against the 
    June 2005 1640 Xenon SDK.  Future releases will be built against the
    August 1838 Xenon SDK.

Changes/Bugfixes in this release:

    DirtySock (All)
        LobbyApi        
            Added reset of update time at end of _LobbyApiUpdateInit.  This fixes a bug 
            where an internal timer was not getting reset between calls to 
            LobbyApiConnect, which caused corruption of a Lobby timeout value.
            
    DirtySock (PSEE)
        DirtyNetPS2EE   
            Fixed socket descriptor leak caused by calling SocketImport().
    
    DirtySock (PC)
        DirtyNetWin
            Fixed socket descriptor leak caused by calling SocketImport().
            
    DirtySock (Unix)
        DirtyUnix
            Implemented SocketImport() and SocketRelease().
            
    DirtySock (PS2)
        ProtoAries-e
        Rpc-e        
            Fixed some high flowrate desync issues reported by EAC Juice team.  These problems
            would manifest when sending large amounts of data using Aries.

    DirtySock (Xenon)
        DirtyErrXenon    
            DirtyErrName() was not correctly finding an error code mapping because 
            the error table contains a code of 0 which it was using to terminate 
            the list.  A change was made to ensure the entire list is searched 
            rather than just the first 6 (6th entry contained a code of 0).


DirtySock SDK 3.7.3.1  (patch)- July 28, 2005

    This SDK (PATCH) release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640

Changes/Bugfixes in this release:
 
    Contrib (PS2)
        PS2Isp
            Fixed DNAS Region tables to prevent crash on new DNAS Region of "Mexico".

    Contrib (Xbox)
        XboxIsp    
            Fixed bug where cable pull while connecting would sometime cause crash when it tried
            to lauch Dashboard (trouble shooter). This was because Logon task was still active. 
            Fix was to call Disconnect prior to cleanup. 
 

DirtySock SDK 3.7.3.0 - July 26, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640

Changes/Bugfixes in this release:

    Contrib (Xbox)
        XboxIsp
           Handle the -gat error that occurs if just the XBL Gateway goes down. It 
           is now mapped to a "No Service" alert. Prior to this, -gat was incorrectly 
           mapped to a "Load User" error.
 
    DirtySock (All)
        BuddyApi
            Fixed bug where buddy list was not updated if user simply transitioned 
            to CHAT->PASSive-->CHAT. This meant buddy and game invites received in  such
            PASSive mode were lost. We now refresh list (roster) on transition from 
            PASSive or GAME to CHAT.
            
        LobbyApi
            Modified 'onln' command to take OFFLINE parameter to allow it to lookup the user in 
            the DB if the requested user is not online.  
            This is an optimization to prevent having to make an 'onln' call followed by 
            'user' if the requested user is not online.
            Also prevent a 'user' call from being made if the client is talking to an 
            enhanced server that supports full account lookup via a 'onln' command.

            Added support for private game slots.  The number of slots specified in the PRIV parameter
            of a 'gcre' call will be reserved as private.  In order for a client to join a 
            private slot, they must include PRIV=1 in their 'gjoi' call.  It is up to the 
            client to determine whether a public or private join should be performed based 
            on how they found out about the game (eg. via search or via invite).  
            'gqwk' calls will not join users to games unless the games have available public slots.
    
            Fixed LOBBYAPI_UserLevelValidateRange macro to validate a user level between 1 and 99.  
            It was previously checking for 0-999 (last year's level range).

        NetGameUtil
            Upped address field from 64 to 128 bytes to avoid overrun by ConnApi.

    DirtySock (Xbox)
        BuddyApi
           Fixed issue where SameTitleID check was always overridden, possibly, 
           leaving invites from same title from offline users to show as not 
           from same title.


DirtySock SDK 3.7.2.1 - July 20, 2005  (Patch Release)

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640

Changes/Bugfixes in this release:

    DirtySock (All)
        BuddyApi
            Fix problem where we allowed more than 50 blocked buddies 
            when the user selected "block buddy" inside an invite.

                        
DirtySock SDK 3.7.2.0 - July 19, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640

Changes/Bugfixes in this release:

    DirtySock (All)
        BuddyApi
            Added support for the Joinable attribute on PS2 as well.
            
            Work-around an XBL server issue of clobbering game invite sent if a presence update was 
            received. This typically happens when VOIP state changes. So, we set a flag to 
            server (NXBL) to NOT send presence to XBL if just voip state changes.

            Added API for XBOX to override check on same title id: HLBApiOverrideXblIsSameProductCheck. 
            This is for titles whose PAL and NTSC have same XBox TitleID, but cannot play each other. 
            IsSameProduct will be false if this override is called, and PROD strings on 
            initialize are set to be different.

        LobbyLogin
            Copy INIT parameter from LOBBYLOGIN_CONTEXT_LOGIN context TagField parameters into the params 
            sent for a 'pers' transaction in the LOBBYLOGIN_CONTEXT_SELPERS context to provide a means 
            to get this parameter set when using the "one persona" mechanism that bypassed the explicit
            LobbyLoginSubmitCB() call for the LOBBYLOGIN_CONTEXT_SELPERS context.


DirtySock SDK 3.7.1.1 - July 15, 2005

    This is an interim release to fix two critical bugs introduced in the last SDK release:
    
            Fixed a ConnApi bug with VoIP connections in >2p situations.
    
            Fixed a padding issue that broke PS2, introduced in the last SDK release.        

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640

    NOTE: With the switch to the June 2005 QFE for Xenon, the binaries included for Xenon are
    suitable for Beta development kits.  If you are using DirtySock with Alpha kits, make sure
    to rebuild DirtySock against the May XDK before use.  DirtySock builds successfully against
    the May, June, and July XDKs.

    NOTE: The function name ConnApiDisconnect() has been deprecated in favor of ConnApiStop().
    A macro has been added to map the new name to the old name, to preserve link compatibility
    with previous versions of the SDK.  The macro will be removed and the function renamed in
    a future release of the SDK.

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi (non-Xbox and non-Xenon)
            Allow host removal if in peer-web mode.

            Added selectors to set the user callback function pointer and user callback data
            pointer ('cbfp' and 'cbup' respectively).

            Fixed a bug with VoIP connections in >2p situations that was introduced in the
            last SDK release.
            
    DirtySock
        LobbyApiUtil
            Include users-in-game total in +rom updates so client will have an accurate count
            on initial login.  Previously this total was only included in +pop updates and so
            the users-in-game count was always zero when a new user logged on until a +pop update
            was sent for the corresponding room.

        LobbyRank
            Fixed a bug in LobbyRanklistGetDisp()

        NetGameLink
            Fixed a padding issue that broke PS2, introduced in the last SDK release.        

        NetGameUtil
            Added 'hprt' and 'pprt' selectors to NetGameUtilStatus(), to return the host and
            peer port respectively.
                        

DirtySock SDK 3.7.1.0 - July 12, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.2
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640

    NOTE: With the switch to the June 2005 QFE for Xenon, the binaries included for Xenon are
    suitable for Beta development kits.  If you are using DirtySock with Alpha kits, make sure
    to rebuild DirtySock against the May XDK before use.  DirtySock builds successfully against
    the May, June, and July XDKs.

    NOTE: The function name ConnApiDisconnect() has been deprecated in favor of ConnApiStop().
    A macro has been added to map the new name to the old name, to preserve link compatibility
    with previous versions of the SDK.  The macro will be removed and the function renamed in
    a future release of the SDK.

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added ConnApiOnline2(), which includes a parameter to set the game resource
            string.  This is required because the game resource string is not available from
            the lobby server until the client has logged on.  ConnApiOnline2() replaces
            ConnApiOnline(), which has been deprecated.

            Changed session generation to use a combination of internal and external addresses
            from both clients instead of relying on the dirtyaddr from each client.  This
            change does not apply to Xbox or Xenon versions.

    Contrib (PS2)
        VoIP
            When changing the send/recv masks with VoipMicrophone() or VoipSpeaker(), the new
            mask values would not be immediately available, as those are DMAd from the IOP
            to the EE asynchronously.  Because of this, checking the send/recv mask values
            immediately after updating them would temporarily show he old values.
            VoipMicrophone() and VoipSpeaker() have been fixed to set the values locally so the
            updated values are immediately available.

    DirtySock (All)
        CommUDP
            Added lost packet statistics support.

            Return COMM_PORTBOUND instead of COMM_UNEXPECTED if local bind failed in
            CommUDPListen().  This allows upper-layer code to detect this condition specifically,
            which is useful on PC where some other service might have bound the port,
            
        LobbyApi
            Fixed to handle a redirector disconnection when the client does not have
            encryption enabled.  This type of event happens when trying to connect to a secure-
            only server with a non-secure (not prefixed by an asterisk) server name.  Previous
            to this fix, the client would have to wait for the connection timeout to elapse.

            Added build date to sdkVersion tagfield.

        LobbyApiAsync
            Remove usersets from the LobbyApiRefT->aUserSets array when a +who message is
            received indicating that the user is no longer a member of that set.  Previously
            usersets would only ever be removed from this list if the set was deleted on the
            server and the list would eventually fill up.

        LobbyApiUtil
            Removed code that generated an external+internal address for the MachineAddr field
            of the LobbyApiUserT structure, as it broke the PingManager ping response detection
            code.

        LobbyPingManager
            Compiled in pingmanager warning for debug builds when a ping response does not
            match any cache entry.

        LobbyLogin
            Changed to allow autologin to be restarted from inside the auto callback.

        NetGameLink
            Added lost packet statistics support.

        NetGameUtil
            Return COMM error code if a Listen() or Connect() call fails in NetGameUtilConnect().

    DirtySock (PC)
        DirtyNetWin
            Added WSAEINVAL->SOCKERR_INVALID error code mapping.

    DirtySock (PSP)
        DirtyNetPspInet
            The resolver created when performing a SocketLookup() was never being freed, and
            therefore every SocketLookup() would result in a Inet pool memory leak.  This is
            fixed.
            

DirtySock SDK 3.7.0.0 - July 5, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2005 QFE 1640

    NOTE: With the switch to the June 2005 QFE for Xenon, the binaries included for Xenon are
    suitable for Beta development kits.  If you are using DirtySock with Alpha kits, make sure
    to rebuild DirtySock against the May XDK before use.  DirtySock builds successfully against
    the May, June, and July XDKs.

    NOTE: The function name ConnApiDisconnect() has been deprecated in favor of ConnApiStop().
    A macro has been added to map the new name to the old name, to preserve link compatibility
    with previous versions of the SDK.  The macro will be removed and the function renamed in
    a future release of the SDK.

Changes/Bugfixes in this release:

    DirtySock (All)
        LobbyApi
            Added parsing of new room info - number of users in a room that are in game - to
            +pop, +usr, and +who async server messages.

        LobbyReg
            Fixed transition map to allow transition from CONTEXT_TOS->CONTEXT_LOGIN.  This
            change fixes a change made in the previous release, which was done incorrectly.

        LockerApi
            Changed sort by attribute to mask off (and therefore not consider) platform bits.

    DirtySock (Xenon)
        ProtoMangle
            Exposed functions to encode/decode a Xenon session.
                    
            Fixed async calls that take pointers to variables to use static variables instead
            of stack variables so they don't randomly fail.


DirtySock SDK 3.6.3.0 - June 28, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v2.8.1 (EENet)
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   May 2005 QFE 1538

New in this release:

    DirtySock (EENet)
        DirtySock now includes a version built against Sony's EENet library.  It does not yet
        support async read threads, and does not handle network startup or shutdown, but all
        other basic functionality is supported.

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added shutdown of VoIP in ConnApiDestroy(), if ConnApi created VoIP.

            Added 'mngl' selector to ConnApiControl() to allow disable of demangler (enabled
            by default).
                        
            Added flags to ConnApiStart(), and added ConnApiHost2() and ConnApiConnect2 for
            Xenon support.

            Added configurable demangler timeout.

    Contrib (PS2)
        DirtyDnas
            Added new Mexico messages.  To generate error strings for Mexico, set the region
            to DIRTYDNAS_REGION_MEXICO.
            
            Added new translated strings for Hungarian and Polish.

    Contrib (Xenon)
        ConnApi            
            Working (minus a known XDK bug) arbitrated/ranked game support.

    DirtySock (All)
        BuddyApi
            Default Same Product presence to space as empty string will cause PROD= to
            vanish. This in turn causes HLBBudIsSameProduct() to fail, when it should not.

        LobbyLib
            Fixed LobbyZone() to convert times to time_t before differencing them, to avoid
            possible problems with wrap-around errors if the local and GMT time crossed a
            month boundary.

        LobbyLocalize
            Localization now claims % goes in back for Spanish.

            Fixed to show negative currency as "-$10.00" instead of "$-10.00".

        LobbyRank
            Fixed memory leak - localizer was started up but never destroyed.

        LobbyReg
            Added 'tosa' handling.

            Allow CONTEXT_TOS->CONTEXT_LOGIN context change.

        ProtoMangle
            Added timeout support, defaulting to a sixty-second timeout.

    DirtySock (IOP)
        Rpc-i
            Added throttle on 'waiting for overlap' debug printing, to prevent spamming from
            killing an attached debugger.

    DirtySock (PSP)
        LobbyLib
            Implemented LobbyZone() for PSP.

    DirtySock (Xenon)
        DirtyErrXenon
            Added new code to match error codes based on the lower sixteen bits if the error
            code isn't found by the first pass.
            
            Added some new error codes.
            
            Added additional printout of numeric error code in addition to symbolic error name.
        
        LobbyLogin
            Set remap table for Xenon as well as for Xbox.  This allows secure server login
            without remapping of secure peer-peer addresses.


DirtySock SDK 3.6.2.0 - June 21, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   May 2005 QFE 1538

    NOTE: The function name ConnApiDisconnect() has been deprecated in favor of ConnApiStop().
    A macro has been added to map the new name to the old name, to preserve link compatibility
    with previous versions of the SDK.  The macro will be removed and the function renamed in
    a future release of the SDK.

Changes/Bugfixes in this release:

    Contrib (PS2)
        PS2Isp
            Changed to clear account name and password at the same time network configuration
            is cleared.  This fixes a problem where a memory card with a valid EA Login is
            inerted, then removed and replaced with a card with no EA Login, but the account
            name and password information persist incorrectly.

            Added region support to Shared Login reading.  Shared Login filenames are different
            depending on region, so special support is required to be able to read the filename
            based on the region (SCEA, SCEE, SCEI, SCEK).  Previous versions implicitly defaulted
            to SCEA.

    DirtySock (All)
        HLBudApi
            Improved comments on Prod id in HLBApiInitialize.

        LobbyLocalize
            Fix a bug found by central online - midnight and noon were displaying as 0:00 PM
            and 0:00 AM in 12-hour mode.

        TourneyApi
            TourneyApiReqRaw changed from using TagFieldDupl() to TagFieldMerge() to avoid
            wiping out tagfield entries previously set in _TourneyApiReqSetup().

    DirtySock (PSP)
        DirtyNetPspInet
            Changed to compile sceNetApDialogDummy functionality out of the final library
            build.  This functionality is only for use in debugging and tools, not shipping
            titles, and not compiling it in means a title can avoid loading
            pspnet_ap_dialog_dummy.prx in final builds, which saves a small (~4k) amount of
            memory.

    DirtySock (Xbox)
        NetConnXbox
            If a connection can't be established to the security gateway, set a connection
            error to indicate the failure.  This type of connection failure tends to occur
            when the Xbox is behind an unapproved router.


DirtySock SDK 3.6.1.0 - June 14, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   May 2005 QFE 1538

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added new function ConnApiStart(), implemented in all versions but required to be
            called only on Xenon.
            
            Added new macro wrapper to map the new function name ConnApiStart() to the
            deprecated name ConnApiDisconnect().

            Added ConnApiControl() selectors 'mwid', 'minp', and 'mout'.  These pass through
            to NetGameUtilControl() selectors of the same name.  Note that these parameters
            must be set before a connection is established for it to be effective.

            Added preliminary invite support through the control selectors 'itxt' (set invite
            text) and 'invt' (issue invite).

    Contrib (Xbox)
        VoIP
            Added some very basic support for Voice Recognition.  Most of the work required
            must be done outside of VoIP, but the new functionality added will allow a basic
            level of compatibility with an outside VR module.

    Contrib (Xenon)
        ConnApi
            Added session creation callback.  This callback is triggered when the Live session
            has been successfully created and the session information is available.

    DirtySock (All)
        HLBudApi
            Better handling of the "pre-connected" temp buddy list/cache as per Madden. Also
            fixed bug of leaving api suspended (PASSive) state if a resume happened while
            disconnected.

            Guard against a null api ref on a Disconnect call.

            Added a MAX to temp buddy type enum.
        
        LockerApi
            Upped timeout to 60 seconds to give a wider safety margin when dealing with
            poor quality links.
            
            Added extra debugging of read/write operations, disabled by default.

            Fixed a bug where the code that adds a file to the directory after a successful
            doesn't create a valid id if the file sequence has a gap from a deleted file.
            To get around this problem, the file IDs are rekeyed after deleting a file or
            sorting a directory.
        
        ProtoHttp
            Added ProtoHttpStatus() selector to return size of data in send queue.

    DirtySock (IOP)
        ProtoHttp-i
            Throttle send based on amount of data in socket send queue.  This is required
            because Sony's PPP driver tends to choke if you stuff too much data into it,
            and never recovers.
            
    DirtySock (Xenon)
        NetConnXenon
            Added listen event for live connectivity events.
            
        ProtoMangle
            Some consolidation, cleanup, added ProtoMangleControl() 'strt' and 'stop'
            selectors to start/stop the session.

            Added preliminary invite support.


DirtySock SDK 3.6.0.1 - June 7, 2005 (Patch Release)

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   May 2005 QFE 1538

    Contrib (PS2)
        DirtyDnas
            Added new Sony DNAS error code (-110) as sceDNAS2_SS_SERVER_BUSY2.  This
            was added to the Sony DNAS error codes on May 26, 2005 as part of the v5.2
            Sony DNAS update.  All games published after June 13, 2005 are required to
            support this new error code.
            
            Various other minor text (language) fixes for some of the strings, based on
            updates to the v5.2 Sony DNAS document, as well as new translations from
            the localization team.
            
    DirtySock (All)
        BuddyApi
            Fixed a crash occurring on a "full" error - inviting a buddy when you already
            had 100 buddies, the maximum number.  The buddy invite's callback would be 
            (incorrectly) called during the next buddy operation, possibly using a callback
            which didn't exist anymore and causing a crash.


DirtySock SDK 3.6.0 - June 6, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   May 2005 QFE 1538


Changes/Bugfixes in this release:

    Contrib (PS2)
        PS2Isp
            Fixed a bug checking memory card after briefly going into select context after an
            alert, exposed by new unformatted memory card handling.

            Attempt to open view.ico in an attempt to detect yet more "corruption" cases.

    DirtySock (All)
        CryptStp1
            Added CryptStp1Enabled() function to query whether encryption is enabled for a
            session.

        LockerApi
            Added platform attribute flags, and added defaulting of the attribute platform
            flag to the platform the library is compiled for, if the platform flags are zero
            (undefined).
            
            Fixed Put directory snooping to use name, type, game, and platform identifier
            to match for file uniqueness, instead of just name.

            Changed to (optionally) allow full URL as input "server" in LockerApiCreate().
            Passing just the server name is still supported, but will probably be deprecated
            in the future.

        ProtoSSL
            Changed ProtoSSLStat() with the 'stat' selector to return an error if ProtoSSL
            is in a failure state.  This means that higher-layer protocols checking 'stat'
            for connection completion will fail immediately if ProtoSSL goes to a failure
            state (for example if a DNS resolve fails), rather than simply waiting until
            their timeout expires.

        TourneyApi
            Added TourneyApiGetLatestNews() and TourneyApiGetNewsCount() helper functions.

        WebOffer
            Added kpop title string support to WebOfferPromoT handling.

    DirtySock (IOP)
        ProtoAries-i
            Fixed a crash bug that could show up when a PPPoE connection was severed, that
            resulted in a NULL ProtoSSL ref being passed to ProtoSSLDestroy().

    DirtySock (Xbox)
        BuddyApi
            Fixed xbox race condition where simultaneous invites caused one bud to show
            Buddy and wannabe (Req Received) flags.
        
        XbFriends
            Added a safety counter so it does not hang indefinitely on disconnect if there
            is a cable pull.


DirtySock SDK 3.5.4 - May 31, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   May 2005 QFE 1538


Changes/Bugfixes in this release:

    Contrib (PS2)
        PS2Isp
            Changed to handle unformatted memory cards like formatted memory cards.  This means
            ps2isp will detect their insertion and removal.

            Changed PS2IspClearAlert() to not set the memory card present flag.  This means
            that a memory card removed during the alert will cause the Update loop to pick up
            that the memory card has been removed and execute that flow.
    
    Contrib (Xenon)
        VoIP
            First working Xenon version using secure addresses.

    DirtySock (All)
        BuddyApi
            Fix race cond. where if delete add/same bud get RADM/RNOT race. Also, BUDDY_FLAG_PEND
            was NOT being cleared.

        DirtyLib
            Removed definitions of ANSI memory function prototypes as they conflict with some
            platform implementations.

        GameCustom
        LobbyCustom
            Koth structure definition changes.

        LobbyLogin
            Fixed to set LOC info correctly for Xenon.  The server is expecting a
            TagFieldSetToken() and LobbyLogin was using TagFieldSetNumber(), which caused
            the locality to be extracted incorrectly on the server.

        LobbyRank
            Changed symbol table TagField encoding to be more efficient.  The server uses
            the internally reported client version to determine if the more efficient encoding
            should be used so as to be backwards compatible with older clients.

        LockerApi
            Bumped up URL buffers in LockerApiPutFile() and LockerApiUpdateFileInfo() to allow
            for longer URLs.
            
            Fixed LockerApiAbort() to reset the transfer state.  This prevents problems with
            successive operations after an abort.

        ProtoHttp
            Enlarged stack buffer request is formatted in to allow for longer URLs.

        StatbookApi
            Converted to use a symbol table like the ranker API to reduce the size of a
            'sviw' response.  The server uses the internally reported client version to
            determine if the more efficient encoding should be used so as to be backwards
            compatible with older clients.

        TourneyCustom
            Bumped up maximum news size from 128 to 256 bytes to accomodate UTF-8 encoded
            text. 

    DirtySock (Xenon)
        ProtoMangle
            Worked around Xenon network stack peculiarities.  Resolving an IN_ADDR from an
            XNADDR on both sides of a peer connection causes the security association on one
            side of the connection to fail.  To work around this "design feature" we only
            resolve an XNADDR on the client side of ProtoMangle.  Note that this requires
            *all* protocols to have the client send to the host, and the host to get the
            client's address from the incoming connection packets, not from ProtoMangle.
                    

DirtySock SDK 3.5.3 - May 24, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   May 2005 QFE 1538


Changes/Bugfixes in this release:

    DirtySock (All)
        LockerApi
            Split concept of file size into "net" size and "local" size.  This is useful
            because the size a file consumes on local storage is most likely different from
            the space it takes up on the network in a console game, due to ancillary files
            like icon files that are not uploaded.  In addition, directory size is now
            calculated in times of local size, and file sorting by size is now also done
            based on local size.

    DirtySock (Xbox)
        BuddyApi
            If XDK does not have title on a refresh, get it from the buddy.  An NCAA beta
            bug fix.

            In refresh title, revert change to use local title id for Xbox.  This caused a
            bug that if buddy is offline, you will see this game title and not buddy's title.

        LobbyCommonDefs
            Added definition of "game" storage key for accessing user records.

        LobbyCustom
            Added definition of KothInfoT - a stats structure for the King of the Hill
            leaderboard.

        LobbyLogin
            Made alert pointer parameter to LobbyLoginGetAlertEnum() const.

        LockerApi
            Fixed a bug where the delete operation was using the file ID instead of the file
            index to remove the file from the directory.

        HLBudApi
            NCAA fixes to allow for Xbox Session buddies over the "temp bud" limit of 10.
            Also fixed bug where if got a message from real bud, the limit of temp buds went
            down to 9.
            

DirtySock SDK 3.5.2 - May 17, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   May 2005 QFE 1538

    NOTE: ConnApi connection flags names and values have changed in this release.  The old
    defines of CONNAPI_CONNFLAG_GAMEONLY and CONNAPI_CONNFLAG_VOIPONLY have been deprecated,
    and will be removed in a future release of the SDK.  They have been replaced by
    CONNAPI_CONNFLAG_GAMECONN and CONNAPI_CONNFLAG_VOIPCONN, respectively.  In addition,
    the values of these flags have changed.  If you have code that relies on the values of
    these flags, please make sure that code is updated to deal with the new values.

    NOTE: This release includes the first semi-working version of VoIP for Xenon, using the
    Xenon XHV API (which is unfortunately somewhat different from the Xbox version).  Note that
    it is required now that the application starting up VoIP initialize XAudio before calling
    VoipStartup().  For example:

        #include <xaudio.h>
    
        XAUDIOENGINEINIT init = { 0 };
        init.pEffectTable             = &XAudioDefaultEffectTable;
        init.MaxVoiceChannelCount     = 2;
        init.pMasteringVoiceInit      = NULL;

        hResult = XAudioInitialize(&init);


Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            If ConnApiDestroy() is called without ever calling ConnApiOnline(), the
            pGameUtil and pProtoMangle refs are NULL.  The function has been fixed to handle
            this condition.

            Changed default idle timeout to 15 seconds and added a separate 10 second
            connection timeout.

            Changed game connection type flag defines to make more sense, and added game
            connection type flags to ConnApiClientT structure.
            
            Removed inline version of strnzcpy in favor of the platform version.

        DirtyStrings
            Updated EA Connect alert text.

        VoIP
            Changed to force connection timeout to 10 seconds.

    Contrib (PS2)
        PS2Isp
            Changed shared login filenames to use absolute paths.  This makes it so the file
            read operations work even if the current directory is left in a non-root
            location.
        
    Contrib (Xbox)
        VoIP
            Changes to allow Xenon compilation.

    Contrib (Xenon)
        ConnApi
            Major changes to bring up to spec with other versions.
            
            First working Xenon secure implementation using Xenon ProtoMangle.
        
        VoIP
            First compiling/linking version using Xenon API.  

    DirtySock (All)
        BuddyApi
        HLBudApi
            Updated API function prototypes to use "const char" where appropriate.

            Fixed bug where at times, was trying to alloc memory after a call to Suspend.
            Make sure Xbfriends is suspended too, so will not try to add to Roster.
        
        CommUDP
            Disconnect on WSAEHOSTUNREACH for Xenon as well as for Xbox.

        DirtyAddr
            Bumped up size of DirtyAddrT from 20 to 64 in order to accomodate extra info
            required for Xenon matchmaking.

        LobbyApi
            Added 'room' selector to LobbyApiInfoInt() to get current room ident.

            Reduced LobbyApi pingmanager cache size from 256 to 128 to offset memory gain
            from increasing DirtyAddrT size.

        LobbyApi
            Bumped up LobbyApiPlayT.strSess field from 64 to 128 characters to handle
            Xenon session info.

        LobbyCommonDefs
            Bumped up maddr length to 63.

        LobbyCustom
            Added buffer size for ingame status.

            Bumped up user set name size from 12 to 32 characters.

        LobbyFindUser
            Parse locality (LOC) tag from user record returned from lobby server in case when
            the user is offline.

        LobbyHasher
            Deleting an item out of the hash table during an iteration (HasherEnum) is now safe.

        LobbyLan
            Update advertisement when a player leaves, so the advertised count of players
            matches the actual player count.

        LockerApi
            Changed to operate internally based on fildId instead of file index.  This fixes
            a bug where sorting the files would result in subsequent file references being
            wrong.

            Switched to new locker URL.
        
            Switched to using platform's strnzcpy().

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Fixed a bug that showed up on Xenon with async read thread, where a socket event
            object could have been deleted and then accessed.  This was silently handled on
            PC and Xbox, but would throw a skippable assertion on Xenon.

    DirtySock (Xbox)
        NetConnXbox
            Integrated some silent logon fixes.
            
            Added NetConnStartup("-noxnetinit") option.  When specified, prevents XNetInit()
            from being called by NetConnStartup().

    DirtySock (Xenon)
        DirtyAddr
            Added code to support decoding of Xenon dirtyaddrs with XNADDRs appended to them.
            Only the XUID is decoded, as with Xbox.
            
        LobbyLogin
            Set XUID+XNADDR in MADDR field, which is distributed to the client as strMachineAddr.

        NetConnXenon
            Only return 'onln' if we've reached the IDLE state, to prevent user code from
            thinking we're online when in fact we're transitioning through startup.
            
            Protect against pUserInfo buffer being NULL when getting info with the 'xnfo'
            selector of NetConnStatus().

            Fixed to dispose of user info pointer if the call to get it failed, so we don't
            end up with an uninitialized user info buffer.
            
            Fixed some documentation and debug print errors.

        ProtoMangle
            Implemented Xenon-specific version of ProtoMangle using XSession API.


DirtySock SDK 3.5.1 - May 10, 2005

    NOTE: Starting with this release, DirtySock Xenon requires a separately distributed
    Microsoft library to build and be linked against.  This library is Microsoft's
    XOnline "Partners" library.  It can be found on the DirtySock releases page:
    http://dirtysock.tiburon.com/releases/External/Microsoft.  The archive contains
    instructions on how to install the header file and two libraries that are included.

    *** DirtySock will not compile or link into your game without this library installed ***

    In addition DirtySock as of this release also requires the May XDK to be
    installed.  Unfortunately, Microsoft has again changed portions of their APIs and
    the changes to DirtySock are not backwards compatible.

    NOTE: Xenon projects have been altered to temporarily disable RTC code generation,
    as this has been shown to cause difficult-to-debug crashes.

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            If ConnApiDestroy() is called without ever calling ConnApiOnline(), the
            pGameUtil and pProtoMangle refs are NULL.  The function has been fixed to handle
            this condition.

    Contrib (PS2)
        DirtyStrings
            Added alert text for new alerts BADSLOGIN and BADSLOGIN_MTAP.
        
        PS2Isp
            Added icon.sys check to front end of slogin read.  If the icon.sys file is missing,
            the return code will indicate that the file is corrupt.

            Set number of network configurations to zero if an error occurred and the result
            was negative.

            Added new alerts BADSLOGIN and BADSLOGIN_MTAP, used when a corrupt shared login
            file is detected.

    DirtySock (All)
        GameCustom
            Reconfigured trophy assignment to conform to the 2006 trophies GDD.
            
        LobbyApi
            Disconnect when a 'down' return code is returned by the redirector, so there
            isn't a followup disconnect event after the down event.

        LobbyCommondefs
            Added host migration flag.

            Also fixed bug causing server crash when decoding a user set on the slave (caused
            by changes previously made to TagFieldGetStructure).

        LobbyLan
            Fixed some bugs relating to non-host players leaving the game, when dealing with
            more than two players.

        LobbyLogin
            Fixes for Autologin callback support.

            Fixed LobbyLoginGetAlertEnum() to return the correct result for the SERVERDOWN
            alert.  Since this alert is dynamically generated, it does not fall inside of
            the normal alert list, and therefore has to be handled specially.

        LobbyTagField
            Added TagFieldGetStructureOffsets() function.

            Removed TagFieldDecodeStructure().  Replaced by TagFieldGetStructure()/
            TagFieldGetStructureOffsets().

        ProtoMangle
            Added parms to ProtoMangleStatus(), changed it to ProtoMangleStatus2().  Added
            a macro wrapper to map calls to ProtoMangleStatus() to the new function name.

    DirtySock (PSP)
        LobbyLocalize
            Added to makefile.

    DirtySock (Xenon)
        LobbyLogin
            Changed to support passing user information to server on Xenon login.

        NetConnXenon
            Added new code to use Xenon Partners library to get logged-in user info.
            
        ProtoMangle
            New version for Xenon (work in progress).

        ProtoPing
            New version for Xenon.  Currently only supports server pings, not client pings.        


DirtySock SDK 3.5.0 - May 3, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   April 2005 QFE 1434

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Minor change to ConnApiControl('dsrv') to make it use pointer instead of int.

            Moved ProtoMangle module creation from ConnApiCreate() to ConnApiOnline().  This
            gives user code a chance to change the default demangler server before the module
            is created.

            Changed mangled port variable from signed to unsigned.  This fixes a bug that
            caused the connection attempt after a successful game connection demangling
            session to fail.
        
        DirtyGif
            Updated and reformatted documentation.
            
            Added bVflip param to DirtyGifDecodeImage().
    
            Added uAlpha param to DirtyGifDecodePalette().

            Added uHeight param to DirtyGifDecodeImage(), to specify the output buffer
            height.  Made it so if uWidth (was iStep) or uHeight are less than the image
            dimensions, the decoder will not write outside of those dimensions.

        HLBudApi
            Deprecated product ID as an input.

    Contrib (PS2)
        PS2Isp
            Fixed memcard removed alert to appear instead of shared login load error alert
            when memory card removed during shared login load.

    DirtySock (All)
        LobbyApi
            Added INGAME=1 to 'sele' call in LobbyApiSuspend() and a 'sele' setting INGAME=0
            to LobbyApiResume().  This means that LobbyApiSuspend()/LobbyApiResume() now demark
            the ingame/inlobby states, and need to be called at the appropriate time.

        WebOffer
            Added SKU to WebOfferSetupT.
            

DirtySock SDK 3.4.3 - April 26, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   April 2005 QFE 1434

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added optional peer-web support for game connnections (note that VoIP connections
            are already always peer-web).  To enable, call ConnApiControl(pConnApi, 'peer', 1, 0, NULL).
            This status defaults to off (client/server), so no changes are required from previous
            versions for client/server games or games that only support two peers.

            Changed ConnApiRemoveClient() to perform the removal immediately if the function
            is not called from a ConnApi event callback.  If the function is called from a
            ConnApi callback, the removal is deferred until the next call to NetConnIdle(),
            as before.  This behavior is now documented in the function header.
            
            Changed ConnApiDisconnect() to reset the client list after destroying any and
            all open connections.
        
        DirtyStrings
            Added text for new LobbyLogin Invalid Password alert.

    DirtySock (All)
        CryptArc4
            Optimized Cryptarc4Apply by changing variables from chars to ints.

        CryptMd5
            Improved performance by removing memset and replacing with discrete zeroing code
            that knows about the buffer organization.  Also added high-speed output optimization
            for linux (its cross platform, but the code bloat made it linux only).

        LobbyApi
            Added snoop of partition name from server skey response.

            Added LobbyApiInfoPtr(pRef, 'part') selector to return domain partition.  Valid
            after successful connection to server.

        LobbyCustom
            Added iLevel stat for reporting purposes.

        LobbyLan
            Added ability to set max packet size for peer connections.

            Added ability to get the number of packets currently queued in the send queue
            for any given peer connection.

            Fixed LobbyLanStartGame() to shut down clients in reverse order, to make sure
            they all get notification of STRTGAME event when there are more than two
            clients.

        LobbyLang
            Macro cleanup for picky compilers.

        LobbyLogin
            Added LobbyLogin Invalid Password alert.

        LobbyTagField
            Fixed TagFieldDelete so that space delimeted fields are supported.  Previous
            version would delete all fields after the target if they were space delimeted.

        LockerApi
            Fixed Get operation problem on PS2 where the download could terminate early with
            an erroneous LOCKERAPI_ERROR_SERVER error.
            
            Fixed a bug handling an error response from a LockerApiGetFile() operation.
    
        NetGameLink
            Added NetGameLinkControl('slen') selector, which returns the current number
            of packets in the send queue.
            
        HLBudApi
            Changed to refresh title from XDK if HLBud finds it empty. Try to solve the
            "invited you to play:" when user has gone "make offline" in voice chat in
            Dashboard.

        WebOffer
            Replaced strchr(blah, 0) with blah+strlen(blah) to avoid problems with PS2
            version of strchr.

    DirtySock (PSP)
        DirtyNetPsp
            Fixed a bug where mode might not be set correctly.
            
        DirtyNetPspAdhoc
            Fixed a bug when scanning for a specific group.  If that group was not found,
            the number of entries being returned was not zero.

    DirtySock (Xbox)
        BuddyApi
        HLBudApi
        XbFriends
            Made TitleId consistently unsigned int to match xbox title id.

    DirtySock (Xenon)
        DirtyAddr
            Minor cleanup of Xenon support.
            
            Added DirtyAddrGetLocalAddr().
        
        NetConnXenon
            Changed to build against the AprilXDK, which now includes an official
            implementation of XOnlineGetServiceInfo() and XONLINE_SERVICE_INFO structure
            definition.


DirtySock SDK 3.4.2 - April 19, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   March 2005 QFE 1332.3

New in this release:

    Contrib (All)
        DirtyGraph
            Stand-alone image conversion routines.  Intially includes GIF decoding only.

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Removed transition to IDLE state if there are no active connections, and changed
            state transition from ConnApiHost() to go to ST_HOSTING if only the host is in
            the client list.  This allows a ConnApi session to be started with only the host
            preset, and also allows a ConnApi session to continue to exist if everyone but
            the host is removed from the session.

            Changed to destroy connections immediately on shutdown, instead of trying to
            gracefully close.  This was causing problems at shutdown where connections could
            live past the life of the module and get leaked.

        LobbyGlue
            Set VoIP presence to HLB_VOIP_NONE at init, so the state tracking doesn't get
            confused if it wasn't initially in the NONE state.            

    DirtySock (All)
        CommUDP
            Added socket sharing on connect.  This allows a single client to make multiple
            Connect() calls (or combinations of Connect() and Listen() on the same port.
            This logic was already present for a listener; this change just adds that
            functionality to a connector.

            Added back in address restriction on reception of poke/init packets.  This
            prevents a situation from occurring where a connection to the wrong peer could
            be established, but still allows packets coming in from the wrong port due to
            port mangling to be found.  Note that the address restriction on the init packet
            only happens if the listener specified a peer address.

            Removed 272 bytes of unused variables from the CommUDP ref.

        HLBudApi
            When there are the maximum of 10 temp buddies, will select the oldest for
            deletion, instead of random temp buddy.

        LobbyApi
            Added code to synthesize machine address fields for opponents in
            LobbyApiExtractPlayRecord() if that field is not already provided by the server.

        LobbyApiUtil
            Changed TagFieldGetString() to TagFieldGetRaw() when extracting stat data from a
            +snp response to properly handle stat fiels with nested strings with spaces.
            Previously the GetString would truncate the stat field.

        LobbyCommonDefs
            Clean up UserLevel macros - protect values with an extra level of parens (as
            coding standards dictate).

        LobbyLan
            Added LobbyLanSetPlyrNote().

        LobbyRank
            Exposed STYLE and TYPE parameters (as defined in rank.cfg on the server).

        LobbyTagField
            Optimizations to TagFieldGetStructure() and TagFieldGetNumber().
            
            Fixed bug in SetRaw/GetRaw where spaces were always terminators (quoted spaces
            no longer are).

        NetResource
            Updated the way errors are detected in underlying ProtoHttp module.  Fixes an
            issue on the SDK list from 4/15/2005.

            Call ProtoHttpAbort() in the case of an error condition to cancel the pending
            transaction, since the message body included with the response is not needed.

        ProtoAdvt
            Fixed sequence number generation.
            
            Fixed snooping of adverts to recognize an advert with the same seqn, name, and
            kind but a different note as the same advert, and just update the note instead
            of adding a new advert.

        ProtoHttp
            Removed transition to ST_FAIL state on receipt of a client or server error code
            response in the ST_HEAD state.  This allows a client to download the error body
            included with the response.

        WebOffer
            Major web-offer update (v3) which includes binary resource support.  A record
            list can include "include" references which cause the resources to be downloaded.
            The WebOfferResource function is used to query the information.  New _WebOfferFind
            function replaced most of the discrete string searches that were scattered
            through the code.  This was a major rewrite and while it has gotten quite a bit
            of testing, if something seems to stop working, try reverting to the prior
            version as a check.
            
            Added WebOfferCreate2 to allow buffer to be passed in (avoids internal alloc).
            Also fixed buf in HTTP timing (was set to zero during an initialization case).
            Improved HTTP download performance by changing recv logic to use while during
            update to completely empty the input buffer.

    DirtySock (PS2)
        Switched from -O2 to -O for debug builds, to provide better debugging ability while
        still providing some basic level of optimization to keep performance from suffering
        too much.

    DirtySock (PSP)
        Switched from -O2 to -O for debug builds, to provide better debugging ability while
        still providing some basic level of optimization to keep performance from suffering
        too much.
        
        DirtyNetPsp
            Fixed it so mode is actually set when switching.  This fixes a problem when switching
            between adhoc and inet modes.

        DirtyNetPspAdhoc
            Fixed a bug that would occur if NetConnShutdown() was called after NetConnStartup()
            with no intervening NetConnConnect(), while in Adhoc mode.  This would result in
            the adhoc recv thread being left orphaned and cause all sorts of bad things to
            happen when NetConnStartup() was called again.

            Added SocketControl('addr') selector, which maps a specified psuedo-internet
            address to the physical MAC address it represents.  iData is the address to
            translate, and pData1 should point to an SceNetEtherAddr structure to be filled
            in.  Returns nonzero on success, zero on failure.
        

DirtySock SDK 3.4.1 - April 12, 2005

    NOTE: LobbyLan has been changed to return a value from the LobbyLanCallbackT
    callback function.  This functionality has been added to allow the host to
    optionally refuse a connection from a joining client.  Any user implemented
    callback functions must have their return type changed from 'void' to 'int',
    and must now handle the LOBBYLAN_CBTYPE_JOINREQ callback, returning either
    -1 to indicate join refusal, 0 to continue polling, and 1 to indicate join
    acceptance.

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added ConnApiRemoveClient().  This function should be called when a client is
            to be removed from a game session.  The client will be disconnected from, and
            the entry for that client removed from the client list.

    Contrib (PC)
        VoIP
            Added missing VoipSetLocalUser() implementation.

    Contrib (Xbox)
        ConnApi
            Fixed a bug adding clients to a game session with three or more users already
            present.  Clients previously successfully connected would have their voip
            connections incorrectly terminated.

        VoIP
            Added missing VoipSetLocalUser() implementation.  Note that this function is
            a stub on Xbox, as Xbox doesn't use the userID functionality.

    DirtySock (All)
        DirtyNet
            Added a couple of new socket error types.

        LobbyApi
            Added debug display of outgoing packet data.

            Changed LobbyApiPlayT->strSess to use LOBBYAPI_GAME_SESS_BUF instead of 64.

            Fixed erroneous documentation for LobbyApiCancelCB(), which indicated that a
            value of -1 could be passed to cancel all pending callbacks, when that is not
            in fact the case.

        LobbyCommonDefs
            Added LOBBYAPI_USER_FL_NOFILT flag.  This flag can be used to disable chat
            message profanity filtering and is intended to be available for use in
            in-game chat only.  To disable in-game profanity filtering for a user, you
            must issue a 'uatr' command with the FLAGS field set to the current attributes
            (LobbyApiUserT->flags) plus the LOBBYAPI_USER_FL_NOFILT flag set.  You can
            alternately turn filtering back on by issuing a 'uatr' without the NOFILT flag
            set.  Chat messages will have to include the LOBBYAPI_USER_FL_NOFILT flag as
            well.

        LobbyLan
            Added LobbyLanSendto() and LobbyLandRecvfrom().  These APIs allow an application
            to send data to their peers over the peer connections established by LobbyLan.

            Added optional latency display (debug only) via LobbyLanControl('late').

            Made host connection less special-cased.

            Client now notifies host before quitting.

            Added LobbyLanStatus().
            
            Added ability for host to refuse connections.  Added a return value to the
            LobbyLanCallbackT callback function type.

            Cleaned up internal handling of NetGameLinkDestroy() and NetGameUtilDestroy()
            calls to make them safer.  This fixes a few rare cases where a destroyed ref
            could be accessed.

            Added LobbyLanSetNote().  This allows the host to update the note field in the
            game advertisement, which is then refreshed and rebroadcast.

        LobbyTagField
            Fixed a bug where TagFieldFind could locate a field in a record where there was
            no match.

        NetGameLinkPeek
            Fixed a threading condition where NetGameLinkPeek() could return > 0 but a NULL
            packet pointer.  This bug was uncovered on PSP.

        ProtoAdvt
            Moved socket close in ProtoAdvtDestroy() outside of critical section - it doesn't
            need to be there, and by being there introduces possible deadlock conditions.
        
        ProtoHttp
            Fixed chunking code added in 3.4.0 release - it was trashing one byte past the
            end of the http buffer.  Also optimized it to remove memmove()s and use pointer
            manipulation instead.

    DirtySock (IOP)
        ProtoHttp-i
            Fixed a bug in _RpcHttpPost().  If no data was passed with the URL, the data
            pointer passed to ProtoHttpPost() was not NULL, but a pointer to junk in the
            rpc buffer.  This resulted in the first 4k-header size of the data sent in the
            post transaction being junk, and the file being trashed.  This bug caused
            locker files uploaded on PS2 to be corrupted.

    DirtySock (PC)
        DirtyNetWin
            Removed unreachable code in _XlatError0.

    DirtySock (PSP)
        DirtyLibPSP
            Added verbose critical section debugging, currently disabled.

            Added NetCritInit2(), which includes a critical section name for verbose debugging.

        DirtyNetPSP
            Fixed receive thread to not critical section read data callback under both Adhoc
            and Inet modes.  This caused an occasional deadlock condition to occur in the
            LanPlay PSP test sample.
            
            Cleaned up and standardized error return results from functions that return
            SOCKERR_* results (e.g. SocketBind).
            

    DirtySock (Xbox)
        DirtyNetWin.c
            Fixed to not set local address in a SocketInfo('bind') call for anything but a
            stream socket that has a local port bound already.  This better matches the
            expected behavior, where the local address is only available after a connect()
            or accept() call.  Without this fix, commudp socket sharing (used for >2p games)
            breaks.

        NetConnXbox
            Fixed a bug in NetConnStatus('type') handling of the NETCONN_IFTYPE_ETHER flag.
            The code was assuming an active interface status check would include the
            XNET_GET_XNADDR_ETHERNET flag, but this is not the case.  Instead, it now always
            assumes broadband and sets the NETCONN_IFTYPE_ETHER flag.
            
    Platform (All)
        Added defines for strncasecmp and strnicmp, mapping them to ds_* equivalents.
        
        Made changes to platform header and source to fully support IOP builds.
                    

DirtySock SDK 3.4.0 - April 5, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v2.8.1
        PSP     Sony PSP Runtime Libraries v1.5.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   March 2005 QFE 1332.3

New in this release

    Contrib (PSP)
        DirtyStrings
            Now building and included for PSP.
            
        LobbyGlue
            Now building and included for PSP.
            
        VoIP
            Stub library (no functionality) now building and included for PSP.

Changes/Bugfixes in this release:

    Contrib (All)
        LobbyGlue
            LobbyGlue's LOBBYAPI_HWFLAG updating now includes the LOBBYAPI_HWFLAG_PPPOE flag,
            and the new flag LOBBYAPI_HWFLAG_VOIPUSED.  These flags are intended for server
            metric use and not generally expected to be of use to game teams.
        
        VoIP
            VoipRemote() can now take VOIP_CONNID_ALL as the connection identifier, resulting
            in the union of remote status flags for all possible connections.

    Contrib (PS2)
        DirtyDnas
            Removed code relying on now-obsolete error (sceDNAS2_SS_ID_INTERNAL_ERROR) from
            DirtyDnas.  This error code has been removed from the latest Sony library
            releases (e.g. 2.8.0-2).

            Removed semicolons from section that is compiled in for 3.0+ builds that were
            causing a compile error.

    Contrib (Xbox)
            Added a warning in case XboxIsp is called and network isn't in the right state
            (i.e., wasn't disconnected before).

    DirtySock (All)
        HLBudApi
            Will now flag the kind of chat msg as "Club Recruit" for the IM chat messages
            flagged by server as such. Will also flag Admin messages as such (in addition to
            the IsNoReply on the buddy).
        
        LobbyApi
            Added strParams associated with each user set member.

            Bumped maximum news7 config buffer size from 2k to 4k.
        
        LobbyCommonDefs
            Added LOBBYAPI_HW_VOIPUSED flag.

        LobbyLan
            Added application-defined player note field.

        LobbyTagField
            Minor optimization to TagFieldFind().
        
        LockerApi
            Fixed a case where eCurError would not reflect a server error (if the HTTP response
            was OK but there was no locker XML included).

            Deprecated pStrName parameter of LockerApiUpdateFileInfo().
        
            Added local update of file info on successful info change response, using file info
            included in server response.

            Added LOCKERAPI_ERROR_NAMEPROFANE error code to handle the condition where a file
            upload is not allowed due to the name being determined to be profane by the Pogo
            profanity filter.

            Bumped up max file count from 32 to 64.

        ProtoHttp
            Added handling of "Transfer-Encoding: chunked" downloads.

        XmlParse
            Added support to XmlFind() to allow a leading "." in the find name as a wildcard
            match for the first tag.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Made async read thread compile out when SOCKET_ASYNCRECVTHREAD is set to 0.

            Fixed a bug in receive thread where an unhandled error result from WSAGetOverlappedResult()
            could get a socket in a state where it would not receive data.

    DirtySock (PC/PSP)
        NetConn
            Added NetConnStatus() 'bbnd' and 'type' selectors.

    Platform
        Platform.h
            Added auto-definition of DIRTYCODE_PLATFORM to DIRTYCODE_PSP if PSP build environment
            is detected.
                    

DirtySock SDK 3.3.4 - March 29, 2005

New in this release

    DirtySock (All)
        New "platform" files.  These cover two things - auto-definition of platform
        types if they are not already defined (DIRTYCODE_*), and definition of some
        standard library extension functions such as safe string functions like
        strnzcpy.  These standard library extension functions are exposed as
        ds_<name> so as not to conflict with other implementations of these functions.

Changes/Bugfixes in this release:

    DirtySock (All)
        ClubApi
            Added ClubApiMemberCount() function that returns count of members or recruits,
            as requested by caller.

            Added ClubApiRivalCount() function that returns a count of rivals, after rivals
            have been fetched.

            Added ClubApiCancelOps() function that cancels all pending operations, and 
            cancels the pending callbacks as well.

        DirtyLib
            Added NetPrintfHook().  This is a function that, when set, NetPrintf()
            output will be sent to.  The function can also "consume" the output if
            desired so that it won't be sent to the normal debug output.

        LobbyApi
            Added code to +rom handling to ignore an auto-room update if we already have
            a real room defined.  Fixes bugzilla bug #108.

        LobbyLang
            Updated old, broken hyperlinks to language and country codes.

        LobbyRoomlist
            Bumped up size of buffer passed to AutoCallback from 16 to 64 bytes to allow
            for longer room names (e.g. with Clubs).  This addresses bugzilla bug #107.

        LockerApi
            Added 'type' to locker transactions, to enable the server to distinguish files
            with the same name but different type.

            Fixed a bug with delete where files weren't rekeyed after a delete operation,
            causing file IDs to be out of whack.
        
        ProtoHttp
            Added a couple of debug-only header printouts.
            
            Added support for including port in the Host: header.

        WebOffer
            Added list support for credit card type and country so the list of
            possibilities is now part of the script instead of coded in the client.

    DirtySock (PS2)
        Rpc-e
            Removed vestiges of code that was using the old thread-based rpc wake-up
            system.  The new system does not require the thread.  This saves 8k of EE
            memory and fixes an apparent incompatibility with Sony runtime 3.0.2.
        

DirtySock SDK 3.3.3 - March 22, 2005

New in this release

    DirtySock (PSP)
        Async read threads have been implemented for Adhoc and Inet modules.  These
        threads decouple latency from the polling rate of the application and provide
        consistently faster response to network traffic with minimal overhead.
        
        Async shutdown support.  This allows an asynchronous shutdown of DirtySock by
        passing the NETCONN_SHUTDOWN_NOBLOCK flag to NetConnShutdown().  This is important
        because it takes roughly a second to disconnect from an Adhoc network and a second
        and a half from an access point.  Shutdown status can be polled by calling
        NetConnStatus('actv'), which will return TRUE if the module is still active, or
        FALSE if it has been shut down.  If NetConnStartup() is called while a previous
        shutdown operation is still taking place, it will block until that shutdown is
        complete.

Changes/Bugfixes in this release:

    Contrib (PS2)
        PS2Isp
            Fixed NetConnConnect() check to allow return values of greater than zero as a
            $USE-EXISTING$ success result will be one.  This only affects users using
            ps2isp and $USE-EXISTING$ functionality together.
            
            Added USEEXISTING value to SELECT context, to allow disable of normal disconnect
            before reconnect behavior.  This flag, if set, also overrides the network profile
            being used with $USE-EXISTING$, to allow NetConn to simply pick the running
            interface instead of starting it up.            
        
    Contrib (Xenon)
        DirtyStrings
            First version for Xenon, based on Xbox strings.

    DirtySock (All)
        BuddyApi
        HLBudApi
            Uses NetAlloc/NetFree instead of LobbyAlloc/LobbyFree or user mem functions
            for create/destroy, as, HLBud, Buddy and XBFriends api are around in game.

        LobbyApi
            Changed to not disconnect from the server if we get an 'auth' code in a lobby
            server response.

            Added disable of all usersets in LobbyApiSuspend().

        LobbyApiList
            Made sure list functions (eg LobbyApiPopul) are safe from the list ref being
            NULL, as when in suspended mode.

        LobbyLogin
            Fixed 'dash' error handling, generated when there are no personas.
            
            When MULTIPERS functionality is enabled, it now disables the automatic
            logon that otherwise would take place when only one persona is returned.

        LobbyReg
            Allow transitions back from DONE state.

        NetGameLink
            Added polling in NetGameLinkPeek() for platforms without async read thread support.

        NetResource
            Fixed a minor bug in netresource where the last access time and the number of
            accesses of a resource in the cache (used list) was being incremented twice.
            This did not affect the operation of the module - just the stats used to
            determine which resources to discard, and in that case, the number was
            essentially just always incremented by two instead of one.

        ProtoAries
            Remove unused windows includes, obsolete windows init/shutdown.

        ProtoHttp
            Completely removed strcmp() and strstr() usage in favor of the case-insensitive versions.

    DirtySock (PSP)
        DirtyLibPSP
            Removed printf critical section, since it doesn't appear to work anyway.
            
            Made NetLibDestroy() sleep for a shorter amount of time, so it doesn't take so
            long waiting for the thread exit.
    
        DirtyNetPSP
            Added a warning if thread priority <= lowest network thread priority.

    DirtySock (Xbox)
        DirtyNetWin
            For Xbox/Xenon, getsockname() does not fill in the local address, so we have to
            do that ourselves

    DirtySock (Xenon)
        DirtyNetWin
            For Xbox/Xenon, getsockname() does not fill in the local address, so we have to
            do that ourselves
            
        LobbyLogin
            Added Xenon-specific login support.
                    

DirtySock SDK 3.3.2 - March 15, 2005

New in this release

    DirtySock (All)
        PortTestApi
            Optional new UDP game port tester, designed to test a client's firewall using UDP
            packets during login to the lobby server.  See doc\api\lobby\API_PortTester.doc
            for more information.

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added new control selector 'lbuf' to set NetGameLink buffer size used in link
            creation, defaulting to the previously hard-coded 1024 bytes.  Also added a
            status selector 'lbuf' to return the current size.
            
        DirtyStrings
            Fixed lobbylogin_err_en string table to match order of alerts in defined in
            lobbylogin.h.

    Contrib (Xenon)
        ConnApi
            Added ConnApiAddClient() call that was missing.
            
        Voip
            Added VoipSetLocalUser() call that was missing.

    DirtySock (All)
        ClubApi
            Fixed bug #50, countries now showing up in club search results.

        CommUDP
            Made polling compile in if platform does not have async read thread support.
        
        DirtyLib
            Added automatic DIRTYCODE_PLATFORM definition based on environment if
            DIRTYCODE_PLATFORM is not already defined.

        DirtyNet
            Added code to define if a platform has async read thread support or not.

        GameCustom
            Added extract specification to monthly and weekly leaderboards so that they
            display correct column information.
        
        LobbyApi
            Add a type to LobbyApiInfoPtr() to get access to the string containing the SLUS
            code.

            Changed LobbyApiCreate() not to bail if it can't allocate the pingmanager.  All
            accesses to the pingmanager pointer are already NULL-pointer protected.

        LobbyApiList
            Fixed a bug in LobbyApiListDestroy() - list members weren't being deleted when
            the list was deleted, which would cause memory leaks if the lists were not
            already empty.
        
        LobbyFindUser
            Exposed LobbyFindUserSetParams() function.

        LobbyLan
            Added graceful quit for client.  Added optional latency display info (debug only,
            compiled out by default).

        LobbyLogger
            Fix for lobbylogger crash - be sure to disconnect the global callback when shutting
            down.
        
        LobbyLogin
            Fixed lobbylogin internal alert table to match order of alerts in defined in
            lobbylogin.h.

            Added new function LobbyLoginGetAlertEnum().

            Added optional MULTIPERS tagfield entry in LOGIN context.  If set to 1, this option
            will prevent the one-persona login restriction.

        LobbyRank
            Fixed such that if a buddy variation is requested but the user has no buddies
            that an empty list is returned.  Previously, the ranker API would send a
            regular "top 100" type set of results instead.

        LobbyTagField
            Fixed space handling in TagFieldDelim (now terminates scan on unquoted spaces).
            This fixes Bugzilla Bug #49.
        
        NetResource
            Fix bug in NetResourceFetchString() where the identifier wasn't being read in
            correctly.
            
            Fixed being able to request the same resource multiple times.

            Changed to prioritize fetches so already-cached entries will be retrieved first
            followed by resources which need to be downloaded.

            If the resource is already cached, run the entire set of state transitions immediately
            instead of waiting to walk the states as the update function is pumped.

            Added NetResourceInfoInt() function to get information about a particular transfer.

            Changed the fetch function to return a sequence number corresponding to the fetch
            request.
            
            Changed the cancel function to take a sequence number.

            Modified the "fetch" command to check for a cache entry before adding the fetch
            to the list.  In this implementation, if a fetch command finds a cache entry (a
            cache hit) the current operation in progress is put aside temporarily and the
            cached entry is loaded to completion immediately.

            Changes to netresource to remove NetResourceInfoInt() and add a few fields to
            the xfer structure to provide the necessary information in a more convenient
            manner.

        ProtoPing
            Added polling if a platform does not have async read thread support.

        ProtoUdp
            Fixed a bug in ProtoUdpSendTo where due to a bad sizeof() calculation only the
            first four bytes of the sockaddr structure were being copied down to the IOP,
            resulting in a garbled address.
        
        WebOffer
            Added new 'goto' command to allow for flexibility when launching a script. Also
            fixed a bug in http handling where bad parameters could cause the code to hang.

            Added NewsColor attribute per Aaron's request.

    DirtySock (IOP)
        DirtyNetIOP
            Deprecated DNS functionality on network startup.  Fixed -coop support.

    DirtySock (Xenon)
        BuddyApi
        HLBudApi
            Compiled out XbFriends stuff for Xenon.

        NetConnXenon
            Added 'gtag' accessor, to return gamertag when successfully logged in.                    

DirtySock SDK 3.3.1 - March 8, 2005

    The following interfaces were previously deprecated and have now been removed from
    the SDK:

        LOBBYAPI_FEEDBACK_TYPE_XXXX definitions representing strings like "honest" are
        deprecated and have been removed from the distribution.  These types are replaced
        by the new integer-type feedback subtypes.  These new symbols are defined in
        lobbyfeedback.  Please see TDD_Feedback available on the DirtySDK website for more
        information about this change.

        The following LobbyStatbook functions: LobbyStatbookRowName, LobbyStatbookRowDescript,
        LobbyStatbookRowParm, and LobbyStatbookRowWidth are deprecated and have been removed
        from the SDK.  Please use LobbyStatbookRowInfo instead.
    
        The LobbyApiRoomT.ping and LobbyApiRoomT.addr fields are deprecated and have been
        removed.

        The WebOffer 1.0 method of referencing button elements (for example,
        WebOfferButton.strButton1) is deprecated.  The new way of referencing a button
        element is e.g. WebOfferButton.Button[1].strButton.
    
Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added ConnApiStatus('type') selector to return current connection type flags.

            Fixed a bug when the connection type was changed to voiponly and a game connection
            was in the INIT state.  In this case would be transitioned to the DISC state and a
            callback would be triggered.

    DirtySock (All)
        ClubApi
            Converted club ID from int to string to support 64-bit server ID values.
        
        LobbyLang
            Modified LobbyLang macros to not depend on the toupper() and tolower() functions
            anymore.
        
        LobbyLogger
            Changed logger to support saving telemetry until a success code comes back from
            the server.  If there's no success code, the telemetry data is saved until the
            next time the logger is connected to the lobby.
        
        LobbyStatbook
            Fixed sizeof() operation that was calculating the size of an object pointer instead
            of the size of the object.  This fixes bugzilla bug #45.

    DirtySock (IOP)
        Rpc-i
            Changed RPC DMA busy wait to wait for one millisecond before attempting another DMA,
            instead of the previous 100 microseconds.
            
            Throttled rpc debug spam on dma busy wait to once a second.  It would previous print
            10,000 times a second, which would kill a connected debugger and/or target manager if
            you managed to halt the EE when the IOP was trying to DMA to it.
    
    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Fixed SocketAccept() to initialize the new SocketT it creates using the same code as
            SocketOpen().  Previously, some parts of the SocketT were not initialized and this would
            cause a crash trying to use the accepted socket.

    DirtySock (PSP)
        DirtyNetPSPAdhoc
            Added Adhoc scan support, as well as the ability to optionally create and join IBSSs
            instead of simply connecting to them:
            
                NetConnQuery(pGroupName, NULL, 0) initiates a scan.  If pGroupName is not NULL, only
                the given group name will be returned as a result of the scan.
                NetConnStatus('scan', &ScanInfo, sizeof(ScanInfo) polls the status of the scan
                operation.  If it returns a negative result, the operation is in progress.
                MetConnConnect(pSsid, pOpt) - pOpt may now be "crea" to create the given group,
                or "join" to join the given group.  If creating a group, pSsid is the name of the
                group.  If joining a group, pSsid is a pointer to the SceNetAdhocctlScanInfo
                structure for the group, returned by NetConnStatus('scan').
                
            For an example of this new functionality, please see the PSP Lanplay sample.

    DirtySock (Xbox)
        ProtoPing
            Changed to not try and QoS SG if we're not in secure mode.

    DirtySock (Xenon)
        DirtyNet
            Added a section to dirtynet.h to handle Xenon builds.
            
        ConnApi
            Fixed a bug where the mode was switched to VOIPONLY immediately after calling
            ConnApiDisconnect().  In this instance game connection processing would not occur
            and the connection would never be destroyed.


DirtySock SDK 3.3.0 - March 1, 2005

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Fixed a bug where the mode was switched to VOIPONLY immediately after calling
            ConnApiDisconnect().  In this instance game connection processing would not occur
            and the connection would never be destroyed.

    DirtySock (All)
        DirtyNet
            Added debug-only version print to SocketCreate().
        
        LobbyApi
            Fixed typo in 'sele' command text in LobbyApiSuspend().

            Added SDK version number to strVersion (sent to rdir in @dir packet, and to
            slave in 'acct', 'auth', and 'pass').

        LobbyCommonDefs
            Added club invite IM and email flags

            Added club ID length in preparation for conversion of club ID's from int to
            string.

        LobbyLocalize
            Added optional callback to handle custom type conversion.

        LobbyLogin
            Updated default XBOX_REMAP string to a format that will work for old (pre 3.2.3)
            and later TagFieldGetDelim() formats.

        NetResource
            Moved the extern "C" stuff to surround all the functions to fix compile problems
            in C++ code.
    
        TourneyApi
            Added a second custom user flags to tournaments to provide for more game settings.
            This addition was made since custom flags are a more efficient way to search for
            tournaments than storing extra settings in the custom data field.

    DirtySock (PSP)
        First official V3 release.  Supports both Adhoc and Inet modes - see the lanplay sample
        for an example of how to start up DirtySock in Adhoc or Inet mode.

    DirtySock (Xbox)
        NetConnXbox
            Added ability to optionally specify up to three additional Xbox Live services
            (aside from the default security gateway service), and retrieve secure addresses
            for them after successful login.


DirtySock SDK 3.2.3 - February 22, 2005

Changes/Bugfixes in this release:

    Contrib (PS2)
        PS2Isp
            Added ability to disable slogin loading.

    DirtySock (All)
        All CODE_PLATFORM and CODE_<PLATFORM> defines have been changed to DIRTYCODE_PLATFORM
        and DIRTYCODE_<PLATFORM>, so as to avoid conflict with Tiburon definitions.
    
        ClubApi
            Changed to allow getting and setting of the club logo.
    
        DirtyNet
            Added global mutex around SocketImport()'s reading of the socket list.
        
        LobbyLan
            Added LobbyLanControl, and 'advf' selector to set advertising frequency.
        
        LobbyStatbook
            Updates to statbook to incorporate localization of data.
        
        LobbyTagField
            Bug #40 - TagFieldFindNext() was including the separator character in the tag name
            (eg "\nINFO") in cases where the preceeding attribute was empty (eg. "STAT= INFO=123").
            
            Fixed that character encoding table to encode - in a TagFieldSetStructure() to match
            the decoding logic in TagFieldGetStructure().

            TagFieldPrintf(",%s") will suppress the comma if the existing field has no elements.
            This allows TagFieldPrintf("BLAH=") followed by a sequence of TagFieldPrintf(",%s").
            
            Cleaned up encoding of commas in string. Any string containing a comma is now quoted
            so that the comma can be used as a delimeter. The GetDelim function was updated to
            respect quoted strings (does not look for the delim within the quoted portion).

        LockerApi
            Added "game" parameter to info, delete, and get commands.

            Added game name parsing to directory response and to directory structure.

        NetResource
            Added new function NetResourceFetchString(), that allows game code to fetch a
            resource based on a string in the format "<4 char type>-<numeric identifier>".

            Modified NetResource to take in a Hexadecimal value rather than a decimal value.
            This keeps it consistent with how we are currently storing and retrieving filenames.

        ProtoHttp
            Fixed Post() bug where string length was not calculated until after Content-Length
            header was formatted, resulting in a Post() request with Content-Length=-1 (which
            unsurprisingly would fail).

    DirtySock (PS2)
        DirtyNetWin
            Added recvcrit mutex around SocketSendto()'s call to send/sendto.  This prevents
            send/sendto() from being called while the _SocketRecv thread calls
            WSAGetOverlappedResult().  Socket calls in the Xbox implementation of Winsock are not
            thread safe, so this mutex prevents simultaneous access.
    
    DirtySock (PSP)
            First Inet implementation.  No ping supported, everything else should be there.  Use
            NetConnStartup("-inet") to start in Inet mode, NetConnStartup("-adhoc") to start up
            in Adhoc mode ("" defaults to AdHoc).
            
            Added SocketControl('pool') option to set network pool size.
            
            Fixed Adhoc shutdown to actually shut down Adhocctl.
    
    DirtySock (Xbox)
        BuddyApi
            In new call title to check for sameTitle, the titleID should really be an unsigned
            int, so fixed that.

            Try to grab title from XDK whenever a game invite, or, a presence changes -- to deal
            with offline user sending game invite etc.

        HLBudApi
        XbFriends
            Supplanted check for HLBBudIsSameProduct with a Xbox check of title Id, which
            will work when user is "appearing offline" too. This is needed to handle "offline"
            users in other Xbox games, sending game invites to us.
            
        DirtyNetWin
            Added recvcrit mutex around SocketSendto()'s call to send/sendto.  This prevents
            send/sendto() from being called while the _SocketRecv thread calls
            WSAGetOverlappedResult().  Socket calls in the Xbox implementation of Winsock are not
            thread safe, so this mutex prevents simultaneous access.
        

DirtySock SDK 3.2.2 - February 15, 2005

Changes/Bugfixes in this release:

    Contrib (All)
        DirtyStrings
            Added PSET error text.

    DirtySock (All)
        ClubApi
            Enhancement as per Producer -- Club find will now support finding by Name or
            Tag AND Country. (It will still do the invidual finds too.)

        DirtyNet
            Changed SocketInTextGetAddr() to return zero on failure.
        
        LobbyCommon
            Updated trophy code.
            
        LobbyLogin
            Fixed 'pers' command to use "GTAG" for Xbox instead of "PERS", which fixes
            some duplicate logon cases.

        LobbyRoomlist
            Bug #12: LobbyRoomlistDisplay() was not taking the . separator into account so
            room names were being returned as ".Room" rather than "Room".  Also added a very
            basic unit test sample.

            Replaced LobbyRoomlistDisplay() with a function to just return the room's display
            name, and marked the function as deprecated.

        LobbyStatbook
            Changed the name of the "layout" parameter for a statbook row definition to
            "params" to be more generic and not to imply the field's use through a naming
            convension.
        
        LobbyTagField
            Fixed a number of minor bugs in the Set functions where the buffer calculation
            came up short. That is, if you passed a buffer that was just large enough to hold
            something, the code sometimes was off by one character and would not set it. It
            arguable whether it was really a bug since the internal formating is proprietary
            so saying a set-string should take a specific number of bytes in somewhat invalid.

            Removed TagFieldPacketDate functions. They were never used and we would rather
            remove them now than let them get used and have to continue to maintain an extra
            function.        
            
            Fixed bug where - was being %encoded instead of =.
            
        WebOffer
            Fixed hard-coded array size to instead calculate the number of buttons in an array
            so things don't break if the number of menu items is changed in the future.
            
            Removed menu description field (was not supported by 2006 clients).

    DirtySock (Xbox)
        BuddyApi/HLBudApi
            Check for same product also checks the TitleId with xbox.

            Added support for setting a game session id, and for getting a users (game
            invite) session id.
        
    
DirtySock SDK 3.2.1 - February 8, 2005

Changes/Bugfixes in this release:

    Contrib (All)
        DirtyStrings
            Added PSET error text.

    DirtySock (All)
        LobbyApi
            Added display list object callback to LobbyApiPopul() (was previously missing).

        LobbyCommon
            Changed LobbyApiCheckRoomEntry() to clamp the maximum number of criteria to
            LOBBYAPI_MAX_ROOM_CRIT_VALUES.  This prevents a client that was compiled with
            a lower LOBBYAPI_MAX_ROOM_CRIT_VALUES define from corrupting stack when
            logging into a server with a higher LOBBYAPI_MAX_ROOM_CRIT_VALUES limit.
        
        LobbyFeedback
            Updated feedback subtype from OBNOXIOUS to DISRUPTIVE to better match the GDD.

        LobbyLogin
            Added 'pset' error handling.

            Changed to force auto-login of the first persona when there is more than one
            persona.

        LobbyMsgLog
            An incorrect use of sizeof() was causing bad pointers to be used for writing out
            message logs, clearing message logs, etc.  Also cleared up some issues where multiple
            'mlog' responses would come back in a row.

            Clear the callback for message logs once the update has completed or we've run out
            of space, otherwise we get duplicate messages in the message log on the client.

            Change the way the async callback is used, activated, and deactivated.  Also handle
            error conditions a little more gracefully - if we run out of string memory allocated
            to us by the LobbyMsgLogCreate(SIZE) function, store as much as we can and make as
            much as we can accessible.  Print a pretty big warning on the console to warn of
            string memory size issues.

        LobbyRoomlist
            Bug 11 - Convert category parser for 'rcat' command to use ',' as a
            delimiter rather than '/' to be consistent with server code.
            
            Added client auto-create room support.

        LobbyStatbook
            Removed width, index, and param values from a statbook row description and replaced
            them with a layout string and a data localizer type.
            
            Added new 'slst' command to retrieve a list of the statbook views available on the
            server.

            Deprecated LobbyStatbookRowName(), LobbyStatbookRowDescript(), LobbyStatbookRowParm(),
            and LobbyStatbookRowWidth() in favour of LobbyStatbookRowInfo().

        LobbyTagField
            Removed 2 of the hex tables and shortened another to take less static memory,
            saving about 750 bytes, at the cost of an extra couple cycles per encode/decode.
            
            Changed to use hex decode table with "128" as "not a valid character" marker. This
            makes the invalid character detection stronger and also prepares to allow for variable
            base 10/16 decoding.
            
            Added base 16 decoding to TagFieldGetNumber().

    DirtySock (PS2)
        ProtoAries-e
            Added EE check to not allow send if send queue has more than 8k of data already.

    DirtySock (IOP)
        DirtyNetIOP
            Added SocketInfo() selectors to return the amount of data in the send queue
            ('sque') and recv queue ('rque').
            
        ProtoAries-i
            Added send queue size to status structure.  Added async DMA of status structure
            from IOP to EE.


DirtySock SDK 3.2.0 - February 1, 2005

    RoomlistApi Note: The following functions/function parameters were deprecated
    and have been removed:

    1. LobbyRoomlistDownload: the pUrl, and iTimeout values have been removed.
    2. LobbyRoomlistUpdate has been removed.
    3. LobbyRoomlistImage has been removed.
    4. LobbyRoomlistResource has been removed.
    5. LobbyRoomlistCategoryT->Image[] has been removed.

New in this release:

    DirtySock (All)
        Leaderboards
            Leaderboard data formats can now be localized to various locales. If the
            column type, as definded in lobbylocalize.h LOCALIZE_TYPE_* (e.g. '~sep' ),
            is specified in the ranker config file (rank.cfg), the client will use the
            users locale to determine how to format the data. Most useful for large
            numbers and date formats, where there are rules as to how the different
            countries display decimals, thousand separators etc.
 
Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Added void *pValue parameter to ConnApiControl().
            
            Added ConnApiControl('dist') selector, to allow setting of a user's dist ref.

        DirtyStrings
            Added alert text for new dashboard alert.
            
        VoIP
            Added VoipStatus2('from') to get back a bitmask of who we are currently
            receiving voice from.  Note that on non-Xbox platforms, this currently
            will be true for any connected clients that do not have their microphone
            muted.  A simple volume level detection is planned in the future to more
            accurately signal when voice is being received as opposed to background
            noise.

            Added VOIP_LOCAL_SENDVOICE flag to indicate when we are sending voice data.

    Contrib (PS2)
        DirtyDnas
            Added DirtyDnasDecode() to (in place) decode the encrypted Auth and Elf
            file.

        PS2Isp
            Added NAME and PASS fields to PS2IspParams() in SELECT context.
    
    Contrib (Xbox)
        VoIP
            Added port locking, with VoipControl('lock') to set the lock.
    
        XboxIsp
            Bugzilla bug #19 - Added footer to XBOXISP_ALERT_NOSERVICE alert text.
        
    DirtySock (All)
        ClubApi
            Fixed const modifiers in "score report" call.
        
        LobbyApi
            Added misc ptr to LobbyApiMsgT structure.

            Added LobbyApiControl('dobj') selector to set whether display list object
            callbacks are enabled or not.  Display list object callbacks fire every
            time an object is added to, deleted from, or modified in a display list.
            If display list object callbacks are enabled, global display callbacks
            are disabled.
        
        LobbyApiList
            Added list object updating for object-level callbacks.

        LobbyApiUtil
            Added LobbyApiExtractUserSetMember().
            
            Working to move into a category without rooms

        LobbyCommonDefs
            Added auto-room flag.
        
        LobbyLogin
            Added new lobbylogin alert for dashboard errors.

        LobbyTagField
            Added delim support to TagField. This involved changing _TagFieldSetup from
            a macro to function and passing pName so it could know not to terminate such
            strings. Then, TagFieldPrintf was changed to use TagFieldSetFunction with NULL
            instead of "". Finally, TagFieldPrintf was changed to detect , in a formatting
            string and use a special TagFieldSetString encoder which encodes space and ,
            in addition to the other characters.

        RoomListApi
            Deprecated some interfaces (see note above).

    DirtySock (Xbox)
        NetConnXbox
            Fixes to NetConnDisconnect() to allow subsequent NetConnQuery() and
            NetConnConnect() calls to work, without a NetConnShutdown()/NetConnStartup()
            sequence in between.
        

DirtySock SDK 3.1.3 - January 25, 2005

New in this release:

    DirtySock (All)
        ClubApi
            The first release of the new ClubApi is included in this release.  This
            API manages club creation, deletion, joining, leaving, etc.  Please see
            doc\api\lobby\API_Clubs.doc for more information.
            
        Feedback
            Updated to support the new Feedback specifications.  Please see
            TDD_Feedback.doc for more information.

Changes/Bugfixes in this release:

    Contrib (All)
        ConnApi
            Fixed ConnApiDisconnect() to not mark connections for closing if they
            are already disconnected, and to not try and access the gamelinkref if
            it is NULL.

            Added ConnApiStatus() 'ingm' selector.

    Contrib (Xbox)
        ConnApiXbox
            Fixed to set to ST_IDLE state if unable to demangle any connections.
            
            Fixed to prevent concurrent demangling attempts when operating with
            three or more clients.

            Fixed ConnApiDisconnect() to not mark connections for closing if they
            are already disconnected, and to not try and access the gamelinkref if
            it is NULL.

            Added ConnApiStatus() 'ingm' selector.

    DirtySock (All)
        LobbyCommonDefs
            Updates to the feedback system, including new types and subtypes.
    
        LobbyLocalize
            LobbyLocalize now closely tied to lobbylang.h.  Changed LobbyLocalizeCreate()
            to accept uLocale (aka uLocality) instead of separate iLang and iCountry
            parameters.

            Added localization type "~raw" which serves as a flag to ranker to not
            localize data.
        
        LobbyLogin
            Fixed a bug dealing with submitting in TOS and SHARE contexts that manifested
            as missing options on Xbox.

        LobbyRank
            Ranker uses localizer to format data field, if column type, set in server,
            requires it.

    DirtySock (PC)
        DirtyNetWin
            Changed SocketHost() to correctly handle failure of SIO_ROUTING_INTERFACE_QUERY
            call and added extra gethostname/gethostbyname lookup as fallback.
            
            Fixed a bug disposing of winsock socketref that was introduced in the previous
            release.

    DirtySock (PSP)
        DirtyNetPSP
            Removed netcnf code and fixed to build against 1.0.3 distribution.  Added new
            error codes to error code string table.

        NetConnPSP
            Removed periodic scan code, added 'wpwr' selector to NetConnStatus() to get WLAN
            switch status.

    DirtySock (IOP)
        DirtyNetIOP
            Removed TCP async thread support.  This saves 5k per TCP socket.

            Made recvdata buffer dynamic, and not allocated for TCP sockets.  This saves
            572 bytes per TCP socket.  The SocketT structure is now 104 bytes.

DirtySock SDK 3.1.2 - January 18, 2005

New in this release:

    Contrib (All)
        ConnApi
            New Connection Manager API (ConnApi), currently located in the lobbyglue
            library.  This is a client API that packages the "connect to peer(s)"
            process into a single module.  For more information, see the API
            documentation: contrib/lobbyglue/doc/API_ConnectionManager.doc.

    DirtySock (All)
        WebOffer
            Updated to support the 2.0 WebOffer specifications.  Please see the
            API documentation (doc/api/web/API_WebOffer.doc) as well as the script
            documentation and samples at the DirtySock website under the directory
            docs/general_doc/WebOffer/.

Changes/Bugfixes in this release:

    Build
        Added in help information to nant build file - type "nant help" for this
        information.

    Contrib (All)
        DirtyStrings
            Fixed lobbylogin error alert text for "common" version to not use Xbox
            specific terminology.

    Contrib (PC)
        VoIP
            Added selector to retrieve platform socket ref, for use with socket sharing.

    Contrib (IOP/PS2)
        VoIP
            Added selector to retrieve platform socket ref, for use with socket sharing.
            
            Fixed to clear cached connection status for a connection when calling
            VoipConnect().  This prevents detection of stale connection flags (such
            as VOIP_REMOTE_DISCONNECTED) before new state is set.
    
    Contrib (PS2)
        PS2Isp
            Added PS2IspGetAlertEnum().
    
    DirtySock (All)
        CommUdp
            Changed _CommUDPClose() to set the connection state to CLOSE regardless
            of what the previous state was.

        DirtyDefs
            Added Xenon to CODE_PLATFORM defines.

        DirtyNet
            Added SocketImport() and SocketRelease().

        LobbyApi
            Added clubID and clubTag to lobbyApiUserT.

            Fixed a bug in dequeueing code that would cause the head to fall outside of
            the queue array.

        ProtoMangle
            Added ProtoMangleStatus().
            
            Added SocketImport()/SocketRelease() in shared socket implementation, to be
            able to handle both DirtySock SocketT's and platform socket refs.

            Close http socket before connect, to make sure http connection does not
            persist between sessions.  This is not allowed, as the demangler server is
            load balanced, and the actual demangler server used is based on the sessionID,
            and can be expected to change between sessions.

        WebOffer
            Added version 2.0 script enhancements including new goto actions (clear,
            goto, exit), default "startup" label and string return value.
    
    DirtySock (IOP)
        DirtyNetIOP
            Fixed a bug in _SocketLookupFree() that was potentially causing a semaphore
            to be leaked and/or trashed.
            
            Changed _SocketLookupThread() behavior to allow for earlier termination
            in the case where _SocketLookupFree() is called during DNS lookup.
    
    DirtySock (Xbox)
        ProtoMangle
            Added handling of failure cases to ProtoMangleComplete().  If
            XOnlineTaskContinue() returns an error or XNetXnAddrToInAddr() returns
            an error, ProtoMangleComplete() will return -1 to indicate the operation
            was not successful.
        

DirtySock SDK 3.1.1 - January 11, 2005

Changes/Bugfixes in this release:

    DirtySock (All)
        CommUdp
            Debug print cleanup.  Added more printing during connection cases.
        
        LobbyApi
            Added 'vers' selector to LobbyApiInfoPtr().
            
            Added a call to LobbyApiSetMachineAddr() to code in LobbyApiUpdate() that
            handles the server response to the 'pers' command, so that the Machine
            Address is available immediately after login.

        LobbyApiAsync
            Added global callback handler for +mlg (for message logs).

        LobbyApiUtil
            Added LobbyApiSetMachineAddr() to lobbyapiutil.c, called by
            LobbyApiExtractUserRecord() (which is called on receipt of a +usr or +who
            async server message).
        
        LobbyLogin
            Don't remove TOS field when submitting in LOGIN context.  This allows
            the client to potentially pass -1 if they want to get back a 'tosa'
            error for testing purposes.
            
            Added Flame exemption from cheat response.

        RoomlistApi
            Converted to use lobby 'rcat' command.

        WebOffer
            Change weboffer buttons from discrete variables to an array of aggregated
            data types per WebOffer 2.0 TDD.
            
            Updated buffer sizes and the way we relate display size to storage size in
            weboffer.
            
            
DirtySock SDK 3.1.0 - January 4, 2005

New in this release:

    DirtySock (All)
        NetResource
            NetResource is a new client API which allows the client to easily
            retrieve web-based resources based on a type and ident.  For more
            information, see doc/api/web/API_NetResource.doc.

        LobbyApi
            LobbyApi has been refactored to allow suspend/resume operation,
            to allow minimal footprint in an in-game situation.  See below
            for more details.

        LobbyLogin
            New platform-independent login flow, very similar to last year's
            Xbox login flow.  This includes new support in PS2Isp to read the
            username and password from the EA Shared Login file.  See below
            for more details.

        Xenon
            This is the first Xenon release.  Note that no Xenon-specific
            features are yet supported, due to the fact that they are not
            yet available.

Changes/Bugfixes in this release:

    Contrib (PS2)
        PS2Isp
            Implemented shared login file loading, added shared login alert.
            
        DirtyStrings
            Added shared login error string.
            
        DirtyDnas
            Added new linkage for Sony 3.0+ runtime support.  Note that the
            current version of DirtyDnas is built against the 2.8.1 runtime,
            so this change does not affect the elf files included in the
            distribution.

    DirtySock (All)
        DirtyNet
            Made platform-specific stuff that doesn't exist on PS2 not compile
            in for PS2, so use of these functions generates a compile error
            instead of a link error.
            
            Deprecated SocketTick() in favor of NetTick().
        
        LobbyApi
            Refactored into separate files for better maintainance.

            Rework of queueing system.  Removed ping requests from queue.
            Added a new function LobbyApiCancelPingCallback() to take the place of
            cancelling ping request by queue id.  Removed timeout parameter from
            LobbyApiPing() - now the timeout is the PingManager timeout.
            
            Added LobbyApiSuspend() and LobbyApiResume(), to be called when leaving
            the front end and going into game and when returning from the game
            to the front end.
            
            Switched to use NetAlloc() for main LobbyApi ref, instead of LobbyAlloc,
            to preserve the convention that LobbyAlloc is to be used for "front-end"
            allocations.

        LobbyLib
            Made LobbyTime() force convert time(NULL) to unsigned int (for 64-bit systems).

        LobbyLogin
            Reorganization of LobbyLogin: ps2/lobbylogin becomes platform-independent
            lobbyreg, xbox/lobbylogin becomes platform independent lobbylogin.
            All platform dependent lobbylogin files are deprecated.  Code that previously
            compiled against PS2 lobbylogin can be made to compile by doing the following
            case-sensitive search/replace operations on user code referencing lobbylogin:
                1) LobbyLogin with LobbyReg
                2) LOBBYLOGIN with LOBBYREG
                3) lobbylogin with lobbyreg.
    
        LobbyPingManager
            Fixed a bug where a user callback wasn't cleared after it was called.
            In some cases it could get called again, with the possibility that the
            user reference had been freed by the original callback.

        LobbyRank
            Ranker category, index, and variation names are now managed by a symbol table
            to reduce the amount of data that needs to be sent to a client during a 'cate'
            command.  Memory usage on the client is also reduced using this mechanism.

            Added type and style parameters to ranker column definitions.
            
            Return $unknown$ instead of NULL when a symbol isn't found for a
            category/index/variation name to prevent flamex from blowing up when
            connecting to 2005 servers.

        LobbyTagField
            Changed TagField to remove time_t and use unsigned int instead (can be done since
            all time functions are internal).

        LockerApi
            Changed default server from peach to sdevbesl01.online.ea.com.

        NetConn
            Fixed a bug in NetConnIdle() that relied on NetTick() to be strictly
            increasing.  On PS2, if the RPC system is shut down and restarted, this
            assumption does not hold true.  This could cause the NetConnIdle()
            throttle to malfunction and cause NetConnIdle() to never call idle
            functions or RpcDone() (on the PS2).

        ProtoHttp
            Removed time_t dependence and also ported _TimeToSecs fix from TagField.

        TickerApi
            Ticker hello packets were getting marshalled wrong so lang/country was not
            being sent down to the ticker server correctly resulting in ticker messages
            not being localized properly.
            
    DirtySock (PC)
        NetConnWin
            Made NetConnConnect/NetConnDisconnect set active/establish flags to be
            more consistent with console versions.


DirtySock SDK 3.0.1 - December 14, 2004

New in this release:

    DirtySock (All)
        LockerApi
            LockerApi is a new client API which allows the client to store
            and retrieve files via the new Locker Server.  For more information,
            see doc/api/web/API_LockerApi.doc.

Changes/Bugfixes in this release:

    DirtySock (All)
        LobbyApi
            Added presence value for game members.
    
            Support locality in User and Room records.
    
            Split some LobbyApi functionality into LobbyApiUtil.
    
        LobbyStatbook
            Changed 'sdta' command to take a VIEW parameter so that it can be
            called with different views without having to call 'sviw' to reset
            the view each time.  This allows multiple instances of the object
            to be used with one LobbyApi object.
    
        ProtoHttp
            If we got an HTTP response code that indicates an error, set state
            to ST_FAIL.
    
        TickerApi
            Support locality in User and Room records.
    
    
DirtySock SDK 3.0.0 - December 7, 2004

New in this release:

    DirtySock (All)
        LobbyLogger
            LobbyLogger is a new client API which allows the client to log
            events to a local buffer which will then be passed up to the
            lobby server when connected.  See doc/api/lobby/API_LobbyLogger.doc
            for more information.
        
        LobbyLocalizer
            LobbyLocalizer is a new client API which provides a simple
            interface to allow localization of some standard data types such
            as numbers, dates, and times.  See doc/api/lobby/API_LobbyLocalizer.doc
            for more information.

Changes/Bugfixes in this release:

    Contrib (PC)
        WinSake
            Added support for WSAGetOverlappedResult(), WSARecv(), and
            WSARecvFrom().

    DirtySock (All)
        LobbyApi
            Added localizer tokens to places which already contain localizer
            strings.
        
        LobbyCommonDefs
            Added macros to support User Levels.
        
        LobbyTagField
            TagFieldRename() would infinite loop if the replacement name was
            shorter than the original name and fail due to a bounds check if
            the replacement name was longer than the original name.

            Fixed a bug in TagFieldFormat() which would cause it to stomp all
            over memory.
            
        LobbyUtf8
            Added external function Utf8EncodeFromUCS2CodePt() to translate a
            single UCS2 character to its corresponding UTF-8 character.
        
        ProtoHttp
            Interface was updated and brought more in line with other DirtySock
            modules.  Post functionality was enhanced to be able to upload large
            files.  ProtoHttp now supports secure HTTP, based on the URL passed
            to the API (http:// is insecure, https:// is secure).  A new API doc
            has been added in doc/api/proto.
        
        ProtoHttps
            Deprecated - replaced with ProtoHttp.
            
        ProtoUdp
            Added ProtoUdpRecvFrom().            
            
        TourneyApi
            Added localizer tokens to places which already contain localizer strings.
           
        WbocApi
            Deprecated.

    DirtySock (PC & Xbox)
        DirtyNetWin
            Added high-priority async read thread.  This thread enables PC and Xbox
            dirtysock to respond in real-time to async socket events from
            connectionless sockets.  Previously, incoming data was read at polling
            rate, which could result in artifical latencies and througput limits.
            This change implements functionality that was already present in the PS2
            version.
            
            Removed dead code and SOCKMSG_BSD support.
            
        ProtoPing
        CommSRP
        CommTCP
        CommUDP
            Removed Win32/Xbox code that polled event callbacks when calling recv.
            These polling calls are no longer necessary with the new async read
            thread.

    DirtySock (PC)
        ProtoName
            Cleanup - removed non-DirtySock sync support.

    DirtySock (PS2)
        DirtyNetPS2
            Removed Tiburon-legacy EOL crlf append from NetPrintfCode() (used by
            NetPrintf() macro).

    DirtySock (Xbox)
        DirtyNetWin
            Removed code that used unencrypted VDP sockets for UDP sockets.
                

