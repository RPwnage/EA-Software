DirtySock SDK 4.11.11 - February 6, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 150.004
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch-061218
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

Changes/bugfixes in this release:

    DirtySock (All)
        NetGameUtil
            Fixed NetGameUtilStatus() 'sock' selector, which previously required a buffer greater than the size
            of a pointer, to accept a buffer greater than or equal to the size of a pointer.  In the V5 version
            of the SDK this will be further changed to accept only a buffer equal to the size of a pointer.

    DirtySock (PS2)
        NetGameLink
            Fixed padding of NetGameLinkStatT structure, required for PS2 IOP/EE DMA, that was broken in a
            change made in DirtySock 4.11.5.

    DirtySock (Xenon)
        VoIP
            Set user send/recv masks to enabled when starting a connection.  This fixes a condition where a
            previous user that was using the same connection identifier had been muted, and the new user who
            got the same connection identifier was muted as well instead of defaulting to unmuted.
            

DirtySock SDK 4.11.10 - January 30, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 150.004
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch-061218
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: This release was built with PlayStation3GCC 150.004.

Changes/bugfixes in this release:

    DirtySock (All)
        XmlList
            Changed so that site=easo parameter must always be added to the JSP URL.

    DirtySock (DS)
        DirtyNetDSAdhoc
            Fixed shutdown to not hang while waiting for the async thread exit.


DirtySock SDK 4.11.9 - January 22, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 130.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch-061218
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

Changes/bugfixes in this release:

    DirtySock (All)
        ClubApi
            Fixed so the club server can do lazy update and the club wins are based on the timestamp.

    DirtySock (DS)
        DirtyNetDSInet
            Moved DWC init from SocketCreate() into a new SocketControl() 'inet' selector instead.  This allows
            return of potential failure code from DWC_Init() to the caller.
        
            Fixed address returned by SocketInfo('addr') to be in correct byte ordering (was previously reversed).

            Added NAS login process, immediately following connection to Internet.
            
            Added ability to extract the most recent DWC error using the 'dwec' (dwc error code) and 'dwet' (dwc
            error type) SocketInfo() selectors.
            
            Added MAC address support.
            
            Added SocketInfo() 'wire' (wireless strength) support.
            
        NetConnDS
            Changed to call SocketControl() 'init' after calling SocketCreate(), and return any non-zero result
            to the caller as an error.  Negative numbers mean there was a problem internally creating the
            DirtySock module, positive numbers mean that DWC_Init() failed (see the DWC_Init() error codes for
            more information).  If NetConnStartup() fails with a DWC_Init() failure it may be called again
            without any intervening shutdown.

    DirtySock (DS/PC/PS3/Revolution/Xbox/Xenon)
        DirtyNet(DS/PS3/Rev/Win)
            Fixed a bug where the status of a TCP socket that was marked as closed would be erroneously
            returned as open due to the variable incorrectly being designated as unsigned.

    DirtySock (Revolution)
        DirtyNetRev
            Fixed a memory leak when calling SocketLookup() on a numerical address string.
                    

DirtySock SDK 4.11.8.1 - January 17, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 130.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch-061218
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

Changes/bugfixes in this release:

    DirtySock (All)
        CommAll
        CommSRP
        CommTCP
        CommUDP
            Deprecated CommRef.proto field and added a maxwid field to store the maximum packet width for use
            by upper-layer modules.

            Changed CommUDPPeek() to not be able to copy out a partial packet.  Passing in a length of zero will
            still return the packet size, without executing a copy.            
            
        NetGameLink
            Use new CommRef.maxwid size instead of hardcoded (and usually wrong) NETGAME_DATAPKT_MAXSIZE define
            and sizeof(NetGamePacketT) to determine max packet size.  This fixes the oversized packet send support
            that was broken in 4.11.0 for packets larger than 528 bytes.

    DirtySock (Revolution)
        DirtyNetRev
            Added temporary workarounds for broken SOBind() to port zero and broken SOPoll() to detect when a TCP
            connection has been established.


DirtySock SDK 4.11.8 - January 16, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 130.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch-061218
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: EAConfig, RevolutionNDev, and RevolutionSDK were updated from the previous release.

Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Fixed a bug introduced in DirtySock 4.10.3 that would cause the "when" result returned from
            CommUDPRecv() to always be zero.  NetGameLink uses this value to calculate the "ping" and "late"
            values in the NetGameLinkStatT and this bug caused those values to be incorrect.

        ConnApi
            ConnApiControl() 'gsrv' will now call VoipControl() 'serv' to enable/disable server mode as
            appropriate.
        
        LobbyGameManager
            Fixed a case where after leaving a game, a subsequent rejoin of the same game could fail.

        LockerApi
            Changed file sort behavior to use a case-insensitive string compare instead of a case-sensitive
            string compare.

        ProtoHttp
            Removed state assignment to ST_DONE in _ProtoHttpChunkProcess() when reading the terminating chunk.
            Typically this code ended up being superfluous, as the state would already be ST_DONE.  However, if
            the entire header and response were received in the same packet, this would change the state from
            ST_BODY to ST_DONE, preventing ProtoHttpUpdate() from making the transition itself and closing the
            socket as appropriate.  This condition would cause a subsequent request to try and reuse the socket,
            which would immediately fail.

        XmlList
            Bug fix for "err" handling.
            
            Fixed LKEY URL bug (was missing site=easo on the end).
        
    DirtySock (Revolution)
        DirtyNetRev
            Fixed _SocketRecvFrom() to pass an SOSockAddr to SORecvFrom() and pre-initialize the length to
            zero.  This fixes SO_EINVAL error returns from this function.

    DirtySock (Xbox)
        Voip
            Fixed a bug where after a disconnect a player couldn't connect to the other without shutting down
            and restarting the Voip ref.

    DirtySock (Xenon)
        DirtyErrXenon
            Added EABORT and EFAIL error codes.
        
        LobbyLogin
            Fixed to get locality based on port index when registering a new user.  Previously, users registering
            from ports one through three would get a default locality of enUS.

        NetConnXenon
            Added NetConnStatus2() implementation, added ability of 'serv' selector (when sent to NetConnStatus2())
            to pass in a service ID to do a direct lookup of the service, if the service ID doesn't exist in the
            service array.

        ProtoPingXenon
            Added ability to "ping" session hosts by passing the session identifier (binary) in the MachineAddr.
            Session hosts enable this functionality by calling ProtoPingControl2() 'sess'.


DirtySock SDK 4.11.7 - January 9, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.18.00-dirtysdk
        Framework   2.08.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 130.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 0.53.000
                    RevolutionSDK 2.4-061130 (limited release)
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

Changes/bugfixes in this release:

    Build (PSP)
        psp-sn-dev-debug-opt.xml
            Fixed a bug that caused CProgram cflags to be replaced with StdProgram cflags, which caused
            CProgram samples to generate compiler warnings.

    DirtySock (All)
        CommUDP
        NetGameLink
            Changed to accurately estimate the raw bps and network bandwidth usage for the Xbox/360 platforms.

        LobbyLocalize
            Changed to not ouput % on empty strings ("-" or "") for percent-localization.

    DirtySock (Revolution)
        DirtyNetRev
            Use SORecv() instead of SORecvFrom() for stream sockets, because SORecvFrom() will return
            SO_EINVAL on a stream socket.  With this change basic socket support is working on the
            Revolution platform.
            

DirtySock SDK 4.11.6 - January 2, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.18.00-dirtysdk
        Framework   2.08.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 130.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 0.53.000
                    RevolutionSDK 2.4-061130 (limited release)
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: This release requires RevolutionEX (new) and RevolutionSDK 2.4 (updated) to build for the
    Revolution platform.  DirtySock will compile and link on Revolution, but most functionality is not
    yet working.
    
    NOTE: This release is built against PS3 132.003.

Changes/bugfixes in this release:

    DirtySock (All)
        LobbyCommonDefs
            Added new LOBBYAPI_ROOM_FL_GAME flag.
            
        NetGameLink
            Added new structure elements NetGameLinkStatT.nps (network bytes per second) and
            NetGameLinkStatT.rpps (raw packets per second) entries to NetGameLinkStatT structure.  Revamped
            documentation for existing fields to be more clear as to what they actually measure.
            
            Fixed a bug where rps (raw bytes per second) tracking was accounting for 13 bytes of packet data
            more per packet than it should have.  Removed estimated udp overhead from rps value and added a
            new field, nps, to account for overall network data rate.  After this change bps is the amount
            of user data sent by NetGameLink per second, rps is the amount of data sent by CommUDP per
            second, and nps is actual network data size (rps + UDP/IP header).

        XmlFormat
            Changed XmlFormatVPrintf() to allow xml tag names to contain underscores, and to properly format
            date type ("%e") for elements using XmlAttrSetDate().

        XmlList
            Changed tag names for better readability: itm->item, itms->items, prp->prop.

    DirtySock (Revolution)
        DirtyLibRev
            Fixed NetTick() to use OSGetTime() instead of OSGetTick(), which prevents 32bit overflow from
            wrapping the NetTick() timer after roughly 70 seconds.

        DirtyNetRev
            Work in progress on getting Revolution sockets working.
            

DirtySock SDK 4.11.5 - December 19, 2006

    This SDK release was built against the following first-party runtime versions:
    
        DS          DSCodeWarrior 3.2-1
        PS2         Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE       Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3         Cell SDK 130.002
        PSP         Sony PSP Runtime Libraries v2.8.0
        Revolution  RevolutionSDK 2.2-patch10-061018
        Win32       Visual Studio.NET 2003
        Xbox        December 2003 QFE 5849.17
        Xenon       December 2006 QFE 4929.0

    NOTE: Previous V4 releases were built with Nant zip, which uses the current date for all included files.
    This release, and subsequent releases, are built with the modtime of the file instead.  After updating
    please make sure to do a clean build so that there are no dependency issues.

    NOTE: This release is built against PS3 130.002 and Xenon 4929 SDKs.

New in this release:

    DirtySock (All)
        XmlList
            XmlList is a new module used to fetch and parse XML formatted in the custom ItemML format from a
            web server.

Changes/bugfixes in this release:

    DirtySock (All)
        ProtoHttp
            Fixed a bug where, if ProtoHttpCreate() failed due to lack of memory, it would crash trying to
            assign a value to the null ref.

            Added ProtoHttpStatus() 'host' selector to return the hostname for the current operation, if any.
            
        XmlParse
            Added parsing for CDATA sections in a tag's contents.  This functionality is used by the new
            XmlList module.
                    

DirtySock SDK 4.11.4 - December 12, 2006

    This SDK release was built against the following first-party runtime versions:
    
        DS          DSCodeWarrior 3.2-1
        PS2         Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE       Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3         Cell SDK 110.006
        PSP         Sony PSP Runtime Libraries v2.8.0
        Revolution  RevolutionSDK 2.2-patch10-061018
        Win32       Visual Studio.NET 2003
        Xbox        December 2003 QFE 5849.17
        Xenon       September 2006 QFE 4025.0

Changes/bugfixes in this release:

    DirtySock (All)
        ClubApi
            Fixed a possible crash if there is no blob to update the wins on.

        Favorites
        PortTestPkt
        LobbyHasher
        LobbySort
            Changed to use EAFN_SERVER definition to determine if building for lobby server or client, instead
                of DIRTYCODE_PLATFORM definition.

        LobbyGameManager
            Added GameManagerControl() 'gsrv' selector to enable/disable gameserver mode.  In gameserver mode,
            game creation calls will issue a lobby server 'gpsc' command instead of the normal 'gcre'.  The
            'gpsc' command requests a server-hosted game from the lobby server.
        
            Added GameManagerStatus() 'gnfo' selector to get the most recent LobbyApiPlayT record cached by
            GameManager.  Note that if the game is a server-hosted game, the gameserver entry will have been
            removed from the play record.

            Added new GAMEMANAGER_CBTYPE_PLAYINFO callback, which indicates new play info has been received from
            the server and is available via the 'gnfo' GameManagerStatus() selector.

            Fixed a bug where a GameServer game followed by a non-GameServer game would use the previously used
            GameServer.  Cleaned up LobbyApiPlayT parsing code that was intended to handle GameServer games; as
            GameServer games now are identifed earlier and the GameServer entry is removed, this code became
            unnecessary.
        
    DirtySock (DS)
        DirtyNetDSAdhoc
            Wrote stack move macros for interrupts to move the stack to a memory buffer, which fixes the problem
            of being able to print inside of an interrupt.
        
        NetConnDS
            Added ability to specify max child count as parameter to NetConnCreate().

        Voip
            Added stubbed version of Voip.

    DirtySock (PS3)
        NetConnPS3
            Fixed a build warning when building against Sony SDKs previous to 110.006.

    DirtySock (Revolution)
        Voip
            Added stubbed version of Voip.

    Platform
        Platform.h
            Added auto-detection of Revolution platform.


DirtySock SDK 4.11.3 - December 5, 2006

    This SDK release was built against the following first-party runtime versions:
    
        DS          DSCodeWarrior 3.2-1
        PS2         Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE       Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3         Cell SDK 110.006
        PSP         Sony PSP Runtime Libraries v2.8.0
        Revolution  RevolutionSDK 2.2-patch10-061018
        Win32       Visual Studio.NET 2003
        Xbox        December 2003 QFE 5849.17
        Xenon       September 2006 QFE 4025.0

    NOTE: A new parameter was added to the LobbyLanCallbackT function callback type in this release.  User
    code that specifies a LobbyLan callback will need to update the callback function declaration to build
    without error.

Changes/bugfixes in this release:

    DirtySock (All)
        ClubApi
            Changes to support the new capture the flag feature
        
        DirtyErr
            Added two new functions that allow specifying a custom table.

        LobbyLan
            Added ability to specify game port with LobbyLanControl('gprt') selector. Also added
            LobbyLanStatus('host') selector which returns TRUE if hosting, else FALSE.
            
            Callback changes:
                Added PLYRKILL callback message, called when gameutil&gamelink refs are destroyed
                Added a data pointer parameter to user callback
                Added player info to JOINREQ callback, so app can know who is requesting to join.

            Fixes to handling of connection close if join request is refused by host.

            Added code to compact some messages before sending to save space (useful on Nintendo DS, which has
            severely limited transmission sizes in Adhoc mode, particularly on a child console).

        NetGameLink
            Added debug warnings for unrecognized packet kind on send and receive.

        WebOffer
            Added default color for WebOfferInitialize().

    DirtySock (DS)
        DirtyLibDS
            Use vsnzprintf() for NetPrintfCode(), and made printf buffer static to prevent stack overrun issues.

            Changed to use OS_PutString() instead of OS_TPrintf() (lower stack usage).

        DirtyNetDSAdhoc
            Alpha version of initial DS Adhoc support, including parent creation, child scanning for parents,
            child connecting to parents, and parent/child communication using upper-layer DirtySock protocols
            (LobbyLan/NetGameLink/CommUDP).

        NetConnDS
            Fixed uConnStatus to come directly from SocketInfo(), instead of being locally cached during the
            idle function, which could cause an old status to be returned.
            
        ProtoAdvt
            Added packet compaction of variable-length string fields (kind, name, note and addr), currently
            compiled in only on Nintendo DS to avoid potentially breaking cases where users might have multiple
            null-terminated strings in one or more of those fields.
            
            Disabled seeding on Nintendo DS.  This is required because the advertising packets are actually
            set into the DS wireless beacon info instead of sending them, so setting the seed overwrites the
            current advertising info.  Seeding is not required here, so simply omitting the seed on DS avoids
            this issue.
                        
        DirtyLibDS, DirtyNetDSAdhoc, NetConnDS
            Added include of os.h, required to build against dscodewarrior 3.2-1.


DirtySock SDK 4.11.2 - November 28, 2006

    This SDK release was built against the following first-party runtime versions:
    
        DS          DSCodeWarrior 3.1-2
        PS2         Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE       Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3         Cell SDK 110.006
        PSP         Sony PSP Runtime Libraries v2.8.0
        Revolution  RevolutionSDK 2.2-patch10-061018
        Win32       Visual Studio.NET 2003
        Xbox        December 2003 QFE 5849.17
        Xenon       September 2006 QFE 4025.0

New in this release:

    Build
        Added Revolution platform support.

    DirtySock (DS)
        Initial Adhoc implementation (WIP).  Inet functionality is not the default and must now be specifically
        selected by calling NetConnStartup("-inet"), as on PSP.

    DirtySock (PS3)
        NetConnPS3
            Added NetConnStatus('chat') selector that returns whether chat is enabled or disabled based on
            parental controls using the new sceNpManagerGetChatRestrictionFlag() call available under 110.006
            and greater SDKs.

    DirtySock (Revolution)
        Initial Revolution port.  Compiles and links but has not yet been tested (at all) due to lack of dev
        hardware.

    Platform
        Plat-time
            Implemented ds_timezone() for PS3.

Changes/bugfixes in this release:

    DirtySock (PS3)
        Voip
            Changed to use NetConnStatus('chat') selector to determine voice privileges when building under
            110.006 or greater.


DirtySock SDK 4.11.1 - November 21, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 110.006
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   September 2006 QFE 4025.0

    NOTE: This release is built against PS3 110.006 SDK.

New in this release:

    Build
        Added full Nintendo DS support, including libraries and a sample application, using new eaconfig
        support.
        
Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Changed ConnApiOnline() to save input info at the very start of the function.  This fixes a bug where
            the game name was referenced from the not-yet-copied location when creating ProtoMangle, which meant
            ProtoMangle never saw the game name.

            Removed session component from tunnel key, because it can be nondeterministic between peers, which causes
            the key to not match and the tunnel to fail.

        DirtyNet
            Reduced SOCKET_MAXUDPRECV size to 1264 to match maximum Xbox 360 VDP packet size.

        NetGamePkt
            Reduced NETGAME_DATAPKT_MAXSIZE to 1200 to mirror reduction in SOCKET_MAXUDPRECV size.

        ProtoHttp
            Fixed a bug where the input offset wasn't being reset after a POST or PUT operation.  This would
            cause the next POST or PUT to fail.  This bug was introduced in DirtySock 4.10.3.
    
    DirtySock (PS3)
        DirtyNetPS3
            Bumped up _SocketRecvThread() stack size from 12k to 16k.
        
            Changed SocketBind() to not bind port 3658/UDP, as it is used by Sony for STUN services and can
            sometimes not be available.
            

DirtySock SDK 4.11.0 - November 14, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 102.002
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   September 2006 QFE 4025.0

Changes/bugfixes in this release:

    Build
        Removed most of DirtySDK's custom copy of eaconfig and replaced it with limited overrides of a
        "stock" version of eaconfig that is selected in masterconfig.xml.  Updated to eaconfig 1.17 in
        preparation for adding forthcoming NDS and Wii support.

        Removed t2xbox and t2xenon dlls from the pc build dependencies so that the PC configuration can be built
        without installing the xbox or xenon sdks.


DirtySock SDK 4.10.3 - November 7, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 102.002
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   September 2006 QFE 4025.0

    NOTE: This release includes a change to allow much larger packets to be sent with NetGameLink/CommUDP.
    The allowed packet size has been increased at the NetGameLink layer to 1400 user data bytes.  HOWEVER,
    the NetGamePacketT.body.data field remains 528 bytes, as with the previous release.  This is to avoid
    suddenly adding close to 1k of data to the size of a NetGamePacketT structure; as these are often
    declared on the stack it could cause stack overflow problems.  To use >528 byte packets, please use
    something like the following method:
    
        uint32_t uPacketBuffer[NETGAME_DATAPKT_MAXSIZE/4];
        RawUDPPacketT *pPacket = (RawUDPPacketT *)uPacketBuffer;
        [...]

    This awkward method will be deprecated in V5, but until then, please make sure to allocate enough
    space for packets larger than 528 bytes.        

Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Debug-only change to make mismatched connident printout more verbose.

            Changed stack-based RawUDPPacketT structures used to write control packets to RawUDPPacketHeadT
            structures that don't contain data.  This limits stack consumption for these structures to just the
            header, meaning data increases do not impact stack allocation for these structures.

            Changed static RawUDPPacketT used for multipacket deconstruction to a stack-based RawUDPPacketHeadT
            structure.  In addition, changed _CommUDPProcessFlow() to take a RawUDPPacketHeadT pointer instead
            of a RawUDPPacketT pointer, and changed _CommUDPProcessInput() to take separate RawUDPPacketHeadT
            and data pointers instead of a single RawUDPPacketT structure.

            Made a RawUDPPacketT declared on the stack in _CommUDPProcessOutput() static to remove it from the
            stack.

            Increased data field in RawUDPPacketT from 552 to SOCKET_MAXUDPRECV-8 (currently 1416).
          
        ConnApi
            Increased client identifier from 16 to 32 bits

            Set local and remote client identifiers for VoipTunnel and ProtoTunnel.

            Use virtual addressing if tunnel is enabled.

        DirtyNet
            Increased SOCKET_MAXRECV from 1000 to 1424.

        LobbyGameManager
            Added GameServer support.

        NetGamePkt
            Increased NETGAME_DATAPKT_MAXSIZE from 528 to 1400.  Did *not* increase the side of
            NetGamePacketT.body.data, to avoid adding 872 bytes per packet structure to user stack.

        ProtoHttp
            Fixed ProtoHttpPost() to correctly send all data buffered with the header.  Previously, only one
            send was executed, and if it didn't send all of the data, the remaining data that was buffered would
            be lost.

        Voip
            Added VoipConnect4() which includes an optional session identifier.  If the session identifier is
            set to a non-zero value it will be used to prevent connection/disconnection packets from a different
            session from interfering with the current session.

    DirtySock (Xenon)
        Voip
            Added VoipControl() 'mrdr' selector to allow the client to specify a callback function to receive
            RawMicrophoneDataReady events from the Xenon.  Must be called before VoipStartup() (pass a NULL
            pVoip ref).
            
            Officially deprecated VoipControl() 'sess' selector (use 'clid' instead).


DirtySock SDK 4.10.2 - October 31, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 102.002
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   September 2006 QFE 4025.0

    NOTE: Due to the addition of the new PS3 CELP codec support in VoIP, previous implementations of PS3 VoIP
    are not interoperable with versions from this release on.

New in this release:

    DirtySock (PS3)
        VoipCelp
            Implemented interface to CELP voice codec for PS3 provided by Sony.  This codec may be selected
            instead of the default DVI3 codec by calling VoipControl(pVoip, 'cdec', 'celp') after calling
            VoipStartup().  It offers better compression ratio (roughly three times smaller voice data) with
            roughly comperable quality, at the cost of some PPU and SPU resources.  This codec is recommended
            for use by games that allow more than four players.
            
Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Added paranthesis around a sizeof() argument to be less confusing - no functional change.

    DirtySock (DS)
        DirtyLibDS
            Fixed NetTick() to use 64bit calculation to avoid overflow.

        DirtyNetDS
            Added required <nitro.h> include.

        NetConnDS
            Implemented NetConnDisconnect() as pass-through to SocketControl('disc').

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Changed _MapAddress() to allow a source port of zero as input to the mapper as a wildcard match.

            Added SocketControl() 'madr' selector to allow mapping of a given input address.
            
            Fixed _SocketLSPQueryDone() to only execute LSP resolution until LSP processing is complete, which
            prevents spurious extra entries from being generated when pHostent->Done() is called more than once.
            
            Fixed _SocketLSPQueryDone() to not overflow the address buffer if more than 32 mappings are requested.

    DirtySock (PS3)
        Voip
            Pass unhandled VoipControl() selectors through to VoipHeadsetControl().

            Added VOIP_CBTYPE_SENDEVENT callback support.
            
        VoipHeadset
            Added ability to set signal attributes using VoipHeadsetControl() selectors 'agcl', 'bkgn', and
            'rvrb'.

    DirtySock (PSP)
        DirtyLibPSP
            Bumped up netlib thread stack size from 12k to 32k.

    DirtySock (Xenon)
        DirtyLspXenon                    
            Deprecated Query support, only valid for obsolete SDKs.

        LobbyPingManager
            Set uServerAddress to zero to force ping of SG.  This does not change current functionality, but
            is required for a future change to allow pinging of LSP servers.


DirtySock SDK 4.10.1 - October 24, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 102.002
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   September 2006 QFE 4025.0

    NOTE: This release is built against PS3 102.002 SDK.
    
    NOTE: The XOnline Partner library has been deprecated, and the remaining references to it in the
    DirtySock SDK have been removed.

Changes/bugfixes in this release:

    DirtySock (All)
        NetGamePkt
            Increased NETGAME_DATAPKT_MAXSIZE to 528.

        ProtoAries
            Fixed a bug where packet size was limited to an arbitrary 32768 bytes.  Packet size is now limited
            by create buffer size instead.

        ProtoHttp
            Fixed to parse Location: header (used for automatic redirection) out of receive buffer instead of
            cached header buffer.  The cached header buffer is smaller and could result in a Location: header
            being missed and the requested redirection not taking place.

            Changed redirection to copy new URL from Location: header to end of input buffer instead of a stack
            local 512 byte array, as was the previous behavior.  This allows for a much larger URL than was
            previously possible.
       
        VoipTunnel
            Fixed signed/unsigned warning on unix build.

            Fixed a bug where VOIPTUNNEL_CLIENTFLAG_RECVVOICE was used to initialize the voice receive timeout
            instead of VOIPTUNNEL_RECVVOICE_TIMEOUT.

            Added VoipTunnelControl() 'rtim' selector to set voice receive timeout value.

    DirtySock (PS3)
        HLBudApiPS3
            Implemented a call to the buddy presence callback so that OSDK/Game will recieve notification of
            changes to buddy state and presence data.

        NetConnPS3
            Fixed to build against 093.002 and previous SDKs.
                

DirtySock SDK 4.10.0 - October 3, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 096.002
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   September 2006 QFE 4025.0

    NOTE: This release is built against PS3 096.002 and Xbox 360 September/4025 SDKs.

Changes/bugfixes in this release:

    DirtySock (All)
        CryptRSA
            Added a warning when using general-case exponentiation code in CryptRSA as it is likely to be slower
            than the explicit code to handle exponents of 3, 17, or 65537.

        NetGameLink
            Changed a memcpy to a memmove in NetGameLinkRecv().  This change fixes a memory-trashing bug on PS3
            titles using NetGameDist.

        ProtoUpnp
            Fixed PROTOUPNP_STATUS_DELPORTMAP define to have a different value from PROTOUPNP_STATUS_ADDPORTMAP.

        VoipTunnel
            Fixed to call _VoipTunnelRouteVoipPacket() with correct argument order (previously, the final two
            arguments were incorrectly passed flipped).

    DirtySock (PS3)
        DirtyErrPS3
            Added GameData error codes.        

        VoipHeadset
            Removed cellAudioPortClose() workaround that was added in release 4.9.3.  This workaround is no
            longer required with the Sony 096.002 flash.

    DirtySock (Xenon)
        Voip
            Added new voip event VOIP_CBTYPE_SENDEVENT, indicating a change in the sending state of the local user.
            

DirtySock SDK 4.9.3.1 - September 27, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 095.001
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2006 QFE 3529.0

Changes/bugfixes in this release:

    DirtySock (All)
        VoipTunnel
            Fixed _VoipTunnelClientListSend() to check send flags using bitwise operators instead of doing a
            simple comparison.

    DirtySock (PS3)
        LobbyLogin
            Changed a 'tick' response to be 'dber' locally instead of 'pass'.  This selects a more appropriate
            error message.  Suggested text:

                Error
                We are currently experiencing network difficulty.
                Please try again later.

        NetConnPS3
            Changed to optionally take TitleID and SpID as inputs to NetConnStartup().  If these parameters are
            not specified, NetConn defaults to using a test TitleID and SpID.  Shipping titles are required to
            specify the EA SpID (UP0006) and their TitleID.

        VoipHeadset
            Added debug-only warning if voipheadset is used to call cellAudioInit.  This causes problems due to
            a Sony bug that is expected to be fixed in the 096 flash.

    DirtySock (Xenon)
        ConnApiXenon
            Fixed a bug in peer-web mode where the listening side and connecting side were determined differently
            for the voip and peer connections.  This resulted in both sides trying to talk to each other at
            startup (one side sending voip data, the other side sending game data) which could break the fragile
            Xbox 360 peer networking.        


DirtySock SDK 4.9.3 - September 26, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 095.001
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2006 QFE 3529.0

    NOTE: This release of DirtySock was built against Sony PS3 runtime 095.001.

    NOTE: Due to a bug in cellAudio that was introduced in the 094.002 flash, VoIP has been changed to
    not close its audio port on VoipShutdown() (see changelog entry for more info).  This change requires
    that the calling application call cellAudioInit() and cellAudioQuit() itself, or VoIP will crash when
    trying to reuse an invalid port if it inits and shuts down cellAudio.  In addition, if the application
    calls cellAudioQuit() it is likely that the original bug (headset output not working subsequently without
    pulling and reinserting the headset) will manifest.

Changes/bugfixes in this release:

    DirtySock (All)
        ProtoSSL
            Added support for GeoTrust Equifax CA, used on secure Pogo webservers.

        VoipTunnel
            Added new VoipTunnelClientT.uFlags field, and VOIPTUNNEL_CLIENTFLAG_RECVVOICE flag, to track when
            voice is being received from a client.

            Changed Debug-only packet routing print statement to include source clientId, also made PNG packet
            echoing verbose so they can be programmatically filtered.

        WebOffer
            Added the implementation to support the FixedImage which lets you add up to 4 images in different
            places and control the position of each one.

    DirtySock (DS)
        DirtyLibDS
            Use OS_TPrintf() instead of OS_Printf() for thread safety.

        DirtyNetDS
            Added SocketControl('wepk') selector, used to set the WEP key for connecting to an access point.
            
            Moved DWC init/shutdown to SocketCreate()/SocketDestroy().

            Added call to DWC_ConnectInetAsync(), which is what is used for shipping products to connect to a
            pre-configured access point.  This function is called if the SSID is specified as NULL or the build
            is not a debug build.
        
    DirtySock (PS3)
        DirtyErrPS3
            Added new dataflag error codes

        DirtyNetPS3
            Fixed SocketShutdown() to not call shutdown() on an INVALID_SOCKET ref.  Doing so generated an error
            return from shutdown(), but otherwise did not seem to cause a problem.

            Fixed a critical section leak on socket destruction (was leaking one per socket).
        
        LobbyGlue
            Fixed a bug in _LobbyGlueAddPlayerHistory() (new function added in DirtySock 4.9.2) which caused
            us to attempt to add the local player rather than the opponents to the Players Met list.
        
        NetConnPS3
            Removed call to sceNpManagerGetPsHandle(); as the OnlineId (what PsHandle has been renamed to) is
            available from the NpId, this call is superfluous.
        
            Removed calls to sceNpManagerInit() and sceNpManagerTerm().  These calls were deprecated by Sony
            and replaced with stub functions.

            Fixed a bug where the ticket size variable set in the NpManager event was not cleared when calling
            NetConnDisconnect().  This would cause a subsequent NetConnConnect() attempt to fail to get the
            ticket unless DirtySock was shut down and started up again.

            Added code to NP callback handler to handle disconnection events (specifically duplicate signin)
            and set the NetConn connection status accordingly.  This can be detected by polling
            NetConnStatus('conn') and watching for an error result.

            Added new NetConnControl('sflg') selector to initiate a transaction with the NP servers to
            set the global data sharing flag to OPTIN.

        Voip
            Added new functionality to handle voice-banned users, functionality that is now required by Sony.

        VoipHeadset
            Calling cellAudioPortClose() disables the headset until it is removed/reinserted, a bug that was
            introduced in the 094.002 flash.  Changed code to use a static port number and keep it open once
            it is opened to work avoid the problem.
            
            Fixed VoipHeadsetShutdown() to not call cellMicClose() if the mic had not been opened.  Calling
            the function when the mic was not open was causing a crash.
            

DirtySock SDK 4.9.2 - September 19, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 093.005
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2006 QFE 3529.0

    NOTE: This release of DirtySock was built against Sony PS3 runtime 093.005.

Changes/bugfixes in this release:

    Build (All)
        Added test to ensure libraries exist and print a diagnostic and fail if not.

    DirtySock (All)
        ConnApi
            Added a new connapi status type CONNAPI_STATUS_DEST.  An event will now be thrown with iNewStatus
            equal to CONNAPI_STATUS_DEST when the gamelink and/or gameutil refs are destroyed for a given
            connection.  This allows an application to correctly track whether the refs are valid.

        DirtyMem
            Fixed debug print in DirtyLibDebugFree2().

        LobbyGameManager
        LobbyUsersetManager
            Adjusted debug string arrays to account for new ConnApiConnStatusE value CONNAPI_STATUS_DESC.

        TelemetryApi
            Adding debug tracing around the three methods that can cause telemetry to be disabled.

        WebOffer
            Added game region field, so that server can support a game region which is user selected and
            different from the physical location.  Use the REGN tag on init to set the four-character region
            code.

    DirtySock (DS)
        DirtyLibDS
            Changed to use OS_Printf() instead of printf() for NetPrintf().

            Reduced NetPrintf stack buffer from 4k to 2k (got a stack overflow in something called from DWC).
                    
        DirtyNetDS
            Initial DWC integration, with working connection to an access point and working SocketLookup thread.

    DirtySock (PS3)
        DirtyLibPS3
            Bumped up NetLib thread from 8k to 16k.

        DirtyNetPS3
            Fixed _SocketIdle() and NetIdleAdd() in SocketCreate() to correctly pass state pointer.  This was
            not causing a problem but it would have if the SocketStateT structure changed to not have the socket
            list as its first member.

            Added a debug warning if an unknown selector is passed to SocketControl().
        
        HLBudApiPS3
            Fixed a crash bug caused by failing to initialize a pointer to NULL when creating new buddy records.

        NetConnPS3
            Changed to poll SocketInfo('conn') when in IDLE state.  This allows detection of disconnection
            events, which are detectable to an application by polling NetConnStatus('conn').

        Voip
            Moved connectionlist local status initialization from VoipConnect3() to VoipStartup().  This fixes a
            bug where local status would be reset to VOIP_LOCAL_BROADBAND when calling VoipConnect3().
            

DirtySock SDK 4.9.1 - September 12, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 093.002
        PSP     Sony PSP Runtime Libraries v2.8.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2006 QFE 3529.0

Changes/bugfixes in this release:

    DirtySock (All)
        LobbyCommonDefs
            Changed max persona length to 16 to support PS3 Online IDs
            which have a max length of 16.
        
        HLBudApi
            Added HLBApiCreate3 to allow the client to set the title id on
            PS3.

        XmlFormat
            Fixed XmlTagStart() to properly check for buffer overruns.  The
            original checks would allow a buffer overrun in some scenarios.
            Also replaced all usages of snprintf() with the safer snzprintf().
            
    DirtySock (PS3)
        HLBudApiPS3
            Fixed several allocations and deallocations that were using
            DirtyMemAlloc/DirtyMemFree to use the pBuddyAlloc/pBuddyFree
            function pointers passed into HLBApiCreateX.

            Re-enabled the suspend function since the underlying Sony API
            is working properly in SDK 093.002.

            Added block list enumeration to hlbuddy.

        NetConnPS3        
            Fixed to reset connection status to zero when calling
            NetConnDisconnect().

        Voip
            Added support for VOIP_CBTYPE_HSETEVENT callback event.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Changed async recv thread to hold global critical section
            until after the event critical section has been entered.
            This eliminates a small window in _SocketClose() where an
            event that was added to the event list could be destroyed
            before the call to WSAWaitForMultipleEvents(), which would
            generate a RIP on Xenon.

    DirtySock (Xenon)
        LobbyApiXenon
        Voip
            Changes to support new TCR 93 restriction added in August 1.3b
            TCR release requiring that voice communication respect the most
            restrictive privilege of any logged in profile.
        

DirtySock SDK 4.9.0 - September 6, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 092.002
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2006 QFE 3529.0

    NOTE: PS3 VoIP as of 092 requires linking against libmic_stub.a and
    loading the MIC PRX.  PlayStation3GCC has been deprecated as the
    microphone SDK is now integrated into the mainline release.

Changes/bugfixes in this release:

    DirtySock (All)
        LobbyUsersetManager
            Fixed to use ConnApiDisconnect() instead of ConnApiStop() to
            unhook the peer-to-peer VoIP connections.

    DirtySock (PS3)
        DirtyAddrPS3
            New PS3-specific version that encodes NpId, internal, and
            external addresses.

        DirtyErrPS3
            Removed error code deprecated in 092.002.

        DirtyNetPS3
            Changed SocketInfo('ethr') to try and acquire the MAC address
            if it hasn't been acquired yet.  Also changed to support 'macx'
            as that is what is used by NetConnMAC().

        HLBudApiPS3
            Added new PS3-specific function HLBAddPlayersToHistory(),
            which manages adding players to the Players Met list.

            Only attempt to receive event data from NP_Basic for the
            events that actually carry data.  This removes an extraneous
            error message from the debug output.

        LobbyApiUtil
            Changed to add the external address to the DirtyAddrT coming
            from the server, instead of synthesizing it like other non-xbox
            platforms.

        LobbyGlue
            Added _LobbyGlueAddPlayerHistory(), used to add players in a
            game (upon start event being received) to the Players Met list
            using HLBudApi.  Any titles using LobbyGlue with Lobby and
            HLBudApi will do this automatically.

            Added check for Wireless connection type to lobby hw flags.
            Currently this is only supported on PS3.

        LobbyLogin
            Send MADDR= to the new DirtyAddrT containing NpId, internal,
            and external address up to the server on 'auth' and 'pers'
            requests.

        NetConnPS3
            Fixed bug that stuck netconnps3 in connecting state and
            prevented NP login from working.

            Added a new NetConnStatus() selector 'npid' to get the SceNpId
            of the logged in user.

        Voip
            Implemented headset inserted/removed callback.  VoipLocal() &
            VOIPLOCAL_HEADSETOK now works correctly.

        VoipHeadset
            Several fixes to audio prebuffering and playback to improve
            playback quality in general, and to specifically fix issues mixing and playing back
            multiple streams.  Switched to 8khz sampling.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Fixed a bug in SocketDestroy() where the new event critical
            section (added in 4.8.3) could be accessed after being
            destroyed.  This has not been shown to cause problems in
            practice but was not correct nonetheless.

    DirtySock (Xenon)
        XnFriends
            Fixed a logic error where we were masking off the wrong bits of
            an error code to determine if the friends enumeration worked
            properly.


DirtySock SDK 4.8.3 - August 29, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 091.005
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   July 2006 QFE 3424.0

    NOTE: Next week's release (4.9.0) will be built against the Xenon
    August 2006 SDK.
    
Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Changed connection logic so that bidirectional communication
            on both sides is assured before transitioning to an OPEN
            state.  This prevents the possibility that one client might
            think the connection is open (having received data successfully
            from the peer) when in fact the peer is unable to receive the
            packets sent by the client.
    
            Changed to allow port sniffing (recognizing that a packet has
            come from a different port than expected, and changing to use
            that port for future sends) to work on INIT packets (sent by
            the connecter) as well as POKE packets (sent by the listener).
        
        LobbyApi
            Increased the buffer for cacheing the 'pers' response to 1024
            bytes from 512 bytes.
        
        LobbyLogger
            Removed dynamic memory allocations from LobbyLoggerConnect() that
            were being used to create dynamically sized string buffers.  Static
            string buffers are now created on the stack with sufficient size to
            contain the data.

        ProtoUpnp
            Added ProtoUpnpControl() 'ctrl' call to get the control ident
            for the current state.
    
            Changed ProtoUpnpControl() so that calls that require a
            discovered router will not be executed if a router hasn't been
            discovered.  Also changed so calls that require a described
            router will not be executed if a router hasn't been described.

        VoipConnection
            Changes to support VoipTunnel.

        VoipTunnel
            Updated to work with PS3/Generic as well as Xbox/Xenon.

    DirtySock (PS2)
        Rpc-e
            Added a debug warning to the ee kernel tty if the rpc-e timer
            overflows.  This happens if the rpc-e vblank handler isn't
            called for more than ~14 seconds at a time.  Typically this
            happens if a vblank handler is installed subsequent to DirtySock
            startup that returns -1 instead of zero, thus terminating the
            callback chain and preventing the rpc-e timer from updating
            correctly.
    
    DirtySock (PS3)
        HLBudApiPS3
            Fixed several places where pMessageList was accessed even if it
            was null.  This can happen if the client hasn't received any chat
            messages and destroys the HLBuddy module.

        NetConnPS3
            Changed to wait for network status to be confirmed as active
            before transitioning to NP connectivity state.

        VoipHeadset
            If the audio library was initialized by another system component
            cellAudioInit() would return an error code and VoipHeadsetCreate()
            would fail; added logic to handle this case appropriately.

            Fixed crash at shutdown due to de-initializing libaudio when
            we did not originally initialize it.  Also added some debug
            output for device settings and libMicInit.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Added event critical section to prevent destruction of an event
            while it is being polled by WSAWaitForMultipleEvents().  This
            prevents a possible RIP on Xenon when closing a socket.
    
    DirtySock (Xenon)
        XnFriends
            Changed call to XEnumerate() in _enumerateFriends() to be async.
        
        LobbyApi
            Added a debug warning if the lobby config file is too big for the lobbyapi
            config buffer.


DirtySock SDK 4.8.2 - August 22, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 091.005
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   July 2006 QFE 3424.0

Changes/bugfixes in this release:

    DirtySock (All)
        LobbyApi
            Added a debug warning if the lobby config file is too big for the lobbyapi
            config buffer.

        TelemetryApi
            If you send more than 7k bytes in SendTransactionData the function would return
            that it had sent all of the data although it only sent 7k bytes.

    DirtySock (PS2)
        NetConnPS2
        Rpc-e
            Changed NetConnStartup()/NetConnShutdown() to explicitly install/remove the
            vblank timer interrupt.  This means the timer interrupt is no longer active
            after calling NetConnShutdown(), which allows the DirtySock EE code to
            subsequently be unloaded safely.
    
    DirtySock (PS3)
        HLBudApi
            HLBApiSuspend is changed to a no-op for PS3 to work around a bug in the SDK.
            This should be reverted when Sony fixes the SDK.

            Fixed a memory leak in hlbudapips3 - memory was allocated when a chat message
            was received but never freed.

        NetConnPS3
            Fixed to free previous ticket, if any, before acquiring a new ticket.  This
            prevents a possible memory leak of the previous ticket, if one exists.

        VoipHeadset
            Fixed to compile against SDK versions < 090.002.  Also changed to require
            091.005 for headset functionality to be available.  Added package dependency
            on PlayStation3Mic 091.005.  This is a standalone package that contains the
            predistribution libmic library.  It is expected to be deprecated when the libmic
            library is available in the mainline release (currently expected for 092).
            
            Implemented port close on shutdown.
            
            Changed to only try to open the microphone once per connect/disconnect of the
            device.

            Changed input sample rate to 12kHz from 16kHz.

    DirtySock (Xenon)
        DirtyErrXenon
            Removed error defines that were deprecated in the July 2006 SDK release.
    

DirtySock SDK 4.8.1 - August 15, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 090.002
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2006 QFE 3215.0

New in this release:

    DirtySock (PS3)
        VoIP
            First version of PS3 VoIP.  Headset functionality is currently available but
            compiled out by default as microphone support is not yet available in the
            mainline PS3 SDK releases.  If interested in obtaining the prerelease
            microphone library, please write DirtySock Admin.
           
Changes/bugfixes in this release:

    DirtySock (All)
        LobbyLogger
        TelemetryApi
            Fixed a bug in LobbyLogger - a crash would occur when an empty string was
            supplied for the auth string in LobbyLoggerAuthEnt() or TelemetryApiAuthEnt().

        LobbyGameManager
            Fixed a bug where after disconnecting from the lobby server when reconnecting
            and attempting to re-join a game before receiving the 'pers' message from the
            server, GameManager will get into a bad state which required the title to
            shut down GameManager and restart it.  This is fixed by detecting the lobby
            disconnect event and cleaning up the GameManager state at that time rather than
            waiting for the 'pers' message.

        LobbyRank
            Added a cancel callback function for the leaderboard fetch as it could cause a
            crash if the leaderboard download was broken and the callback fired.

        VoIP
            Moved number of packets variable in the transmitted packet data before voice data
            to allow for possibility of varied data length based on platform.

        XmlFormat
            Changed to use plat-time functionality instead of inline _SecsToTime() and
            direct calls to time().

    DirtySock (PS3)
        DirtyLibPS3
            Added missing call to sys_net_free_thread_context() in _NetLibThread()

        DirtyNetPS3
            Added missing call to sys_net_free_thread_context() in _SocketRecvThread()
            and _SocketLookupThread().

            Added virtual socket support.
            
            Added SocketInfo() 'bind' selector support for ProtoTunnel.

        NetConnPS3
            Compiled in sceNpManagerUnregisterCallback() for SDK releases >= 085.010 (the
            function was prototyped in 085.007 but not included in the lib).

            Fixed a memory leak in NetConnPS3. The memory allocated for the np ticket was
            not being freed in NetConnShutdown().
        
        DirtyErrPS3
            Fixed to compile against 085.xxx or previous SDKs.
            
        HLBudApiPS3
            Fixed a potential crash in low-memory situation.
            
            Re-added sceNpBasicInit()/sceNpBasicTerm() to restore backwards compatibility
            with SDK 085.xxx.

    Platform (PS3)
        Plat-Time
            Implemented ds_timezone() (used by LobbyZone()) for PS3.  With this change,
            librtc_stub.a must be linked against and CELL_SYSMODULE_RTC must be loaded with
            cellSysmoduleLoadModule().  This functionality is only enabled when DirtySock
            is built against SDK 090.002 or greater.
        

DirtySock SDK 4.8.0 - August 8, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 090.002
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2006 QFE 3215.0

New in this release:

    DirtySock (PS3)
        HLBudApiPS3
            First pass at new High-level Buddy API for PS3.  Includes buddy enumeration,
            prseence data and chat message support.
            
Changes/bugfixes in this release:

    DirtySock (All)
        TelemetryApi
            Enhanced TelemetryApiSnapshotSize() and TelemetryApiSnapshotLoad() to allow
            clients to send in a buffer size that is larger than the actual amount of data
            used to hold the snapshot.  Several titles desire to allocate a fixed sized
            buffer regardless of the current size of the telemetry queue but these boundary
            checks were giving errors.

    DirtySock (PS3)
        DirtyErrPS3
            Added LV2 kernel error codes to error code string table.
        
        DirtyLibPS3
            Fixed gethostbyname() abort in the case where SocketLookupFree() is called
            before the gethostbyname() call has completed.
            
            Fixed to sleep for 1ms instead of 1us in _SocketLookupThread() when waiting for
            SocketLookupFree() to be called.  This fixes a problem where _SocketLookupThread()
            could end up getting stuck in a running state and would never correctly yield to
            other threads, causing a deadlock condition.
        
        DirtyNetPS3
            Fixed a serious critical section bug.  Result codes from sys_mutex_trylock()
            and sys_mutex_lock() were being stored into an unsigned variable and then being
            tested to see whether they were less than zero to determine if an error had
            occurred.  This would permit in some instances calling code to enter a critical
            section it did not own.
            
            Added additional debugging information to provide more information in the case
            of a deadlock situation.
        
            Increased PS3 critical section size to deal with new debug info.

        LobbyLogin
            Added handling of new auth/tick response and remapping of error code to 'pass'.
                            

DirtySock SDK 4.7.3.1 - July 28, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 085.007
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2006 QFE 3215.0

Changes/bugfixes in this release:

    Contrib (PS2)
        PS2Isp
            Added unknown errors to the retry logic. This can occur if the Sony libraries
            report the interface as stopped before we have received the stop event on our
            event handler.  Fixes FIFA and NBA bug.

    DirtySock (All)
        ConnApi
            Changed to allow setting connection timeout higher than default of 10 seconds,
            using new 'ctim' ConnApiControl() selector.
        
        RoomlistApi
            Fix for OSDK to translate room Ident meesage which come with an I= to IDENT=.
        
        WebOffer
            Another fix for the web offer failing after it didn't manage to download an Image.
        

DirtySock SDK 4.7.3 - July 25, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 085.007
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2006 QFE 3215.0

Changes/bugfixes in this release:

    Contrib (PS2)
        PS2Isp
            Implemented retry logic to retry the connection process if an unexpected STOP
            event is received while attempting to connect.  NHL & FIFA bugfix.

    DirtySock (All)
        LockerApi
            Fixed a bug found on PS2 in _LockerApiWaitResponse() that could result in an
            empty response being used even though a full HTTP response was available.

        ProtoTunnel
            Made a couple of debug print statement changes.

    DirtySock (IOP)
        Connect-i
            Improved handling of stopping the network interfaces to reduce the possibility
            of receiving an unexpected STOP event from the Sony libraries.

    DirtySock (PS2)
        NetConnPS2
            Improved handling of stopping the network interfaces to reduce the possibility
            of receiving an unexpected STOP event from the Sony libraries.

    DirtySock (PS3)
        Fixed to compile against SDKs previous to 085.007.


DirtySock SDK 4.7.2 - July 18, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 085.007
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2006 QFE 3215.0

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Updated Tunnel ident from 16 bits to 32 bits.

        DirtyMem
            Fixed a typo in macro wrapper for DirtyMemFree().

        ProtoTunnel
            Added refcounting of tunnels based on clientId.
            
            Changed tunnelId to be equal to virtual address.
            
            Removed physical address comparison support.
            
            Deprecated ProtoTunnelControl('gvrt'), ProtoTunnelControl('virt'), and
            ProtoTunnelMatch().

            Multiple keys per tunnel.
            
            Automatic re-key on recv decode error.
            
            Re-key of send crypto state if freeing current send key.

        TelemetryApi
            Fixed a bug where first usage data was not received by the server.  The problem
            appears to have been introduced in DirtySDK v4.7.0.  If ProtoAries is not
            connected to the server then it will cache outgoing data.  TelemetryAPI would
            send the FULLSENDCOMPLETE event when the data was sent to ProtoAries.  As a
            result the application would destroy TelemetryAPI before ProtoAries could send
            the data to the server.  FULLSENDCOMPLETE is now not sent to the event handler
            until the ProtoAries out buffer is emptied.

        VoipTunnel
            Deprecated VoipTunnelClientListSet().
            
            Completely removed any and all ProtoTunnel usage from VoipTunnel.  Any tunnel
            code is now required to be written outside of VoipTunnel.

        WebOffer
            Fixed to handle a failed resource download without trashing the script.
        
    DirtySock (PS3)
        LobbyLogin
            Initial Network Platform login support.
            
        NetConnPS3
            Initial Network Platform login and ticket acquisition.
    
    DirtySock (Xenon)
        DirtyLSPXenon
            Fixed to correctly compile for SDK revisions older than 3215.
        
        ProtoPingXenon
            Modified ProtoPingRequestServer() to allow the client to ping a server other
            than the default gateway by providing the serviceId in the uServerAddress field.
            The service must be registered by calling NetConnControl('serv') before calling
            ProtoPingRequestServer().
        

DirtySock SDK 4.7.1 - July 10, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 085.007
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2006 QFE 3215.0

Changes/bugfixes in this release:

    DirtySock (All)
        DirtyLib
            Added bytes displayed count to NetPrintMem() header.

        ProtoHttp
            Fixed a bug where, in a buffer full condition with chunked transfer encoding,
            data could be read from a chunk without properly updating the chunk size.  This
            would throw off further chunk processing and could result in incomplete transfers
            and/or chunk headers included in output text.
    
            Added some extra verbose debugging that can be enabled by setting verbosity > 3.
        
        ProtoFilter
            Fixed a boundary check in ProtoFilterResult(): was verifying that parameter was
            within array boundary with > should have been >=.

        ProtoTunnel
            Added clientId based matching.  Local+remote clientId of tunnel endpoints must
            match for connection to be established.
            
            Added control packet on connection initiation, used to communicate remote
            clientId.
            
            Added connection matching of new incoming data with previously unmatched tunnels,
            based on crypto key + clientId.
            
            ProtoTunnelValidatePacket() internalized, used in matching.
            
            Added ProtoTunnelControl() 'clid' selector to allow setting of local clientId.

        TelemetryApi
            Modified FULLSENDCOMPLETE logic to signal this event when DirtySDK has sent all
            data to the server regardless of receiving responses from the server.  This will
            ensure that only one FULLSENDCOMPLETE event is sent to the client.

    DirtySock (PS3)
        DirtyErrPS3
            Added some NP error codes.

    DirtySock (Xbox)
        ProtoFilter
            First implementation for Xbox.                


DirtySock SDK 4.7.0 - July 3, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 085.007
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2006 QFE 3215.0

    NOTE: DirtySock for PS3 is now built against the 085.007 SDK.

Changes/bugfixes in this release:

    DirtySock (All)
        TelemetryApi
            Modified behavior of TelemetryAPI so that ProtoAriesConnect() is called only
            when needed and the large block of AUTH data is only sent to the server in the
            first transmission after the connect.  This should significantly reduce
            bandwidth usage.
        
        TickerApi
            Fixed TickerApiFilterGameAutoAll(), TickerApiFilterGameFifaAll(),
            TickerApiFilterGameAll(), and TickerApiFilterNewsAll() to set the correct filter
            values.  They were returning incorrect filters because of changes made to the
            filter items.

    DirtySock (PSP)
        NetConnPSP
            Changed to allow NetConnControl() to be called before NetConnStartup() is
            called.  This allows the 'pool' selector to be used before the network stack is
            started.

    DirtySock (Xbox/Xenon)
        VoipConnection
            Fixed a bug where voice data could be sent more than once in server mode.
        
            Fixed to not send the size of a full packet when sending a partial packet (fewer
            than five voice bundles queued).

    DirtySock (Xenon)
        ConnApiXenon
            Added in unique connection identifiers passed to CommUdp.  This prevents clients
            listening for more than one connection from connecting to the wrong clients.  This
            was a change that was made for DirtySock 3.9.5 that got left out in the transition
            to V4.
        
        DirtyLSPXenon
            Fixed enumerator handle leak.  Non-query version is now tested and working
            against an XLSP server.
            

DirtySock SDK 4.6.3 - June 27, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 084.001
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   June 2006 QFE 3215.0

    NOTE: DirtySock is now built against the June Xbox 360 SDK.  With the transition
    to the June SDK, the xonline partner library that was required for previous releases
    has been deprecated and should not be used.  Instead, the functionality is included
    in the SDK, but must be enabled with the following addition to the XML file your
    title passes to imagexex:
    
        <xex>
          <privilege id="13"/>
        </xex>
    
    If this privilege tag is not included, the call to _XAccountGetUserInfo() will fail
    with an E_ACCESSDENIED error.

Changes/bugfixes in this release:

    DirtySock (All)
        LobbyLogger
            LobbyLoggerSnapshotLoad() no longer returns the buffer size when passing a
            NULL logger reference.  Instead, call LobbyLoggerSnapshotSize() to determine
            the size of the buffer.

        ProtoTunnel
            Flush tunnel before destroy in ProtoTunnelFree().
    
        TelemetryApi
            _TelemetryApiNumEvents() miscalculated the number of events in a circular
            buffer after it had wrapped around.  This could cause LobbyLoggerSnapshotSave()/
            TelemetryApiSnapshotSave() to miscalculate the necessary size of the buffer.
            It could also cause TelemetryApi to incorrectly determine when the buffer had
            reached the threshold required to send to the server.

            Fixed a bug where the default buffer size was used to determine loop boundaries
            when filtering the event buffer, when the actual buffer size was needed.

            Changed telemetry filter logic to require a match of the group filter when the
            module filter contains the wildcard.  Previously if the module filter was the
            wildcard the group filter was ignored.

        WebOffer
            Removed extraneous debug output.

    DirtySock (Xenon)
        ConnApiXenon
            Implemented ConnApiStop() as a unique function on Xenon, used to stop the
            current session without deleting it.
            
            Changed ConnApiDisconnect() to call 'dele' to delete the session instead of
            'stop' to stop it, since 'stop' no longer deletes the session.

        ProtoMangleXenon
            Implemented 'dele' control call to stop (if started) and delete the current
            session.  Changed 'stop' to just stop the session (call XSessionEnd()).
                

DirtySock SDK 4.6.2 - June 20, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 084.001
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2920.0

    If this privilege tag is not included, the call to _XAccountGetUserInfo() will fail
    with an E_ACCESSDENIED error.

    NOTE: The PortTester callback has been changed to add a user data parameter.  Any
    code specifying a callback to PortTestApi will need to be updated to compile.

Changes/bugfixes in this release:

    DirtySock (All)
        CommUdp
            Fixed a bug that could occur when using ProtoTunnel, where deleting the last
            CommUDP ref could cause a critical section to be used after it was deleted.

        ConnApi
            Added uClientId to ConnApiUserInfoT.  If specified as zero in the input
            structure, uClientId will assigned to a unique value by ConnApi, otherwise the
            input value is used.  This field is intended to be used by applications to
            track clients as clients are added and removed from the client list.

        DigObjApi
            Changed max len of id list to 64 and return const * for digital id retrieval.

        LobbyApi
            Get idle timeout from server, if available.  The 'itim' selector to LobbyApiControl()
            has been deprecated as a result.

        PortTestApi
            Added user data parameter to porttester callback function.
    
        ProtoTunnel
            Added missing ProtoTunnelValidatePacket() prototype to prototounnel.h.
            
            Fixed copy/paste error in _ProtoTunnelVirtualToPhysical() and
            _ProtoTunnelGetVirtualAddress() that was causing double entry of critical
            sections instead of enter/leave.
            
            Initialize flush timer to current tick at startup.

            Fixed memset of tunnel structure on alloc to use correct size of the structure.

            Added ProtoTunnelControl() 'flsh' selector, used to flush the tunnel with the
            given tunnelId.
            
            Fixed to initialize stats timer to current tick on tunnel allocation.

        RoomlistApi
            Fixed so when joining a club room, it will pass on the ident.

        WebOffer
            Added "mandatory" field to weboffer form type.

    DirtySock (PS3)
        DirtyNetPS3
            Set uConnStatus to +onl after finding an adapter address for SDK versions < 082.

    DirtySock (Xbox)
        DirtyNetWin
            Fixed a bug introduced in 4.6.0 - Xbox Winsock does not allow multithread socket
            access of any kind, and thus needs to retain the critical section between the
            async recv thread and SocketSendto().  This critical section is compiled in only
            for Xbox, not for Xenon or PC, which do not share this limitation.
        
    DirtySock (Xenon)
        DirtyLspXenon
            Initial implementation of new LSP query mechanism supported in June SDK.  No
            XLSP servers are set up to test against yet, but it does compile and run up to
            a point.  This new functionality is only available if building against the June
            SDK or later, otherwise the previous query mechanism is used instead.

        DirtyErrXenon
            Fixed code that looks for matches against "generic" windows errors, added two
            new errors.
                        
        
DirtySock SDK 4.6.1 - June 13, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 084.001
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2920.0

Changes/bugfixes in this release:

    DirtySock (All)
        DigObjApi
            Added a new error code.

        DirtyMem
            Added DirtyMemAlloc2() and DirtyMemFree2(), which take the memory pointers in
            addition to the other information used by DirtyMemAlloc() and DirtyMemFree().

        LobbyApi
            Fixed a bug that prevented client->server ICMP pings from being issued after
            LobbyApiResume() is called.

        LobbyApiUtil
            Changed to not get machine address from server except on Xbox or Xenon.  Machine
            address must be the textual form of the external address for lobbypingmanager to
            work on non-Xbox platforms, so it is now strictly synthesized on the client to
            ensure this.
            
        LobbyLogger
            Added LobbyLoggerCancelTransaction() to enable cancelling an in-progress
            transaction in case the game wants to discard the transaction data.

        LobbyLogin
            Added a copy of ENTL_MASK tagfield from input tagfield when calling
            LobbyLoginSubmitCB() in the INVREGKEY context.

        LobbyGameManager
            Modified implementation to asynchronously wait for XSessionDelete() to finish
            before attempting to make new connections.
        
            Added game object locking/unlocking support.  This allows an application to
            defer game object updates until a later time.
        
        LobbyUsersetManager
            Modified implementation to asynchronously wait for XSessionDelete() to finish
            before attempting to make new connections.

        ProtoTunnel
            Added ProtoTunnelStatus() 'gvrt' selector to return the virtual address of the
            tunnel with the given ID.
                
        TelemetryApi
            Added TelemetryApiCancelTransaction() to enable cancelling an in-progress
            transaction in case the game wants to discard the transaction data.

            Fixed a bug which prevented OSDK from setting the send timeout to 0 using
            LobbyLoggerControl.

        Voip
            Added a new function, VoipConnect3(), that allows specifying the remote
            clientId that is required for VoipTunnel server use.  A macro wrapper has
            been created to allow VoipTunnel2() calls to continue to compile without error.

        VoipTunnel
            Changed decode of clientId to decode from network order.  Added decode of new
            remoteClientId field included in VoIP connectivity packets.
            
            Added unicast routing of VoIP connectivity packets, which prevents client errors
            when serving more than two clients.

            Changed to unicast based on destination client id regardless of whether the
            destination client is in the clientlist or not

            Moved voiptunnel memid to dirtymem.h

        WebOffer
            Added 'mplc' command to support displaying the platform marketplace UI on 360
            and/or PS3.

    DirtySock (IOP)
        DirtyLibIOP
            Fixed a debug-only bug where memory blocks were being allocated misaligned.
            This could in some rare cases cause some memory corruption to take place.
    
            Switched to using DirtyMemDebugAlloc2() and DirtyMemDebugFree2(), which display
            pointer information in addition to the other information already displayed.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Fixed to guard SocketShutdown() and SocketClose() from operation on an invalid
            socket ref, as can happen when using a virtual socket.

            Fixed a debug print statement that had a format specifier but did not include
            a variable.
            
            Changed virtual socket code to use the port value already decoded from sockaddr
            structure instead of decoding it again (no functionality change).
        
        ConnApi
            Added ability to get a event transition callback to DISC when a client is
            removed with ConnApiRemove(), assuming the client wasn't already disconnected.
            Enabled by setting ConnApiControl('rcbk') TRUE.

    DirtySock (Xbox/Xenon)
        VoipConnection
            Added uRemoteClientId to conn, ping, and disc packets.
            
            Changed clientId encoding to be in network order.
            
            Added 'server' mode where outgoing voice data is only sent once per incoming
            voice packet.

            Changed to not update uLastSend when sending voice in server mode.  This forces
            pings to be sent on all connections including the one voice is being sent on.


DirtySock SDK 4.6.0 - June 6, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 084.001
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2920.0

Net in this release:

    DirtySock (All)
        DigObjApi
            New API for interacting with BESL Digital Objects.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Added ability to get a event transition callback to DISC when a client is
            removed with ConnApiRemove(), assuming the client wasn't already disconnected.
            Enabled by setting ConnApiControl('rcbk') TRUE.
        
        LobbyGameManager
            Implemented automatic host migration support, if host migration is enabled when
            the game is created on the server.  Note that on Xbox 360 the Microsoft session
            is destroyed and recreated, which results in a short interruption of any
            ongoing voice communications.  In addition, host migration is currently not
            supported on Xbox 360 for ranked games due to limitations in Microsoft's
            Arbitration API.

        LobbyLogger
            Added 'const' to a 'char*' parameter in LobbyLoggerSendTransactionData().  Also
            added comments to some of the LobbyLogger transaction functions indicating the exact
            result codes that can be returned and when they are returned.
        
        LobbyLogin
            Only issue 'auth' on 'lath' failure if there is an account name field present in
            the input tagfield.
            
        LobbyUsersetManager
            Implemented userset host migration support.  Note that on Xbox 360 the Microsoft
            session is destroyed and recreated, which results in a short interruption of any
            ongoing voice communications.

            Replaced strcmp() with LobbyNameCmp() for name comparisons in userset manager.

        LobbyTagfield
            Bug fix to TagFieldFindNext() to prevent a possible one-byte buffer overrun of
            the output pName buffer.

        ProtoTunnel
            Split TunnelsCrit into two separate critical sections to prevent deadlock issues.

            Added a new function, ProtoTunnelValidatePacket().

        TelemetryApi
            Added 'const' to a 'char*' parameter in TelemetryApiSendTransactionData().

        TickerFilter
            Integrated latest ticker filter definitions from ticker server codebase.

        WebOffer
            Added support for new Weboffer Forms.
            
            Also added support to the new MEM variable when initializing weboffer so any url
            request can request to know how much memory WebOffer was initialized with.
        
    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Fixed to not attempt to receive from a virtual socket.
            
            Removed unnecessary async thread recv critical section around send in SocketSendto() that could cause deadlocks.

    DirtySock (PSP)
        DirtyNetPSPAdhoc
            Changed SocketInfo() 'scan' to return -2 if a scan error occurred.

    DirtySock (Xbox/Xenon)
        DirtyLSPXbox/Xenon
            Changed to get title server service ID from NetConn.
        
        NetConnXbox/Xenon
            Updated title server service ID.
            
            Added NetConnStatus() 'tsrv' selector to return title server service ID.

        VoipConnection
            Added connection matching based on clientId for VoipTunnel benefit.  If no local
            clientId is specified address matching is used (the old behavior).
            
            Fixed handshaking bug exposed by new clientId matching.
            
            Cleanup of XUID differences between Xbox and Xbox 360.


DirtySock SDK 4.5.4 - May 30, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 084.001
        PSP     Sony PSP Runtime Libraries v2.7.1
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2920.0

Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Changed to only check bind port when socket sharing on Listen instead of port
            and address.  This allows socket sharing to work when a specific local adapter
            address is set.

        ConnApi
            Added ConnApiStatus() 'self' selector to return index of local client in
            clientlist.

        LobbyApi
            Added extraction of LKEY from 'pers' response and retention of it in the
            LobbyApi module.  The most recent LKEY can be retrieved with LobbyApiInfoPtr()
            'lkey', which will return NULL if there is no lkey cached.
        
        LobbyLogin
            Added LobbyLoginReset(), which can be used to substitute for destroying and
            recreating LobbyLogin when relogging into a lobby server.

            Added support for LKEY login (pass LKEY= in LOGIN submit) and LKEY-relogin
            (automatic if LKEYLOGIN= is defined in lobby config file).

        LobbyFindUser
            Fixed the LobbyFindUser cache.  The cache wasn't being used regardless of
            whether the caller requested it which could result in the client spamming the
            server with 'onln' requests if called frequently enough.

        ProtoTunnel
            Changed platform and virtual address mapping support to be run-time selectable
            instead of compile-time.

    DirtySock (IOP)
        Voip-i
            Fixed a ~3.5k memory leak when calling VoipShutdown().
            
        VoipHeadset
            Fixed a 12-byte memory leak on shutdown when a VoipCodec module was
            left allocated.
    
    DirtySock (PS3)
        DirtyNetPS3
            Changed async recv thread socketpoll() to only block for up to 50ms instead of
            indefinitely.  This fixes a problem where a SOCK_DGRAM socket could get created
            but not polled for input if the socketpoll() call was already polling other
            socket(s) that weren't receiving any input.


DirtySock SDK 4.5.3.1 - May 24, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 083.007
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2920.0

Changes/bugfixes in this release:

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Fixed a bug introduced in 4.5.3 release that caused UDP sockets bound to
            port zero to become invalid.


DirtySock SDK 4.5.3 - May 23, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 083.007
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2920.0

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Fixed a bug where ConnApiStatus()/ConnApiControl() 'mwid' were erroneously
            accessing the internal "Mout" variable instead of the "Mwid" variable.
        
        LobbyApi
            Added a global callback for +gam messages if the SNAP list is not available.
            These messages are forwarded to the LOBBYAPI_CBTYPE_EVENT callback with type
            'glst' (game list).

        LobbyLogin
            New-style name/addr remapping was expecting null-terminated strings but
            TagFieldFind() doesn't give them to us.  Switched to using TagFieldGetString()
            to a local buffer to ensure null-terminated strings.

        LobbyLogger
            Adding 'ssiz' to LobbyLoggerInfoInt() to allow clients to retrieve the maximum
            possible size for the snapshot save buffer.

        LobbyUsersetManager 
            Rearranged state management for userset manager and generally made it much more
            robust and event-driven.
            
            Fixed several bugs and updated API document to reflect bug fixes and minor
            changes to expected behavior.

            Made a minor change so that only the userset host clears the session/platparam
            data when going into a game.
        
        LeagueApi
            Changed to return the rivals of each team in response to a 'ilgt' command.

        NetResource
            Added a new function NetResourceCacheCheck() to see if a given resource is
            available in the cache buffer or not.

        ProtoTunnel
            Added SocketControl() pass-thru on unrecognized selector to ProtoTunnelControl().

            Fixed some VOIPTUNNEL_SERVER conditional compilation checks.

        TelemetryApi
            Adding 'ssiz' to TelemetryApiStatus() to allow clients to retrieve the maximum
            possible size for the snapshot save buffer.

    DirtySock (IOP)
        DirtyNetIOP
            Fixed a memory leak where a socket of SOCK_RAW type would leak 1000 bytes when
            being destroyed.  This bug was introduced in DirtySock 4.0.0.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Added virtual socket support.

    DirtySock (PS3)
        DirtyNetPS3
            Implemented network event handler, 'plug', IP and MAC address acquisition on
            connection.
        
        NetConnPS3
            Updated to call cellSysutilCheckCallback() from NetConnIdle() update.  This is
            required to update callback status for the connection status event handler.
            
            Pass through unrecognized selectors to SocketControl().

    DirtySock (PSP)
        DirtyAddr
            PSP builds since the first V4 release were using the generic "dirtyaddr.c" file
            instead of "dirtyaddrpsp.c".  This caused DirtyAddrTs used in Adhoc mode to not
            work correctly.
        

DirtySock SDK 4.5.2 - May 16, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 082.012
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2638.0

    NOTE: The May/2920 update has been postponed and will be taking place next week.

New in this release:

    DirtySock (All)
        LobbyUsersetManager
            First cut of the new UsersetManager, which is designed to work in conjunction
            with GameManager to manage Userset creation, joining and leaving games, etc.
            Please see doc\api\lobby\API_UsersetManager.doc for more information.

Changes/bugfixes in this release:

    DirtySock (All)
        LeagueApi
            Changed to return the rivals of each team in response to a 'ilgt' command.

        NetResource
            Added a new function NetResourceCacheCheck() to see if a given resource is
            available in the cache buffer or not.

        ProtoHttp
            Changed to parse received HTTP response headers directly out of the receive
            buffer, instead of the header cache buffer.  The header cache buffer is of
            limited size (512 bytes) so this could cause the header parsing to fail
            unnecessarily if the header was bigger than the cache buffer.

        ProtoTunnel
            Added ProtoTunnelMatch(), which returns the matching tunnel identifier given
            the remote address and port.

        TelemetryApi
            Fixed TelemetryApiConnect() to set the TelemetryApi memgroup around the
            ProtoAries module creation, so the ProtoAries module is correctly tagged
            as belonging to TelemetryApi's memory group.
            
            TelemetryApiConnect() was silently deallocating the TelemetryApi ref if
            ProtoAries creation failed.  This was an error and that functionality has
            been removed.

            Fixed a bug in Telemetry whereby if TelemetryApiDisconnect() was called from
            an event handler a recursion stack overflow would occur.

        TickerFilter
            Added filter items for new FIFA leagues.  Deprecated TICKER_FILT_GAME_FIFA_WUSA,
            TICKER_FILT_GAME_FIFA_OTHER, TICKER_FILT_GAME_FIFA_ARGENTINA, and
            TICKER_FILT_GAME_GENERAL.

        WebOffer
            WebOffer now support custom telemetry information and stores it in a structure.

            If a small script completed downloading before the display period had elapsed,
            the previous script would be removed from the script buffer and any actions taken
            based on the previous script (e.g. a cancel) would cause WebOffer to crash.
            WebOfferComplete() has been changed to wait until the display period has elapsed
            before removing the previous script from the script buffer.

    DirtySock (Xenon)
        DirtyErrXenon
            Removed error codes that were removed from the May 2006 2920 SDK release from
            debug error code table.
                            

DirtySock SDK 4.5.1 - May 9, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 082.012
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2638.0

    NOTE: Next week's release of DirtySock for the Xbox 360 will be built against the
    May 2006 SDK.

Changes/bugfixes in this release:

    DirtySock (All)
        BuddyApi
        HLBudApi
        LobbyApi
            Fixed a bug where module state memory would be allocated with iRefMemGroup but
            freed with iMemGroup.
        
        LeagueApi
            Changed so when receiving favorite team in leagues will now store the max number
            of transfers allowed for this league and the number of transers executed.

        LobbyApi    
            Made changes to DirtySDK to remove support for multiple user sets per user - now
            only one set per user is supported.

        TelemetryApi
            Moved ProtoAries module management from Create()/Destroy() to Connect()/
            Disconnect().  This allows TelemetryApi (and LobbyLogger) to be created
            outside the scope of DirtySock being active, which restores previous
            LobbyLogger behavior.


DirtySock SDK 4.5.0 - May 2, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 082.012
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2638.0

    NOTE: UserSet functionality as it is currently implemented in DirtySdk will be
    changing substantially in a near-term future release.  It is our understanding that no
    current titles are using this functionality; if this is not the case, please contact
    us immediately so we can account for you in our plans with UserSets moving forward.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Added support for setting a local port binding that is different from the
            connection port for voip and game connections, using the ConnApiUserInfoT.  If
            the values are specified as zero, the connection port is used for the local port
            binding (the previous default behavior).  Please make sure to memset your
            ConnApiUserInfoT structures before submitting them to ConnApi.

        LobbyApi
            Added LobbyApiInfoInt('sock') selector to return socket ref.

        LobbyCommonDefs
            Added user kick flag.        

        LobbyGameManager
            Added GameManagerRequestCb(), a generic interface to call GameManager functions
            through using the appropriate game codes (e.g. 'gcre', 'gjoi', etc).

            Added code to clear ClientList structures before passing them to ConnApiHost()
            and ConnApiAddClient(), as these structures have been changed and are no longer
            completely explicitly initialized.

            Changed to use LOBBYAPI_MAX_PLAYERS define to size the local clientlist the host
            calls ConnApiHost() with.

        LobbyLogger
            Fixed a bug in lobbylogger where a NULL function pointer could be used.

        ProtoAries
            Added ProtoAriesStatus('sock') selector to return socket ref.

        ProtoSSL
            Added ProtoSSLStat('sock') selector to return socket ref.

    DirtySock (PC)
        DirtyNetWin
            Added SocketControl('ladr') selector, to allow setting the local address that
            sockets created after the call will be bound to.  This is useful for being able
            to send on/receive from an adapter that is not the default adapter.
    
            Added SocketControl('poll') support, using select().

    DirtySock (PS3)
        DirtyNetPS3
        DirtyErrPS3
            Fixed CELL_SDK_VERSION checks that prevented DirtySock from compiling correctly
            against versions of the Sony SDK previous to 082.

    DirtySock (PSP)
        DirtyNetPSPInet
            Added new event names and state names from SDK 2.6 to _SocketApctlHandler() for
            the debug-only state transition display.  This fixes a problem where
            authenticating against a WAP with encryption enabled would cause a debug build
            to crash with an invalid string reference.

    DirtySock (Unix)
        Split dirtyunix.c into dirtylibunix.c, dirtynetunix.c, and netconnunix.c, to better
        match with other platform implementations of DirtySock.


DirtySock SDK 4.4.2 - April 25, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 082.012
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2638.0

        NOTE: With this release, DirtySock for PS3 is now built against the Sony PS3 082-012
        SDK.  DirtySock will still compile and execute against previous versions of the Sony
        PS3 SDK.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            ConnApi no longer starts up ProtoUpnp; for UPnP support to be enabled, ProtoUpnp
            must first be created before ConnApiOnline is called.  This allows ProtoUpnp to
            live beyond the scope of ConnApi which is required to be able to successfully
            delete the active port mapping, if any, on completion.

        HLBudApi
            If the resource name passed to HLBApiConnect() does not start with a slash, one
            will be added internally.  This means for LobbyApi titles that the result of
            LobbyApiInfoPtr(pLobbyApi, 'part') can be passed directly into the function as
            the pRsrc parameter.

        LobbyApi
            Added total game count to +rom and +pop updates and track it in
            LobbyApiRoomT->gamecount.
            
            Bumped up LobbyApiRequestCB() stack buffer to allow for large 'acct' create
            requests on Xenon.

        LobbyLogger
            Added 'unbl' option to LobbyLoggerControl() for setting User eNaBLed lobby
            settings flag (defaults to ENABLED).
    
            Added 'nabl' option to LobbyLoggerInfoInt() to query whether or not telemetry is
            currently enabled (defaults to DISABLED becuase 'halt' defaults to DISABLED).

        LobbyLogin
            Added support for handling 'pers/ikey' response by transitioning to the INVREGKEY
            context.
            
            Bumped up size of buffer that stores the most recent LobbyApi server response,
            and buffer that stores the requests that are sent to the server.
            
            Fixed LobbyApiParams() bug where it wasn't returning the right data.

        ProtoUpnp
            Made ProtoUpnp a singleton.

        TelemetryApi
            Added transaction functionality to TelemetryApi to allow sending of text files
            to the Telemetry server.

            Added 'cdbl' option to TelemetryApiControl() for setting the list of countries
            where telemetry is not collected (defaults to none).
    
            Added 'unbl' option to TelemetryApiControl() matching the new option in
            LobbyLoggerControl().
    
            Added 'nabl' option to TelemetryApiStatus() matching the new option in
            LobbyLoggerInfoInt().

    DirtySock (Xenon)
        LobbyGameManager
            Fixed a bug where a client joining a game before the host had set the session
            string in the game object could cause the client and host to not be able to
            connect.

        LobbyLogin
            Fixed to save most recent account creation response.
            

DirtySock SDK 4.4.1 - April 11, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 082.006
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2638.0

        NOTE: With this release, DirtySock for PS3 is now built against the Sony PS3 082-006
        SDK.  DirtySock will still compile and execute against previous versions of the Sony
        PS3 SDK.

New in this release

    DirtySock (All)
        TelemetryApi
            New API for logging telemetry data.  Unlike the previous implementation of
            LobbyLogger, this API runs against a stand-alone server rather than a Lobby
            server.

Changes/bugfixes in this release:

    DirtySock (All)
        LobbyLogger
            Changed to use new TelemetryApi.  Operation from a user perspective is
            unchanged.
            
        LobbyRoomlist
            Supply IDENT and NAME of room when calling the LobbyRoomlistMoveRoom() and
            LobbyRoomlistCreateRoom() completion callback function.

            Fixed to clear up both the global api call and the regular callback after
            finishing the create/move.

        LockerApi
            Fixed id issue when updating a file's info after a put operation, when that
            file already exists in the directory.

            Fixed a bug in LockerApi wherein Filter requests were not cancelled when
            downloads were cancelled by the user.

        ProtoFilter
            Added ProtoFilterRequestCancel(), used to cancel outstanding filter requests.

            Fixed ProtoFilterDestroy() to call ProtoFilterRequestCancel() with -1 (all) on
            destroy.

        TourneyApi
            Call new ProtoFilterCancel() function when TourneyApiCancel() is called.

    DirtySock (Xenon)
        LobbyApiXenon
            Added new function LobbyApiXenonDisconnect(), used to clean up any pending async
            operations when LobbyApiDisconnect() is called.
        
        VoIP
            Implemented high-quality VoIP for Xenon.  It can be enabled by pre-defining a
            symbol in voipconnection.cpp, and linking in the XHV Preview (xhvpv) library. 
        

DirtySock SDK 4.4.0 - April 4, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 081.005
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2638.0

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Added initial gameserver support.
        
        DirtyNet
            Added ability for makefile/project to override SOCKET_ASYNCRECVTHREAD define.

        LobbyLogin
            Fixed bug parsing "old-style" remap tables introduced in DirtySock 4.3.1; only
            the first entry would get parsed.
        
        LobbyRoomlist
            Added LobbyRoomlistCreateRoom() and LobbyRoomlistMoveRoom() as wrapper function
            around the 'move' command and 'room' command.
        
        ProtoTunnel
            Fixed to match incoming data to tunnel based on address and port, not just address.

            Fixed to not trigger RECVNOMATCH event callback when there was a packet decode error.
            
            Fixed to not install socket callback for tunnel socket if not using async recv threads.

            ProtoTunnel now uses virtual addresses when forwarding demultiplexed data to virtual
            sockets.  This is necessary to handle multiple clients from the same source address
            (NATted clients).  This behavior is currently disabled by default, and enabled via
            the VOIPTUNNEL_SERVER define.
        
        TickerApi
            Force the filter to always enable admin messages.  Game clients are not allowed
            to turn these off.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Made push data support not dependent on SOCKET_ASYNCRECVTHREAD being defined.

    DirtySock (Xenon)
        VoIP
            Added ability to set 32bit session identifier in voice packets.
        

DirtySock SDK 4.3.2 - March 28, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 081.005
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2638.0

        NOTE: With this release, DirtySock for Xbox 360 is now built against the Microsoft
        Xbox 360 SDK version 2638.0.

        NOTE: With this release, DirtySock for PS3 is now built against the Sony PS3 081-005
        SDK.  DirtySock will still compile against previous versions of the Sony PS3 SDK.

Changes/bugfixes in this release:

    Contrib (All)
        DirtyJPG
            Implemented decompression to arbitrary buffer width/height (instead of only
            the image width/height).  Disabled verbose debug code.  Changed to output ARGB
            instead of RGBA.
            
        DirtyGIF
            Changed DirtyGifDecodeImage32() to output ARGB instead of RGBA.
            
        DirtyGraph
            Changed DirtyGraphInfoT width/height members to signed to match inputs to
            DirtyGraphDecodeImage().
    
    DirtySock (All)
        LeagueApi
            Now sets the LeagueSummary.eState by comparing the leagues start and end times
            with the current server time.
            
            Fixed parsing of league summary message to correctly set state.

        LockerApi
            Fixed a memory leak introduced in the last release.

        ProtoStream
            On stream completion, if the HTTP response wasn't success, set stream status
            to error instead of success.

        ProtoTunnel
            Added event callback support.
            
            Added PROTOTUNNEL_EVENT_RECVNOMATCH event support.

        TickerFilter
            Added Argentina soccer league.
        
    DirtySock (PS3)
        DirtyErrPS3
            Added error messages to table.

    DirtySock (Xbox/Xbox 360)
        DirtyNetWin
            Don't try to set broadcast on a VDP socket, as that isn't supported and
            generates a warning message.
            

DirtySock SDK 4.3.1 - March 21, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 0.5.0.009
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2571.0

New in this release:

    Contrib (All)
        DirtyGraph
            Added new DirtyGraph module.  DirtyGraph is the new intended interface for all
            image decoding.  DirtyGraph will determine what the image is based on the data
            given to it, so no knowledge of format type is required by the caller.  All
            images are decoded to a 32bit RGBA output buffer.
            
            Added JFIF (JPEG) format support.

        ProtoFiler
            New module to support server-driven text filtering, primarily intended to wrap
            Xenon text filtering functionality.        
            
    DirtySock (Xbox)
        DirtyLSPXbox
            New module supporting LSP servers.
        
    DirtySock (Xenon)
        DirtyLSPXenon
            New module supporting LSP servers.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Changed enum types in ConnApiCbInfoT and ConnApiConnInfoT to uint32_t to
            avoid problems with games that compile using short enums.
        
        DirtyNet
            Changed SockaddrInSetAddrText() to not require an address string to be
            null-terminated.  This change allows parsing of address strings in longer
            string fields that are followed by other characters.
        
        LeagueApi
            Fix bug to return game iWinTeamId of -2 if there is a Tie and added special
            #defines of LEAGUE_WIN_TEAMID_NOT_PLAYED (-1) and LEAGUE_WIN_TEAMID_TIE (-2)
            to go with it.
    
            Added arrays of aTeamReversePos --Team results reversed;0 is winner 1 second
            etc. and aPoints -points if any.

        LobbyApi
            When iterating through the user list pinging users, changed to skip the local
            user.

        LobbyGlue
            Added return result to LobbyGlueSetBuddyTickerScore().  The return result is
            an HLB return code indicating the success or failure of the score setting
            operation.

        LockerApi
            Changed to use 2007 url.  Removed internal default server address.

        LobbyPingManager
            Reworked to not send ping user data.  This prevents a memory allocation from
            being required for every ping.

        ProtoTunnel
            Added remote port to ProtoTunnelMapT.  If the remote port in the map is zero,
            the local tunnel port is used as the remote port (this matches previous
            behavior), otherwise the port specified in the map is used.

            ProtoTunnel will now attempt to bind port zero (any) if the first bind
            attempt fails.

            The local port may now be retrieved with the 'lprt' selector.

            Compiled out some debug code that uses floating point if building on the IOP
            platform.  The floating point code was generating invalid instructions.

        ProtoUpnp
            Added debug-only ability to "fake" a UPnP response by substituting a previously
            recorded textual response.
            
            Fixed _ProtoUpnpXmlGetString() to memset buffer before getting a string
            response.
            
            Fixed _ProtoUpnpXmlParseDescription() to handle arrays of devices.  This fixes
            some Thompson Speedtouch routers.

        VoIP
            Changed attempt to bind to port zero (any) if the initial bind fails.
            
            Added 'lprt' status selector to retrieve the port that was bound.

    DirtySock (PSP)
        DirtyLibPSP
            Bumped up idle thread stack from 8k to 12k.  This fixes some cases where CommUDP
            could run out of thread stack when servicing multiple clients.

            Fixed some debug-only code to properly specify structure size before calling
            Sony functions that require the size to be set on entry.

    DirtySock (Xbox)
        NetConnXbox
            Added LSP support.

    DirtySock (Xenon)
        HLBudApiXenon
            Fixed a memory leak when reloading the friends list.

            Fixed a possible memory leak when calling HLBApiCreate() and then calling
            HLBApiResume() without first calling HLBApiSuspend() between them.  The resume
            would incorrectly re-allocate the resources.

        LockerApi
            Added Xenon profanity filtering for locker file descriptions.
        
        NetConnXenon
            Added LSP support.
        
        TourneyApi
            Add Xenon profanity filtering of news and tourney names to tourneyapi.
            

DirtySock SDK 4.3.0 - March 7, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 0.5.0.009
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   February 2006 QFE 2571.0

        NOTE: With this release, DirtySock for Xbox 360 is now built against the 2571.0
        XDK.  In addition, it now depends on the xbox360_xonline_partner_library package
        instead of expecting the files to be manually copied inside the main SDK install
        location.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Added ability to completely disable VoIP using ConnApiControl() 'vset' selector.
        
        LeagueApi
            Fixed LeagueGameViewFetch() so StartTime or EndTime of 0 is now allowed,
            and returns server defaults.

            Added iLBSlot field to league summary. This is the leaderboard slot
            number for this league.

            Added requested team to LeagueGameViewFetch() function.

            Deprecated LEAGUE_VIEW_AVAIL, replaced by LEAGUE_VIEW_TEAM.  Added
            LEAGUE_VIEW_TEAM_OPEN for leagues open for this team.

        LobbyGameManager
            Fixed to ignore 'game' and 'play' events if the ident in the event doesn't
            match the game ident in the local LobbyApiUserInfoT.

            Changed to use +who to determine in-game status.

        ProtoStream
            Fixed a bug where not enough memory was allocated by ProtoStreamCreate() for
            the stream buffer when specifying a buffer size less than PROTOSTREAM_MINBUFFER.

            Added 'play' selector to ProtoStreamControl(), to allow the application to tell
            ProtoStream if it is playing back or not.  If it is not playing back, ProtoStream
            sets the HTTP timeout to a very large value to prevent the client from timing
            out during the pause.  When the application unpauses, it should re-enable
            playback, which will restore the timeout to its previous value.  Note that the
            HTTP server will still timeout if enough time passes, so this is a condition
            that must be handled by the application.

        TickerApi
            TickerApiInsert() was filtering buddy events incorrectly if the filter was setup
            to allow only local events.

        WebOffer
            Increased WebOfferCommandT.strParm buffer from 4k to 8k.        
            
            Added WebOfferSetupT.strFavPlyr and WebOfferSetupT.strPrivileges.  Changed some
            array hardcoded dimensions into defines.
            
            Increased the length of strUrl in webOfferHttp() from 256 to 512 to allow for
            longer URLs with more parameters.

            Added debug printf for out of buffer situation.

    DirtySock (PS2)
        ProtoPing-e
            Fixed to handle -1 as the data length (autocalc for strings) for ping requests.

    DirtySock (PS3)
        DirtyNetPS3
            Moved network stack init to SocketCreate().
            
            Added network shutdown in SocketDestroy().
            
            Added default dhcp network settings (pass NULL to NetConnConnect()).
            
            Added 'disc' selector to SocketControl(), to bring down the interface.
        
        NetConnPS3
            Added some missing NetConnStatus() selectors, implemented NetConnDisconnect().
        
        VoIP
            Changed stubs to return valid responses, to keep upper-layer systems that check
            the return codes (e.g. ConnApi) from failing.
    

    DirtySock (Xenon)
        ConnApiXenon
            Set XSESSION_CREATE_JOIN_VIA_PRESENCE_DISABLED for private games.
            
        HLBudApiXenon
            Fixed HLBApiInitialize(), HLBApiPresenceDiff(), and HLBApiGetTitleName()
            to match function prototype changes.. 

            Added HLBBudGetXenonXUID for Xbox360 ONLY, to return XUID of  buddy or someone
            in friends list.

        LobbyApiXenon
            Chagned to only mute/filter chat messages.  Filtering can be disabled for a chat
            message by specifying LOBBYAPI_MESG_FL_NOFILT.

            Genericized Xbox 360 filtering support code previously used only for chat
            messages.
            
            Added filtering for room names using Xbox 360 filter function.
            
            Added ability to override default Microsoft search contexts by including
            XNCONTEXTS=<num contexts>, XNCONTEXTID<num>=, and XNCONTEXTVALUE<num>= in the
            'gsea' or 'gqwk' tagfield.

        NetConnXenon
            Fixed debug printf when failing to acquire user info.  The arguments were
            switched, which would cause the print statement to crash.

        ProtoMangleXenon
            Added ability to retrieve current session flags using the new ProtoMangleStatus()
            'sflg'.


DirtySock SDK 4.2.2 - February 21, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 0.5.0.009
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Added ConnApiStatus() 'host' selector.
        
        HLBudApi
            Fixed HLBApiInitialize to take uint32_t for uLocality, instead of int32_t.

        LeagueApi
            Made a user favorite team count of zero not generate an error.

            Fixed duplicate game events after lobby disconnect/connect - was caused by
            LeagueApi not clearing callback with Lobby.

        LobbyStatbook
            Memory for row data wasn't being allocated or carved up properly when being
            assigned to each allocated slot resulting in row data being stomped on when
            multiple user's data was loaded into separate slots.

        PortTestApi
            Added new function PortTesterOpenPort().

        ProtoPing
            Added ability to set ident using 'idnt' ProtoPingControl() selector.
            
            Fixed memory leaks when receiving an ICMP response from a non-DirtySock source,
            or multiple ICMP responses from different responders from a single request.
            
            Fixed debug print statement to safely handle invalid ICMP responses.
            
        TickerApi
            Fixed some filtering bugs that could cause the ticker to stall out indefinitely
            if a local event was injected previous to the client sending a hello to the
            server.

        WebOffer
            Removed WEBOFFER_ACTION_BTN9...16.  Added WEBOFFER_ACTION_ARTICLE1...16.  Unified
            defines into an enumeration.

    DirtySock (PS2)
        ProtoUdp
            Changed ProtoUdpRecvFrom() to use an async completion callback instead of
            blocking waiting for data.  This reduces the call cost of a single call to ~10k
            cycles instead of ~400k cycles, and helps a number of APIs (PortTestApi,
            ProtoUpnp, TickerApi) to be much more CPU efficient.

    DirtySock (Xenon)
        LobbyApiXenon
            If issuing a 'mesg' and the user does not have communications privileges, the
            message is dropped.  In this case, lobbyapi has been fixed to cancel the pending
            callback to reflect that the message was never sent.


DirtySock SDK 4.2.1 - February 14, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 0.5.0.009
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

Changes/bugfixes in this release:

    DirtySock (All)
        CommUdp
            Added support for COMM_FLAGS_BROADCAST.  Packets sent with this flag are sent
            unreliably to the broadcast address (255.255.255.255).

        HLBudApi
            HLBApiInitialize() changed to take a Locality param, dropped defunct ProdId and
            langlist params.
            
            Deprecated "language" parameter from HLBApiPresenceDiff() and HLBApiGetTitleName().        
            
        LeagueApi
            Leagsummary API change -- now has iPeakStartOffset and iPeakEndOffset--mins since
            midnight, and Start and End (epoch) time.

        LobbyLogger
            Fixed to not attempt to send when the lobby is suspended.

        LobbyGameManager
            Changed GameManagerInvite() to be a callback function.  Callback processing that
            was previously handled internal to GameManager is now exposed in
            GameManagerInviteProcessCallback(), which is expected to be called by the
            application inside of the Invite callback.
            
            Added a new function, GameManagerInviteProcessAcceptCb(), which handles responding
            to a local Invite accept event.  This function is designed to be callable whether a
            GameManager ref is available or not.  See the function documentation for more
            information.

        LobbyMsgLog
            MsgLog was trying to process all events as its own, resulting in crashes.  Will
            now check for iKind=='mlog' before processing.

        LobbyRank
            Added "'snap' FIND=#"  support to allow a +snp to be fetched by the client which
            contains the calling user's stats formatted appropriated for the requested
            ranking list even if the user is not ranked.  The ranker API LobbyRankFetch()
            call should pass LOBBYRANK_NAV_UNRNK as the iOffset parameter to activate this.

        NetConn
            Bumped up max number of NetConnIdle functions from 16 to 32.

        NetGameLink
            Added a new packet type, GAME_PACKET_USER_BROADCAST.  This packet type is sent
            unreliably to the broadcast address (255.255.255.255).

        ProtoStream
            Removed debug-only "restart" countdown spam.

        Tourney
            Encode/decode tourney/game/user cust data using TagField*String() rather than
            TagField*Raw() to preserve contents.

        WebOffer
            Fixed so weboffer buttons can go up to 16 now.

        VoIP
            Added optional event callback support to VoIP.

    DirtySock (Xenon)
        VoIP
            Added VoipMicrophone() and VoipSpeaker() support.  These functions allow you to
            ignore incoming data or mute outgoing data on specific connections.  Note that
            on Xenon, these flags can only be used to mute/unmute someone who is both not
            muted through the HUD and has voice privileges.

        
DirtySock SDK 4.2.0 - February 7, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 0.5.0.009
        PSP     Sony PSP Runtime Libraries v2.6.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

New in this release:

    The custom configuration files derived from EA Config have been moved internal to
    DirtySDK in this release.  This means DirtySDKConfig is no longer required.  In addition,
    PC and PS2 configurations are now based on overrides of EA Config, instead of using
    the EA Config replacements.

    DirtySock (All)
        LeagueApi
            This new API manages interactive leagues in conjunction with the lobby server.

        LobbyApi
            Removed LobbyApiPlayT->strSelf since it is redundant.  Replace usage of it with
            LobbyApiInfoPtr(pLobby, 'pers').

        LobbyLogger
            This release contains Version 2 of the LobbyLogger module.  The following API
            changes have been made:
            
                LobbyLoggerCreate - No longer takes a timeout parameter.  Now takes the number
                of events to buffer and the type of buffer (new).
            
                LOBBYLOGGER_TIMEOUT_DEFAULT - Deprecated.
            
                LobbyLoggerEvent - Now takes a moduleID, groupID and event pointer.

                Events now include a fixed-length string of sixteen characters in length, wheras
                the Version 1 strings were not limited by the API. 

            Because of these API changes, code written for previous versions of the logger will
            not correctly compile with this version and will need to be updated.

        TickerApi
            The ability was added to allow the client to specified which events the ticker
            server sents it.  Clients can now choose to receive only events for specific
            sports, etc.  The filter can be set in the TickerIdentityT structure using the
            new TickerApiFilter* functions defined in tickerfilter.h.

            The background colour to be used for the ticker display is now also provided
            by the ticker server.  Since it already provides text colours it made sense to
            have it specify the background colour as well.  To set the background color,
            call the new TickerApiOnline() function with the EX-ticker string currently passed
            to TickerApiConnect().  (NOTE: passing the string in TickerApiConnect() will be
            deprecated in a future release).  To retrieve the background color, use the new
            TickerApiStatus() function call with the 'bkgr' selector.

            New filtering: the V3 server essentially had 3 filter options: 1) no event 2) server
            events and 3) buddy/local events and combinations of these.  The V4 filter allows
            filtering of individual sports, news, etc.  To retain this V3 functionality, the
            filters can be set as such:

                1) No events:
                    TickerApiFilterNone(&Filter);

                2) Server events:
                    TickerApiFilterAll(&Filter);                    // Enable all events
                    TickerApiFilterLocal(&NotLocal);                // Build a filter for local events
                    TickerApiFilterNot(&NotLocal, &NotLocal);       // Filter for everything BUT local events
                    TickerApiFilterAnd(&Filter, &NotLocal, &Filter);// Strip out local events
                 
                3) Local events:
                    TickerApiFilterLocal(&Filter);

                4) All events:
                    TickerApiFilterAll(&Filter);

            Because of these API changes, code written for the previous versions of TickerApi
            will not correctly compile with this version and will need to be updated.

Changes/bugfixes in this release:

    DirtySock (All)
        LobbyGameManager
            Exposed GameManagerControl() and GameManagerStatus() in the header.
        
        LobbyRank
            Added @R support to the stats extractor to allow for the extraction of ranking
            points from a given ranking list (operates the same way as @r does).

        LobbyStatbook
            Fixed a memory allocation bug when allocating a statbook with multiple slots, where
            enough memory was not being allocated.

        ProtoHttp
            Reduced cached response header size to 512 bytes.  Added cached send header buffer
            (512 bytes) and ProtoHttpStatus('rtxt') selector to return it.  Changed
            ProtoHttpStatus() to return -1 for an invalid selector.

            Added a workaround for HTTP 1.0 servers that send body data in a response, but
            specify a Content Length of zero, which is in violation of the HTTP 1.0 (and
            1.1) protocol.  This workaround fixes several UPnP routers with embedded HTTP
            servers that have this bug.

            Moved HTTP-specific port determination when port is unspecified from ProtoSSL
            to ProtoHttp, where it is a better fit.

            Fixed a bug with chunked transfer encoding and keep-alive which would prevent
            the client from transitioning to the DONE state after receiving the terminating
            zero chunk, resulting in the client erroneously timing out.

        ProtoName
            Removed redundant typedef of HostentT based on DIRTYSOCK not being defined, and
            instead included "dirtynet.h".

        ProtoSSL
            Moved HTTP-specific port determination when port is unspecified from ProtoSSL
            to ProtoHttp, where it is a better fit.

        ProtoStream
            Pass 'verbose' flag on to ProtoHttp (debug only).

            Added a second call to the user callback callback if the first callback consumes
            data to the end of the buffer and there is more data available.

            Added 'bufl' and 'bufs' selectors to ProtoStreamStatus(), to return the amount of
            currently buffered data and the overall buffer size, respectively.

            Fixed to start playback if a stream is fully buffered and the buffered amount is
            less than the restart threshold.
            
            Fixed rebuffering after stream starvation.
            
            Updated to track stream status as error, in progress, or complete.  Added status
            selector 'done' to return this status.
            
            Added debug-only ability to starve input (using control selector 'strv') to test
            rebuffering.

        ProtoTunnel
            Added ability to set automatic flush rate.  Previously, the tunnel was flushed
            every time ProtoTunnelUpdate() was called.
            
        ProtoUpnp
            Added ProtoUpnpStatus()->ProtoHttpStatus() for unhandled selectors.  Added
            'rbdy' selector to return request body.

            Removed xml doctag in requests that was causing some routers to choke.

        VoIP
            Moved code that detects when there are no active connections and destroys
            the connectionlist socket into VoipConnectionUpdate().  This prevents the
            code from running from inside of a socket callback, which would cause the
            async recv thread to be invalidly operating on a closed socket.

        XmlParse
            Changed XmlContentGetDate() and XmlAttribGetDate() to support the date format of
            2006-04-15T09:00:00Z (namely the T between the date and time).

        WebOffer
            A failed resource load now does not automatically cancel the script. Instead,
            a FAILURE-GOTO tag is executed from within the resource record. If no tag is
            present, the failure is ignored.

            Made a WebOfferResource() call on a missing resource (one that failed to load)
            return a NULL data pointer.

            Added optional image name to WebOfferMediaT.  Added type and description fields
            to WebOfferArticlesT.

    DirtySock (IOP)
        DirtyLibIOP
            Fixed memory allocation alignment error in debug mode.  This alignment error
            could cause certain IOP operations to fail, notably game link communication
            using netgamelink.
        
        ProtoHttp-i
            Changed to handle -1 return code.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Fixed to close socket before adding to kill list.  If the socket isn't killed
            first, it is possible for the thread calling SocketClose() to get preempted
            after adding to the kill list but before calling the socket, and receive data
            after the SocketT memory has been freed.

    DirtySock (PC)
        VoIP
            Added 'from' selector to VoipStatus().  Also changed to pass through any
            unhandled selectors to VoipHeadsetControl(), including 'edev', which is used
            to enumerate audio input and output devices.

    DirtySock (PS3)
        DirtyNetPS3
            Implemented async recv thread for PS3.

    DirtySock (Xenon)
        HLBudApiXenon
            Will now trigger Buddy List change callback if the buddy's state, or buddy's
            invite state changes.
            
            Added support for buddy presence change callback, so that LobbyGlue will now
            insert friend login events to Ticker.  Also added Suspend and Resume support,
            and fixed HLBApiCreate() to match function prototypes.
                
        
DirtySock SDK 4.1.0 - January 10, 2006

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 0.5.0.009
        PSP     Sony PSP Runtime Libraries v2.5.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

New in this release:

    Added PS2EE build, and PS2EE Tester2 sample.  To use the PS2EE library instead of
    the PS2 (Inet) library, the following line should be included before the dependent
    tag is called for DirtySDK:

        <property name="package.DirtySDK.useps2eelibs" value="1"/>
        <dependent name="DirtySDK"/>

    DirtySock (All)
        ProtoHttp
            Added new function ProtoHttpRecvAll().  This function presents simpler semantics
            than ProtoHttpRecv() and is designed to receive the result of a GET operation
            in its entirety into a single destination buffer.

        ProtoTunnel
            ProtoTunnel is a new module that creates a Virtual DirtySock Tunnel to a remote
            peer or peers.  The tunnel provides two basic features:
            
                - Data sent over ports that are mapped to the tunnel are aggregated and
                sent over the tunnel port instead.  Data can be sent at fixed intervals
                and can also be explicitly flushed.
                - Data sent over the tunnel can be optionally encrypted on a per-port
                basis.  On Xbox platforms, the native platform encryption is used, while
                on other platforms, an RC4 stream cipher is used.
                
            ProtoTunnel can be used standalone, or can be used with ConnApi by using the
            ConnApiControl() 'tunl' selector.
            
            For more details, please see the ProtoTunnel and ConnApi source-level
            documentation.

    Platform
        plat-str
            Added ds_vsnzprintf().

Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Fixed seq and ack to be converted from host to network order before send and
            converted from network to host order after receive.
        
        ConnApi
            Added flags to allow disable of demangler and upnp.
            
            Added ProtoTunnel support, disabled by default.

        DirtyNet
            Added NetPrintfVerbose()/NetPrintfVerboseCode().

            Fixed bug in NetPrintfWrapCode() where string parsing would require two nulls
            to terminate.
            
        DirtyNet<Platform> (all versions)
            Use new SOCKET_MAXUDPRECV define (currently 1000) to specify the max size UDP
            packet an async recv thread will be able to receive.  This is an increase from
            576 bytes.

            Added SocketCallback('push') call to "push" data into the socket's async recv
            buffer, and global send callback support.  These features are used by ProtoTunnel.

        HLBudApi
            If get message and roster is not loaded, save it and process it when roster
            loaded.  Avoids server race condition where only one saved msg from buddy is
            seen, as client think the buddy was a "temp" buddy

        LobbyApi
            Fixed bug in _LobbyApiDebugWrap() where string parsing would require two nulls
            to terminate.
        
        LobbyFindUser
            Replaced usage of deprecated 'user' command with the new 'minf' command.
        
        LobbyReg
            Replaced usage of deprecated 'user' command with the 'onln' command.
        
        LobbyStatbook
            Processing of 'sdta' command in callback was stopping prematurely if it
            encountered an empty string in the TagFieldDelim STATS record (eg.
            STATS=,0,0,0,,0,0,0) causing data from the previous 'sdta' call to be left in
            the row values and be returned incorrectly to the caller.

        NetGameDist
            Added code to translate stream packet header to/from network byte order on
            send/recv.  Removed some dead code.

        NetGameLink
            Deprecated echo packet type, which has been unused for a long time.

        PortTestApi
            Switched idle function to be driven by NetConnIdle() instead of LobbyApiUpdate(),
            and made user/slus acquisition optional to remove dependence on LobbyApi.  With
            this change PortTester can be optionally used without LobbyApi.

        ProtoMangle
            After returning failure condition from ProtoMangleComplete(), reset state to IDLE.

            Fixed a bug posting demangling result to server that was introduced in V3->V4
            rewrite.

        ProtoPing
            Changed to set ICMP length field in raw header.  This is required for PSP when
            specifying a TTL value.

            Switched to use IPPROTO_ICMP (defined as 1) instead of the number 1 directly.

        ProtoUpnp
            Added 'port' control selector.

            Moved macro type to header file for external use, and added status flags that are
            accessible with ProtoUpnpStatus('stat') selector.
            
            Fixed to use wildcard for source address instead of WAN IP address of the router.
            Using the WAN IP address does not appear to generate a usable port map.
            
            Reworked way macros are executed to allow an external user to "spy" on the
            execution.  Added status selectors to return http head and body for the most
            recent http response, used by logging tool.
            
            Disabled map reuse by default.

        TickerApi
            Switched from vsnprintf() to vsnzprintf().

        Tourney
        TourneyApi
            Converted to use discrete TagField encoding for tournament objects rather than
            TagField*Structure().

        WebOffer
            Changed to handle sending the range of years for the credit card expiration date.

        VoIP
            Added socket callbacks.  This provides improved response time to incoming data
            and is required for ProtoTunnel support as well.

    DirtySock (PC)
        DirtyNetWin
            Set global event before deleting socket in _SocketClose().  This wakes up the
            async receive thread from WSAWaitForMultipleEvents(), if the thread is currently
            waiting there, and prevents the socket ref from being deleted out from under the
            function, which causes an assert on Xenon.
        
        Voip
        VoipHeadset
            Added VoipStatus() 'spkr' selector.
            
            General cleanup of VoipControl(), VoipStatus(), and their voipheadset
            counterparts.
            
    DirtySock (PS3)
        DirtyNetPSPInet
            Updated for Cell OS LV2 support.

            Added global send callback and 'push' SocketControl() call (currently compiled out,
            until async recv thread is supported).
            
            Changed debug print on accept() failure to only print if the error is not EWOULDBLOCK.

        NetConnPS3
            Added NetConnStatus('bbnd') (always returns TRUE).
            
    DirtySock (PSP)
        DirtyNetPSPInet
            SOCK_RAW sockets now set IP_HDRINCL, which allows the caller to embed a raw
            ICMP header in the input.  The ICMP length field is expected to be included in
            network order, and is internally swapped to host order for the duration of the
            call, as expected by the PSP network stack.

            Bumped up ApctlHandler handler stack size, and async recv thread (compiled out
            by default) stack size to 12k as required by Sony 2.x libraries.
            
            Removed local address acquisition using sceNetApctlGetInfo() with the
            SCE_NET_APCTL_INFO_IP_ADDRESS selector outside of ApctlHandler, to work around
            Sony 2.6 firmware bug.
            
            Acquire ethernet address in SocketCreate() using sceWlanGetEtherAddr() instead
            of after a connection event using sceNetGetLocalEtherAddr().

    DirtySock (Xbox)
        DirtyNetWin
            Set global event before deleting socket in _SocketClose().  This wakes up the
            async receive thread from WSAWaitForMultipleEvents(), if the thread is currently
            waiting there, and prevents the socket ref from being deleted out from under the
            function, which causes an assert on Xenon.
            
        Voip
            Added VoipControl() 'flsh' selector to allow immediate flushing of currently
            queued voice data.

    DirtySock (Xenon)
        DirtyNetWin
            Set global event before deleting socket in _SocketClose().  This wakes up the
            async receive thread from WSAWaitForMultipleEvents(), if the thread is currently
            waiting there, and prevents the socket ref from being deleted out from under the
            function, which causes an assert on Xenon.
            
        NetConnXenon
            Allow login to continue when _XAccountGetUserInfo() fails.
                                
        Voip
            Added VoipControl() 'flsh' selector to allow immediate flushing of currently
            queued voice data.


DirtySock SDK 4.0.1 - December 13, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 0.4.0.009
        PSP     Sony PSP Runtime Libraries v2.5.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

New in this release:

    DirtySock (All)
        CryptArc4
            Added new function CryptArc4Advance(), which advances the cipher the given
            number of bytes.
            
        WebOffer
            Updated version of WebOffer including 3.0 functionality, backwards compatible
            with previous versions.

Changes/bugfixes in this release:

    DirtySock (All)
        CommUdp
        NetResource
        ProtoUdp
            Added missing store of memgroup identifer.

        ClubApi
            Added DNFPercent to members, and removed change type recruits and members, as
            these get refreshed with the club.

            Clubs now refresh all data on operation and in most errors cases so clients don't
            need to "re-fetch" the data.  Club change callback will be called whenever data
            is updated.

        ConnApi
            Added selector to enable/disable upnp

        LobbyStatbook
            Removed support for pre-3.5.4 lobby servers when decoding 'sviw' responses.

        ProtoMangle
            Fixed reporting, which was using a bad url after the conversion to use
            ProtoHttp.  Note that this would not affect connectivity at all, just the
            reporting.

        WebOffer
            Added STYLE tag to WebOffer API for News records.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Fixed mem leak on module shutdown.

    DirtySock (PS2)
        ProtoHttp-e
            Added missing store of memgroup identifer.

    DirtySock (PSP)
        DirtyLibPSP
            Fixed NetCritEnter() bug, where after waiting for 10 seconds, the critical
            section would be incorrectly yielded.

        DirtyErrPSP
            Added some new 2.5 error definitions.        

    DirtySock (Xbox)
        ConnApiXbox
            Added missing memgroupenter()/leave() pair around ProtoMangleCreate().

        DirtyNetWin
            Added flags parameter to SocketDestroy(), to allow SocketDestroy() to properly
            clean up module state without shutting down WinSock.  This is required to be able
            to launch to the account management section of the dashboard.                    

    DirtySock (Xenon)
        LobbyApiXenon
            Fixed XSessionSearch() rank parameter, which was previously backwards.                        

DirtySock SDK 4.0.0 - December 6, 2005

    This SDK release was built against the following first-party runtime versions:
    
        PS2     Sony PS2 Runtime Libraries v3.0.2 (Inet)
        PS2EE   Sony PS2 Runtime Libraries v3.0.2 (EENet)
        PS3     Cell SDK 0.4.0.009
        PSP     Sony PSP Runtime Libraries v2.5.0
        Win32   Visual Studio.NET 2003
        Xbox    December 2003 QFE 5849.17
        Xenon   August 2005 Final QFE 2135.1

Restructuring from V3

    There have been some major changes in the locations of files going between the V3
    and V4 versions of the SDK.  Many of these changes were required in the conversion
    to a Framework2 buildable package, as the Framework2 directory structure is very
    rigid and our V3 directory structure was quite different from what was required.
    Most of these changes should not affect anyone, aside from having to search to
    find where files are located now, however there have been some major changes:
    
        VoIP is no longer a contrib library.  It has been moved into the Core library,
        which means you no longer need to link in a separate library to use it.  On
        PS2, there is no longer a separate VoIP IRX that needs to be loaded; everything
        is contained within the DirtySock IRX.
        
        LobbyGlue is also no longer a contrib library.  It also has been moved into
        the Core library.  ConnApi and the netgame* modules have been moved into the new
        game\ folder.  LobbyGlue and GameManager have been moved into the lobby\ folder,
        and the GameManager files have been renamed lobbygamemanager.c and lobbygamemanager.h
        as well.  Note that the interface remains the same.
        
        DirtyElf and DirtyDnas are no longer included in the DirtySock SDK, they are now
        supplied as separate packages.

Changes from V3

    The following API changes have been made in the transition from V3 to V4:

        BuddyApiCreate() - Added iRefMemGroup parameter; specify zero for default.
    
        CONNAPI_CONNFLAG_GAMEONLY - Deprecated, use CONNAPI_CONNFLAG_GAMECONN
        CONNAPI_CONNFLAG_VOIPONLY - Deprecated, use CONNAPI_CONNFLAG_VOIPCONN
        ConnApiCreate() - Deprecated pGameName parameter - now passed in ConnApiOnline
        ConnApiOnline2() - Renamed ConnApiOnline()
        ConnApiHost2() - Renamed ConnApiHost()
        ConnApiConnect2() - Renamed ConnApiConnect()
        ConnApiStatus2() - Renamed ConnApiStatus()
    
        HLBudApiCreate() - Added iRefMemGroup parameter; specify zero for default.

        LobbyAlloc() - Deprecated, use DirtyMemAlloc() instead.
        LobbyFree() - Deprecated, use DirtyMemFree() instead.

        LobbyApiCreate() - Added iRefMemGroup parameter; specify zero for default.
    
        LobbyApiQueue() - Deprecated, use LobbyApiInfoPtr()
        LobbyApiStatus() - Deprecated, use LobbyApiInfoInt()
        LobbyApiGetTick() - Deprecated, use LobbyApiInfoInt() 'tick' selector
        LobbyApiServerTime() - Deprecated, use LobbyApiInfoInt() 'stim' selector
        LobbyApiSetIdleTimeout() - Deprecated, use LobbyApiControl() 'itim' selector
        LobbyApiSecure() - Deprecated

        LobbyGlueShouldMuteMessage() - Deprecated, replaced with internal functionality

        LobbyPersonaCmp() - Deprecated, use LobbyNameCmp() instead
    
        LobbyLanStatus2() - Renamed LobbyLanStatus()

        TagFieldSetCrypt() - Deprecated
        TagFieldGetCrypt() - Deprecated
        TagFieldSetMerge() - Deprecated, use TagFieldMerge()

        LockerApiUpdateFileInfo() - the pStrName parameter has been deprecated

        NetAlloc() - Deprecated, use DirtyMemAlloc() instead.
        NetFree() - Deprecated, use DirtyMemFree() instaead.

        NetGameDistDestroyStream() - added NetGameDistRefT * parameter.

        NetGameUtilStatus() - Added two new parameters - pass NULL and 0 for previous behavior.
        NetGameUtilAdvert2() - Renamed NetGameUtilAdvert(), pass note="" for previous behavior.

        NetGameUtilTable() - Deprecated 

        ProtoAdvtEnableUDP() - Deprecated
        ProtoAdvtDisableUDP() - Deprecated
        ProtoAdvtEnableIPX() - Deprecated
        ProtoAdvtDisableIPX() - Deprecated

        ProtoAriesIdle() - Deprecated
    
        ProtoHttpData() - Deprecated, use ProtoHttpRecv()
        ProtoHttpInfo() - Deprecated, use ProtoHttpStatus()

        ProtoHttpGetBuffer() - Deprecated, use ProtoHttpStatus()
        ProtoHttpSetBuffer() - Deprecated, use ProtoHttpControl()
        
        ProtoHttpControl() - Added parms - pass 0, 0, and NULL for old behavior
        ProtoHttpStatus() - Added parms - pass NULL and 0 for old behavior

        ProtoMangleStatus2() - Renamed ProtoMangleStatus()

        ProtoPingCreate() - Added iMaxPings parameter - specify zero for default.
        ProtoPingConfig() - Renamed ProtoPingControl()
        ProtoPingRequest2() - Renamed ProtoPingRequest()
        ProtoPingRequest() and ProtoPingRequestServer() - added two new paramterers,
            iTimeout and iTtl.  Pass both as zero to specify default values.
        ProtoPingResponseT - Several members changed names:
            addr -> uAddr
            ping -> iPing
            seqn -> uSeqn
            type -> uType        

        LobbyRoomlistDisplay() - Deprecated, reference LobbyApiRoomT.displayname directly
        LobbyRoomlistRoom() - Deprecated, use LobbyRoomlistGetRoom() with iFiltered=0

        RpcAlloc() - Deprecated, use DirtyMemAlloc() instead.
        RpcFree() - Deprecated, use DirtyMemFree() instaead.
    
        TickerApiCreate() - Deprecated uLocality parameter, now set in the TickerIdentityT
            passed to TickerApiConnect() 
        TickerApiGetFilters() - Deprecated
        TickerApiGetFilterCount() - Deprecated
        TickerApiUpdateFilter() - Deprecated
        TickerApiUpdateBuddy() - Deprecated

        Deprecated TourneyApiGetGameByUser() and TourneyApiGetNextGame() in favour of
        TourneyApiGetGameListByUser().
        
        VOIP_STAT_* flags - Deprecated, use VOIP_LOCAL_* and VOIP_REMOTE_* instead

        WebOfferCreate2() - Renamed WebOfferCreate().  To duplicate the functionality of the
        old WebOfferCreate, pass pBuffer=NULL.

        XmlStream - Deprecated

    Other V3->V4 transition notes:

        Memory allocation is now handled differently from last year.  Please read doc\dirtymem.doc
        for details.

        LobbyApi now internally calls _LobbyApiDebug() to display incoming packet data.
        Applications should remove their LOBBYAPI_CBTYPE_RESP handlers that call LobbyApiDebug()
        explicitly to avoid redundant debug output of received packets.

        Incoming LobbyApi messages (+msg) of type LOBBYAPI_MESG_FL_BROAD now generate chat
        events of type 'cast'.  Incoming LobbyApi messages of type LOBBYAPI_MESG_FL_PRIV now
        generate chat events of type 'priv'.  Previously, the kind would remain 'chat', which
        was a bug that has been fixed.
        
        On Xbox, deprecated 'snfo' and changed 'serv' to match the Xenon implementation.

New in this release:

    DirtySock (All)
        ProtoStream
            Streaming media module.  Currently supports HTTP servers.

        ProtoUpnp
            UPnP module, designed to auto-configure route mappings on UPnP routers to permit
            peer-to-peer game traffic through the router's firewall.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Updated to use ProtoUpnp
            
        LobbyTagField
            Debug print if a TagFieldSet operation fails because the tagfield buffer is full.

            Added 64bit number support.

        NetResource
            Removed condition that prevented files bigger than 1/2 the buffer size from being
            buffered.

        ProtoAries
            Rewrote to not alloc/free at every packet send/recv.
            
        ProtoHttp
            Added defines for ProtoHttpRecv() return codes.
            
        ProtoMangle
            ProtoMangle has been refactored to use ProtoHttp internally, instead of using its
            own inline code.  This substantially reduces the compiled size of the module, and
            means that any fixes to ProtoHttp are transparently gotten by ProtoMangle.

        ProtoSSL
            Upgraded to support SSL3.

        XmlParse
            Added simple wildcard support to XmlFind.

    DirtySock (IOP)
        connect-i
            Changed to continually DMA status information to the EE asynchronously, instead of
            providing the status with individual synchronous calls.

    DirtySock (PC)
        Voip
            Fixed memory leak.

    DirtySock (PS2)
        NetConnPS2
            Rewrote NetConnStatus() to refer to status DMAd from the IOP instead of making blocking
            synchronous calls.  This means that NetConnStatus() calls take virtually no CPU time now
            as opposed to 

    DirtySock (Xbox)
        ProtoMangleXbox
            Added a timeout for conditions where Xbox Live stops responding.
            
        VoipConnection
            Changed to encrypt packet header so as to prevent spurious TCR questions.

    DirtySock (Xenon)
        ProtoMangleXenon
            Added ability to call XSessionModify() using the 'sflg' control selector, if used after
            session creation.
            
        VoipConnection
            Changed to encrypt packet header so as to prevent spurious TCR questions.
