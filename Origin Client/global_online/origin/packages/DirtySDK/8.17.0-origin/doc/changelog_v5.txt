DirtySock SDK 5.6.5 - January 10, 2008

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.24.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.3-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 210.001
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2-patch-070622-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 2.0-patch-plus
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 3.1-patch2-071127
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.6274.0-proxy (August 2007)

    NOTE: DirtySock has been updated to build with the following package revisions:
        eaconfig                1.24.00
        playstation3gcc         210.001
        revolutionex            2.0-patch-plus
        revolutionsdk           3.1-patch2-071127

Changes/bugfixes in this release:

    Build
        Added Framework as a dependent.
        
        Fixed PlayStation3GCC "clean" issue caused by an unneeded build dependency.

    DirtySock (All)
        ConnApi
            Fixed to remove client from clientlist before issuing callback on _ConnApiRemoveClient().  This fixes
            an issue where the user callback code could make ConnApi calls during the callback and crash.
        
        DirtyPNG
            Fixed the array population code.

        VoipTunnel
            Added voiptunnel event on client addr/port match.

    DirtySock (Xenon)
        ConnApiXenon
            Improved host migration.
            
        XnFriends
            Fixed implicit ints in function declarations.            


DirtySock SDK 5.6.4 - October 23, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.23.03
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.3-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 192.001
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2-patch-070622-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.6274.0-proxy (August 2007)

    NOTE: DirtySock has been updated to build with the following package revisions:
        eaconfig                1.23.03
        dscodewarrior           3.3-1
        playstation3gcc         192.001
        revolutioncodewarrior   3.0.5.2-2-patch-070622-2

    NOTE: PlayStation3Celp has been removed as a dependency.  Any titles using a PS3 SDK older than 160.008
    must update to at least SDK 160.008.
        
Changes/bugfixes in this release:

    Build
        Fixed sln-generation task to work correctly, added NantToVSTools dependency, and updated EAConfig.

    DirtySock (All)
        ConnApi
            Fixed some bugs related with gameserver fallback connection mode:
                - If a connection to the gameserver after failed peer connection also failed, it would keep trying
                to connect to the gameserver indefinitely.
                - If a demangle attempt timed out, a subsequent connection attempt to the gameserver would not be
                made.
                - Made peer connection flag state connection-specific instead of global, since a global flag doesn't
                work when using a peer-web topology.
                - Added a boolean to connection state to indicate whether a given connection is a gameserver
                connection or not.
                - Added 'gprt' and 'vprt' selectors to ConnApiStatus() to return the currently set game and voip
                ports.        

            Fixed a bug with _ConnApiRemoveClient() when there is no VoIP ref.

        NetGameDistServ
            Fixed to not disconnect a user when trying to broadcast a stream packet to a user that has not
            connected yet.

        VoipConnection
            Changed bind port error (only one bind port supported) to a warning, and use the global bind port
            instead of failing.

    DirtySock (PS3)
        NetConnPS3
            Fixed error shutting down commerce id.  This error did not appear to cause any issues other than a
            resulting in a warning from sceNpCommerceDestroyCtx().
            
            Switched to using new default Sony ServiceID, TitleID, and CommunicationsID that are not expired as
            the previous ones have been retired by Sony.

        VoipCelpPS3
            Changed to allocate a single decoder instead of one per channel, greatly reducing memory and CPU
            resources consumed.

    DirtySock (Revolution)
        DirtyNetRev
            Fixed two debug print statements that referred to ps3 instead of revolution.


DirtySock SDK 5.6.3 - September 25, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.6274.0-proxy (August 2007)
        
    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Host Migration enabled for non-peerweb non-gsrv games. ConnApi can now change the mesh center to
            a different user
        
        NetGameDist
            Better overflow disconnection both client-side and server-side

    DirtySock (PC, Xbox, Xenon)
        DirtyNetWin
            Updated _MapNameMatch() to support a wildcard character at either the beginning or end of the name 
            string (previously, a wildcard was only allowed at the beginning of a string).
            
    DirtySock (Unix)
        DirtyNetUnix
            Fixed SocketGetLocalAddr() to prefer a 10.* address

    DirtySock (Xenon)
        VoipXenon
            Error handling of thread creation failure.
            

DirtySock SDK 5.6.2 - August 28, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.5632.2-proxy (April 2007 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (PS3)
        DirtyErrPS3
            Removed debug-only reference to define SCE_NP_CORE_ERROR_INVALID_ID deprecated starting with 190 PS3
            SDK release.

    DirtySock (Unix)
        DirtyNetUnix
            Changed SocketGetLocalAddr() to pick the first non-loopback address which will be the most likely to
            be private.

    DirtySock (Xenon)
        ProtoMangleXenon
            Fixed host migration to be treated as an async op, which forces a host migration request to block
            if a previously requested async operation is still ongoing.  This also fixes a bug where a session
            could be deleted and XSessionMigrateHost() would try to access it, causing a kernel assert.
            

DirtySock SDK 5.6.1 - August 14, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.5632.2-proxy (April 2007 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (DS)
        DirtyWmManager
            Fixed best channel selection to write back directly into parent params, where previously the result
            wasn't being actually used when calling WM_SetParentParam().
            
            Moved debug output spam of parent params immediately before WM_SetParentParam() to accurately report
            the parameter state as it is immediately before WM_SetParentParam() is called.

    DirtySock (PC)
        DirtyNetWin
            Fixed SocketHost() to respect the active local adapter override setting (set with SocketControl()
            'ladr').

    DirtySock (Revolution)
        DirtyNetRev
            Fixed a bug in SocketInfo('bind').  The call to SOGetSockName() was not initializing the len field
            of the SOSockAddr and this would cause the call to fail if the stack-based variable happened to be
            less than sixteen bytes.

    DirtySock (Unix)
        DirtyNetUnix
            Rewrote SocketHost() based on _ConfigResolveSource() in configfile.cpp from EAFN source.

    DirtySock (Xenon)
        HLBudApiXenon
            Changed the friends flag for hlbudapi to not discard a friend just because he appens to have a guest
            logged in.


DirtySock SDK 5.6.0 - August 7, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.5632.2-proxy (April 2007 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        LobbyLan
            Added more info to disconnect debug print statements.

            Fixed unpacking of player info in JOIN request on host.

            Added host polling check for client disconnect (Nintendo DS only).

            Added ability to specify client timeout using LobbyLanControl() 'time' selector, defaulting to
            five seconds.  The timeout was previously hardcoded.

            Added LobbyLanStatus() 'strt' selector to return if a game has been started or not.

        ProtoSSL
            Added more verbose debugging in failure cases.

        ProtoStream
            Fixed a bug that manifested on PC where the current tick counter, if large enough (as when the
            PC is left on for a long time), would cause the data callback timer check to fail and the data
            callback to not fire.

        VoipTunnel
            Fixed a debug print statement.
            
    DirtySock (DS)
        DirtyAddrDS
            New file based on dirtyaddrpsp, replacing the generic dirtyaddr.c.  The new module supports an
            alternate dirtyaddr based on MAC address when in adhoc mode.

        DirtyNetDS
            Added 'ethr'/'macx' support to SocketInfo(), calling OS_GetMacAddress().

        DirtyNetDSAdhoc
            Added ability to set and clear socket map entries explicitly.
            
            Changed connect callback to set socket map entry on connect and clear it on disconnect.
            
            Added SocketInfo() 'addr' selector to return the psuedo-ip address associated with the given mac
            address.
            
            Added SocketControl() 'addr' selector map to and from psuedo-ip address and ethernet address.  If
            iData1 is nonzero, it is assumed to be a psuedo-ip address and converted to ethernet address and
            written to pData2.  If iData1 is zero, pData2 is assumed to point to an ethernet address, which is
            converted into a psuedo-ip address and returned.

        DirtyWmManager
            Changed to call connection callback on disconnections as well as connections, and added AID to
            connection callback parameters.

            Added special handling of WM_ERRCODE_OVER_MAX_ENTRY in WM_StartConnection() callback, mapping it
            to '-ful' error code instead of the generic '-con'.


DirtySock SDK 5.5.3 - July 31, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.5632.2-proxy (April 2007 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        VoipConnection
            Fixed a bug in VoipConnectionRemove() where the connection was removed from the receive mask but
            VoipConnectionSetRecvMask() was not called, which meant that the user was not unregistered
            correctly, and subsequent re-registration of the same user would fail.

    DirtySock (DS)
        DirtyWmManager
            Fixed a bug with the 'maxp' selector where it would return the wrong send size for multiple
            reasons.  This bug could cause CommUDP to fail to ever send reliable data when DirtySock was started
            with a maximum of one child, but other less obvious problems would have occurred as well.

    DirtySock (PC)
        VoipHeadsetPC
            Limited the playback of Voip frame data by checking the WAVEHDR flag to see if it's INQUEUE or DONE.
            This fixes a mixing bug that prevented Voip from working with greater than two players.


DirtySock SDK 5.5.2 - July 24, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.5632.2-proxy (April 2007 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        NetGameDist        
        NetGameDistServ
            Improved game server (latency and update frequency) and validated with extra-stressing stress tester
            (random sends between 5 and 65 ms).

        VoipConnection
            Fixed a bug introduced in DirtySock 5.3.3 where four bytes were added to the MIC packet but two
            lines of code were not adjusted to deal with the new size, which caused the payload to be four bytes
            off.  This caused a regular clicking sound when using the ADPCM codec.


DirtySock SDK 5.5.1 - July 17, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       DotNetSDK 2.0-1
                    VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.5632.2-proxy (April 2007 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        NetGameDist
            Changes related to operating in server mode.
        
        NetGameDistServ
            Fixed two major bugs that could cause an undroppable packet to get dropped, causing a desync in
            client code.  

        ProtoPingManager
            Changed to clamp minimum cache size specified to PingManagerCreate() to 16.  This prevents the cache
            size being created with too small of a size (and specifically, prevents it from being created with a
            size of zero, which causes a crash if a user ping is later attempted).  Also compiled out two debug
            print statements by default.

    DirtySock (DS)
        DirtyWmManager
            Fixed a debug print statement on shutting down in DirtyWmManagerDestroy(), added debug output on
            callback response to WM_End().


DirtySock SDK 5.5.0 - July 3, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       VisualStudio 8.0.0-2-non-proxy
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.5632.2-proxy (April 2007 QFE)

    NOTE: Updated to use Visual Studio 2005.

Changes/bugfixes in this release:

    DirtySock (All)
        NetGameDistServ
            Fixed NetGameDistServDelClient() to remove an uninitialized client from the client list.  This is
            required to keep the list in sync with the lower layer.  An unititialized client with initialized
            clients following can show up in the list when the lower layer tries to connect to two clients A
            and B, with the connection to A never succeeding and the connection to B succeeding.  When removing
            A, the entry needs to be contracted to keep the client list in sync with the lower layer.

        VoipConnection
            Fixed voip issues after host migration. The various masks would not be updated in the same way.

    DirtySock (Xenon)
        HLBudApiXenon
            Checking for NULL values in hlbuddy, for cases where gamertags get changed.

        NetConnXenon
            Cleaner detection of guests for friends enumeration. Using April XDK API if available.


DirtySock SDK 5.4.3 - June 26, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        ProtoPingManager
            Disabled verbose debugging that was erroneously checked in for the 5.4.2 release.
        
        VoipTunnel
            Fixed a bug in VoipTunnelClientRefreshSendMask(), which was iterating through the client's send list
            to rebuild the send mask but was using the game count instead of the client send list count as the
            upper bound.

    DirtySock (Revolution)
        DirtyNetRev
            Fixed SocketInfo() 'conn' / 'peer' to correctly initialize SOSockAddr before calling SOGetPeerName().

    DirtySock (Unix)
        DirtyLibUnix
            Added fflush() after fprintf(stdout).  Previously the code used stderr, which is flushed
            immediately, so this restores that behavior.
        
    DirtySock (Xenon)
        NetConnXenon
            Fixed the friends spam for guests and fixed to provide the proper tick to NetConnUpdate(), to reduce
            the CPU load of friends enumeration.
        

DirtySock SDK 5.4.2 - June 19, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Fixed non-async thread event polling when calling CommUDPPeek() with an empty input buffer to not
            allow recursion, which can cause a packet received into the static packet buffer in _CommUDPThreadData()
            to get overwritten and lost.

        ConnApi
            Fixed a bug introduced with the change in 5.3.3 to number voip connections based on their index on
            the ConnApi client list, where VoipStartup() was being started up with the number of clients minus
            one.  Because the client index now ranges from zero to max-1, instead of zero to max-2, the last
            client would not be able to use VoIP.

        LobbyLan
            Rewrote packet formatting to allow max-sized packets in LobbyLanSendto() and LobbyLanRecvfrom().
            Because of this change it is now a client responsibility to make sure that the send buffer submitted
            to LobbyLanSendto() includes space for one byte to include the LobbyLan type info.
        
        NetGameDistServ
            The server now waits for a given number (4) of frames without packets from anybody before stopping
            sending packets.  This corrects a problem where there was a slightly slower input send rate with
            games with a small number of users than the target rate.

        NetGameLink
            Fixed a bug in _NetGameLinkRecvPacket0() where up to eight bytes of data past the end of the
            NetGameLink receive buffer could get trashed when receiving a packet at the tail end of the buffer.

    DirtySock (DS)
        DirtyLibDS
            Fixed a major critical section bug where a threadid of zero was chosen as an invalid value, where in
            fact threadid zero is a valid id (usually the main thread) on Nintendo DS.

        DirtyNetDSAdhoc
            Made some changes to improve throughput and consolidate some functionality when receiving data from
            the dirtywmmanager.

        DirtyWmManager
            Removed send sequence tracking as it is not required.

    DirtySock (PS3)
        DirtyErrPS3
            Added new error codes as of 180.002.

    DirtySock (PC/Xbox/Xenon/Unix)                
        DirtyNet(Win/Unix)
            Fixed SocketShutdown() to translate the input "how" to appropriate SHUT_* flags.


DirtySock SDK 5.4.1 - June 12, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.22.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: Updated to use eaconfig 1.22.00.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Host Migration support.
            
            Fixed to not dereference pVoipRef if it is NULL in _ConnApiRemoveClient().  This fixes a bug
            introduced in the 5.3.3 release.

        LockerApi
            Added ability to specify what ProtoFilter filter to apply to profane text, using the new
            LobbyApiControl() function with the 'filt' selector.
        
        NetGameDistServ
            Only display stream failure to send (no ref) if client is still connected.

        ProtoPingManager
            Added ProtoPingManagerPingServer2(), which on Xenon, does not overwrite the input server address
            with zero.  This is useful for Xenon LSP pinging.
            
            Added queueing of server ping requests, allowing multiple different callbacks for server pings to
            be simultaneously queued (up to eight).
            
        ProtoStream
            Changed so that when a stream request results in a result other than PROTOHTTP_RESPONSE_OK (200),
            pre-buffering is disabled so the application can respond to the failure.

        ProtoUpnp
            Changed to disable keep-alive for HTTP transactions with the UPnP router.  Some routers have been
            shown to not work with keep-alive enabled, and disabling it works around that issue.

        VoipConnection
            Fixed a bug from previous release -- setting send/recv masks when the connection is started
            prevents the remote user from being registered.

        VoipTunnel
            VoipTunnel -- changed to build game clientid list (in order they are added, bucketed by game index)
            and use that as the send list, instead of the client list submitted by the calling app.  This ensures
            a uniform send list for all clients in a game.  The client send list is now used to build a send mask
            that is applied in addition to the send mask specified by the client in the voip data.  The mask is
            built by calling VoipTunnelClientRefreshSendMask() (new).
        
        XmlParse
            Fixed a bug in change introduced in 5.1.3 release to implement skipping of doctype comments.  An
            XmlSkip() of the comment resulting in a NULL pointer (end of the document) would result in a NULL
            pointer dereference.

    DirtySock (PS3)
        VoipPS3
            Added VoipStatus() 'umic' and 'uspk' selectors to return the user-specified "microphone" (send) and
            "speaker" (recv) masks.  These are necessary because 'micr' and 'spkr' take into account not only
            user-specified settings but system mute and permission flags.

    DirtySock (Revolution)
        DirtyNetRev
            Fixed to not transition to -dsc connection status when wireless link goes down in the middle of
            SOStartup() operation.  This allows SOStartup() to gracefully complete and return the proper error
            code, and also allows SOFinish() to be called immediately after SOStartup() has completed (if called
            while SOStartup() is ongoing, SOFinish() fails and returns SOBUSY).

    DirtySock (Xbox)
        ProtoPingXbox
            Fixed to return a ping response of -1 on timeout, like with protoping.

    DirtySock (Xenon)
        DirtyNetWin
            Added ability for a name remap to contain a numerical IP address.
        
        NetConnXenon
            Fixed error handling for failed friends enumeration to call XGetOverlappedExtendedError() to get
            the true error condition.  This prevents the incorrect spamming of ERROR_NO_MORE_FILES when a user
            with no friends is enumerated.
            
            Added 'xlsp' as an alias for NetConnControl() 'titl' selector.

            Added 'xlsp' as an alias for NetConnStatus() 'tsrv' selector.

            Added NetConnStatus() 'sadr' selector, to return the serviceID associated with the given secure address.

            Made NetConnStatus() pass through to SocketInfo() if the selector is unhandled.

        ProtoPingXenon
            Fixed to return a ping response of -1 on timeout, like with protoping.

            Added ability to pass a secure address to ProtoPingRequestServer(), used for pinging LSPs.
        
        VoipXenon
            Added VoipStatus() 'umic' and 'uspk' selectors to return the user-specified "microphone" (send) and
            "speaker" (recv) masks.  These are necessary because 'micr' and 'spkr' take into account not only
            user-specified settings but system mute and permission flags.

    DirtySock (Unix)
        DirtyLibUnix
            Added NetPrintfHook().
            
            Changed debug output to go from stderr to stdout.


DirtySock SDK 5.4.0 - June 5, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.01
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 180.002
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-patch-plus2-070510
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch6-070518
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: PS3 releases starting with DirtySDK 5.1.2 built against EAConfig 1.21.00 were not optimized in the final
    configurations.  This has been fixed by updating to EAConfig 1.21.01 for this release.  Any title either using
    pre-built libraries included with the binary release of DirtySDK 5.1.2 through 5.3.3 or rebuilding DirtySDK
    themselves with EAConfig 1.21.00 will have unoptimized final libraries.

    NOTE: DirtySock has been updated to the latest PS3 and Revolution packages available.

Changes/bugfixes in this release:

    DirtySock (All)
        NetGameDist
            Added new NetGameDistInputTweak() 'plat' (packet latency) selector.
    
        NetGameDistServ
            Adjusted debuglevel on some print statements to reduce spam.
        
        ProtoHttp
            Fixed a bug where a chunked download with a chunk trailer (CRLF) exactly straddling the end of the
            internal ProtoHttp recv buffer would cause a subsequent memmove() with a -1 length, typically
            crashing the client.  The problem is very rare but if the download is sized exactly right it will
            happen every time.

        VoipTunnel
            Adjusted debuglevel on some print statements to reduce spam.
        
    DirtySock (DS)
        DirytNetDSAdhoc
            Adjusted debug level on a printf.
            
            Made recv queue sized based on a single define, instead of hard-coded at two.  Expanded recv queue
            to four slots.  Fixed recv thread to pull from queue in-order to prevent out-of-order receives at
            the upper layer.
            
        DirtyWmManager
            Minor name change plus debug output change for recv callback.

            Rewrote interrupt handlers to use a unified callback dispatch system instead of separate functions
            for all interrupts.

    DirtySock (Xenon)
        NetConnXenon
            Extracted friends enumeration into separate function; added error codes to error prints in friends
            enumeration.
            
            Fixed to not attempt to enumerate friends for users that are not signed into Xbox Live.
        

DirtySock SDK 5.3.3 - May 29, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 170.003
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-070309a
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch3-070301
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Changed to assign VoIP connection identifiers that explicitly match the index of the client in the
            client list.  This is required to ensure that identifiers are the same on all clients so that the new
            VoipTunnel send mask muting support works correctly.
            
            Added call to new VoipRemove() function in _ConnApiRemoveClient(), to contract the voip client list,
            and renumber the stored client identifiers to match the new connectionlist identifiers.

        DirtyGraph
            Fixed DirtyJPG and DirtyPNG to allow a Create, Parse, Parse, ..., Parse, Destroy usage pattern.
            
            Created _DirtyPngReset() to only reset the required values (allowing the CRCTable to be generated
            only once).

        Voip
            Added client send mask to voip mic packets, for use by voip server to enable proper muting.  Incremented
            packet version to 'c' so the voip server knows if the mask is present or not.
            
            initial change to put client send mask into voip data packets, read them out of the voip data on the server, and have the server apply the send mask for the client.  the server will only try to read the send mask if packet format is 'c' or higher to allow backwards compatibility with older data format streams.

            Added VoipRemove() function.  This should be called after VoipDisconnect(); it contracts the client
            list and updates the various masks to remove the bit for the removed connection identifier.

            Changed to default send/recv masks to enabled for a given connection on connection start.

        VoipTunnel
            Updated to read client send mask out of mic packets if packet version is 'c' or greater.  The send
            mask is defaulted to all enabled and is now applied when broadcasting voice to other clients.  The
            bitfield is expected to match the VoipTunnel clientlist exactly, so all clients must have the same
            local connection identifiers that match the VoipTunnel client list ordering.

    DirtySock (Xbox)
        ConnApiXbox
            Call ConnApiDisconnect() in ConnApiDestroy() instead of ConnApiStop().  This fixes a bug where if
            ConnApiDestroy() was called without first explicitly calling ConnApiDisconnect(), some objects could
            be leaked.  Was previously fixed in other versions.
        
        

DirtySock SDK 5.3.2 - May 22, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 170.003
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-070309a
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch3-070301
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Fixed a bug where early transition from INIT to CONN state could occasionally cause a connection
            to not work under certain low-latency network conditions (found on Revolution).

            Compiled out send overflow spam by default.
        
        ConnApi
            Fixes for host migration.

        DirtyPNG
            Fixed a bug where the scanlines weren't being freed after parsing an image.

        LobbyLan
            Added new function LobbyLanReset(), intended for use on Nintendo DS when disconnecting from an
            Adhoc BSS.

        LockerApi
            Added permissions declarations.
                        
        NetGameDist
            Fixing netgamedist to report error conditions correctly in situations that occur with Nplayer.

        NetGameDistServ
            Changed to disconnect a client if we try to stream send to them and it fails, or if we try to stream
            send to them but they don't have a dist/stream ref.

            Made the timing sanity check for the game server a bit less verbose.

            Cleaned up internal instances where we disconnect a client to call _NetGameDistServDiscClient()
            instead of just setting bDisconnected to TRUE.

            Changed NetGameDistUpdateClient() to return negative if the client has been disconnected, to allow
            the lower layer to disconnect if the upper layer has disconnected ("pushing down" the disconnect).

        NetGameLink
            Do not print diagnostic on send overflow to avoid spamming.

    DirtySock (DS)
        DirtyLibDS
            Fixed shutdown bug that would cause NetLibShutdown() to indefinitely wait on _NetLibThread
            termination.
            
        DirtyNetDS
            Implemented WM_EndMP() call when disconnecting from MP_Parent or MP_Child state.
            
            Split WM management code into DirtyWmManager.
            
            Fixed various memory leaks shutting down / disconnecting.

    DirtySock (Revolution)
        DirtyNetRev
            Fixed ping thread shutdown in case where SOStartup() has failed.

            Changed to not spam a debug warning when SOSend() returns EAGAIN.

    DirtySock (Xenon)
        NetConnXenon
            Added mappings of new XN_LIVE_CONNECTIONCHANGED results to connection status:
            XONLINE_E_LOGON_SERVICE_NOT_REQUESTED, XONLINE_E_LOGON_SERVICE_NOT_AUTHORIZED and
            XONLINE_E_LOGON_SERVICE_TEMPORARILY_UNAVAILABLE to '-svc';
            XONLINE_E_LOGON_FLASH_UPDATE_REQUIRED to '-upd; and XONLINE_S_LOGON_DISCONNECTED to
            '-lof'.  Previously, these responses would all map to the generic '-xbl' error code.
            

DirtySock SDK 5.3.1 - May 15, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 170.003
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-070309a
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch3-070301
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

New in this release:

    DirtySock (Revolution)
        DirtyNetRev
            Implemented ICMP ping support using ICMP interface in RevoEx.  Because ICMPPing() is a blocking
            function, it is executed from a new ping thread, and ping requests are queued until they can be
            issued.  Because of the queued nature of the execution, ping on Revolution does not include data
            and any data specified will be ignored.

        ProtoPing
            A few minor changes to support Ping on Revolution.

Changes/bugfixes in this release:

    DirtySock (All)
        DirtyPNG
            Reformed PNG code to allow for additional type support.  Code now works for 1, 2, 4, and 8 bit images
            as well as interlaced images.

        LobbyLan
            Fixed to update connections in STARTED state (when 'kcon' == 1 after game start).        

        NetGameDistServ
            Fixed a verbose debug printf in stream rebroadcast.
            
        TelemetryApi
            Set strDisabledCountries to a size of 1K.

    DirtySock (DS)
        DirtyNetDSAdhoc
            Better disconnect handling.
            
            If GameInfo can't be set into the beacon because state isn't idle, set dirty flag and send when
            idle.  This fixes some issues with the advertising in the beacon not being updated correctly some of
            the time, typically during disconnection events.
            
            Made SocketInfo() 'waid' selector callable in states other than +ini.

    DirtySock (Revolution)
        DirtyNetRev
            Set DWC error code on SOStartup() failure to result of NETGetStartupErrorCode().  DWC error code can
            be retrieved with NetConnStatus('dwec').

            Added polling of NCDGetLinkStatus() to detect link outages.  If link status goes from WIRELESS_UP to
            WIRELESS_DOWN, uConnStatus is set to -dsc.  This polling is done when SocketControl() 'idle' is
            called.

            Fixed to pass in authcode set in SocketControl() 'init' call to DWC_SvlGetTokenAsync() instead of
            using hardcoded "9000".

        NetConnRev
            Poll SocketControl() 'idle' when NetConnIdle is called for low-level idle processing.        

    DirtySock (PC/Unix/Xbox/Xenon)
        DirtyNet(Win|Unix)
            Added a guard against pushing too much data into socket recv buffer.  Any such attempt will trigger
            a debug diagnostic message and drop the data.


DirtySock SDK 5.3.0 - May 8, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.11.01

        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 170.003
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-070309a
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch3-070301
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)
        
    NOTE: PS3 titles that are linking against SDK 160.008 or greater should not include PlayStation3Celp in their
    masterconfig.xml, as a newer version of the CELP libraries is included built-in to 160.008.  Failure to link
    against the correct libraries will be a TRC failure.

Changes/bugfixes in this release:

    DirtySock (All)
        DirtyLib
            Fixed NetPrintfVerboseCode() to move the debug printing outside of the vararg block within the
            function.  The nested varargs appeared to be producing some very rare stack problems under Windows
            builds, and the change does not comprimise the functionality at all.

        LobbyLan
            Added LobbyLanControl('lbuf') selector, to set link buffer size (default is 1k).
            
            Added LobbyLanStatus('stat') selector, to get the NetGameLinkStatT info for a given client.

        LockerApi
            Added LockerApiUpdateInfo2(), which lets you update the permissions of the file.

        NetResource
            Fixed to actually moves files within the cache which it didn't before.

    DirtySock (DS)
        DirtyNetDSAdhoc
            Fixed a bug with scan timeouts.

            Fixed a bug where a send queue slot could be re-used before the async send had completed.

            Changed 'maxp' to subtract two bytes from the max value, to account for the alignment byte and
            potential pad value.

            Added SocketInfo('waid') to return the local user's AID.  Only valid if already connected as a
            parent or a child.

        ProtoAdvt
            Change for DS to use originator address instead of sequence to identify whether an advert should be
            updated or added as new, to work around an issue where the advert is canceled but not pushed into
            the beacon, so a subsequent advertisement can coexist with the previous advertisement for a short
            while because the sequence numbers are different.

    DirtySock (Revolution)
        DirtyNetRev
            Added DWC_SvlGetToken() process after login.  The token can be retrieved with SocketInfo() 'tick'
            after successful completion.

        NetConnRev
            Added NetConnStartup() params -gamecode and -authcode, passed through to SocketControl('init') call,
            defaulting to RABA and 9000 respectively.
        
            
DirtySock SDK 5.2.2 - May 1, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 170.003
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.3.0
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.4
                    RevolutionEX 1.0-070309a
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch3-070301
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: This release is built against updated versions of PS3, PSP, RevolutionDWC_DL, and RevolutionEX SDKs.

Changes/bugfixes in this release:

    DirtySock (All)
        DirtyPNG
            Fixed an issue where a poorly encoded file with extraneous empty blocks would cause a line to get
            filtered multiple times and trash the output image.

        NetGameDist
            Fixed multistream support by splitting subchannel out of kind.  Requires use of new Send2/Recv2
            procs instead of Send/Recv.

            Fixed NetGameDistInputCheck() to correctly indicate whether something is ready to be received or
            not.  Also fixed it so that it correctly indicates whether it's time to send or not.  These changes
            fix n-player bugs; 2p did not have this problem.

            Fixed to not try to receive from linkref if there is no room to store the result.  Added new
            NetGameDistInputTweak() '?cws' selector to indicate if sending is possible.
    
        NetGameDistServ
            Only send if one of the clients actually provided input.  Added some extra debug output.

            Fixed to destroy dist stream and dist ref on disconnect.  This allows the lower layers to destroy
            the underlying gamelink and gameutil refs.

            Fixed stat update in NetGameDistServUpdate() to not try and ref a disconnected client's dist ref,
            and to clear stats for a disconnected client.

    DirtySock (PC/Xbox/Xenon)
        DirtyLibWin
            Changed to allow use of high-res timer based on a variable instead of conditional compilation.
            Still defaults to off for pc and on for xbox/360 as previously.

    DirtySock (Xbox/Xenon)
        VoipConnection
            Fixed a rare multithreading issue when closing voip connections.


DirtySock SDK 5.2.1 - April 24, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 160.008
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.1.1
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.3
                    RevolutionEX 1.0-070309
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch3-070301
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Fixed ConnApiDestroy() to call ConnApiDisconnect() instead of ConnApiStop().  This fixes a bug where
            some objects would be leaked if calling ConnApiDestroy() without first calling ConnApiDisconnect().
        
        CommUDP
            Changes to reduce redundant calls to NetTick() for the benefit of excruciatingly slow linux
            NetTick().

        LockerApi
            Fixed to use "src" instead of "searchmeta" which changed.

        TelemetryApi
            Added TelemetryApiStatus() 'ctry' selector, to return if the user's local is telemetry-enabled.
            
            Added TelemetryApiStatus() 'locl' selector, to copy out the user's locale string.
        
        VoipTunnel
            Changed VoipTunnelClientListDelGameServer() to return number of clients deleted.
            
            Removed Linux-only NetConnIdle() call from VoipTunnelUpdate().  It is now the responsibility of
            the application to call NetConnIdle() as appropriate.

    DirtySock (DS)
        DirtyNetDSAdhoc
            Added SocketInfo('idle') to return if in an idle state.
            
            Fixed scanning more than one parent entry correctly, and being able to then join a scanned entry.
            
            Implemented scan entry timeout.

            Added NetConnStatus2() which includes an iData parameter.

            Fixed address client sees data coming from to match address client is trying to connect to.

        LobbyLan
            On Nintendo DS in Adhoc mode, automatically create BSS when calling LobbyLanCreateGame() and join
            BSS when calling LobbyLanJoinGame().  With this change, any BSS create/join operations implemented
            outside of LobbyLan must be removed.

            New function LobbyLanJoinGameByIndex().

    DirtySock (Unix)
        Defined SOCKET_ASYNCRECVTHREAD 1 for linux (requires polling NetConnIdle() at a "reasonably" fast rate).
    
        DirtyLibUnix
            Added NetTickSet(), which calculates the current tick count and stores it in a global variable.
            Changed NetTick() to return this variable instead of calculating current tick count().  NetTickSet()
            is called from NetConnIdle(), so NetConnIdle() needs to be polled regularly to update the tick
            count.
            
            Added flag to disable critical section calls as an optimization.
                        
        DirtyNetUnix
            Implementation of SocketControl('poll') and hint system to cache poll results and allow user code
            to skip SocketRecv() calls that don't have pending reads.
            
            Fixed to not recv on invalid socket ref (e.g. with a virtual socket).

    DirtySock (Xenon)
        NetConnXenon
            Moved friends enumeration here from XnFriends.  Enumeration is now notification-based.  There's a
            polling rate for friends that can be set with NetConnControl().  Default is every second, to mimic
            past behaviour.  Setting it to 0 disable friends polling (cleaner, better performance), making
            wannabe friends not visible (better TRC compliance).

            Prevented NetConnStatus() from calling _NetConnIdle() if the calling thread is not the main thread
            (the thread that called NetConnCreate()).  This is required because NetConnStatus() is called from
            the voip thread, but _NetConnIdle() (and NetConnIdle()) are not thread safe.

        ProtoMangleXenon
            Fixed to compile out XSessionMigrate() for older XDKs that don't include it by default.

        VoipXenon
            Friends-only communication is now allowed, instead of simply blocked as previously.
            
        XnFriends
            Moved friends enumeration to NetConnXenon, so friends information can be shared internally among
            DirtySock modules.

DirtySock SDK 5.2.0 - April 11, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 160.008
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.1.1
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.3
                    RevolutionEX 1.0-070309
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch3-070301
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

New in this release:

    Contrib (PC)
        VoipSpeex
            VoipSpeex is a new contrib library for PC that acts as a plug-in interface for the Speex codec.  When
            an application links against VoipSpeex and libspeex, it can then create the VoipSpeex codec type with
            the VoipControl2() 'creg' command, and select it with the VoipControl() 'cdec' command.  See the
            voice command (sample/common/tester2/source/modules/voice) of Tester2 for an example.

Changes/bugfixes in this release:

    Platform (All)
        plat-str
            Fixed vsnzprintf() and snzprintf() to handle overflow in a consistent manner.

    DirtySock (All)
        CommUDP
            Changed to call SocketInfo() 'maxp' to get max packet size when calculating how much data can fit
            into a multi packet. This fixes a problem on Nintendo DS where in Adhoc mode max packet size is
            smaller than SOCKET_MAXUDPRECV and is dependent on the maximum number of children, not a fixed
            constant.

            Changed to only process an incoming packet if connident matches the ref connident when the incoming
            packet is an INIT or POKE packet.
            
        DirtyNet*
            Implemented SocketInfo() 'maxp' selector, which returns the maximum packet size allowable.  This is
            typically SOCKET_MAXUDPRECV, but it can be smaller on some platforms (for example Nintendo DS
            running in Adhoc mode).

        LobbyLan
            Fixed a bug where an "immediate" gamelink/gameutil destroy would not generate a PLYRKILL callback.

        NetGameDistServ
            Bumped up stream size to 4k.

        VoipTunnel
            Added new function VoipTunnelClientListMatchFunc().

    DirtySock (DS)
        DirtyNetDSAdhoc
            Fixed the psuedo Internet address on receive (192.168.0.x) to not simply be hardcoded to 192.168.0.0
            but to use that as the base address and add in the AID of the sender.  This is required when a host is
            connected to more than one child to correctly identify the source of the incoming data.

            Removed hard-coded send to port eight in _SocketSendtoAdhoc(), and instead extract the port from the
            pTo address.  This means that the port (from zero to fifteen) must be correctly specified where
            before it was ignored.

            Fixed _SocketSendtoAdhoc() to calculate the sendmask correctly for unicast sending.  Broadcast
            sending (a mask of 0xffff), which was the only behavior previously, can still be selected by
            specifying the broadcast address (0xfffffff) as the destination.

    DirtySock (PS3)
        NetConnPS3
            Added NetConnStatus() 'npti' to return the registered titleid.

    DirtySock (Unix)
        DirtyNetUnix
            Pthreads are now created as detached to that they are cleaned up after use.  Previously they were
            created as joinable and so memory was not being freed when the threads exited because nobody was
            calling pthread_join on them.
                    

DirtySock SDK 5.1.3 - April 3, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.11.01
        
        DS          DSCodeWarrior 3.2-5
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 160.008
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.1.1
        Revolution  RevolutionCodeWarrior 3.0.5.2-2
                    RevolutionDWC_DL 1.3.3
                    RevolutionEX 1.0-070309
                    RevolutionNDev 07.01.15-non-proxy
                    RevolutionSDK 2.4-patch3-070301
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: This release is built against updated versions of PS3, Revolution, and NDS SDKs.
    
Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            Added ConnApiStatus() 'gsmd' to return what the current GameServer mode is (-1=not using GameServer,
            0=BROADCAST mode, 1=PEERCONN mode).
            
            Added ability to specify 'gsrv' to ConnApiControl() 'dist' selector instead of a client index, to
            set the dist ref for the GameServer psuedo-user.
        
        VoipTunnel
            Made max number of clients dynamic.
           
            Added a new function, VoipTunnelCreate2(), to allow specifying the maximum number of clients.
            VoipTunnelCreate() use results in VOIPTUNNEL_MAXCLIENTS max clients, which is the previous
            behavior.
            
            Added fast binary-search lookup table when calling VoipTunnelClientListMatchId() if >= 32 clients.
        
        XmlList
            Made XmlListFetch() pStrUrl param const.

        XmlParse
            Added ability to XmlSkip() to skip a doctype/comment inside of a regular element.

    DirtySock (PS3)
        HLBudApiPS3
            Made event callback debug print a little easier to read, deprecated HLBudApiCreate3()'s strTitleId
            field, removed internal hardcoded SceNpTitleId fields and changed to get the NP communications ID
            from NetConn instead.
        
        NetConnPS3
            Added -commid param to NetConnStartup(), to register the applications NP Communications ID.
            
            Added NetConnStatus() 'npcm' selector to copy out SceNpTitleId holding registered commid.

    DirtySock (Revolution)
        DirtyNetRev
            Threaded SOStartup() so the main thread doesn't block, changed to default authserver to DEBUG and
            allow "prod" to set RELEASE.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Added new ability to SocketControl() 'poll' to build the select set internally from all available
            DirtySock sockets if an array of sockets is not specified.  A maximum of FD_SETSIZE (default 64)
            sockets can be added to the select set.

    DirtySock (Unix)
        DirtyNetUnix
            Added new SocketInfo() 'poll' selector to build a poll array of all valid sockets in a caller-
            specified buffer.

    DirtySock (Xbox/Xenon)
        DirtyNetWin
            Fixed SocketLookup() to not return NULL if XNetDnsLookup() fails immediately; instead it sets the
            appropriate failure state in the hostent structure and returns it.  This fixes a case where calling
            code assumes the result can never be NULL and dereferences it regardless.
            

DirtySock SDK 5.1.2 - March 27, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.21.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-4
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 154.001
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 3.1.1
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionDWC_DL 1.2.0
                    RevolutionEX 1.0FC9-070201-0841
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch2-070110
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: With this release forward, DirtySock for PSP is built against PlayStationPortableSN 3.1.1.

New in this release:

    DirtySock (PS3)
        VoipHeadset
            Updated to only compress and send data when a sound local to the headset is detected.  If data is
            not being sent, low-bandwidth ping packets are sent instead.

Changes/bugfixes in this release:

    DirtySock (All)
        NetGameDist
            Added an internal variable to count input send/recv failures, and APIs to get (NetGameDistGetError())
            and clear (NetGameDistResetError()) it.
            
        NetGameDistServ
            Use new NetGameDist error APIs to disconnect connections to clients that are suffering continuous
            connection errors.


DirtySock SDK 5.1.1 - March 21, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-4
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 154.001
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionDWC_DL 1.2.0
                    RevolutionEX 1.0FC9-070201-0841
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch2-070110
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Implemented _CommUDPFlush(), which sends all buffered data before the ref is destroyed.

        ConnApi
            Added ConnApiControl() 'gprt' to allow setting game port after create.  Fixed some locations that
            were still using a hardcoded VOIP_PORT define instead of the new variable.

            Fixed _ConnApiUpdateGameServConnection() to not update the GameServer object if there are no clients
            in the client list.  This mimics "normal" functionality when not in peermode.

        LockerApi
            Added GameName to Locker so that all transactions are identifiable by the server.
        
        NetGameDist
            Fixed a bug in GameServer mode affecting games with an even number of clients.

            Reordered types nibbles in multipacket to have same type position than single packet.

            Fixed type extraction for two-player NetGameDist.

            Stats reporting for all clients with Dist and game servers.

            Fixing a possible problem in NetGameDist using the old interface and a GameServer.

        NetGameDistServ
            Stats reporting for all clients with Dist and game servers.

            GameServer handling of disconnections.

        VoipTunnel
            Added VoipTunnelClientListMatchIndex(), and VoipTunnelStatus() 'nusr' selector.

            Temporarily disabled set of voip port when forwarding data to other users that was added in the
            previous release.  This was breaking operations with the voip port set to be virtual.

        XmlList
            Rewrote _XmlListUpdateGet() to fix some conditions the previous code did not consider, which
            fixed PS2 as well as some theoretical cases where data might not arrive all in one bundle.
            
    DirtySock (PS3)
        DirtyLibPS3
            Changed to specify a static 4k buffer for printf() usage in debug mode, which avoids printf()
            needing to call malloc().
            
    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Added SocketControl() 'radr' selector, which calls setsockopt() with the SO_REUSEADDR option.

            Fixed SocketControl() 'xnam' selector to correctly clamp to the max size, also simplified both
            'xnam' and 'xmap' selectors and updated the documentation to include parameter descriptions.

    DirtySock (Revolution)
        DirtyNetRev
            Added SocketControl() 'shut' selector to call SOFinish().  Changed 'disc' selector to call
            SOCleanup() instead of SOFinish().  Removed call to SOCleanup() from SocketDestroy().
            
        NetConnRev
            Changed NetConnShutdown() to call SocketControl() 'shut' to shut down the network stack.

    DirtySock (Unix)
        DirtyNetUnix
            Added new SocketInfo() 'stat' implementation, ported from dirtynetwin.c.
            
                
DirtySock SDK 5.1.0 - March 8, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-4
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 154.001
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionDWC_DL 1.2.0
                    RevolutionEX 1.0FC9-070201-0841
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch2-070110
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: With this release, RevolutionDWC_DL, RevolutionEX, and REvolutionSDK have all been updated to the
    latest versions available.

New in this release:

    DirtySock (All)
        DirtyPNG
            Initial PNG decoder implementation.  This release supports the following features:
                - Bit Depth of 8
                - Colour Type 0, 2, 4, 6 (grayscale, truecolor, grayscale with alpha, truecolor with alpha)
                - Noncompressed blocks, statically compressed blocks, dynamically compressed blocks
                - Zlib compression levels 0, 1, 2 and 9 (none through maximum)
                - Filter types 0-4 (none, sub, up, average, paeth)

            Not currently supported:
                - Bit Depth of 1, 2, 4, and 16
                - Colour Type 3 (Indexed Color)
                - PLTE chunks
                - Ancillary chunks
                - Interlace method Adam7
                
            Unsupported chunks are skipped where possible.

        NetGameDist
            Updates for >2p support.
            
        NetGameDistServ
            New module that encapsulates server functionality to manage multiple NetGameDist clients using
            a fixed-rate rebroadcast of merged packet inputs.

Changes/bugfixes in this release:

    DirtySock (All)
        CommUDP
            Added clientident to INIT and POKE packets for gameserver use.  Simplified and cleaned up connection
            logic.  Added control function to enable setting of clientident.
            
        ConnApi
            Added voice/data split and gameserver as fallback capabilities.

            Added a special processing mode for use if the GameServer is enabled and in PEERCONN mode.  This
            fixes a bunch of cases where removing users from the clientlist would cause the GameServer
            connection to be destroyed.
            
            Changed to call NetGameUtilControl() with 'clid' selector to set clientid for optional gameserver
            use.
            
            Added ConnApiStatus() 'gsrv' selector to return the GameServer ConnApiClientT structure that is used
            to represent the connection to the GameServer instead of a user in the client list if
            CONNAPI_GAMESERV_PEERCONN mode enabled.

            Added 'vprt' selector to allow setting the voip port.

        DirtyMem
            Added defines for 'nsoc' and 'ndwc' memid's that are used to stamp socket and dwc library
            allocations, respectively, on DS and Revolution.

        DirtyNet(All)
            Added guard against pSocket==NULL in SocketControl() 'push'.

        DirtyNet(PSPInet/PS3/Unix/Win)
            Added SocketControl() 'ndly' selector to set TCP_NODELAY option for given socket.
            
        HLBudApi
            Fixed so when doing email forwarding and changing states it first checks that you are connected to
            the buddy server.

        LockerApi
            Added a new function, LockerApiFetchLocker2(), that is identical to LockerApiFetchLocker() but also
            takes the game name as input in addition to the other parameters.

        NetGameUtil
            Added NetGameUtilControl() 'clid' selector to set clientid.  Pass clientid through to commref if
            connection function is not null (currently commudp only).

        ProtoAries
            Changed ProtoAriesStatus() to return -1 if the selector is a protossl selector and the protossl
            module ref is null.

        ProtoPing
            Added optional callback to customize a request header before it is sent.  This callback
            can be set using the new ProtoPingCallback() function.

        TelemetryApi
            Changed to send a int number for the relative time stamp instead of an unsigned to reflect the fact
            that some of the events can now be before connection to the server and still have accurate relative
            time.

        VoipCodec
            Fixed a crash bug if (invalidly) calling VoipCodecCreate() with a codec of zero.

        VoipTunnel
            Added VoipTunnel event callback support.

            Added remote game and voip ports to VoipTunnelClientT to handle port mangled situations.

            Added ADDCLIENT and DELCLIENT events.
            
    DirtySock (DS)
        DirtyNetDSAdhoc
            Added call to DWC_SetAuthServer() immediately preceding the ConnectInet() call.  The environment can
            be controlled by passing "dev" or "prod" to select develop or release environments (test is the default).

            Added ability to abort NAS login by using the SocketControl() 'dwab' selector.

            Added ability to clear the last DWC error by using the SocketControl() 'dwce' selector.

            Fixed SocketControl() 'disc' selector to only disconnect if we are not already in a disconnected state.
            
        NetConnDS
            Fixed NetConnConnect() to only connect if we are not already in a connected state.
            
            Fixed NetConnDisconnect() to only disconnect if we are not already in a disconnected state.

    DirtySock (PS3)
        DirtyNetPS3
            Switched to using sys_net_initialize_network_ex() instead of sys_net_initialize_network(), to avoid
            the 128k static memory block reserved by the latter function.  Made allocation of the memory pool
            used by sys_net dynamic and able to be customized using the SocketControl() 'pool' selector, which
            must be called before SocketCreate().
        
        NetConnPS3
            Removed static 128k np pool declaration and made allocation dynamic when calling NetConnConnect(),
            and disposed of whe calling NetConnDisconnect().  Pool size can now be customized with the -nppool
            parameter to NetConnStartup().
        
    DirtySock (Revolution)
        DirtyNetRev
            Added support for 'macx' selector (alias for 'ethr') in SocketInfo().
            
            Added 'dwec' and 'dwet' selectors to SocketInfo(), to return the latest DWC error code and DWC error
            type, respectively.

            Added ability to specify the auth environment by passing "dev" or "prod" to select develop or release
            environments (test is the default).

            Added ability to abort NAS login by using the SocketControl() 'dwab' selector.

            Added ability to clear the last DWC error by using the SocketControl() 'dwce' selector.

            Fixed SocketControl() 'disc' selector to only disconnect if we are not already in a disconnected state.

            Added calls to DWC_Shutdown() and SOFinish() when disconnecting.
            
            SocketControl() 'conn' now takes pData3 as an optional pointer to a string specifying the NAS Login
            server to use; "dev" for DWC_AUTHSERVER_DEBUG, "prod" for DWC_AUTHSERVER_RELEASE.  If not specified
            the DWC_AUTHSERVER_TEST option is used.

        NetConnDS
            Fixed NetConnConnect() to only connect if we are not already in a connected state.
            
            Fixed NetConnDisconnect() to only disconnect if we are not already in a disconnected state.

    DirtySock (Unix)
        DirtyNetUnix
            Replaced malloc/free with DirtyMemAlloc/DirtyMemFree.

            Added virtual port support.

            Fixed some valgrind warnings including socket structure not being memset on allocation.  Also added
            INVALID_SOCKET checks in some places that are now required since a virtual socket has an fd that is
            set to INVALID_SOCKET.
            
            Fixed critical sections to be recursive.  Without this, even without threading, DirtySock code
            would try to re-enter the same critical section from within the same thread and deadlock.
            
    DirtySock (Xbox)
        VoipXbox
            Fixed a bug introduced in 4.11.8 that broke voicebanned detection and handling.

    DirtySock (Xenon)
        ConnApiXenon
            When in secure mode, translate GameServer address (if non-zero) to secure address.  This prevents
            lower-layer protocols from choking when the data they are sending to a real physical address comes
            back from a virtual secure address.
            
    Platform (PS3)
        Enabled ds_timeinsecs().
        
    Platform (Revolution)
        Disabled ds_timeinsecs() and ds_timezone(), as clock support doesn't exist for this.
                

DirtySock SDK 5.0.0 - February 13, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 150.004
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionDWC_DL 1.1.0
                    RevolutionEX 1.0FC8-061205-1648
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch-061218
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

API changes since 5.0.0 Pre-release #2:

    DirtySock (All)
        NetGameDist
            NetGameDistCreate() has had two new parameters, uInBufferSize and uOutBufferSize, added.
            Pass GMDIST_DEFAULT_BUFFERSIZE_IN and GMDIST_DEFAULT_BUFFERSIZE_OUT, respectively, for
            compatibility with previous behavior.

New in this release:

    DirtySock (All)
        NetGameDistServ
            Initial version of server module for managing an n-player server using the NetGameDist API.

Changes/bugfixes in this release:

    DirtySock (All)
        ConnApi
            If in CONNAPI_GAMESERV_PEERCONN mode, and the "host" of the game session, only process one
            client connection instead of all client connections.
            
        LobbyLan
            Added ability to keep peer connections live after calling LobbyLanStartGame() (default behavior
            is to blow away the connections).  Use the new LobbyLanControl() 'kcon' selector to enable this
            behavior.
            
        LockerApi
            Expanded LockerApiFileT.strGame field from 32 to 64 bytes.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Added SocketInfo() 'xmap' and 'xnam' selectors to copy out the current addr/name remap tables into
            the specified output buffer.

    DirtySock (PS3)
        VoipCelpPS3
            Changed _VoipCELPDestroy() to set the cellAdec termination variable that is waited on before
            calling cellAdecEndSeq() instead of after.  This fixes a bug where the thread could get switched
            out after cellAdecEndSeq() was called, but before the variable was set, resulting in an infinite
            lockup of the calling thread.
        

DirtySock SDK 5.0.0 Pre-release #2 - February 9, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 150.004
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch-061218
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

API changes since 5.0.0 Pre-release #1:

    DirtySock (All)
        LockerApi
            Added metadata parameter to LockerApiPutFile() and LockerApiUpdateFileInfo() calls.  Specify as
            NULL to remain compatible with previous behavior.

            Removed ability to specify LockerApiCreate() pServer parameter as NULL and have it default to
            a hard-coded URL internally.  Please make sure the parameter is retrieved from a server
            environment and not hard-coded at any point in the client.

New in this release:

    DirtySock (All)
        LockerApi
            Added new fields to LockerApiFileInfoT structure:
                - File Ident
                - Domain Partition
                - Permissions
                - Version
            Added Permissions and Ident sort categories.

            Added new metadata parameter to LockerApiPutFile() and LockerApiUpdateFileInfo() calls.

            Added new functions LockerApiMetaSearch() and LockerApiGetMetaSearch().

            Added DS and Revolution file compatibility defines.

        NetGameDist
            Initial NetGameDist support for n-console.  2p API is unchanged.

        TelemetryApi
            Added support so that when offline, event timestamps are based on local tick counts, which are
            fixed up to real timestamps when initial connection to the server takes place.

    DirtySock (PS3)
        DirtyNetPS3
            Removed debug socketpoll() spam that was inadvertently released in 5.0.0 pre-release #1.
            
Changes/bugfixes in this release:

    DirtySock (All)
        NetGamePkt
            Restored reservation of space in both NetGamePacketT and NetGameMaxPacketT that was removed in
            5.0.0 prerelease #1, as this space is written into by NetGameLinkSend() when it appends a sync
            packet, and without it memory trashing occurs.


DirtySock SDK 5.0.0 Pre-release #1 - February 6, 2007

    This SDK release was built using the following compiler packages:
    
        EAConfig    1.20.00
        Framework   2.10.00
        
        DS          DSCodeWarrior 3.2-1
        PS2         PlayStation2SN 3.0.2-4 (Inet/EENet)
        PS3         PlayStation3GCC 150.004
                    PlayStation3Celp 096.002
        PSP         PlayStationPortableSN 2.8.0
        Revolution  RevolutionCodeWarrior 3.0.5.2
                    RevolutionEX 1.0FC8-061205-1648 (limited release)
                    RevolutionNDev 06.10.10-non-proxy
                    RevolutionSDK 2.4-patch-061218
        Win32       VisualStudio 7.1.1-6
        Xbox        Xdk 1.0.5849.17 (December 2003 QFE)
        Xenon       XenonSDK 2.0.4929.0 (December 2006 QFE)

    NOTE: With the transition from DirtySock V4 to DirtySock V5, many API changes have been made that will
    break compilation and/or linking of previously working user code.  To ease the transition, there is a
    guide included (doc\v4tov5_transition.txt) detailing the API changes and deprecations and what is required
    to update for each change.  Changes that do not require client code changes are listed in this document as
    usual.

Changes/bugfixes in this release:

    Platform (all)
        plat-time
            Removed hack using hard-coded IOP platform number.
        
            Made Revolution platform return zero to ds_timezone() instead of trying to execute the common code
            (which doesn't work).

    DirtySock (All)
        CommUDP
            Cleaned up and enhanced debug printing during connection phase.

        ConnApi
            Implemented ConnApiStop() stubs for common/xbox, clarified what Stop() and Disconnect() should be used for.

            Added ConnApiGameServModeE states, and added support for PEERCONN mode.

        DirtyLib
            Consolidated duplicate instances of 32bit hash function into NetHash().

        DirtyNet(DSInet/Win/IOP/PS3/PSPInet/Rev/Unix)
            Fixed SocketControl() 'push' selector to set the recvaddr's misc field to the current tick value.
            This value is required by some upper-layer protocols such as CommUDP.

        NetGameDist
            Added types for NetGameDist send/recv/stat procs.

            Added NetGameDistInputPeek().
        
            Added some verbose debugging for possible stream issues.

            Added stream subchannel support.  This allows multiple "subchannel" buffers to be allocated for
            receiving over one stream with multiple kinds, and is used when running against a dist server.
            Subchannel stream kinds start with the base kind and incrememnt once per subchannel (e.g. 'str0',
            'str1', 'str2', ... 'strN').

        NetGameLink
            NetGameLinkProcess() has some code to send a sync packet if the output queue appears to be
            overflowing, but it used a hard-coded queue value that assumed a max buffer size of 32.  This
            code would fail if the maxbuf size was set to something smaller, and has been changed to check
            against 25% of the max queue size instead of a hardcoded eight positions.

        NetGamePkt
            Cleaned up type declaration of NetGamePacketT.
        
            Added new NetGameMaxPacketT type (can be passed to NetGameLink functions in lieu of a
            NetGamePacketT).
        
            Reduced NETGAME_DATAPKT_MAXTAIL from 14 to 12 bytes.

        ProtoAries
            Added ability to detect a forceful close from the remote side during a connection attempt.
            Previously the code would simply wait and time out eventually.

            Exposed ProtoAries internal state enums, since external code was relying on hard-coded values
            matching the internal state values.

        ProtoHttp
            Made maximum number of redirections configurable via ProtoHttpControl() 'rmax' selector.

            Moved DigObjApi and LockerApi EncodeStrParm() and EncodeIntParm() functions to ProtoHttp and made
            them public.  These functions do not require a ProtoHttp object and are used to iteratively encode
            URL-formatted parameters into a URL string.

            Fixed a bug that could have resulted in a buffer overflow in ProtoHttpEncodeIntParm() and
            ProtoHttpEncodeStrParm().  Added additional loop in EncodeStrParm to encode a possible two bytes of
            data if a hex encode was not required at the end of pData.

        ProtoTunnel
            Bumped up required verbosity for vdp debug display.

    DirtySock (PC/Xbox/Xenon)
        DirtyNetWin
            Changed poll for stream socket open/close detection from if(write) if(except) to if(write)
            else(except).  This is to accomodate Xenon, which sets both write and except flags when a remote
            side refuses a connection.
            
            Changed return from SocketInfo() 'stat' to be the full opened state (-1=failed 0=pending 1=open)
            instead of just 0=pending/failed and 1=open.  This allows upper-layer code (such as ProtoAries or
            ProtoHttp) to detect a rejected connection request immediately instead of simply waiting to timeout
            the connection.

    DirtySock (Xbox)
        ConnApiXbox
            Added ConnApiControl() 'voip' and 'vset' selectors.
    
    DirtySock (Xenon)
        ConnApiXenon
            Added ConnApiControl() 'vset' selector.

        NetConnXenon
            Added polling for XN_SYS_PROFILESETTINGCHANGED events and re-enumerate users when such an event is
            indicated.
                

    
    
    

