<project>

    <!-- convenience names -->
    <property name="modulename"    value="ticker" />
    <property name="module.src"    value="${package.DirtySDK.dir}/sample/${config-system}/${modulename}/source.txt" />

    <!-- add this module to the list of modules to build -->
    <property name="runtime.buildmodules">
        ${property.value}
        ${modulename}
    </property>

    <!-- declare the type of module to build -->
    <do if="${config-system} != 'pc' and ${config-system} != 'pc64'">
        <property name="runtime.${modulename}.buildtype" value="DSProgram" />
    </do>
    <do if="${config-system} == 'pc' or ${config-system} == 'pc64'">
      <property name="runtime.${modulename}.buildtype" value="WindowsProgram" />
    </do>

    <!-- only add a build dependency on the DS lib if samples are not being linked against a prebuilt DS -->
    <do unless="@{PropertyTrue('DirtySDK-skip-lib-generation')}">
        <property name="runtime.${modulename}.runtime.moduledependencies">
            ${dirtysock_modulename}
        </property>
    </do>

    <!-- Android build dependencies -->
    <property name="${modulename}.builddependencies.android">
        AndroidSDK
    </property>

    <!-- iPhone build dependencies -->
    <property name="${modulename}.builddependencies.iphone">
        <!-- Don't make iphonesdk a build dependency because it breaks the xcode-projectize option. Such a dependency is not needed anyway. -->
    </property>

    <!-- PS3 build dependencies -->
    <property name="${modulename}.builddependencies.ps3">
    </property>
    <!-- PS3 use dependencies (PlayStation3NPEx can't be a build dependency like how the others are setup or the sln generation wont get the libs)-->
    <do if="${config-system} == 'ps3'">
      <property name="runtime.${modulename}.usedependencies">
        ${property.value}
        PlayStation3NPEx
      </property>
    </do>

    <!-- PC build dependencies -->
    <property name="${modulename}.builddependencies.pc">
        VisualStudio
    </property>

    <!-- Playbook build dependencies -->
    <property name="${modulename}.builddependencies.playbook-x86">
        PlaybookSDK
    </property>

    <property name="${modulename}.builddependencies.playbook-arm">
        PlaybookSDK
    </property>

    <!-- Revolution build dependencies -->
    <property name="${modulename}.builddependencies.rev">
        RevolutionDWC_DL
        RevolutionEX
        RevolutionSDK
    </property>
    
    <!-- include the build dependency for the platform we're buildling -->
    <property name="runtime.${modulename}.builddependencies">
        ${${modulename}.builddependencies.${config-system}}
    </property>

    <!-- add this module's includes to the general includes -->
    <property name="runtime.${modulename}.includedirs">
        ${package.DirtySDK.includedirs}
        ${package.DirtySDK.dir}/sample/common/include
        ${package.DirtySDK.dir}/sample/${config-system}
    </property>
    
    <!-- inherit warning suppression from dirtysock -->
    <property name="runtime.${modulename}.warningsuppression">
        ${runtime.${dirtysock_modulename}.warningsuppression}
    </property>    
	
    <!-- inherit defines from dirtysock -->
    <property name="runtime.${modulename}.defines">
        ${runtime.${dirtysock_modulename}.defines}
    </property>
	    
    <!-- now bring in the list of files to build into this module -->
    <fileset basedir="${package.DirtySDK.dir}" name="runtime.${modulename}.sourcefiles">
        <includes fromfile="${module.src}" />
    </fileset>

    <!-- allow debug builds to link with libs ending with "d" (debug libs), and 
         dev-opt build to link with non-debug libs. -->
    <!-- *** This should likely be moved to a more central place, so it doesn't need
             to be in every sample file. Currently only used for xbox. *** -->
    <property name="debug-lib-suffix" value="" if="${config-name} == 'dev-opt'" />
    <property name="debug-lib-suffix" value="d" if="${config-name} != 'dev-opt'" />

    <!-- add in other libraries to link with -->
    <!-- ps3 libs -->
    <fileset name="runtime.${modulename}.libs.ps3" append="true" if="${config-system} == ps3">
        <includes name="${package.ps3sdk.appdir}/target/ppu/lib/libsysutil_stub.a" asis="true"  />
        <includes name="${package.ps3sdk.appdir}/target/ppu/lib/libnet_stub.a" asis="true"  />
        <includes name="${package.ps3sdk.appdir}/target/ppu/lib/libnetctl_stub.a" asis="true"  />
        <includes name="${package.ps3sdk.appdir}/target/ppu/lib/libsysmodule_stub.a" asis="true"  />
        <includes name="${package.ps3sdk.appdir}/target/ppu/lib/libsysutil_np_stub.a" asis="true"  />
        <includes name="${package.ps3sdk.appdir}/target/ppu/lib/librtc_stub.a" asis="true"  />
    </fileset>

    <!-- pc libs -->
    <fileset name="runtime.${modulename}.libs.pc" append="true" if="${config-system} == 'pc' or ${config-system} == 'pc64'">
        <includes name="ws2_32.lib" asis="true" />
    </fileset>

    <fileset name="runtime.${modulename}.libs" append="true">
        <includes name="${package.configlibdir}/*${lib-suffix}"/>
    </fileset>

</project>
