<project>

    <!-- convenience names -->
    <property name="modulename"         value="upnptest" />
    <property name="module.src"         value="${package.DirtySDK.dir}/sample/${config-system}/${modulename}/source.txt"      />

    <!-- add this module to the list of modules to build -->
    <property name="runtime.buildmodules">
        ${property.value}
        ${modulename}
    </property>

    <!-- declare the type of module to build -->
    <property name="runtime.${modulename}.buildtype" value="DSProgram" />

    <!-- only add a build dependency on the DS lib if samples are not being linked against a prebuilt DS -->
    <do unless="@{PropertyTrue('DirtySDK-skip-lib-generation')}">
        <property name="runtime.${modulename}.runtime.moduledependencies">
            ${dirtysock_modulename}
        </property>
    </do>

    <!-- define build dependencies for each platform -->

    <!-- Revolution build dependencies -->
    <property name="${modulename}.builddependencies.rev">
        RevolutionDWC_DL
        RevolutionEX
        RevolutionSDK
    </property>

    <!-- include the build dependency for the platform we're buildling -->
    <property name="runtime.${modulename}.builddependencies">
        ${${modulename}.builddependencies.${config-system}}
    </property>

    <property name="runtime.${modulename}.includedirs">
        ${package.DirtySDK.includedirs}
        ${package.DirtySDK.dir}/sample/${config-system}
    </property>
    
    <!-- inherit warning suppression from dirtysock -->
	<property name="runtime.${modulename}.warningsuppression">
		${runtime.${dirtysock_modulename}.warningsuppression}
	</property>    
	
	<!-- inherit defines from dirtysock -->
	<property name="runtime.${modulename}.defines">
	    ${runtime.${dirtysock_modulename}.defines}
	</property>
	    
    <!-- now bring in the list of files to build into this module -->
   	<fileset basedir="${package.DirtySDK.dir}" name="runtime.${modulename}.sourcefiles">
        <includes fromfile="${package.DirtySDK.dir}/sample/${config-system}/${modulename}/source.txt" />
    </fileset>

    <fileset name="runtime.${modulename}.libs" append="true">
        <includes name="${package.configlibdir}/*${lib-suffix}"/>
	</fileset>
            
</project>
