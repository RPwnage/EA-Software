<project>
  <!-- Copyright 2007 Electronic Arts Inc.  All rights reserved. -->

  <choose>
    <do if="${config-system} == 'unix' or ${config-system} == 'unix64'">
      <dependent name="UnixGCC"/>
      <property name="link.bindir" value="${package.UnixGCC.bindir}"/>

      <!-- For Unix we set up the linker command line explicitly -->
      <property name="runtime.internal.libs.ordered">
          ${property.value}
      </property>
    </do>
    <do>
      <property name="link.bindir" value=""/>
    </do>
  </choose>

  <property name="gos-unix-link-options">
    -rdynamic
    -Xlinker --start-group
    ${runtime.internal.libs.ordered}
    -Wl,--as-needed
    -lpthread
    -lz
    -lcrypt
    -lnsl
    -lm
    -lrt
    -ldl
    -lbz2
    -Xlinker --end-group
  </property>

  <!-- Unix debug customizations -->
  <property name="gos.unix.debug.cc.options">
  </property>
  <property name="gos.unix.debug.dynamic.cc.options">
    -fPIC
  </property>
  <property name="gos.unix.debug.link.options">
    -g
    -B${link.bindir}
  </property>
  <property name="gos.unix.debug.static.link.options">
    ${gos-unix-link-options}
  </property>
  <property name="gos.unix.debug.dynamic.link.options">
    -shared -fPIC
  </property>

  <!-- Unix64 debug customizations -->
  <property name="gos.unix64.debug.cc.options">
  </property>
  <property name="gos.unix64.debug.dynamic.cc.options">
    -fPIC
  </property>
  <property name="gos.unix64.debug.link.options">
    -g
    -B${link.bindir}
  </property>
  <property name="gos.unix64.debug.static.link.options">
    ${gos-unix-link-options}
  </property>
  <property name="gos.unix64.debug.dynamic.link.options">
    -shared -fPIC
  </property>

  <!-- Unix release customizations -->
  <property name="gos.unix.release.cc.options">
  </property>
  <property name="gos.unix.release.dynamic.cc.options">
    -fPIC
  </property>
  <property name="gos.unix.release.link.options">
    -g
    -B${link.bindir}
  </property>
  <property name="gos.unix.release.static.link.options">
    ${gos-unix-link-options}
  </property>
  <property name="gos.unix.release.dynamic.link.options">
    -fPIC
  </property>

  <!-- Unix64 release customizations -->
  <property name="gos.unix64.release.cc.options">
  </property>
  <property name="gos.unix64.release.dynamic.cc.options">
    -fPIC
  </property>
  <property name="gos.unix64.release.link.options">
    -g
    -B${link.bindir}
  </property>
  <property name="gos.unix64.release.static.link.options">
    ${gos-unix-link-options}
  </property>
  <property name="gos.unix64.release.dynamic.link.options">
    -fPIC
  </property>
  
  <!-- C compiler options -->
  <property name="gos-unix-cflags">
    -fno-exceptions
    -fno-strict-aliasing
    -Werror
    -Wall
    -Wmissing-field-initializers
    -Wsign-compare
    -Wmissing-field-initializers
<!-- $$TODO - fix code so we can enable this
    -Wshadow
-->
    -Wstrict-prototypes
    -Wmissing-prototypes
    -Wno-multichar
  </property>
  
  <!-- Debug Program -->
  <optionset name="config-options-gos-program-debug" fromoptionset="config-options-program">
    <option name="buildset.name"          value="UnixProgramDebug"/>
    <option name="multithreadeddynamiclib" value="on"/>
    <option name="usedebuglibs"       value="on"/>
    <option name="warnings"           value="on"/>
    <option name="warningsaserrors"   value="on" />
    <option name="rtti"               value="off" />
    <option name="exceptions"         value="on" />
    <option name="runtimeerrorchecking" value="on" />
    <option name="pcconsole"         value="on" />
    <option name="standardsdklibs"   value="off" />
    <option name="debugsymbols"      value="custom" />
    <option name="debugsymbols.custom.cc">
     -g
    </option>
    <option name="optimization" value="custom" />
    <option name="optimization.custom.cc" />
    <option name="generatemapfile" value="off" />
    <option name="linkoutputname" value="${package.builddir}/${config}/bin/%outputname%" />
    <option name="link.template.commandline">
      %objectfiles%
      %options%
    </option>
    <option name="buildset.cc.options">
      @{OptionSetGetValue("config-options-program", "buildset.cc.options")}
      ${gos.${config-system}.debug.cc.options}
    </option>
    <option name="buildset.link.options">
      @{OptionSetGetValue("config-options-program", "buildset.link.options")}
      ${gos.${config-system}.debug.link.options}
      ${gos.${config-system}.debug.static.link.options}
    </option>
  </optionset>
 
  <!-- Debug C Program -->
  <optionset name="config-options-gos-program-debug-c" fromoptionset="config-options-program-c">
    <option name="buildset.name"          value="UnixCProgramDebug"/>
    <option name="multithreadeddynamiclib" value="on"/>
    <option name="usedebuglibs"       value="on"/>
    <option name="warnings"           value="on"/>
    <option name="warningsaserrors"   value="on" />
    <option name="rtti"               value="off" />
    <option name="exceptions"         value="off" />
    <option name="runtimeerrorchecking" value="on" />
    <option name="pcconsole"         value="on" />
    <option name="standardsdklibs"   value="off" />
    <option name="debugsymbols"      value="custom" />
    <option name="debugsymbols.custom.cc" >
     -g
    </option>
    <option name="optimization" value="custom" />
    <option name="optimization.custom.cc" />
    <option name="generatemapfile" value="off" />
    <option name="linkoutputname" value="${package.builddir}/${config}/bin/%outputname%" />
    <option name="link.template.commandline">
      %objectfiles%
      %options%
    </option>
    <option name="buildset.cc.options">
      @{OptionSetGetValue("config-options-program-c", "buildset.cc.options")}
      ${gos.${config-system}.debug.cc.options}
    </option>
    <option name="buildset.link.options">
      @{OptionSetGetValue("config-options-program-c", "buildset.link.options")}
      ${gos.${config-system}.debug.link.options}
      ${gos.${config-system}.debug.static.link.options}
    </option>
  </optionset>

  <!-- Debug Library -->
  <optionset name="config-options-gos-library-debug" fromoptionset="config-options-library">
    <option name="buildset.name"          value="UnixLibraryDebug"/>
    <option name="multithreadeddynamiclib" value="on"/>
    <option name="usedebuglibs" value="on"/>
    <option name="warnings"           value="on"/>
    <option name="warningsaserrors"   value="on" />
    <option name="rtti" value="off" />
    <option name="exceptions"   value="on" />
    <option name="runtimeerrorchecking" value="on" />
    <option name="debugsymbols"      value="custom"/>
    <option name="debugsymbols.custom.cc">
     -g
    </option>
    <option name="optimization" value="custom" />
    <option name="optimization.custom.cc" />
    <option name="buildset.lib.options">
      cr "%outputdir%/${lib-prefix}%outputname%${lib-suffix}"
    </option>
    <option name="buildset.cc.options">
      @{OptionSetGetValue("config-options-library", "buildset.cc.options")}
      ${gos.${config-system}.debug.cc.options}
    </option>
  </optionset>

  <!-- Release Program -->
  <optionset name="config-options-gos-program-release" fromoptionset="config-options-program">
    <option name="buildset.name"          value="UnixProgramRelease"/>
    <option name="multithreadeddynamiclib" value="on"/>
    <option name="usedebuglibs" value="on"/>
    <option name="warnings"           value="on"/>
    <option name="warningsaserrors"   value="on" />
    <option name="rtti" value="off" />
    <option name="exceptions"   value="on" />
    <option name="pcconsole"         value="on" />
    <option name="standardsdklibs"   value="off" />
    <option name="generatemapfile" value="off" />
    <option name="debugsymbols"      value="custom" />
    <option name="debugsymbols.custom.cc">
     -g
    </option>
    <option name="optimization" value="custom" />
    <option name="optimization.custom.cc">
     -O2 -fno-omit-frame-pointer
    </option>
    <option name="linkoutputname" value="${package.builddir}/${config}/bin/%outputname%"/>
    <option name="link.template.commandline">
      %objectfiles%
      %options%
    </option>
    <option name="buildset.cc.options">
      @{OptionSetGetValue("config-options-program", "buildset.cc.options")}
      ${gos.${config-system}.release.cc.options}
    </option>
    <option name="buildset.link.options">
      @{OptionSetGetValue("config-options-program", "buildset.link.options")}
      ${gos.${config-system}.release.link.options}
      ${gos.${config-system}.release.static.link.options}
    </option>
  </optionset>
  
  <!-- Release CProgram -->
  <optionset name="config-options-gos-program-release-c" fromoptionset="config-options-program-c">
    <option name="buildset.name"          value="UnixCProgramRelease"/>
    <option name="multithreadeddynamiclib" value="on"/>
    <option name="usedebuglibs" value="on"/>
    <option name="warnings"           value="on"/>
    <option name="warningsaserrors"   value="on" />
    <option name="rtti" value="off" />
    <option name="exceptions"   value="off" />
    <option name="pcconsole"         value="on" />
    <option name="standardsdklibs"   value="off" />
    <option name="generatemapfile" value="off" />
    <option name="debugsymbols"      value="custom" />
    <option name="debugsymbols.custom.cc">
     -g
    </option>
    <option name="optimization" value="custom"/>
    <option name="optimization.custom.cc">
     -O2 -fno-omit-frame-pointer
    </option>
    <option name="linkoutputname" value="${package.builddir}/${config}/bin/%outputname%"/>
    <option name="link.template.commandline">
      %objectfiles%
      %options%
    </option>
    <option name="buildset.cc.options">
      @{OptionSetGetValue("config-options-program-c", "buildset.cc.options")}
      ${gos.${config-system}.release.cc.options}
    </option>
    <option name="buildset.link.options">
      @{OptionSetGetValue("config-options-program-c", "buildset.link.options")}
      ${gos.${config-system}.release.link.options}
      ${gos.${config-system}.release.static.link.options}
    </option>
  </optionset>

  <!-- Release Library -->
  <optionset name="config-options-gos-library-release" fromoptionset="config-options-library">
    <option name="buildset.name"          value="UnixLibraryRelease"/>
    <option name="multithreadeddynamiclib" value="on"/>
    <option name="usedebuglibs" value="on"/>
    <option name="warnings"           value="on"/>
    <option name="warningsaserrors"   value="on" />
    <option name="rtti" value="off" />
    <option name="exceptions"   value="on" />
    <option name="debugsymbols"      value="custom"/>
    <option name="debugsymbols.custom.cc">
     -g
    </option>
    <option name="optimization" value="custom" />
    <option name="optimization.custom.cc">
     -O2 -fno-omit-frame-pointer
    </option>
    <option name="buildset.lib.options">
      cr "%outputdir%/${lib-prefix}%outputname%${lib-suffix}"
    </option>
    <option name="buildset.cc.options">
      @{OptionSetGetValue("config-options-library", "buildset.cc.options")}
      ${gos.${config-system}.release.cc.options}
    </option>
  </optionset>

  <!-- Debug C Library -->
  <optionset name="config-options-gos-library-debug-c" fromoptionset="config-options-library-c">
    <option name="buildset.name"          value="UnixCLibraryDebug"/>
    <option name="multithreadeddynamiclib" value="on"/>
    <option name="usedebuglibs" value="on"/>
    <option name="warnings"           value="on"/>
    <option name="warningsaserrors"   value="on" />
    <option name="rtti" value="off" />
    <option name="exceptions"   value="on" />
    <option name="runtimeerrorchecking" value="on" />
    <option name="debugsymbols"      value="custom"/>
    <option name="debugsymbols.custom.cc">
     -g
    </option> 
    <option name="buildset.lib.options">
      cr "%outputdir%/${lib-prefix}%outputname%${lib-suffix}"
    </option>
   <option name="buildset.cc.options">
      @{OptionSetGetValue("config-options-library", "buildset.cc.options")}
      ${gos.${config-system}.debug.cc.options}
      ${gos-unix-cflags}
    </option>
  </optionset>

  <!-- Release C Library -->
  <optionset name="config-options-gos-library-release-c" fromoptionset="config-options-library-c">
    <option name="buildset.name"          value="UnixCLibraryRelease"/>
    <option name="multithreadeddynamiclib" value="on"/>
    <option name="usedebuglibs" value="on"/>
    <option name="warnings"           value="on"/>
    <option name="warningsaserrors"   value="on" />
    <option name="rtti" value="off" />
    <option name="exceptions"   value="on" />
    <option name="debugsymbols"      value="custom"/>
    <option name="debugsymbols.custom.cc" >
     -g
    </option>
    <option name="optimization" value="custom"/>
    <option name="optimization.custom.cc">
     -O2 -fno-omit-frame-pointer
    </option>
    <option name="buildset.lib.options">
      cr "%outputdir%/${lib-prefix}%outputname%${lib-suffix}"
    </option>
    <option name="buildset.cc.options">
      @{OptionSetGetValue("config-options-library", "buildset.cc.options")}
      ${gos.${config-system}.release.cc.options}
      ${gos-unix-cflags}
    </option>
  </optionset>

  <!-- Set up build sets -->
  <choose>
    <do if="${config-name} == 'dev-opt'">
      <optionset name="config-options-gos-library" fromoptionset="config-options-gos-library-release">
        <option name="buildset.name"          value="UnixLibrary"/>
      </optionset>
      <optionset name="config-options-gos-library-c" fromoptionset="config-options-gos-library-release-c">
        <option name="buildset.name"          value="UnixCLibrary"/>
      </optionset>
      <optionset name="config-options-gos-program" fromoptionset="config-options-gos-program-release">
        <option name="buildset.name"          value="UnixProgram"/>
      </optionset>
      <optionset name="config-options-gos-program-c" fromoptionset="config-options-gos-program-release-c">
        <option name="buildset.name"          value="UnixCProgram"/>
      </optionset>
    </do>
    <do if="${config-name} != 'dev-opt'">
      <optionset name="config-options-gos-library" fromoptionset="config-options-gos-library-debug">
        <option name="buildset.name"          value="UnixLibrary"/>
      </optionset>
      <optionset name="config-options-gos-library-c" fromoptionset="config-options-gos-library-debug-c">
        <option name="buildset.name"          value="UnixCLibrary"/>
      </optionset>
      <optionset name="config-options-gos-program" fromoptionset="config-options-gos-program-debug">
        <option name="buildset.name"          value="UnixProgram"/>
      </optionset>
      <optionset name="config-options-gos-program-c" fromoptionset="config-options-gos-program-debug-c">
        <option name="buildset.name"          value="UnixCProgram"/>
      </optionset>
    </do>
  </choose>

  <!-- Build the optionsets -->
  <task name="GenerateBuildOptionset" configsetname="config-options-gos-library"/>
  <task name="GenerateBuildOptionset" configsetname="config-options-gos-library-c"/>
  <task name="GenerateBuildOptionset" configsetname="config-options-gos-program"/>
  <task name="GenerateBuildOptionset" configsetname="config-options-gos-program-c"/>

</project>

