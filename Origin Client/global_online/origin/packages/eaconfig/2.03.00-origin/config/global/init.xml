<!-- 
     (c) Electronic Arts. All Rights Reserved.
-->
<project>

  <fail unless="${nant.framework3??false}" message="This version of eaconfig requires Framework 3 version of nant (Framework-3.xx.xx package)"/>

  <!-- setup common directory properties -->
  <property name="script-dir" value="${package.dir}/scripts"/>
  <property name="source-dir" value="${package.dir}/source"/>

  <!-- Common Properties -->
  <property name="config-isDll" value="false"/>
  <!-- pointer size -->
  <property name="platform-ptrsize" value="32bit"/>
  <!-- registers size -->
  <property name="platform-wordsize" value="32bit"/>

  <property name="config-processor" value="" />

  <property name="ps3.useincredibuild" value="false"  unless="@{PropertyExists('ps3.useincredibuild')}"/>

  <!-- Create default bulkbuild property -->
  <property name="bulkbuild" value="true" unless="@{PropertyExists('bulkbuild')}"/>

  <property name="eaconfig.build-MP" value=""/>
  
  <!-- Create the config optionsets to use for creating build optionsets -->
  <optionset name="config-options-common">
    <option name="buildset.protobuildtype"              value="true" />
    <option name="debugflags"                           value="off" />
    <option name="debugsymbols"                         value="on" />
    <option name="optimization"                         value="on" />
    <option name="usedebuglibs"                         value="off" />

    <option name="warnings"                             value="on" />
    <option name="misc"                                 value="on" />

    <option name="warningsaserrors"                     value="on" />
    <option name="rtti"                                 value="off" />
    <option name="exceptions"                           value="off" />
    <option name="toolconfig"                           value="off" />
    <option name="incrementallinking"                   value="off" />
    <option name="generatemapfile"                      value="on" />
    <option name="generatedll"                          value="off" />
    <option name="multithreadeddynamiclib"              value="off" />
    <option name="managedcpp"                           value="off" />
    <option name="banner"                               value="off" />
    <option name="editandcontinue"                      value="off" />
    <option name="c7debugsymbols"                       value="off" />
    <option name="standardsdklibs"                      value="on" />
    <option name="runtimeerrorchecking"                 value="off" />
    <option name="pcconsole"                            value="on" />
    <option name="profile"                              value="off" />
    <option name="clanguage"                            value="off" />
    <option name="uselibrarydependencyinputs"           value="off" />
    <option name="iteratorboundschecking"               value="off" />
    <option name="debugflags.custom.cc"                 value="" />
    <option name="debugsymbols.custom.cc"               value="" />
    <option name="debugsymbols.custom.link"             value="" />
    <option name="misc.custom.cc"                       value="" />
    <option name="usedebuglibs.custom.cc"               value="" />
    <option name="standardsdklibs.custom.link"          value="" />
    <option name="warnings.custom.cc"                   value="" />
    <option name="warnings.custom.link"                 value="" />
    <option name="enable.strict.aliasing"               value="off" />
    <option name="stripunusedsymbols"                   value="on" />
    <option name="disable_reference_optimization"       value="off" />
  </optionset>

  <!-- generate the build settings with the specified config options -->
  <optionset name="config-options-program" >
    <option name="buildset.name"                        value="StdProgram" />
    <option name="buildset.tasks"                       value="asm cc link" />
  </optionset>

  <optionset name="config-options-library" >
    <option name="buildset.name"                        value="StdLibrary" />
    <option name="buildset.tasks"                       value="asm cc lib" />
  </optionset>

  <optionset name="config-options-dynamiclibrary" >
    <option name="generatedll"                      value="on" />
    <option name="buildset.name"                    value="DynamicLibrary" />
    <option name="buildset.tasks"                   value="asm cc link" />
  </optionset>

  <optionset name="create-precompiled-header">
    <option name="create-pch"    value="on" />
  </optionset>

  <optionset name="use-precompiled-header">
    <option name="use-pch"    value="on" />
  </optionset>


  <!-- Provide a do-nothing Utility project, so that builds using the
       Utility project support in nantToVSTools don't fall over horribly
       during NAnt builds.  They should just do nothing.  Using this optionset
       requires Framework-2.11.00 or newer, because there was a bug in the
       string-splitting of the <build> task in earlier Framework versions,
       which led to <build> looking for a task called "". -->
  <optionset name="Utility">
    <option name="build.tasks" value=""/>
  </optionset>

  <optionset name="MakeStyle">
    <option name="build.tasks" value="makestyle"/>
  </optionset>

  <optionset name="VisualStudioProject">
    <option name="build.tasks" value="visualstudio"/>
  </optionset>


  <parallel.do>

    <taskdef assembly="${nant.project.temproot}/eaconfig/all-platforms-process.dll">
      <sources>
        <includes name="./../platform/options/all-platforms-process.cs"/>
      </sources>
    </taskdef>

    <include file="../tasks/task-scriptinit.xml" />
    <include file="../tasks/task-excludedir.xml" />
    <include file="../tasks/task-others.xml" />
    <!--
    <include file="../global/easharp.xml" />
    -->
    <include file="../tasks/task-generatewebreferences.xml" />
    <include file="../tasks/task-generateslninteropassemblies.xml" />
  </parallel.do>
  

  <!-- Most processes on Windows will require SystemRoot and TMP env variables. -->
  <do if="@{PlatformIsWindows()}">
    <sysinfo />
    
    <choose>
      <do if="@{PropertyExists('sys.env.tmp')}">
        <property name="build.env.TMP" value="${sys.env.tmp}" />
        <property name="exec.env.TMP" value="${sys.env.tmp}" />
      </do>
      <do if="@{PropertyExists('sys.env.TMP')}">
        <property name="build.env.TMP" value="${sys.env.TMP}" />
        <property name="exec.env.TMP" value="${sys.env.TMP}" />
      </do>
      <do>
        <!-- tmp env variable is not set (very unlikely, could be an error) -->
        <property name="build.env.TMP" value="" />
        <property name="exec.env.TMP" value="" />
      </do>
    </choose>
    <choose>
      <do if="@{PropertyExists('sys.env.temp')}">
        <property name="build.env.TEMP" value="${sys.env.temp}" />
        <property name="exec.env.TEMP" value="${sys.env.temp}" />
      </do>
      <do if="@{PropertyExists('sys.env.TEMP')}">
        <property name="build.env.TEMP" value="${sys.env.TEMP}" />
        <property name="exec.env.TEMP" value="${sys.env.TEMP}" />
      </do>
      <do>
        <!-- tmp env variable is not set (very unlikely, could be an error) -->
        <property name="build.env.TEMP" value="" />
        <property name="exec.env.TEMP" value="" />
      </do>
    </choose>
    <choose>
      <do if="@{PropertyExists('sys.env.SystemRoot')}">
        <property name="build.env.SystemRoot" value="${sys.env.SystemRoot}" />
        <property name="exec.env.SystemRoot" value="${sys.env.SystemRoot}" />
      </do>
      <do if="@{PropertyExists('sys.env.systemroot')}">
        <property name="build.env.systemroot" value="${sys.env.systemroot}" />
        <property name="exec.env.systemroot" value="${sys.env.systemroot}" />
      </do>
      <do if="@{PropertyExists('sys.env.SYSTEMROOT')}">
        <property name="build.env.SYSTEMROOT" value="${sys.env.SYSTEMROOT}" />
        <property name="exec.env.SYSTEMROOT" value="${sys.env.SYSTEMROOT}" />
      </do>
      <do>
        <property name="build.env.SystemRoot" value="@{RegistryGetValue('LocalMachine', 'SOFTWARE\Microsoft\Windows NT\CurrentVersion', 'PathName')}"/>
      </do>
    </choose>

    <do if="@{PropertyExists('sys.env.PROCESSOR_ARCHITECTURE')}">
      <property name="build.env.PROCESSOR_ARCHITECTURE" value="${sys.env.PROCESSOR_ARCHITECTURE}" />
      <property name="exec.env.PROCESSOR_ARCHITECTURE" value="${sys.env.PROCESSOR_ARCHITECTURE}" />
    </do>

  </do>

  




</project>
