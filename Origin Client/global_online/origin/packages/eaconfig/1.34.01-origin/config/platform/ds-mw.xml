<!-- 
     (c) Electronic Arts. All Rights Reserved.
-->
<project>
  <dependent name="dscodewarrior" />

  <property name="config-system"      value="ds"/>
  <property name="config-compiler"    value="mw"/>
  <property name="config-platform"    value="ds-mw"/>

  <!-- Clear the default options and start fresh with config supplied options -->
  <property name="cc.options">
  </property>

  <!-- Compile in parallel on multiple CPUs         -->
  <property name="cc.parallelcompiler"    value="true"/>


  <!-- We're just passing these properties straight through from the dscodewarrior
         package into eaconfig for the time being.  We might want to override some
         of them later. -->
  <optionset name="config-options-common">
    <option name="buildset.cc.defines" >
      ${cc.defines}
    </option>
    <option name="buildset.cc.includedirs" >
      ${cc.includedirs}
    </option>
    <option name="buildset.link.options" >
      <![CDATA[
            <Options Program="mwldarm">
                ${link.options}
            </Options>
            <Options Program="makelcf">
            </Options>
            ]]>
    </option>
    <option name="buildset.lib.options">
      -w on
      -library <!--Generates a static library.-->
      -msgstyle gcc
    </option>
  </optionset>

  <!-- Nintendo provides a diffent libsyscall.a for each product sku.  We're just using the
       default lib from the SDK.  This is fine for development but you'll fail your TRC if
       you try to submit with it.  That's fine for the time being for these eaconfig builds.
       I guess we would need to provide some eaconfig override for this library if we want
       to be able to do final NDS builds with eaconfig. -->
  <property name="platform.sdklibs.regular">
    ${link.libraries}
    ${package.dscodewarrior.dir}\nitrosdk\lib\ARM9-TS\etc\libsyscall.a
  </property>

  <property name="platform.sdklibs.debug">
    ${platform.sdklibs.regular}
  </property>

</project>