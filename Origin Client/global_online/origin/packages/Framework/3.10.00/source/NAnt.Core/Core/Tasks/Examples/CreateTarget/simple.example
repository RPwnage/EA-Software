<example>
<para>Test to show how to use &lt;target&gt; task.</para>
<code>
<![CDATA[
<project>
    <property name="prop" value="val"/>
    <do if="@{PropertyExists('prop')}">
        <!-- 
        Target conditional depends on defition of prop
        If you run command: nant conditional, you'll see conditional executed after some targets.
        Reasons:
        1. When the build runs, do is executed, hence is conditional
        2. When conditional runs, it adds a target named conditional to the target list
        3. Then the build runs the foreach, hence executing its targets
        4. And finally, the build runs conditional as the given target.
        -->
        <target name="conditional">
            <echo message="In target ${target.name}"/>
        </target>
    </do>

    <optionset name="myOptSet">
        <option name="option1" value="1"/>
        <option name="option2" value="2"/>
    </optionset>
    
    <foreach item="OptionSet" in="myOptSet" property="option" verbose="true">
        <target name="looped" hidden="true">
            <echo message="In target ${target.name}: ${option.name}=${option.value}"/>
        </target>
        <!-- Without call, looped won't be executed in the loop -->
        <call target="looped"/>
        
        <property name="targetName" value="var${option.value}"/>
        <!-- Define a target with variable name -->
        <target name="${targetName}">
            <echo message="In target ${target.name}"/>
        </target>
        <call target="${targetName}"/>
    </foreach>
</project>
]]>
</code>
<code file="Manifest.xml">
<![CDATA[
<package>
    <frameworkVersion>2</frameworkVersion>
    <buildable>false</buildable>
</package>
]]>
</code>
</example>