<?xml version="1.0" encoding="utf-8"?>
<topic id="c69bbfe4-a677-4be7-b772-428018e9f900" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Creating custom Structured XML tasks to change functionality or extend XML syntax</para>
    </introduction>

    <section address="CustomStructuredTasks">
      <title>Custom Structured Tasks</title>
      <content>
        <para>It is possible to derive new tasks from Framework Structured XML tasks like 'Module' to add new XML elements:</para>
        <list class="bullet">
          <listItem>
            <para>In a derived task define additional XML elements like in any other Framework <link xlink:href="44df9582-e180-4d2f-bdaa-636ef7322d7b">Task</link>.</para>
          </listItem>
          <listItem>
            <para>
              Override <codeInline>protected virtual void SetupModule()</codeInline> method to setup your data
            </para>
          </listItem>
        </list>
      </content>
    </section>
    <section address="Example">
      <title>Example</title>
      <content>
        <para>
          Create custom Structured task to support ispc compiler. Standard module task can be used to define 'custombuildfiles" element with 'ispc-options',
          but using custom task creates nicer XML syntax.
        </para>
        <code language="c#" title="">

.          [TaskName("LibraryWithISPC")]
.          public class FrostbiteLibraryTask : ModuleTask
.          {
.              public FrostbiteCommonTask(string baseTask) : base("Library")
.              {
.              }
.
.              [FileSet("ispcfiles", Required = false)]
.              public StructuredFileSet ISPCFiles
.              {
.                 get { return _ispcfiles; }
.              }
.              private StructuredFileSet _ispciles = new StructuredFileSet();

.              protected override void SetupModule()
.              {
.                  base.SetupModule();
.
.                  GetModuleFileset("custombuildfiles").IncludeWithBaseDir(ISPCFiles, optionSetName: "ispc-options");
.              }
.          }

        </code>
      </content>
    </section>

    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
