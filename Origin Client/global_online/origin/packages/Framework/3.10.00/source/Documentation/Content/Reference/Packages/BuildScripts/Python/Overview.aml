<?xml version="1.0" encoding="utf-8"?>
<topic id="96036b0c-7c5d-4a3f-bfbc-cc9597d30354" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>This topic describes how to work with Python modules.</para>
    </introduction>

    <section address="what">
      <title>What are python modules for?</title>
      <content>
        <para>
        Python modules have been added to Framework to allow users to generate
        visual studio python solutions. Since python is an interpreted language
        native NAnt builds are not supported.
        </para>
      </content>
    </section>
    
    <section address="pytools">
      <title>Python and Visual Studio</title>
      <content>
        <para>
        Python integration for visual studio is achieved using an open source
        extension called pytools (pytools.codeplex.com). Pytools provides
        intellisense and debugging as well as a number of other visual studio
        features that are already available in other languages like C#. When
        a python project is run visual studio simply calls a user specified
        python interpreter (activepython, cpython, Ironpython, etc.).
        </para>
        <alert class="important">
          <para>For now, You must install pytools separately from the official 
          website (pytools.codeplex.com) for these new visual studio features
          to be available.</para>
        </alert>
        <para>
        Setting up an interpreter in visual studio is done separately from 
        creating a python module. To do so open visual studio and go to
        "Tools->Options->Python Tools->Interpreter Options" to setup a new
        interpreter. Then the interpreter can be reused for each new
        project you make.
        </para>
      </content>
    </section>
    
    <section address="usage">
      <title>Usage</title>
      <content>
        <para>
		To generate a python solution define a python module in your build script
		as you would for any other type of module. 
		</para>
		<para>
		The sourcefiles fileset should contain the paths to all of your python files. 
		The contentfiles fileset should contain all of the paths to non python files, 
		any that are not run by the python interpreter. The startupfile property is 
		used to specify which python file will be executed first and the projecthome 
		property is used to specify the path which other paths are relative to.
        </para>
        <para>
        Since documentation of pytools is rather limited it is still a little unclear
        what the remaining properties are for however since they are changeable through
        the visual studio GUI we have decided to add them incase of future need.
        </para>
      </content>
    </section>
    
    <section address="example">
      <title>Example</title>
      <content>
        <code language="xml" title=" ">
&lt;property name="runtime.MyPythonModule.buildtype" value="PythonProgram" /&gt;

&lt;property name="runtime.MyPythonModule.startupfile" value="Program.py"/&gt;
&lt;property name="runtime.MyPythonModule.workdir" value="."/&gt;
&lt;property name="runtime.MyPythonModule.windowsapp" value="false"/&gt;
&lt;property name="runtime.MyPythonModule.projecthome" value="../../../source"/&gt;

&lt;property name="runtime.MyPythonModule.searchpaths"&gt;
../content
&lt;/property&gt;

&lt;fileset name="runtime.MyPythonModule.sourcefiles" basedir="${package.dir}\source"&gt;
&lt;includes name="${package.dir}\source\*.py"/&gt;
&lt;/fileset&gt;

&lt;fileset name="runtime.MyPythonModule.contentfiles" basedir="${package.dir}\content"&gt;
&lt;includes name="${package.dir}\content\*.txt"/&gt;
&lt;/fileset&gt;

&lt;property name="runtime.buildmodules" value="MyPythonModule"/&gt;
        </code>
      </content>
    </section>
    
    <section address="structured">
      <title>Structured Xml Example</title>
      <content>
        <code language="xml" title=" ">
&lt;PythonProgram name="MyPythonModule" startupfile="Program.py" projecthome="../../../source"&gt;
	&lt;sourcefiles basedir="${package.dir}\source"&gt;
  		&lt;includes name="${package.dir}\source\*.py"/&gt;
	&lt;/sourcefiles&gt;

	&lt;contentfiles basedir="${package.dir}\content"&gt;
  		&lt;includes name="${package.dir}\content\*.txt"/&gt;
	&lt;/contentfiles&gt;

	&lt;searchpaths&gt;../content&lt;/searchpaths&gt;
&lt;/PythonProgram&gt;
        </code>
      </content>
    </section>
    
    <relatedTopics>
   		<link xlink:href="28b3f825-3841-6db5-427a-5ee0651ddb7e"/>
    </relatedTopics>
  </developerConceptualDocument>
</topic>