<?xml version="1.0" encoding="utf-8"?>
<topic id="712ad988-52fa-48ec-b193-6dd75ab22835" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>This section gives of an overview of the pre/post process steps, expains how the work and how to use them.</para>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="PrePostProcessStepsOverview">
      <title>Overview</title>
      <content>
        <para>
          Framework 2 had analogs of the preprocess steps: there were targets like <codeInline>'---.vcproj.prebuildtarget'</codeInline>
          that is executed during solution genration, which is different from pre/post build steps executed when building solution.
        </para>
        <para>
          In Framework 3 support for different pre and post process steps is extended significantly 
          and these steps are now more widely used by Framework:
        </para>
        <list class="bullet">
          <listItem>
            <para>
              They are used to separate generic algorithms in Framework from platform specific actions. The latter are often performed as 
              postprocess steps defined in configuration packages.
            </para>
          </listItem>
          <listItem>
            <para>
              Legacy Framework 2 targets like <codeInline>'---.vcproj.prebuildtarget'</codeInline> are also supported and
              executed as preprocess steps.
            </para>
          </listItem>
        </list>
        <alert class="note">
          <para>
            In Framework 3 execution of all kind of builds is now separated to two main stages: creating build graph and executing build action
            (like nant build, write sln, etc). WE are trying to have app processing steps to be exactly the same for different types of builds
            and not use different targets for solution generation and nant builds as it was in Framework 2. But all legacy functionality is supported.
          </para>
        </alert>
        <para>
          Most of the preprocess steps can be used to alter package properties, filesets, and optionsets, these altered values are then picked up by the Framework processing engine.
          So these steps are usualy implemented as Nant targets, but using tasks is always an option.
        </para>
        <para>
          Postprocess steps are executed when data from the build script are already converted into C# Module objects in the build graph.
          Most common use of postprocess steps is to alter Module objects or the build graph, and in this case steps are implemented as C# tasks.
        </para>
      </content>
    </section>
    

    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
