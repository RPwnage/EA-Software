<?xml version="1.0" encoding="utf-8"?>
<topic id="53463e92-bf47-4d46-831b-52ef8b791784" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        <legacyBold>framework1overrides</legacyBold> element was used during transition from <token>Framework1</token> to <token>Framework2</token> and occationally it is needed to build Framework 1 packages</para>
    </introduction>

    <section address="Usage">
      <title>Usage</title>
      <content>
        <para>
          If a Framework 2 package depends on a 1.x package, then the dependent package may not have expected properties specific to Framework 1.x.
        This is because the Framework 2 package may use different properties. For example, config-name uses devdebug in Framework 2, but debug in 1.x.
      </para>
        <para>
          To bridge the gap, Framework 2 provides <codeInline>&lt;framework1overrides&gt;</codeInline>, allowing users to specify 
          which properties need to change the old values to new ones. 
          For example, <codeInline>&lt;item from="devdebug" to="debug"/&gt;</codeInline>  of config-name tells NAnt to replace devdebug with debug. 
          The substitution happens when <link xlink:href="be2bced2-11cc-b4f9-06bf-d393829c4e1a">&lt;dependent&gt;</link> loads <link xlink:href="ed0d2418-859f-4e9c-8e09-f85e861e2e3d"/>
          from a dependent package's scripts folder. Old property values will be restored after <codeInline>Initialize.xml</codeInline> is processed.
        </para>
        <alert class="tip">
          <para>
            Please avoid using the following lines in the same element:
          </para>
        </alert>
        <code language="xml" title=" ">
          &lt;dependent name="PackageB"/&gt;
          &lt;property name="prop1" value="val1"/&gt;
          &lt;dependent name="PackageB"/&gt;
        </code>
        <para>
          When NAnt sees the 3rd line, it knows PackageB's version is 2.03.01 because the condition is met. 
          But it will have a problem storing the version in memory because it has already done so for the 1st line.
        </para>
      </content>
    </section>
    <section>
      <title>Example</title>
      <content>
        <code language="xml" title=" ">

 .         &lt;framework1overrides&gt;
 .           &lt;override name="config-type"&gt;
 .             &lt;item from="deprecated-d" to="d" /&gt;
 .             &lt;item from="deprecated-z" to="z" /&gt;
 .           &lt;/override&gt;
 .           &lt;override name="config-compiler"&gt;
 .             &lt;item from="vc" to="vc71" /&gt;
 .           &lt;/override&gt;
 .           &lt;override name="config-platform"&gt;
 .             &lt;item from="pc-vc" to="pc-vc71" /&gt;
 .             &lt;item from="xbox-vc" to="xbox-vc7" /&gt;
 .             &lt;item from="xenon-vc" to="xenon-vc7" /&gt;
 .           &lt;/override&gt;
 .           &lt;override name="config-name"&gt;
 .             &lt;item from="dev-debug" to="debug" /&gt;
 .             &lt;item from="dev-opt" to="release" /&gt;
 .           &lt;/override&gt;
 .         &lt;/framework1overrides&gt;
          
        </code>
      </content>
    </section>


    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
