<?xml version="1.0" encoding="utf-8"?>
<topic id="5c33f0e3-e892-43cd-a68c-4f88a1ab093b" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>General information about dependencies in Framework</para>
    </introduction>

    <section address="DependenciesOveriew">
      <title>Overview</title>
      <content>
        <para>
          Internally in Framework dependencies are always defined between modules,
          but in the build scripts dependencies can be specified both at <link xlink:href="3a086246-d425-43a6-8243-a50d0d9d2a64">package</link>
          and <link xlink:href="6e7efae2-2b91-4be3-bade-f98dee8c2a5f">module</link> level.
        </para>
      </content>
      <sections>
        <section address="FrameworkDependencyFlags">
          <title>Dependency flags</title>
          <content>
            <para>Framework 3 supports several types of dependencies, these dependency types can be described by following three flags:</para>

            <definitionTable>
              <definedTerm>interface</definedTerm>
              <definition>
                <para>Add include directories and defines set in the Initialize.xml file of dependent package</para>
              </definition>
              <definedTerm>link</definedTerm>
              <definition>
                <para>Link with libraries from dependent package (module). Library directories, using directories, assemblies and ddls are also taken from the dependent package</para>
              </definition>
              <definedTerm>build</definedTerm>
              <definition>
                <para>Build dependent package.</para>
                <alert class="note">
                  <para>
                    <codeInline>build</codeInline> flag is ignored when dependent package is non buildable, or has autobuildclean=false.
                  </para>
                </alert>
              </definition>
            </definitionTable>
            <para>
              There is another, fourth flag, which affects how Framework automatically sets dependency flag <codeInline>build</codeInline>
            </para>
            <definitionTable>
              <definedTerm>auto</definedTerm>
              <definition>
                <list class="bullet">
                  <listItem>
                    <para>
                      When module that declares auto dependency Utility or MakeStyle
                      the <codeInline>auto</codeInline> dependency is automatically converted to build dependency. This means that Framework
                      adds <codeInline>build</codeInline> flag.
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      When module that declares auto dependency is a Program, Dynamic Library (i.e. has link step) and dependency has <codeInline>link</codeInline> flag set
                      the <codeInline>auto</codeInline> dependency is automatically converted to build dependency. This means that Framework
                      adds <codeInline>build</codeInline> flag.
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      When module that declares auto dependency is a Library, the <codeInline>build</codeInline> flag is not set for autodependency
                    </para>
                  </listItem>
                </list>
              </definition>
            </definitionTable>
          </content>
        </section>
        <section>
          <title>Types of dependencies available in Framework</title>
          <content>
            <table>
              <tableHeader>
                <row>
                  <entry>
                    <para>Type</para>
                  </entry>
                  <entry>
                    <para>interface</para>
                  </entry>
                  <entry>
                    <para>link</para>
                  </entry>
                  <entry>
                    <para>build</para>
                  </entry>
                  <entry>
                    <para>auto</para>
                  </entry>
                  <entry>
                    <para>transitively propagated</para>
                  </entry>

                  <entry>
                    <para>Description</para>
                  </entry>
                </row>
              </tableHeader>
              <row>
                <entry>
                  <para>use</para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>This type of dependencies often used with static libraries.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>interface</para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para>These dependencies are used when only header files from dependent package are needed.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>uselink</para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>These dependencies can be used to ensure no header files from dependent package were used.</para>
                </entry>
              </row>
              <row>
                <entry></entry>
              </row>
              <row>
                <entry>
                  <para>build</para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para></para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>link</para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>Use these dependencies to make sure no header files or defines from dependent package were used.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>buildinterface</para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para>These dependencies are used when only header files from dependent package are needed and same time modules in dependent package must be built.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>buildonly</para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para></para>
                </entry>
                <entry>
                  <para>This type of dependency ensures build but no public data from dependent package are used in a build</para>
                </entry>
              </row>

              <row>
                <entry>
                  <para>auto</para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    ???
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    Using autodependencies is always a safe option. They simplify build scripts when module declaring dependencies
                    can be built as a static or dynamic library depending on configuration settings.
                  </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>autointerface</para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para>
                    ???
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>autolink</para>
                </entry>
                <entry>
                  <para>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    ???
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para>
                    <mediaLinkInline>
                      <image xlink:href="requirements1a"/>
                    </mediaLinkInline>
                  </para>
                </entry>
                <entry>
                  <para></para>
                </entry>
              </row>
            </table>
            <alert class="note">
              <para>When the same module is included in several dependency definitions the flags from all these definitions are merged.</para>
            </alert>
          </content>
        </section>
      </sections>
    </section>
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
