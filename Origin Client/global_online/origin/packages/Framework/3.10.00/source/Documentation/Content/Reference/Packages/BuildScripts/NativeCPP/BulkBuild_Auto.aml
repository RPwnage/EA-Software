<?xml version="1.0" encoding="utf-8"?>
<topic id="125931fa-ff87-4cde-8ff0-b1be48570782" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Input source files can be automatically converted to bulkbuild source files.</para>
      <para>
        They are two mutually exclusive ways to auto-generate bulkbuild files:
      </para>
      <list class="bullet">
        <listItem>
          <para>
            Use property bulkbuild.filesets to generate multiple bulk build files.
          </para>
        </listItem>
        <listItem>
          <para>
          Use fileset runtime.bulkbuild.sourcefiles to generate single bulkbuild file.
          </para>
        </listItem>
      </list>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="BuilkBuild_Auto_SourceFiles">
      <title>Bulk Build Sourcefiles</title>
      <content>
        <para>
          This is the simple case where the list of loose source files that will form bulkbuild file is specified explicitly 
          using <languageKeyword>*.bulkbuild.sourcefiles</languageKeyword> fileset.
        </para>
        <alert class="important">
          <para>
            The normal sourcefiles definition is completely ignored in this case unless 
            <link xlink:href="dfa04b46-459d-4abc-ba64-f99373e300a9">partial builkbuild</link> is specified.
          </para>
        </alert>

        <code language="xml" title="Simple case where the user wants to auto-bulkbuild the runtime.sourcefiles in a single 'bulk unit'">
          
          &lt;!-- A package that doesn’t contain modules. --&gt;
          &lt;fileset name="runtime.bulkbuild.sourcefiles" fromfileset="runtime.sourcefiles"/&gt;

          &lt;!-- A package that contains the ea_aptaux_core module. --&gt;
          &lt;fileset name="runtime.ea_aptaux_core.bulkbuild.sourcefiles" fromfileset="runtime.ea_aptaux_core.sourcefiles"/&gt;

        </code>
      </content>
    </section>

    <section address="BuilkBuild_Auto_SourceFileSets">
      <title>Multiple Bulk Build Source filesets</title>
      <content>
        <para>
          This method allows to specify multiple filesets with loose source files. Each fileset will be converted into a separate builk build unit.
        </para>
        <list class="ordered">
          <listItem>
            <para>
              First you must supply a list of filesets to get bulkbuilt. To do this, specify a <legacyBold>runtime.bulkbuild.filesets</legacyBold> property. 
              Then set its value to be the filesets to be bulkbuilt.
            </para>
            <code language="xml" title=" ">

              &lt;!-- A package that doesn’t contain modules. --&gt;
              &lt;property name="runtime.bulkbuild.filesets"&gt;
                anim  &lt;!-- This will equate to: runtime.ea_aptaux_core.bulkbuild.anim.sourcefiles. --&gt;
                other
              &lt;/property&gt;

              &lt;!-- A package that contains the ea_aptaux_core module. --&gt;
              &lt;property name="runtime.ea_aptaux_core.bulkbuild.filesets"&gt;
                anim   &lt;!-- This will equate to: runtime.ea_aptaux_core.bulkbuild.anim.sourcefiles. --&gt;
                other
              &lt;/property&gt;
            </code>
          </listItem>
          <listItem>
            <para>
              Then define the BulkBuild filesets. These filesets are actual source filesets. 
              Framework will automatically generate bulkbuild files for you. These files will be placed in the <languageKeyword>${package.builddir}</languageKeyword> 
            </para>
            <code language="xml" title=" ">

              &lt;!-- A package that doesn’t contain modules. --&gt;
              &lt;fileset name="runtime.bulkbuild.anim.sourcefiles"&gt;
                &lt;includes name="${package.dir}/source/ea/aptaux/core/*.cpp"/&gt;
              &lt;/fileset&gt;

              &lt;fileset name="runtime.bulkbuild.other.sourcefiles"&gt;
              &lt;includes name="${package.dir}/source/ea/aptaux/core/*.cpp"/&gt;
              &lt;excludes name="${package.dir}/source/ea/aptaux/core/anim*"/&gt;
              &lt;/fileset>

              &lt;!-- A package that contains the ea_aptaux_core module. --&gt;
              &lt;fileset name="runtime.ea_aptaux_core.bulkbuild.anim.sourcefiles"&gt;
                &lt;includes name="${package.dir}/source/ea/aptaux/core/*.cpp"/&gt;
              &lt;/fileset>

              &lt;fileset name="runtime.ea_aptaux_core.bulkbuild.other.sourcefiles"&gt;
                &lt;includes name="${package.dir}/source/ea/aptaux/core/*.cpp"/&gt;
                &lt;excludes name="${package.dir}/source/ea/aptaux/core/anim*"/&gt;
              &lt;/fileset&gt;
            </code>

          </listItem>

        </list>
        
        <alert class="important">
          <para>
            The normal sourcefiles definition is completely ignored in this case unless
            <link xlink:href="dfa04b46-459d-4abc-ba64-f99373e300a9">partial builkbuild</link> is specified.
          </para>
        </alert>

      </content>
    </section>


    <relatedTopics/>
  </developerConceptualDocument>
</topic>
