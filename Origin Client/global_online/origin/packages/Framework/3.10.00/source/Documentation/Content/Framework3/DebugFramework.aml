<?xml version="1.0" encoding="utf-8"?>
<topic id="c4df16fe-8bc2-4ab8-a2d9-fafb923aa7d5" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>This topic explains how to debug framework and related packages.</para>
    </introduction>

    <section address="Section1">
      <title>How to Debug Framework (NAnt)</title>
      <content>
        <para>
        The easiest way to debug Framework is to open the solution in visual studio and run the debugger.
        The framework solution is included in the framework package and does not need to be generated.
        The solution file is in the source directory and is named "NAnt.sln".
        </para>
      	<para>
      	To run nant.exe with specific commandline parameters right click on the nant project (make sure it is the start-up project) and select properties.
      	In the debug section of the properties menu set your command line arguments and the working directory of the package you want to build.
      	Then add break points to the code to stop it while its running. 
      	Even if you want to run it to completion it may be helpful to put a break point on the last line of the main method, in the nant project's <localUri>ConsoleRunner.cs</localUri> file, otherwise the console window will close.
      	</para>
      	<para>
      	If you want to debug a particular framework <link xlink:href="44df9582-e180-4d2f-bdaa-636ef7322d7b">Task</link>, search for the name of the task with the visual studio search tool. 
      	Most of the tasks, which appear as xml elements in the build scripts, have an associated C# class which extends the <codeInline>NAnt.Core.Task</codeInline> class.
      	The name of the class may be different than the xml element's name, but all the task classes have a task attribute which defines the xml name so you should be able to find it when searching.
      	The important methods to look for in a class are <codeInline>InitializeTask</codeInline> and <codeInline>ExecuteTask</codeInline>.
      	InitializeTask gets called during loading the of build script when the task's attributes are being initialized.
      	ExecuteTask gets called when the script is running and the task gets executed.
      	</para>
      </content>
    </section>
    
    <section address="Section2">
      <title>How to Debug Eaconfig and Build Scripts</title>
      <content>
        <para>
        Since <link xlink:href="384804f3-6bca-492b-a4ab-b6a652a34616">Eaconfig</link> is comprised almost entirely of xml files it may not be obvious how to debug problems in eaconfig or build script xml files.
        Here are a couple of options that may be helpful:
        </para>
        <list class="bullet">
        	<listItem>
        		<para>
        		When running nant you can provide the <codeInline>-verbose</codeInline> commandline option to see additional debug information.
        		</para>
        	</listItem>
        	<listItem>
        		<para>
        		Adding the <link xlink:href="9ab1a190-099a-ee3b-7fe4-5a23683017c7"/> to build scripts (as you would use printf in C code) to output debug information to the console.
        		</para>
        		<code>
&lt;echo message="... your text here ..." /&gt;
        		</code>
        	</listItem>
        </list>
      </content>
    </section>
    
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>