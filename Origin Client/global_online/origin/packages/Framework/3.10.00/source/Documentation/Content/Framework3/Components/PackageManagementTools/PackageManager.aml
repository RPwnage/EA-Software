<?xml version="1.0" encoding="utf-8"?>
<topic id="1f104c3d-2f60-4e97-b0c9-e894197c3d38" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        The Package Manager provides a unique view into the packages that are installed on your machine. 
        You can use it to view and manipulate any package in your package root directory.
      </para>
    </introduction>

    <section address="PackageManager">
      
      <content>
        <mediaLink>
          <image xlink:href="PackageManager" placement="center"/>
        </mediaLink>
      </content>
      </section>
    <section>
      <title>
        Deleting Packages
      </title>
      <content>
        <para>
          To delete a package select the packages you and use the Delete command. 
          <legacyBold>This will obliterate everything in that directory</legacyBold>
          so make sure you don't have any work you need before doing this.
        </para>
      </content>
    </section>
    <section>
      <title>
        Finding Required Packages
      </title>
      <content>
        <para>
          Some packages have tricky requirements. For example, they only need the Game Cube compiler when building for Game Cube. 
          Whenever you build a package using NAnt an entry in a local log is created that marks what package was built and what packages it required. 
          This information can then be used to determine quite acurately what packages are required by other packages. 
          It also lets you know what packages you are using and what other packages are safe to delete.
        </para>
        <para>
          You might ask why not just look in the build file for this information? 
          Well NAnt build files are like programs, for example the version of a required package might be stored in a property that get's set in another location. 
          The only way to get an accurate picture is to run the build.
        </para>
      </content>
    </section>
    <relatedTopics/>
  </developerConceptualDocument>
</topic>
