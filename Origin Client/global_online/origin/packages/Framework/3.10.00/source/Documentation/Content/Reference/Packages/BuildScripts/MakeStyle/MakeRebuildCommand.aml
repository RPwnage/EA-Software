<?xml version="1.0" encoding="utf-8"?>
<topic id="f20c432a-48d7-4319-ac2e-fc0446d58ff6" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        This topic describes how to to set ReBuild Command for a MakeStyleModule
      </para>
      <alert class="note">
        <para>ReBuild commands for MakeStyle module can be used only in Visual Studio</para>
      </alert>
    </introduction>
    <section>
      <title>Usage</title>
      <content>
        <para>
          Define a property <codeInline>[group].[module].MakeCleanCommand</codeInline> in your build script.
          The value of this property should contain executable OS command(s)/script.
        </para>
        <alert class="note">
          <para>
            Working directory is set is set to <codeInline>${package.builddir}</codeInline> when clean command is
            executed by Nant 'clean' target or by Visual Stidio
          </para>
        </alert>
      </content>
    </section>
    
    <section>
      <title>Example</title>
      <content>
        <code language="xml" title=" ">
&lt;property name="runtime.MyModule.buildtype" value="MakeStyle" /&gt;
...
&lt;property name="runtime.MakeTestHdr1.MakeRebuildCommand"&gt;
@echo Executing *** runtime.MyModule.MakeRebuildCommand ***
${runtime.MyModule.MakeCleanCommand}
${runtime.MyModule.MakeBuildCommand}
@echo Finished *** runtime.MyModule.MakeRebuildCommand ***
&lt;/property&gt;
...
        </code>
      </content>
    </section>
    
    <section>
      <title>Structured Xml Example</title>
      <content>
      	<alert class="note">
      		<para>
      			Since structure XML does not set the <codeInline>MakeCleanCommand</codeInline> and <codeInline>MakeBuildCommand</codeInline>
      			the same way you either must either repeat the whole clean and build step code in the rebuild step or create a separate
      			property to wrap the code in.
      		</para>
      	</alert>
        <code language="xml" title=" ">
&lt;MakeStyle name="MyModule"&gt;
	...
	&lt;MakeRebuildCommand&gt;
@echo Executing runtime.MyModule.MakeCleanCommand
@if exist output.txt del /F /Q output.txt
@echo inline const char *GetConfigTestString() { return "${config}"; } > output.txt
@echo Finished runtime.MyModule.MakeCleanCommand
	&lt;/MakeRebuildCommand&gt;
	...
&lt;/MakeStyle&gt;
        </code>
      </content>
    </section>

    <relatedTopics>

    </relatedTopics>
  </developerConceptualDocument>
</topic>
