<?xml version="1.0" encoding="utf-8"?>
<topic id="b3243e58-47f4-411d-86c2-79297b63d96c" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">


    <introduction>
      <para>
        This page was copied from
        <externalLink>
          <linkText>XML for Absolute Beginner - A Short Tutorial.</linkText>
          <linkUri>http://www.perfectxml.com/articles/xml/begin.asp</linkUri>
        </externalLink>
        </para>
    </introduction>

    <section address="Section1">
      <title>XML</title>
      <content>
              <para>
                Extensible Markup Language (XML) is a powerful mechanism of data exchange.
                It is an ideal solution for transferring structured data from server-to-client,
                server-to-server or an application-to-application. The W3C is the organization in charge of
                the development and maintenance of most Web standards. XML, like HTML,
                is also one of the standards defined and developed by W3C. Today, XML 1.0 (Second Edition) is an official
                <externalLink>
                  <linkText>W3C Recommendation</linkText>
                  <linkUri>http://www.w3.org/TR/REC-xml/</linkUri>
                </externalLink>.
              </para>
              <para>
                Now, XML being formally defined let's have a look at how does XML document looks like.
              </para>
              <code language="xml" title =" ">
                .          &lt;?xml version="1.0" ?&gt;
                .          &lt;!--My first XML document --&gt;
                .          &lt;BankAccount&gt;
                .            &lt;Number&gt;1234&lt;/Number&gt;
                .            &lt;Name&gt;Darshan Singh&lt;/Name&gt;
                .            &lt;Type&gt;Checking&lt;/Type&gt;
                .            &lt;OpenDate&gt;11/04/1974&lt;/OpenDate&gt;
                .            &lt;Balance&gt;25382.20&lt;/Balance&gt;
                .          &lt;/BankAccount&gt;
              </code>
              <para>
                Simply save the above nine lines into a text file (copy and paste in Notepad) and save the file as c:\1.xml.
                Now open this file (c:\1.xml) in Internet Explorer and see how your first XML document looks like.
              </para>
              <para>
                The Internet Explorer browser uses MSXML and default stylesheet (both discussed later) to display a nice tree-like view of XML documents.
              </para>
      </content>
      <sections>
          <section address="SubSection2">
              <title>Document Structure</title>
              <content>
                  <para>
                    An XML document has an hierarchical structure with two sections: Prolog and Body. 
                    The XML document starts with an optional Prolog, which constitutes of XML declaration statement 
                    (<legacyBold>&lt;?xml version...</legacyBold>), Processing Instructions, Document Type Declaration and Comments. We'll look at 
                      Processing Instructions (PIs) and Document Type Declarations later. Comments in XML document are exactly same as in HTML. 
                      Comments are used for some useful description/inline documentation. Comments begin with a .
                 </para>
                <para>
                  If an XML document has <legacyBold>&lt;?xml version="1.0" ...?&gt;</legacyBold> declaration statement, it should be the fist line in the document, 
                  without even space preceeding it. The XML declaration statement identifies the current document as an XML document, 
                  and has three attributes version (compulsary), encoding and standalone (both are optional). XML documents are text documents. 
                  Here "text" does not refer to ASCII-7, rather to Unicode. The use of Unicode allows XML documents to be created in international languages. 
                  The encoding attribute in XML declaration identifies which encoding is used to represent the characters in the document. In above example, 
                  the XML declaration statement only defines the compulsory version attribute, which for now can have only 1.0 as a value. 
                  The standalone attribute can have value as either "yes" or "no" telling the processor if the XML document is dependent on any other
                  external references or no. Here is one example of XML declaration statement:
                </para>
                <code>
                  &lt;?xml version="1.0" encoding="UTF-8" standalone="no" ?&gt;
                </code>
                <para>
                  Let's now move our focus to the rest of XML document, the body. As described earlier, XML documents have hierarchical (tree-like) structure. 
                  XML documents have one (and always only one) root element, also called as document element. All other elements are children to this element. 
                  In above example, BankAccount is the document element, with Number, Name, etc as child elements. Elements are delimited by an start tag 
                  (ex: &lt;Type&gt;) and an end tag (&lt;/Type&gt;). In HTML it is not necessary to have end tags (browser take care of that), but XML is strict here and 
                  needs all tags to be properly closed. Also tags should be properly nested (&lt;A&gt;&lt;C&gt;&lt;/C&gt;&lt;/A&gt; is legal, but &lt;A&gt; &lt;C&gt;&lt;/C&gt; &lt;/A&gt; is not.). 
                  No overlapping tags are allowed. And once again, remember that, XML documents are case-sensitive.
                </para>
                <para>
                  Elements can also have attributes, which are essentially name-value pairs inside start tag (ex: <legacyBold> &lt;Student RollNo="2"&gt;</legacyBold> ). 
                  XML requires all attributes to be encloded within quotation marks ' or ".
                </para>
              </content>
          </section>
        <section address="SubSEction3">
          <title>Well Formed and Valid Documents</title>
          <content>
          <para>
            There are some (actually five) characters that have special meaning. They are &lt;, &gt;, ', ", and &amp;. 
            If you wish to use any of these directly (and not for markup), you should escape them using <![CDATA[&lt;, &gt;, &apos;, &quot;, and &amp;]]> respectively.
          </para>
          <para>
            If an XML document adheres to above rules, it's called an "Well Formed" XML document.
          </para>
          <para>
            Document Type Definition or DTD can be used to describe the structure of an XML document. 
            It let's you specify what should be document element, parent-children relationship, element 
            attributes and their default values, etc. An XML document can refer to an external DTD and/or can have it inline.
          </para>
          <para>
            If an XML document is Well-formed and also refers to an DTD, it is said to be a "Valid XML" document.
          </para>
          </content>
        </section>
        <section address="SubSEction4">
          <title>CDATA</title>
          <content>
            <para>
              You can embed fragments of programming language in an XML document. But to do so, you have to embed them in
              <externalLink>
                <linkText>CDATA.</linkText>
                <linkUri>http://www.w3schools.com/xml/xml_cdata.asp</linkUri>
              </externalLink>
              elements.
              This is because languages like C#/C++ have characters such as '&lt;' or '&amp;' that are reserved in XML. Otherwise, you'll have XML syntax error.
            </para>
            <para>
              If an XML document adheres to above rules, it's called an "Well Formed" XML document.
            </para>
            <para>
              Document Type Definition or DTD can be used to describe the structure of an XML document.
              It let's you specify what should be document element, parent-children relationship, element
              attributes and their default values, etc. An XML document can refer to an external DTD and/or can have it inline.
            </para>
            <para>
              If an XML document is Well-formed and also refers to an DTD, it is said to be a "Valid XML" document.
            </para>
          </content>
        </section>
      </sections>
    </section>

    <relatedTopics>

    </relatedTopics>
  </developerConceptualDocument>
</topic>
