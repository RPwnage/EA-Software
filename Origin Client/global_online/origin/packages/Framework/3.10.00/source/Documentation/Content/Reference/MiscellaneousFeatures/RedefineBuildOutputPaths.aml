<?xml version="1.0" encoding="utf-8"?>
<topic id="1195f8cc-2ff1-4889-841c-88207edd1c6f" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Framework 3 allows to redefine standard Framework build folders structure and output file names.</para>
      
    </introduction>

    <section address="Overview">
      <title>Overview</title>
      <content>
        <para>
          Framework has rigid structure of the output folders under the build root. 
          It is possible to redefine some of the standard output locations and/or filenames in the
          package build scripts using properties like <codeInline>[group].[module].outputdir</codeInline> or optins like
          <codeInline>linkoutputname</codeInline>. But in <token>Framework2</token> there was no easy way to change globally output structure for all packages
          without modifying Initialize.xml files in every package.
        </para>
        <para>
          <token>Framework3</token> has a way to remap output folders and names for all packages in the build. The best place to define such mapping is a game configuration package.
        </para>
      </content>
    </section>
    <section address="Usage">
      <title>Usage</title>
      <content>
        <para>To set output mapping: define an optionset that can contain following options</para>
        <list class="ordered">
          <listItem>
            <para>define an optionset that can contain following options</para>
            <definitionTable>
              <definedTerm>configbindir</definedTerm>
              <definition>
                <para>
                  Redefine <legacyBold><codeInline>package.configbindir</codeInline>
                  </legacyBold> property. This property defines a directory where binaries (usually exe or dll files) go.
                </para>
              </definition>
              <definedTerm>configlibdir</definedTerm>
              <definition>
                <para>
                  Redefine <legacyBold><codeInline>package.configlibdir</codeInline>
                  </legacyBold> property. This property defines a directory where librariesfor a given package go.
                </para>
              </definition>
            <definedTerm>liboutputname</definedTerm>
            <definition>
              <para>
                Redefine library file name. This is a name without extension.
              </para>
            </definition>
              <definedTerm>linkoutputname</definedTerm>
              <definition>
                <para>
                  Redefine linker output file name. This is a name without extension.
                </para>
              </definition>
            </definitionTable>
            <alert class="note">
              <para>
                All options in the optionset can contain <legacyBold>
                  <codeInline>%outputname%</codeInline>
                </legacyBold> template parameter. For each <token>Module</token> this template parameter is substituted with the value of outputname.
                Outputname is, by default, set to be equal to the name of the module but can be redefined using property  <legacyBold>
                  <token>groupname</token>
                  <codeInline>.outputname</codeInline>
                </legacyBold>
              </para>
            </alert>
          </listItem>
          <listItem>
            <para>
              The name of the optionset should be assigned to the property
              <legacyBold><codeInline>package.outputname-map-options</codeInline></legacyBold>
            </para>
            <alert class="note">
              <para>It is possible to assign output mapping optionset in the  <link xlink:href="b8165fef-408c-49d0-b5ee-6e12ce5f42e5#OutputnameMapOptions">Masterconfig grouptype element</link>.
            </para>
            </alert>
          </listItem>
        </list>
      </content>
    </section>

    <section address="Example">
      <title>Example</title>
      <content>
        <para>Following example sets output folders so that all binaries go into a single folder 'Bin' and all libraries go into a single folder 'Lib'</para>
        <para>To prevent binaries and libraries from different configurations to stomp on each other liboutputname and linkoutputname options are set
        to give output files unique names
      </para>
        <code language="xml" title=" ">

   .       &lt;optionset name="custom-output-names"&gt;
   .         &lt;option name ="configbindir" value="${nant.project.buildroot}\Bin"/&gt;
   .         &lt;option name ="configlibdir" value="${nant.project.buildroot}\Lib"/&gt;
   .         &lt;option name ="liboutputname" value="%outputname%-${config}"/&gt;
   .         &lt;option name ="linkoutputname" value="%outputname%${config}"/&gt;
   .       &lt;/optionset>

   .       &lt;property name="package.outputname-map-options" value="custom-output-names"/&gt;
          
        </code>
      </content>
    </section>

    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
