<project>
    <!-- ******************* -->
    <!-- Package declaration -->
    <!-- ******************* -->
    <property name="tool.OriginObfuscateStrings.xcode-osx-template-dir" value="${package.dir}/PostBuildTool/OSXTemplate" />
    <property name="eaconfig.rtti" value="on" />
    <property name="dirtysdk-samples" value="false" />

    <!-- ******************* -->
    <!-- Package dependencies -->
    <!-- ******************* -->

    <!-- ******************* -->
    <!-- Build Configuration -->
    <!-- ******************* -->

    <BuildType name="OriginObfuscateStrings.buildtype" from="WindowsProgram" if="${config-system} == 'pc'">
        <option name="warningsaserrors" value="off" />
        <option name="pcconsole" value="on" />
    </BuildType>

    <BuildType name="OriginObfuscateStrings.buildtype" from="Program" if="${config-system} == 'osx'">
        <option name="defines">
          UNICODE
        </option>
        <option name="warningsaserrors" value="off" />
        <option name="language" value="on" />
        <option name="buildset.cc.options">
            ${option.value}
            -stdlib=libc++
        </option>
    </BuildType>

    <property name="tool.OriginObfuscateStrings.buildtype" value="${package.name}.buildtype"/>
    <property name="tool.buildmodules" value="OriginObfuscateStrings" />
    <property name="tool.OriginObfuscateStrings.outputname" value="ObfuscateStrings"/>
    <property name="tool.OriginObfuscateStrings.outputdir" value="${package.OriginObfuscateStrings.dir}/PostBuildTool/bin/"/>
    <property name="tool.OriginObfuscateStrings.osx-extra-link-options" value="-stdlib=libc++"/>

    <property name="tool.OriginObfuscateStrings.builddependencies">
        EABase
    </property>

    <fileset name="tool.OriginObfuscateStrings.libs">
            <do if="${config-system} == 'pc'">
                <includes name="${package.WindowsSDK.kitdir}\Lib\${package.WindowsSDK.TargetPlatformVersion}\um\x86\Shell32.Lib" />
            </do>
    </fileset>

    <fileset name="tool.OriginObfuscateStrings.sourcefiles">
        <includes name="${package.OriginObfuscateStrings.dir}/PostBuildTool/source/*.cpp" />
        <includes name="${package.OriginObfuscateStrings.dir}/Deobfuscate/source/shiftbits.cpp" />
    </fileset>

    <fileset name="tool.OriginObfuscateStrings.headerfiles">
        <includes name="${package.OriginObfuscateStrings.dir}/PostBuildTool/source/*.h" />
        <includes name="${package.OriginObfuscateStrings.dir}/Deobfuscate/include/ObfuscateStrings/shiftbits.h" />
    </fileset>

    <property name="tool.OriginObfuscateStrings.includedirs">
        ${package.OriginObfuscateStrings.dir}/PostBuildTool/source/
        ${package.OriginObfuscateStrings.dir}/Deobfuscate/include/
    </property>

    <fileset name="tool.OriginObfuscateStrings.resourcefiles">
    </fileset>

    <property name="tool.OriginObfuscateStrings.defines">
        ${property.value}
        UNICODE
        _UNICODE
    </property>

    <!-- ************************** -->
    <!-- postbuild property targets -->
    <!-- ************************** -->

    <property name="postbuild.target.list">
        copy-to-runtime
    </property>

    <target name="post-build-tasks">
        <foreach property="runtarget" item="String" in="${postbuild.target.list}">
            <echo message="Post Build Task: ${runtarget}" />
            <call target="${runtarget}" />
        </foreach>
    </target>

    <!-- NANT postbuild target. Will execute this after compiling happens. -->
    <property name="tool.OriginObfuscateStrings.postbuildtarget" value="post-build-tasks" />

    <!-- VS POSTBUILD target. Will set this to execute in the VS project. -->
    <property name="tool.OriginObfuscateStrings.vcproj.post-build-step">
        ${nant.location}/nant.exe -buildfile:${nant.project.buildfile} -masterconfigfile:${nant.project.masterconfigfile} -D:config=${config} ${tool.OriginObfuscateStrings.postbuildtarget}
    </property>

    <target name="copy-to-runtime">
    </target>
</project>
