build-tookit.py is used to build an aggregration of components based on a list
of dependencies

build-tookit.py takes two directories as parameters: the components directory
and an output directory. The components directory contains the JSON description
files and source assets for each component. The output directory is where the
dependfile is located and the aggregate output directory will be created. The
output directory defaults to the current directory but can be overridden using
the --output-dir argument.

Top-level component dependencies are declared one per line in a file called
'dependfile.txt' in the output directory. The order of the component names
isn't  significant; dependencies are always processed in alphabetical order.
The '#' character can be used to introduce comments. The path of the dependfile
can be overridden using the --dependfile  argument.

Once a list of top-level dependencies have been read recursive dependencies are
calculated by parsing the component JSON files in the components directory.
Dependencies are always included before their dependents and duplicate
dependencies are removed.

Additionally, if you want to include ALL components in the build, you can use
the --all-components parameter to ignore the dependfile and include everything. 

Once the final dependency list has been created a list of source files is
generated for each component. The potential input source files in the
components directory are:

scripts/{component-name}/**/*.js:  Support JavaScript files  
scripts/{component-name}.js:       Base JavaScript file
styles/{component-name}/**/*.css:  Support CSS files  
styles/{component-name}.css:       Base CSS file
images/{component-name}/**/*:      Image files

All input files are optional and may be omitted by the component. Support files
are aggregated before the base file but the support files themselves are 
aggregated in arbitrary order. if explicit ordering is required the component
should be separated in to sub-components with the appropriate dependencies
between themselves.

Component source files are aggregated in dependency order and placed in the
output directory. The aggregates are named as follows:

uitoolkit/scripts/uitoolkit.js:     Aggregated JavaSsript source
uitoolkit/styles/uitoolkit.css:     Aggregated CSS source
uitoolkit/images/<component name>:  Images for the named component if applicable 

The "uitookit" name above can be overridden using with the --output-base-name
argument.


Need: 
Python 2.7: http://www.python.org/download/releases/2.7/

Example: (globalprogress sandbox webwidget-globalprogress - see originBuild v4.build for shortcut) 
build-toolkit.py --components-dir ..\components --output-dir ..\..\..\..\..\origin\globalprogress\originClient\dev\webWidgets\globalprogress\