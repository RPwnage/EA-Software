package com.ea.originx.automation.lib.pageobjects.store;

import com.ea.vx.originclient.resources.CountryInfo;
import org.openqa.selenium.By;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;

/**
 * Page object representing the packart, rating, and rating information sections
 * of the 'PDP Hero'.
 *
 * @author glivingstone
 * @author micwang
 */
public class PDPHeroPackartRating extends PDPHero {

    // Pack Art
    protected static final String PDP_HERO_PACK_ART_CSS = PDP_HERO_CSS + " img.origin-pdp-packart";
    protected static final By PDP_HERO_PACK_ART_LOCATOR = By.cssSelector(PDP_HERO_PACK_ART_CSS);
    protected static final By GAME_RATING_LOCATOR = By.cssSelector("img.origin-storegamerating-logoimg");

    /**
     * Constructor
     *
     * @param driver Selenium WebDriver
     */
    public PDPHeroPackartRating(WebDriver driver) {
        super(driver);
    }

    //////////////////////////////////////////////////////////////////////////
    // PACKART
    // The packart of the entitlement.
    //////////////////////////////////////////////////////////////////////////
    /**
     * Verify 'PDP Hero' pack art is visible.
     *
     * @return true if pack art visible, false otherwise
     */
    public boolean verifyPackArtVisible() {
        // experienced a failure with 5 seconds wait, extended to 10 seconds
        return waitIsElementVisible(By.cssSelector(PDP_HERO_PACK_ART_CSS), 10);
    }

    /**
     * Get the 'PDP Hero' pack art src attribute.
     *
     * @return the pack art src attribute (String)
     */
    public String getPDPHeroPackArtSrc() {
        return waitForElementVisible(PDP_HERO_PACK_ART_LOCATOR).getAttribute("src");
    }

    /**
     * Verify that the current 'Pack Art' source matches the given URL.
     *
     * @param url The URL to check against
     * @return true if the pack art source matches the URL, false otherwise
     */
    public boolean verifyPackArtSrcIs(String url) {
        return getPDPHeroPackArtSrc().equals(url);
    }

    /**
     * Verify the pack art is correctly localized based on the country given.
     *
     * @param country Enumeration of a country
     * @return true if correctly localized, false if not or if country is not
     * currently setup
     */
    public boolean verifyPackartIsLocalized(CountryInfo.CountryEnum country) {
        switch (country) {
            case USA:
                return getPDPHeroPackArtSrc().contains("en_US");
            case FRANCE:
                return getPDPHeroPackArtSrc().contains("fr_FR");
            default:
                return false;
        }
    }

    //////////////////////////////////////////////////////////////////////////
    // GAME RATING AND DESCRIPTORS
    // The game rating (e.g. M - Mature ESRB) and the descriptions for the
    // rating (e.g. violence)
    //////////////////////////////////////////////////////////////////////////
    /**
     * Get the 'PDP Hero' game rating.
     *
     * @return The game rating name
     */
    public String getPDPHeroGameRating() {
        try {
            return waitForElementVisible(GAME_RATING_LOCATOR).getAttribute("alt");
        } catch (TimeoutException e) {
            return "";
        }
    }

    /**
     * Verify the 'PDP Hero' game rating.
     *
     * @return true if the game rating name is visible, false otherwise
     */
    public boolean verifyPDPHeroGameRatingVisible() {
        return waitIsElementVisible(GAME_RATING_LOCATOR, 2);
    }
}
