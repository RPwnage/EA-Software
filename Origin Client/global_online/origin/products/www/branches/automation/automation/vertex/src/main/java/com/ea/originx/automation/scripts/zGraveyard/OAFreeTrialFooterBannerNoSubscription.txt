package com.ea.originx.automation.scripts.originaccess.playfirsttrials;

import com.ea.originx.automation.lib.helpers.AccountManagerHelper;
import com.ea.originx.automation.lib.macroaction.MacroLogin;
import com.ea.originx.automation.lib.pageobjects.common.NavigationSidebar;
import com.ea.originx.automation.lib.pageobjects.originaccess.OriginAccessPage;
import com.ea.originx.automation.lib.pageobjects.originaccess.PlayFirstTrialsPage;
import com.ea.originx.automation.lib.pageobjects.youtube.YouTubeComponent;
import com.ea.originx.automation.scripts.EAXVxTestTemplate;
import com.ea.vx.annotations.TestRail;
import com.ea.vx.originclient.account.UserAccount;
import com.ea.vx.originclient.client.OriginClient;
import com.ea.vx.originclient.client.OriginClientFactory;
import com.ea.vx.originclient.helpers.ContextHelper;
import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.annotations.Test;

/**
 * To verify the footer on the Play First Trials Page
 *
 * @author svaghayenegar
 */
public class OAFreeTrialFooterBannerNoSubscription extends EAXVxTestTemplate {

    @TestRail(caseId = 12100)
    @Test(groups = {"originaccess", "full_regression"})
    public void OAFreeTrialHeroBannerNoSubscription(ITestContext context) throws Exception {

        final OriginClient client = OriginClientFactory.create(context);
        UserAccount userAccount = AccountManagerHelper.getUnentitledUserAccountWithCountry("Canada");
        final boolean isClient = ContextHelper.isOriginClientTesing(context);

        if (isClient) {
            logFlowPoint("Log into Origin as a non-subscriber"); // 1
        }

        logFlowPoint("Click the 'Play First Trials' menu item from 'Origin Access' tab, and verify page loads"); //2
        logFlowPoint("Verify that in the Footer Module, the logo image is displayed correctly"); //3
        logFlowPoint("Verify that in the Footer Module, the title appears correctly"); //4
        logFlowPoint("Verify that in the Footer Module, the subtitle appears correctly"); //5
        logFlowPoint("Verify that in the Footer Module, the bulleted lists appears correctly"); //6
        logFlowPoint("Verify that in the Footer Module, under the CTA text is displayed to inform the player that this is a PC program only"); //7
        logFlowPoint("Verify that in the Footer Module, the description/learn more about access text appears correctly"); //8
        logFlowPoint("Verify that if a video is configured the player can play the video"); //9
        logFlowPoint("Verify that in the Footer Module, clicking the 'Learn more About Origin Access' directs the user to the Origin Access Landing Page"); //10

        WebDriver driver = startClientObject(context, client);

        // 1
        if (isClient) {
            logPassFail(MacroLogin.startLogin(driver, userAccount), true);
        }

        //2
        NavigationSidebar navigationSidebar = new NavigationSidebar(driver);
        navigationSidebar.clickOriginAccessTrialLink();
        PlayFirstTrialsPage playFirstTrialsPage = new PlayFirstTrialsPage(driver);
        logPassFail(playFirstTrialsPage.verifyPlayFirstTrialPageReached(), true);

        //3
        logPassFail(playFirstTrialsPage.verifyFooterOriginAccessLogoIsVisible(), true);

        //4
        logPassFail(playFirstTrialsPage.verifyFooterTitle(), true);

        //5
        logPassFail(playFirstTrialsPage.verifyFooterSubtitle(), true);

        //6
        logPassFail(playFirstTrialsPage.verifyFooterBulletPoints(), true);

        //7
        logPassFail(playFirstTrialsPage.verifyFooterPlatform(), true);

        //8
        logPassFail(playFirstTrialsPage.verifyFooterLink(), true);

        //9
        YouTubeComponent youTubeComponent = playFirstTrialsPage.getFooterYouTubeComponent();
        youTubeComponent.playVideo();
        logPassFail(youTubeComponent.verifyVideoPlaying(), true);

        //10
        OriginAccessPage originAccessPage = playFirstTrialsPage.clickFooterLink();
        logPassFail(originAccessPage.verifyPageReached(), true);

        softAssertAll();
    }
}
