package com.ea.originx.automation.scripts.feature.originaccess;

import com.ea.originx.automation.lib.helpers.AccountManagerHelper;
import com.ea.originx.automation.lib.resources.AccountTags;
import com.ea.vx.annotations.TestRail;
import com.ea.vx.originclient.account.UserAccount;
import com.ea.vx.originclient.client.OriginClient;
import com.ea.vx.originclient.client.OriginClientFactory;
import com.ea.originx.automation.lib.macroaction.MacroLogin;
import com.ea.originx.automation.lib.macroaction.MacroPurchase;
import com.ea.originx.automation.lib.pageobjects.common.NavigationSidebar;
import com.ea.originx.automation.lib.pageobjects.store.BrowseGamesPage;
import com.ea.originx.automation.lib.pageobjects.store.PDPHeroActionCTA;
import com.ea.originx.automation.lib.pageobjects.store.PDPHeroActionDescriptors;
import com.ea.originx.automation.lib.pageobjects.store.ReviewOrderPage;
import com.ea.vx.originclient.resources.OriginClientConstants;
import com.ea.originx.automation.scripts.EAXVxTestTemplate;
import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.annotations.Test;

/**
 * Tests Origin Access Discount on game browse, pdp and review order page
 *
 * @author rocky
 */
public class OAOriginAccessDiscount extends EAXVxTestTemplate {

    @TestRail(caseId = 3103328)
    @Test(groups = {"originaccess", "originaccess_smoke", "int_only", "allfeaturesmoke"})
    public void testOriginAccessDiscount(ITestContext context) throws Exception {

        final OriginClient client = OriginClientFactory.create(context);

        final UserAccount userAccount = AccountManagerHelper.getTaggedUserAccountWithCountry(AccountTags.SUBSCRIPTION_ACTIVE, OriginClientConstants.COUNTRY_CANADA);

        logFlowPoint("Login to origin access user account"); // 1
        logFlowPoint("Navigate to 'browse games' page and Open the PDP for any entitlement which has origin access discount then "
                + "verify price on the PDP hero has a origin access discount"); // 2
        logFlowPoint("Click buy button to proceed to review order page for the entitlement then verify the origin access discount is applied at checkout"); // 3

        //1
        final WebDriver driver = startClientObject(context, client);
        logPassFail(MacroLogin.startLogin(driver, userAccount), true);

        //2
        BrowseGamesPage browseGamesPage = new NavigationSidebar(driver).gotoBrowseGamesPage();
        String entitlementWithOriginAccessDiscount = browseGamesPage.clickAnyEntitlementThatHasOriginAccessDiscount();
        PDPHeroActionDescriptors pdpHeroDescriptors = new PDPHeroActionDescriptors(driver);
        PDPHeroActionCTA pdpHeroCTA = new PDPHeroActionCTA(driver);
        pdpHeroDescriptors.waitForPdpHeroToLoad();
        if (pdpHeroDescriptors.verifyBaseGameRequiredLinkExist()) {
            pdpHeroDescriptors.goToBaseGame();
        }
        logPassFail(pdpHeroDescriptors.verifyOriginAccessDiscountIsVisible(), true);

        //3
        pdpHeroCTA.clickBuyButton();
        MacroPurchase.handlePaymentInfoPage(driver);
        ReviewOrderPage reviewOrderPage = new ReviewOrderPage(driver);
        reviewOrderPage.waitForPageToLoad();
        logPassFail(reviewOrderPage.verifyOriginAccessDiscountIsVisible(), true);

        softAssertAll();
    }
}
