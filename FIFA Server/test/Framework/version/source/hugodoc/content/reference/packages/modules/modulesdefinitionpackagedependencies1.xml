<project default="build">
  <package name="ModulesExample" />

  . . . 

  <!-- Define ProgramModule module - Using new "preferred" Structured XML Syntax -->
  <Program name="ProgramModule">
    <includedirs>
      ${package.dir}/include
    </includedirs>
    <sourcefiles>
      <includes name="${package.dir}/source/program_module_1/*.cpp" />
    </sourcefiles>
    <!-- Define dependencies between modules and all modules of other package -->
    <dependencies>
      <auto>
        ModulesExample/LibModule
        ModulesExample/LibModuleOldSyntax
        OtherPackageWithModules
      </auto>
    </dependencies>
  </Program>


  <!-- Define ProgramModuleOldSyntax module (Old Syntax) -->

  <property name="runtime.ProgramModuleOldSyntax.buildtype" value="Program" />

  <property name="runtime.ProgramModuleOldSyntax.includedirs" >
    ${package.dir}/include
  </property>

  <fileset name="runtime.ProgramModuleOldSyntax.sourcefiles" >
    <includes name="${package.dir}/source/program_module_2/*.cpp" />
  </fileset>

  <!-- Define dependencies between modules (Old Syntax) -->

  <property name="runtime.ProgramModuleOldSyntax.runtime.moduledependencies">
    LibModule
    LibModuleOldSyntax
  </property>

  <!-- Define dependencies for all modules of other package (Old Syntax) -->

  <property name="runtime.ProgramModuleOldSyntax.builddependencies">
    OtherPackageWithModules
  </property>

  <!-- Define what to build (This step is not necessary for new Structured SXML Syntax) -->
  <property name="runtime.buildmodules" >
    ${property.value}
    LibModuleOldSyntax
    ProgramModuleOldSyntax
  </property>

</project>
