<!-- 
     (c) Electronic Arts. All Rights Reserved.
-->

<project xmlns="schemas/ea/framework3.xsd">

  <property name="default-lib-prefix"     value="lib" />
  <property name="default-lib-suffix"     value=".a" />
  <property name="default-dll-suffix"     value=".so"/>
  <property name="default-exe-suffix"     value=""/>

  <property name="exe-suffix"     value="${exe-suffix.${config-system}??${exe-suffix??${default-exe-suffix}}}"/>
  <property name="lib-prefix"     value="${lib-prefix.${config-system}??${lib-prefix??${default-lib-prefix}}}"/>
  <property name="lib-suffix"     value="${lib-suffix.${config-system}??${lib-suffix??${default-lib-suffix}}}"/>
  <property name="dll-suffix"     value="${dll-suffix.${config-system}??${dll-suffix??${default-dll-suffix}}}"/>

  <!-- <build> task properties -->
  <property name="build.pathstyle"      value="Unix"/>
  <!-- Compile in parallel on multiple CPUs         -->
  <property name="cc.parallelcompiler"    value="true"/>
  <property name="as.parallelcompiler"    value="true"/>

  <!-- Use response files for compile/link/library build -->
  <property name="cc.useresponsefile"   value="true"/>
  <property name="link.useresponsefile" value="true"/>
  <property name="lib.useresponsefile"  value="true"/>

  <property name="eaconfig.use_valgrind" value="${eaconfig.use_valgrind??false}"/>
  <property name="valgrind-define" value=""/>
  <property name="valgrind-define" value="EA_VALGRIND_ENABLED" if="${eaconfig.use_valgrind}"/>

  <!-- setup mono environment properties -->
  <include file="mono-buildtools.xml"/>

  <!-- config optionsets -->

  <optionset name="config-options-library">
    <option name="liboutputname" value="%outputdir%/${lib-prefix}%outputname%${lib-suffix}" />
  </optionset>

  <optionset name="config-options-program">
    <option name="linkoutputname" value="%outputdir%/%outputname%${exe-suffix}" />
  </optionset>

  <optionset name="config-options-dynamiclibrary" >
    <option name="generatedll"              value="on" />
    <option name="buildset.name"            value="DynamicLibrary" />
    <option name="buildset.tasks"           value="asm cc link" />
    <option name="buildset.cc.defines"      value="EA_DLL ${valgrind-define}" />
    <option name="linkoutputname"           value="%outputdir%/%outputname%${dll-suffix}" />
    <option name="impliboutputname"         value="%outputdir%/%outputname%${dll-suffix}" />
  </optionset>
  
  <optionset name="config-options-csharplibrary">
    <option name="buildset.name"            value="CSharpLibrary" />
    <option name="buildset.tasks"           value="csc" />
    <option name="buildset.csc.target"      value="library" />
    <option name="linkoutputname"           value="%outputdir%/%outputname%.dll" />
    <option name="delayedinit"              value="unixconfig-init-csharpcommon" />
  </optionset>

  <optionset name="config-options-csharpprogram">
    <option name="buildset.name"            value="CSharpProgram" />
    <option name="buildset.tasks"           value="csc" />
    <option name="buildset.csc.target"      value="exe" />
    <option name="linkoutputname"           value="%outputdir%/%outputname%.exe" />
    <option name="delayedinit"              value="unixconfig-init-csharpcommon" />
  </optionset>

  <target name="unixconfig-init-csharpcommon" hidden="true">
    <property name="build.resgen.program" value="${package.mono.tools.resgen}"/>
  </target>
  
    <optionset name="config-build-layout-entrypoint-common">
		<option name="executable" value="%output%"/>
	</optionset>
  <!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->
  <!-- +-+-               Asset Deployment                                                        -+-+- -->
  <!-- +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- -->

  <target name="copy-asset-files.unix" style="use" description="Deploy files to the package" hidden="true">
    <property name="package.asset-configbuilddir" value="@{GetModuleOutputDir('bin', '${package.name}')}/assets" />
    <property name="${groupname}.CopyAssetsWithoutSync" value="${${groupname}.CopyAssetsWithoutSync??true}"/>
    <call target="copy-asset-files"/>
  </target>

  <optionset name="config-options-program" append="true">
    <option name="deployassets" value="false"/>
  </optionset>
  
</project>
