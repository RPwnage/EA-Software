/*
  This file allows you to make Create Game Templates.
  These templates are used to define calls to createGame, createOrJoinGame, or resetDedicatedServer, depending on the createRequestType.

  The baseRequest defines the CreateGameRequest that will be sent off to the request.
  The attributes define overrides for the baseRequest, which can be sent up from the client. 

  In the BlazeSDK, call createGameFromTemplate(), passing in the template name and the Template attributes that you want to set.
  The server will parse the request it is sent, and make the request using a combination of the attributes sent from the client, 
  and the base/default values configured here.

  Scenarios can use Create Game templates to replace the createGameAttributes, with the createGameTemplate param in the subsession.
  If a Scenario uses both a template, and attributes, then the scenario-provided attributes will be applied last, on top of the CG template.

  // See CreateGameRequest TDF for details on the baseRequest data type:
  https://docs.developer.ea.com/gos_docs/blaze-latest/2015-Winter/wal/gamemanager.html#CreateGameRequest  (Winter 2015 Docs.  Check for more recent versions.)
*/

createGameTemplatesConfig = {

createGameTemplates = {
    
	// EXAMPLES. CAN BE REMOVED
    #include "component/gamemanager/tools/create_game_template_dirtycast.cfg"    
	
    // FIFA SPECIFIC CODE START
	// CGD 2.0 Competitive Templates
    #include "component/gamemanager/competitive/create_game_templates_competitive.cfg"
	
	// PS4 tournament game template:
    "ps4OrganizedTournament" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "bio-dub" }    // separate templates per region recommended

          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "qaonly" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
#if (ENV == "prod")		  
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
#else
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "30m" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "30m" } // To help ensure cleanup, set to max active game duration.
#endif
        }
    }
	
	// PS4 FUT online organized tournament game template:
    "ps4FutTournament" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "bio-dub" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "qaonly" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
#if (ENV == "prod")		  
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
#else
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "30m" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "30m" } // To help ensure cleanup, set to max active game duration.
#endif
        }
    }

#if (ENV == "prod")		  
	// PS4 FUT online organized tournament game template:
    "ps4FutTourUSEast" = {
        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"
                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-iad" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }		  

    // PS4 tournament game template for US East:
    "ps4TourUSEast" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-iad" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourUSWest" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-pdx" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }
	
    // PS4 tournament game template for US West:
    "ps4TourUSWest" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-pdx" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourUSCentral" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "mpl-mex" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for US Central:
    "ps4TourUSCentral" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "mpl-mex" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }
	
    // PS4 FUT online organized tournament game template:
    "ps4FutTourSPacific" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-syd" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for South Pacific:
    "ps4TourSPacific" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-syd" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourEUWest" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-dub" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for Europe West:
    "ps4TourEUWest" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-dub" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourEUCentral" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "ea-ams" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for Europe Central:
    "ps4TourEUCentral" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "ea-ams" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourEUEast" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-fra" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for Europe East:
    "ps4TourEUEast" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-fra" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourEUSouth" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-cdg" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for Europe South:
    "ps4TourEUSouth" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-cdg" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourMiddleEast" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "m3d-dxb" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for Middle East:
    "ps4TourMiddleEast" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "m3d-dxb" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourSAmerica" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-brz" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }
    // PS4 tournament game template for South America:
    "ps4TourSAmerica" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-brz" }    // separate templates per region recommended

          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourAfrica" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "m3d-jnb" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for Africa:
    "ps4TourAfrica" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "m3d-jnb" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourAPACWest" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-sin" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for APAC West:
    "ps4TourAPACWest" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-sin" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourAPACIndia" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-bom" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for APAC India:
    "ps4TourAPACIndia" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-bom" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 FUT online organized tournament game template:
    "ps4FutTourAPACJapan" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType70"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-nrt" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
          //  "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "tourn" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )
			
          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FUT21PS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "fut_organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType70" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "70" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    // PS4 tournament game template for APAC Japan:
    "ps4TourAPACJapan" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "aws-nrt" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAPS4Tour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }
            
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDefaultTeam]"        = { attrName = "DEFAULT_TEAM",         default = "9" }           			
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }	
#endif

	// Xone tournament game template:
    "xoneOrganizedTournament" = {

        // Tournament Games are expected to be Virtual Dedicated Server games, where all players are reserved 
        //   into their correct team and roles when the game was created by the tournament provider, and the tournament provider adds himself as the game's admin. 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                // The game is unjoinable except for players reserved when it was created:
                gameSettings = ["hostMigratable",
                                "joinInProgressSupported",
                                "allowAnyReputation",
                                "virtualized",
                                "disconnectReservation"]

                // A restricted permission system is used, so that players cannot perform actions that would invalidate the game:
                permissionSystemName = "tournamentGame"
                
                gameReportName = "gameType31"				
             } 
        }

        attributes = {
          // The tournament provider must provide an Admin List for the game, so that the provider's account can be made an Admin:
          //"CreateGameRequest.adminPlayerList"                = { attrName = "ADMIN_PLAYER_LIST", isOptional = true }
            "CreateGameRequest.gamePingSiteAlias"              = { default = "bio-iad" }    // separate templates per region recommended
			
          // The tournament provider must provide a URL for events, so that it can be informed when the game starts and ends:
            "CreateGameRequest.gameEventAddress"               = { attrName = "GAME_EVENT_ADDRESS" }
            "CreateGameRequest.gameStartEventUri"              = { attrName = "GAME_START_EVENT_URI" }
            "CreateGameRequest.gameEndEventUri"                = { attrName = "GAME_END_EVENT_URI" }

          // Tournament Id is a arbitrary value provided by the organizer.  The Organizer should refer to ESL, FaceIt, or other external tournament provider.
            "CreateGameRequest.tournamentIdentification.tournamentId"            = { attrName = "TOURNAMENT_ID" }
            "CreateGameRequest.tournamentIdentification.tournamentOrganizer"     = { attrName = "TOURNAMENT_ORGANIZER" }

          // The tournament provider is unlikely to know the game protocol version used.  Keep this in sync with client code: 
            "CreateGameRequest.commonGameData.gameProtocolVersionString"         = { default = "match_any_protocol" }           // (Can only be set via Attribute, baseRequest value is overridden with client provided value )

          // Various gameplay attributes you want the tournament provider to supply:
          // * Alternatively, you can leave the attributes fixed, and have different templates for the different modes you support.
            "CreateGameRequest.gameCreationData.gameName"                        = { attrName = "GAME_NAME",              default = "FIFAXoneTour" }
            "CreateGameRequest.gameCreationData.teamIds"                         = { default = [1,2] }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"               = { default = 2 }
            "CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"       = { default = 2 }

            "CreateGameRequest.gameCreationData.gameSettings[ranked]"            = { default = 1 }
			
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"      = { default = "organized_tournament_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"    = { default = "gameType31" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"      = { default = "31" }
			
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourHalfLength]"         = { attrName = "GAME_LENGTH",          default = "6" }             //Support Values: 2-10,15,20
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourCustomController]"   = { attrName = "CONTROL",              default = "ANY" }           //Support Values: "ANY","MANUAL","SEMI"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourDrawMode]"           = { attrName = "DRAW_MODE",            default = "EXTRATIME" }     //Support Values: "EXTRATIME","SHOOTOUT","GOLDGOAL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameSpeed]"          = { attrName = "GAME_SPEED",           default = "NORMAL" }        //Support Values: "NORMAL","FAST","SLOW"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourRoster]"             = { attrName = "SQUAD_TYPE",           default = "ONLINE" }        //Support Values: "CUSTOM","ONLINE","85OVERALL"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourTeamLevel]"          = { attrName = "TEAM_LEVEL",           default = "ANY" }           //Support Values: "ANY","HALF2ONEHALF","TWO2THREE","THREEHALF2FOUR","FOURHALF2FIVE"
			
            //"CreateGameRequest.gameCreationData.gameAttribs[fifaTourGameWindow]"         = { attrName = "WINDOW",               default = "NA" }            //Support Values: "NA", or epoch time to indicate end of the game window
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourStadium]"            = { attrName = "STADIUM",              default = "ANY" }           //Support Values: "ANY","FIXED"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourToD]"            	 = { attrName = "TIME",                 default = "ANY" }           //Support Values: "ANY","DAY","NIGHT"
            "CreateGameRequest.gameCreationData.gameAttribs[fifaTourWeather]"            = { attrName = "WEATHER",              default = "ANY" }           //Note: Not all stadium supports all these weathers, if weather is not available, it will go back to the one that it supports
																																							//Support Values: "ANY","DRYSUNNY","DRYHAZY","DRYCLOUDY","RAINNORMAL","RAINSHOWERS","SNOWNORMAL","SNOWFLURRIES","OVERCASTNORMAL","OVERCASTFOGGY"			
          // Disconnect and reservation timeouts should be long enough to allow matches to persist with only reservations, until they can be removed.
            "CreateGameRequest.gameCreationData.playerReservationTimeout"        = { default = "20d" }
            "CreateGameRequest.gameCreationData.disconnectReservationTimeout"    = { attrName = "DISCONNECT_RESERVATION_TIMEOUT", default = "7d" } // To help ensure cleanup, set to max active game duration.
        }
    }

    "fifaFriendlies" = {

        // Set this to RESET_GAME if you want this to be a resetDedicatedServer request:
        createRequestType = "CREATE_OR_JOIN_GAME"     // Other options: CREATE_OR_JOIN_GAME (join based on persisted id), RESET_GAME
 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "PEER_TO_PEER_FULL_MESH"
                voipNetwork     = "VOIP_PEER_TO_PEER"
                teamIds         = [4,5]

                gameSettings = ["openToBrowsing",
                                "openToInvites",
                                "ranked",
                                "ignoreEntryCriteriaWithInvite"]
                
                gameReportName = "gameType20"
            } 
        }
        
        attributes = {
            "CreateGameRequest.gameCreationData.gameName"                                       = { default = "FIFA 22" }
            "CreateGameRequest.gameCreationData.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"     = { default = 2 }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"                              = { default = 2 }       // Max Capacity the game can be set to.

			"CreateGameRequest.gameCreationData.externalSessionCustomData"            = { attrName = "EXT_SESSION_DATA",  default = "" }

            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"           = { default = "h2h_friendlies_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"         = { default = "gameType20" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_clubId]"             = { default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_coop]"               = { default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"           = { default = "20" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_rosterURL]"          = { default = "" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_rosterVersion]"      = { default = "1" }

            "CreateGameRequest.gameCreationData.gameAttribs[fifaClubLeague]"          = { default = "16" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaClubNumPlayers]"      = { default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaCustomController]"    = { attrName = "CUSTOM_CONTROLLER",    default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaGameSpeed]"           = { attrName = "GAME_SPEED",           default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaGKControl]"           = { default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaHalfLength]"          = { attrName = "HALF_LENGTH",          default = "4" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaMatchupHash]"         = { default = "12345678" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaPPT]"                 = { default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaRoster]"              = { attrName = "ROSTER_TYPE",          default = "0" }

#if (PLATFORM == "ps5")
			"CreateGameRequest.gameCreationData.externalSessionIdentSetup.ps5.match.activityObjectId" = { attrName = "PS5_ACTIVITY_ID", default = "OF_PlayOnlineFriendlies" }
#endif

            "CreateGameRequest.playerJoinData.defaultTeamIndex"                       = { default = 0 }
        }
    }
	"futFriendlies" = {

        // Set this to RESET_GAME if you want this to be a resetDedicatedServer request:
        createRequestType = "CREATE_OR_JOIN_GAME"     // Other options: CREATE_OR_JOIN_GAME (join based on persisted id), RESET_GAME
 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "PEER_TO_PEER_FULL_MESH"
                voipNetwork     = "VOIP_PEER_TO_PEER"
                teamIds         = [8,9]

                gameSettings = ["openToBrowsing",
                                "openToInvites",
                                "ignoreEntryCriteriaWithInvite"]
                
                gameReportName = "gameType72"
            } 
        }
        
        attributes = {
            "CreateGameRequest.gameCreationData.gameName"                                       = { default = "FIFA 22" }
            "CreateGameRequest.gameCreationData.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"     = { default = 2 }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"                              = { default = 2 }       // Max Capacity the game can be set to.

			"CreateGameRequest.gameCreationData.externalSessionCustomData"            = { attrName = "EXT_SESSION_DATA",  default = "" }

			"CreateGameRequest.gameCreationData.gameAttribs[fifaHalfLength]"          = { attrName = "fifaHalfLength",  default = "4" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaMatchupHash]"         = { attrName = "fifaMatchupHash", default = "12345678" }
            "CreateGameRequest.gameCreationData.gameAttribs[FUTFriendlyType]"         = { attrName = "FUTFriendlyType", default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[futNewUser]"              = { attrName = "futNewUser",      default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[futTeamOVR]"              = { attrName = "futTeamOVR",      default = "0" }

            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"           = { default = "72" }

            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"         = { default = "gameType72" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_clubId]"             = { attrName = "OSDK_clubId",    default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_coop]"               = { attrName = "OSDK_coop",      default = "1" }
			"CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"           = { attrName = "OSDK_gameMode",  default = "72" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_rosterURL]"          = { default = "" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_rosterVersion]"      = { default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_sponsoredEventId]"   = { default = "0" }

            "CreateGameRequest.gameCreationData.gameAttribs[ssfMatchType]"            = { default = "-1" }
            "CreateGameRequest.gameCreationData.gameAttribs[ssfStadium]"              = { default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[ssfWalls]"                = { default = "-1" }

#if (PLATFORM == "ps5")
			"CreateGameRequest.gameCreationData.externalSessionIdentSetup.ps5.match.activityObjectId" = { attrName = "PS5_ACTIVITY_ID", default = "FUT_PlayFUTFriendlies_PlayFriend" }
#endif	

            "CreateGameRequest.playerJoinData.defaultTeamIndex"                       = { default = 0 }
        }
    }

	"fifaGameGroup" = {

        // Set this to RESET_GAME if you want this to be a resetDedicatedServer request:
        createRequestType = "CREATE_OR_JOIN_GAME"     // Other options: CREATE_OR_JOIN_GAME (join based on persisted id), RESET_GAME
 
        baseRequest = {
		    commonGameData = { gameType = "GAME_TYPE_GROUP" }
            gameCreationData = { 
                networkTopology = "NETWORK_DISABLED"
                voipNetwork     = "VOIP_PEER_TO_PEER"

                gameSettings = ["openToBrowsing",
                                "openToMatchmaking",
#if (PLATFORM != "ps5")
                                "openToInvites", 
#endif
                                "hostMigratable",
                                "enablePersistedGameId",
                                "allowAnyReputation"]
                
                gameReportName	= ""
            } 
        }
        
        attributes = {
            "CreateGameRequest.gameCreationData.gameName"                                       = { attrName = "VAR_GAME_NAME",  default = "FIFA 22" }

            "CreateGameRequest.gameCreationData.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"     = { attrName = "VAR_SLOT_CAPACITY",  default = 2 }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"                              = { attrName = "VAR_MAX_PLAYER",     default = 2 }       // Max Capacity the game can be set to.

			"CreateGameRequest.persistedGameId"                                       = { attrName = "VAR_PERSISTENT_GAMEID",  default = "" }
			"CreateGameRequest.gameCreationData.externalSessionCustomData"            = { attrName = "EXT_SESSION_DATA",       default = "" }

            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"           = { attrName = "VAR_GAMEMODE_NAME",  default = "" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"           = { attrName = "VAR_OSDK_GAMEMODE",  default = "" }
        }
    }
    
     "fifaClubsPracticeGame" = {

        // Set this to RESET_GAME if you want this to be a resetDedicatedServer request:
        createRequestType = "RESET_GAME"     // Other options: CREATE_OR_JOIN_GAME (join based on persisted id), RESET_GAME
 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_PEER_TO_PEER"
                
                gameSettings = [
#if (PLATFORM != "ps5")
                                "openToInvites", 
#endif
                                "openToJoinByPlayer", 
                                "hostMigratable",
                                "enablePersistedGameId",
                                "allowAnyReputation"]
                
                gameReportName	= "gameType9"
            } 
        }
        
        attributes = {
            "CreateGameRequest.gameCreationData.gameName"                                       = { default = "FIFA 22" }

            "CreateGameRequest.gameCreationData.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"     = { default = 22 }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"                              = { default = 22 }       // Max Capacity the game can be set to.

			"CreateGameRequest.persistedGameId"                                       = { attrName = "VAR_PERSISTENT_GAMEID",  default = "" }
			"CreateGameRequest.gameCreationData.externalSessionCustomData"            = { attrName = "EXT_SESSION_DATA",       default = "" }
            "CreateGameRequest.gameCreationData.entryCriteriaMap[OSDK_maxDNF]"        = { default = "stats_dnf <= 100" } 

            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"           = { default = "club_season_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_categoryId]"         = { default = "gameType9" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"           = { default = "9" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_rosterURL]"          = { default = "" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_rosterVersion]"      = { default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_ChlngrClubId]"       = { default = "0" }

            "CreateGameRequest.gameCreationData.gameAttribs[fifaClubLeague]"          = { default = "16" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaCustomController]"    = { attrName = "CUSTOM_CONTROLLER",    default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaGameSpeed]"           = { attrName = "GAME_SPEED",           default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaGKControl]"           = { default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaHalfLength]"          = { attrName = "HALF_LENGTH",          default = "4" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaPPT]"                 = { default = "0" }
            "CreateGameRequest.gameCreationData.gameSettings[ranked]"                 = { attrName = "IS_RANKED",   default = 0 }

#if (PLATFORM == "ps5")
            "CreateGameRequest.gameCreationData.externalSessionIdentSetup.ps5.match.activityObjectId" = { attrName = "PS5_ACTIVITY_ID", default = "PC_PlayProClubsPractice" }
#endif

            "CreateGameRequest.playerJoinData.defaultTeamIndex"                       = { default = 0 }
        }
    }

#if (ENV != "prod")
	"futExampleTemplate" = {

	    // Set this to RESET_GAME if you want this to be a resetDedicatedServer request:
        createRequestType = "RESET_GAME"     // Other options: CREATE_OR_JOIN_GAME (join based on persisted id), RESET_GAME
 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_PEER_TO_PEER"

                gameSettings = ["openToBrowsing",
                                "openToMatchmaking",
                                "openToInvites",
                                "openToJoinByPlayer",
                                "ignoreEntryCriteriaWithInvite",
                                "enablePersistedGameId",
                                "dynamicReputationRequirement"]
                
                gameReportName = "gameType73"				
            } 
        }
		
        attributes = {
            "CreateGameRequest.gameCreationData.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"     = { attrName = "PLAYER_CAPACITY",        default = 2 }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"								= { attrName = "PLAYER_CAPACITY",        default = 2 }       // Max Capacity the game can be set to.

            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"           = { attrName = "GAME_MODE", default = "73" }
            "CreateGameRequest.gameCreationData.gameAttribs[futHouseRulePref]"        = { attrName = "FUT_HOUSERULE_PREF", default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"           = { default = "fut_online_houserules" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_coop]"               = { default = "1" }//guest
            "CreateGameRequest.gameCreationData.gameAttribs[unrankedGame]"            = { default = "UNRANKED" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaHalfLength]"          = { default = "4" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_arenaChallengeId]"   = { default = "0" }
        }
    }
#endif

        "futCoopGameMode" = {

        // Set this to RESET_GAME if you want this to be a resetDedicatedServer request:
        createRequestType = "RESET_GAME"     // Other options: CREATE_OR_JOIN_GAME (join based on persisted id), RESET_GAME
 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_DISABLED"

                gameSettings = ["openToBrowsing",
                                "openToMatchmaking",
#if (PLATFORM != "ps5")
                                "openToInvites", 
#endif
                                "openToJoinByPlayer",
                                "ignoreEntryCriteriaWithInvite",
                                "enablePersistedGameId",
                                "dynamicReputationRequirement"]
                
                gameReportName = "gameType71"
            } 
        }
        
        attributes = {
            "CreateGameRequest.gameCreationData.gameName"                                       = { default = "FIFA 22" }
            "CreateGameRequest.gameCreationData.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"     = { attrName = "PLAYER_CAPACITY",        default = 2 }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"                              = { attrName = "PLAYER_CAPACITY",        default = 2 }       // Max Capacity the game can be set to.

            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"           = { attrName = "GAME_MODE", default = "71" }
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"           = { default = "fut_online_squad_battle" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_coop]"               = { default = "0" }//no guest
            "CreateGameRequest.gameCreationData.gameAttribs[unrankedGame]"            = { default = "UNRANKED" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaHalfLength]"          = { default = "4" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_arenaChallengeId]"   = { default = "0" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_rosterVersion]"      = { default = "1" }
        }
    }
	
	"SSFMiniGameMode" = {

        // Set this to RESET_GAME if you want this to be a resetDedicatedServer request:
        createRequestType = "RESET_GAME"     // Other options: CREATE_OR_JOIN_GAME (join based on persisted id), RESET_GAME
 
        baseRequest = {
            gameCreationData = { 
                networkTopology = "CLIENT_SERVER_DEDICATED"
                voipNetwork     = "VOIP_PEER_TO_PEER"

                gameSettings = ["openToBrowsing",
                                "openToMatchmaking",
                                "openToInvites",
                                "openToJoinByPlayer",
                                "ignoreEntryCriteriaWithInvite",
                                "enablePersistedGameId",
                                "ranked"]
            } 
        }
        
        attributes = {
					
		
            "CreateGameRequest.gameCreationData.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"     = { attrName = "PLAYER_CAPACITY",        default = 4 }
            "CreateGameRequest.gameCreationData.maxPlayerCapacity"                              = { attrName = "PLAYER_CAPACITY",        default = 4 }       // Max Capacity the game can be set to.

            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_gameMode]"           = { attrName = "GAME_MODE", default = "35" }
            "CreateGameRequest.gameCreationData.gameAttribs[Gamemode_Name]"           = { default = "ssf_minigame_match" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaGameSpeed]"           = { attrName = "GAME_SPEED",       default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[fifaHalfLength]"          = { attrName = "HALF_LENGTH",      default = "1" }
            "CreateGameRequest.gameCreationData.gameAttribs[OSDK_arenaChallengeId]"   = { default = "0" }
			"CreateGameRequest.gameCreationData.gameAttribs[OSDK_sponsoredEventId]"   = { default = "0" }
			"CreateGameRequest.gameCreationData.gameAttribs[OSDK_coop]"   			  = { default = "0" }
        }
		
    }

    // template:
    "gameGroupOnlyTemplate" = {

        // Basic joinable game group:
        baseRequest = {
            commonGameData = { gameType = "GAME_TYPE_GROUP" } // this marks the Game as a GameGroup
            gameCreationData = {
                networkTopology = "NETWORK_DISABLED"
                voipNetwork = "VOIP_PEER_TO_PEER"
                gameSettings = ["openToJoinByPlayer", "openToMatchmaking", "joinInProgressSupported", "hostMigratable", "allowAnyReputation"]
                //gameSettings = ["openToBrowsing", "openToMatchmaking", "openToInvites", "openToJoinByPlayer", "ranked", "ignoreEntryCriteriaWithInvite", "enablePersistedGameId"]
             } 
        }

        attributes = {
            //"CreateGameRequest.slotCapacitiesMap[SLOT_PUBLIC_PARTICIPANT]"          = { attrName = "PLAYER_CAPACITY",            default = 4 }
            //"CreateGameRequest.gameCreationData.maxPlayerCapacity"                  = { attrName = "PLAYER_CAPACITY",            default = 4 }
            //"CreateGameRequest.gameCreationData.externalSessionTemplateName"        = { attrName = "XONE_GAME_SESSION_TEMPLATE", default = "" }

            "CreateGameRequest.gameCreationData.entryCriteriaMap[OSDK_maxDNF]"     = { default = "stats_dnf <= 100" } 
            "CreateGameRequest.gameCreationData.entryCriteriaMap[OSDK_skillLevel]" = { default = "stats_skillLevel >= 1 && stats_skillLevel <= 99"}

#if (PLATFORM == "ps4")
            "CreateGameRequest.gameCreationData.presenceMode" = { default = "PRESENCE_MODE_NONE" } //Use PRESENCE_MODE_STANDARD on only one type of game group or game session
#endif
        }
    }

    // FIFA SPECIFIC CODE END
  }
}

