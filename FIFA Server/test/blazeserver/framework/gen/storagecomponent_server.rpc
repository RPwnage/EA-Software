
[
  client_include = false,
  headername="framework/tdf/storage_server.h"
]
#include "framework/gen/storage_server.tdf"


namespace Blaze
{
[
  id = framework/1,
  description = "A component that implements the internal server messaging used by structured object storage manager.",
  details = "", 
  configurationType = StorageConfig 
]
component Storage
{
    errors
    {
        [description = ""]
        STORAGE_ERR_NO_SUCH_COMPONENT_OR_ID_TYPE = 1;  
    }
    
    slave
    {
        methods
        {
            [
                id = 0,
                description = "",
                errors = {
                },
                client_export = false,
                internal = true,
                requires_authentication = false,
                generate_command_class = false,
                setCurrentUserSession = false
            ]
            void syncStorageSliver(SyncStorageSliverRequest);

            [
                id = 1,
                description = "",
                errors = {
                },
                client_export = false,
                internal = true,
                requires_authentication = false,
                generate_command_class = false,
                setCurrentUserSession = false
            ]
            void unsyncStorageSliver(UnsyncStorageSliverRequest);

            [
                id = 2,
                description = "",
                errors = {
                },
                client_export = false,
                internal = true,
                requires_authentication = false,
                generate_command_class = false,
                setCurrentUserSession = false
            ]
            GetStorageMetricsResponse getStorageMetrics();
        }

        notifications
        {
            [
                id = 0,
                description = "Storage record has been updated",
                details = "",
                client_export = false
                // TODO: add mutable_arg=true and omit_usersession=true
            ]
            StorageRecordUpdated(StorageRecordUpdate);

            [
                id = 1,
                description = "Storage record has been erased",
                details = "",
                client_export = false
                // TODO: add mutable_arg=true and omit_usersession=true
            ]
            StorageRecordErased(StorageRecordErase);
        }
    } // slave
}
}


