input {
  file {
      path => ["/blazelogs/*.log"]
      exclude => ["*pinevent*.log"]
      start_position => beginning
      sincedb_path => "/opt/logstash/sincedb"
      type => "blaze"
      tags => ["gosblaze","dev","${DEV_USER_NAME}"]
      codec => multiline {
          pattern => "^\s|</event>"
          max_lines => 3000
          what => "previous"
      }
  }
  file {
      path => ["/blazelogs/*pinevent*.log"]
      start_position => beginning
      sincedb_path => "/opt/logstash/sincedb"
      type => "pin-data"
      tags => ["gosblaze","dev","${DEV_USER_NAME}"]
  }
}

filter {
  if [type] == "pin-data" {
    json {
      source => "message"
    }
  }
  else if [type] == "blaze" {
    mutate {
        add_field => {
            "tenantId" => "gs-shared"
            "datastreamId" => "gs-shared-logs"
            "ver" => "%{@version}"
            "[data][message]" => "%{message}"
            "timestamp" => "%{@timestamp}"
        }
        remove_field => ["@timestamp", "@version", "message"]
    }
  }
}

output {
  if [type] == "blaze" {
    http {
      http_method => "post"
      url => "https://dc.darkside.ea.com/api/v1/track"
    }
  }
  else if [type] == "pin-data" {
    http {
      http_method => "post"
      http_compression => true
      headers => {
        "application-id" => "%{[headers][application-id]}"
        "x-ea-lint-level" => "2"
        "x-ea-env" => "%{[headers][x-ea-env]}"
        "x-ea-game-id" => "%{[body][tid]}"
        "x-ea-game-id-type" => "%{[body][tidt]}"
        "x-ea-taxv" => "%{[body][taxv]}"
      }
       url => "https://pin-river-test-server-internal.data.ea.com/pinEvents"
      format => "message"
      message => "%{body}"
    }
  }

# Uncomment for verbose logging
# stdout { codec => rubydebug }
}
