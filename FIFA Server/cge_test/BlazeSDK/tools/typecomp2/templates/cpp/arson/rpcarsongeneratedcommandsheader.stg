group rpcarsongeneratedcommandsheader : servercommon;

masterComponent(fileNode, component) ::= <<>>
slaveComponent(fileNode, component) ::= <<>>

rootComponent(fileNode, node) ::= <<
<standardFileHeader()>
<openIncludeGuard()>

<node.Subcomponents:declareHeaders(component=it); separator="\n\n">
// Register components
inline void RegisterBlazeSdkComponents(Blaze::BlazeHub *blazeHub)
{
<node.Subcomponents:printComponentName(component=it)>
}

<closeIncludeGuard()>
<standardFileFooter()>

>>



declareHeaders(component) ::= <<
<if(!component.IsMaster)>
<component.Commands:headerDeclaration(command=it); separator="\n"><endif>
>>


headerDeclaration(command) ::= <<
#include "<component.Name;format="toLower"><component.Type;format="toLower">/<command.Name;format="toLower">_stub.h"
>>



printComponentName(component) ::= <<
<if(!component.IsMaster)>
    <if(!component.IsCompTypeArson)>
        <if(clientName(component))>     
    <component.Scope.FullNameList; separator="::">::<clientName(component)>::createComponent(blazeHub);
        <endif>
    <endif>
<endif>
>>
