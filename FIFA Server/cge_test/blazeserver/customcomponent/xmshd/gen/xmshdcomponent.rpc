// Defines the RPCs and async notifications used in the easfc component.
//  RPC classes are compiled with RPCComp, generating C++ classes (or class stubs) that the component must implement.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/RPCComp for info on the .rpc file/lang spec and the compiler, RpcComp
//
// We assume that all request and response types are valid and just use them
// directly in the code generation.
//
// The compiler should ensure that all commands within a component have a unique ID.
// The compiler should ensure that all components within a file have a unique ID.
// Zero is not a valid component or command ID
// Enforce that method names must start with lowercase letter.
// Enforce C++ rules for method names and TDF type names.
// Allow C++ style comments.
//

[ headername="xmshd/tdf/xmshdtypes.h" ]
#include "xmshd/gen/xmshdtypes.tdf"

[ 
  client_include = false,
  headername="xmshd/tdf/xmshdtypes_server.h" 
]
#include "xmshd/gen/xmshdtypes_server.tdf"

namespace Blaze
{
namespace XmsHd
{
[
  id = custom/31,
  description = "XMS HD component for creating/updating XMS assets from blaze server",
  details = "XMS HD component allows for other components to create files to be stored under XMS HD",
  configurationType = XmsHdConfig
]
component XmsHd
{
	errors
	{
		[ description = "An error has occurred." ]
		XMSHD_ERR_GENERAL =	1;
		[ description = "Parameters are invalid." ]
		XMSHD_ERR_INVALID_PARAMS = 2;
		[ description = "File Status Check failed" ]
		XMSHD_ERR_FILE_STATUS_FAILED = 3;
		[ description = "File Status Check found" ]
		XMSHD_ERR_FILE_STATUS_FOUND = 4;
		[ description = "File Status Check not found" ]
		XMSHD_ERR_FILE_STATUS_NOTFOUND = 5;
		[ description = "Create Media failed" ]
		XMSHD_ERR_CREATE_MEDIA_FAILED =	6;
		[ description = "Update Media failed" ]
		XMSHD_ERR_UPDATE_MEDIA_FAILED =	7;
		[ description = "No Http Connection Available" ]
		XMSHD_ERR_NO_HTTP_CONNECTION_AVAILABLE = 12;
		[ description = "Http Client Error 400 - Bad Request" ]
		XMSHD_ERR_HTTP_BAD_REQUEST = 13;
		[ description = "Http Client Error 401 - UnAuthorized" ]
		XMSHD_ERR_HTTP_UNAUTHORIZED = 14;
		[ description = "Http Client Error 403 - Forbidden Access" ]
		XMSHD_ERR_HTTP_FORBIDDEN_ACCESS = 15;
		[ description = "Http Server Error 500 - Server Error" ]
		XMSHD_ERR_HTTP_SERVER = 16;
	}

	[ clientname = "XmsHdComponent" ]
	slave
	{			
		methods
		{ 
              	[
                 id = 1,
                 errors = {
						XMSHD_ERR_GENERAL,
						XMSHD_ERR_INVALID_PARAMS,
						XMSHD_ERR_FILE_STATUS_FAILED,
						XMSHD_ERR_CREATE_MEDIA_FAILED,
						XMSHD_ERR_UPDATE_MEDIA_FAILED,
						XMSHD_ERR_NO_HTTP_CONNECTION_AVAILABLE,
						XMSHD_ERR_HTTP_BAD_REQUEST,
						XMSHD_ERR_HTTP_UNAUTHORIZED,
						XMSHD_ERR_HTTP_FORBIDDEN_ACCESS,
						XMSHD_ERR_HTTP_SERVER
                   },
                 requiresUserSession = false
               	]
				void publishData(PublishDataRequest);
              	
		} // methods
	} // slave

	master
	{
	    methods
	    {
	    }
	
		replication
		{
		} // replication
		
		notifications
		{
		}
	} // master
}
}
}


