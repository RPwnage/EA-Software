// Defines the RPCs and async notifications used in the fifagroups component.
//  RPC classes are compiled with RPCComp, generating C++ classes (or class stubs) that the component must implement.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/RPCComp for info on the .rpc file/lang spec and the compiler, RpcComp
//
// We assume that all request and response types are valid and just use them
// directly in the code generation.
//
// The compiler should ensure that all commands within a component have a unique ID.
// The compiler should ensure that all components within a file have a unique ID.
// Zero is not a valid component or command ID
// Enforce that method names must start with lowercase letter.
// Enforce C++ rules for method names and TDF type names.
// Allow C++ style comments.
//

[ headername="useractivitytracker/tdf/useractivitytrackertypes.h" ]
#include "useractivitytracker/gen/useractivitytrackertypes.tdf"

[ headername="fifastats/tdf/fifastatstypes.h" ]
#include "fifastats/gen/fifastatstypes.tdf"

[ 
  client_include = false,
  headername="useractivitytracker/tdf/useractivitytrackertypes_server.h" 
]
#include "useractivitytracker/gen/useractivitytrackertypes_server.tdf"


namespace Blaze  
{
namespace UserActivityTracker
{
[
  id = custom/186,
  description = "A component used strictly as a template.",
  details = "This component will compile.  It will not be configured to run by default.",
  configurationType=UserActivityTrackerConfig //Configuration TDF that describes what the component configuration looks like.
]
component UserActivityTracker
{                              
    errors
    {
        [ description = "An unknown error occurred." ]
        USERACTIVITYTRACKER_ERR_UNKNOWN = 1;
        [ description = "invalid data." ]
		USERACTIVITYTRACKER_ERR_TOKEN_RETRIEVAL_FAILED = 2;
        [ description = "invalid data." ]
		USERACTIVITYTRACKER_ERR_INVALID_DATA = 3;
        [ description = "kill switch enabled." ]
		USERACTIVITYTRACKER_ERR_KILL_SWITCHED = 4;
        [ description = "user has opted out." ]
		USERACTIVITYTRACKER_ERR_OPTED_OUT = 5;
    }

    slave
    {                           
        methods
        {	
            [
              id = 2,
              errors = {
				USERACTIVITYTRACKER_ERR_UNKNOWN,
				USERACTIVITYTRACKER_ERR_KILL_SWITCHED,
				USERACTIVITYTRACKER_ERR_OPTED_OUT

              }				
            ]
            SubmitUserActivityResponse submitUserActivity(SubmitUserActivityRequest);

            [
              id = 3,
              errors = {
				USERACTIVITYTRACKER_ERR_UNKNOWN
              }				
            ]
            InitializeUserActivityTrackerResponse initializeUserAcivityTracker(InitializeUserActivityTrackerRequest);

            [
              id = 4,
              errors = {
				USERACTIVITYTRACKER_ERR_UNKNOWN,
				USERACTIVITYTRACKER_ERR_KILL_SWITCHED
              }				
            ]
            FifaStats::UpdateStatsResponse updateEadpStats(FifaStats::UpdateStatsRequest);

			[
              id = 5,
              errors = {
				USERACTIVITYTRACKER_ERR_UNKNOWN,
				USERACTIVITYTRACKER_ERR_KILL_SWITCHED,
				USERACTIVITYTRACKER_ERR_OPTED_OUT
              }				
            ]
            IncrementMatchPlayedResponse incrementMatchPlayed();

        } // methods

    } // slave
}
}
}