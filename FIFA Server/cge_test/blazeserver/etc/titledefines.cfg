//These configurations WILL NEED to be specialized per game server.  Below are the configurations for the default Blaze
//sample game.  You MUST NOT ship with these settings

// Adjust these hosting flags to mark which platforms a shared-cluster deployment handles for this title.
// The settings below will configure the server to host xone, ps4 & pc when PLATFORM == "common".
//
// These flags are also used in databases.cfg to exclude unused databaseConnections, so they are set to 0
// for single cluster deployments.
#ifndef USING_BITC
#if PLATFORM == "common"

#ifndef XPLAY_HOST_PC
    #define XPLAY_HOST_PC 1
#endif

#ifndef XPLAY_HOST_XONE
    #define XPLAY_HOST_XONE 1
#endif

#ifndef XPLAY_HOST_XBSX
    #define XPLAY_HOST_XBSX 1
#endif

#ifndef XPLAY_HOST_PS4
    #define XPLAY_HOST_PS4 1
#endif

#ifndef XPLAY_HOST_PS5
    #define XPLAY_HOST_PS5 1
#endif

#ifndef XPLAY_HOST_NX
    #define XPLAY_HOST_NX 1
#endif

#ifndef XPLAY_HOST_IOS
    #define XPLAY_HOST_IOS 0
#endif

#ifndef XPLAY_HOST_ANDROID
    #define XPLAY_HOST_ANDROID 0
#endif

#ifndef XPLAY_HOST_STEAM
    #define XPLAY_HOST_STEAM 1 
#endif

#ifndef XPLAY_HOST_STADIA
    #define XPLAY_HOST_STADIA 1
#endif

#else
    
// No need to do #ifdef as all these should be 0 always (if not running common platform)
    #define XPLAY_HOST_PC 0
    #define XPLAY_HOST_XONE 0
    #define XPLAY_HOST_XBSX 0
    #define XPLAY_HOST_PS4 0
    #define XPLAY_HOST_PS5 0
    #define XPLAY_HOST_NX 0
    #define XPLAY_HOST_IOS 0
    #define XPLAY_HOST_ANDROID 0
    #define XPLAY_HOST_STEAM 0
    #define XPLAY_HOST_STADIA 0
#endif
#endif

// A boot file may override this
#ifndef BLAZE_SERVICE_NAME_PREFIX
    // FIFA SPECIFIC CODE START
    #define BLAZE_SERVICE_NAME_PREFIX "fifa-2022"
    // FIFA SPECIFIC CODE END
#endif

// Suffix should not start with dash - as it is automatically added below in the configuration
#ifndef BLAZE_SERVICE_NAME_SUFFIX
    #define BLAZE_SERVICE_NAME_SUFFIX "cge"
#endif

#if BLAZE_SERVICE_NAME_SUFFIX != ""
    #define BLAZE_SERVICE_NAME_SUFFIX "-#BLAZE_SERVICE_NAME_SUFFIX#"
#endif

// Note that a boot file may override this (like it has always been).
#ifndef BLAZE_SERVICE_NAME_DEFAULT
       #define BLAZE_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-#PLATFORM##BLAZE_SERVICE_NAME_SUFFIX#"
#endif	

#ifndef BLAZE_SERVICE_NAME_TRIAL
    #define BLAZE_SERVICE_NAME_TRIAL "#BLAZE_SERVICE_NAME_DEFAULT#-trial"
#endif

#ifndef BLAZE_SERVICE_NAME_EAACCESS
    #define BLAZE_SERVICE_NAME_EAACCESS  "#BLAZE_SERVICE_NAME_DEFAULT#-trial"
#endif
	
#ifndef BLAZE_SERVICE_NAME_ORIGINACCESS
    #define BLAZE_SERVICE_NAME_ORIGINACCESS  "#BLAZE_SERVICE_NAME_DEFAULT#-trial"
#endif

#ifndef BLAZE_PRODUCT_NAME_DEFAULT
    #define BLAZE_PRODUCT_NAME_DEFAULT "#BLAZE_SERVICE_NAME_DEFAULT#"
#endif	

#ifndef BLAZE_PRODUCT_NAME_TRIAL
    #define BLAZE_PRODUCT_NAME_TRIAL "#BLAZE_SERVICE_NAME_TRIAL#"
#endif

#ifndef BLAZE_PRODUCT_NAME_EAACCESS
	#define BLAZE_PRODUCT_NAME_EAACCESS "#BLAZE_SERVICE_NAME_EAACCESS#"
#endif
	
#ifndef BLAZE_PRODUCT_NAME_ORIGINACCESS
	#define BLAZE_PRODUCT_NAME_ORIGINACCESS "#BLAZE_SERVICE_NAME_ORIGINACCESS#"
#endif

// !!!***********************!!!
// !!!  Your PIN 'application-id' and 'ea-game-id' are provided during the PIN onboarding process using EA Console.
// !!!  These values are included in requests sent to the River PIN API, and determine how the requests should be
// !!!  routed by River's backend, and whether or not the requests will be rate-limited.
// !!!  Please see https://developer.ea.com/display/blaze/PIN+Integration for more details.
// !!!***********************!!!
// This value is sent as the "application-id" HTTP header in requests sent to the River PIN API.

// FIFA SPECIFIC CODE START
#if (PLATFORM == "ps4" || PLATFORM == "xone" || PLATFORM == "pc")
    #define PIN_APPLICATION_ID "bdd15fefef397e8052e3eda90724ed21"
#else
    #define PIN_APPLICATION_ID "8d21cce0c7dad28e46b6adfc8b0604ca"
#endif
// FIFA SPECIFIC CODE END


#define PIN_EA_GAME_ID "#BLAZE_PRODUCT_NAME_DEFAULT#"


// Defines for Normal Blaze Usage vs Arson Usage. Arson section will be removed once Arson is compatible to use normal defines.
#ifdef ARSON
// Defines for Arson Usage
#include "arson/arson-titledefines.cfg"
#else
// Defines for Normal Blaze Usage

// Nucleus Client ID
#ifndef NUCLEUS_CLIENT_ID
    #if PLATFORM == "common"
        #define NUCLEUS_CLIENT_ID "EADP_GS_BLZDEV_COM_BLZ_SERVER"
// FIFA SPECIFIC CODE START
    #elif PLATFORM == "pc"
        #define NUCLEUS_CLIENT_ID "FIFA22_PC_BLZ_SERVER"
    #elif PLATFORM == "xone"
        #define NUCLEUS_CLIENT_ID "FIFA22_XONE_BLZ_SERVER"
    #elif PLATFORM == "ps4"
        #define NUCLEUS_CLIENT_ID "FIFA22_PS4_BLZ_SERVER"
    #elif PLATFORM == "ps5"
        #define NUCLEUS_CLIENT_ID "FIFA22_BC_CGE_PS5_BLZ_SERVER"
// FIFA SPECIFIC CODE END
    #elif PLATFORM == "nx"
        #define NUCLEUS_CLIENT_ID "EADP_GS_BLZDEV_NX_BLZ_SERVER"
    #elif PLATFORM == "ios"
        #define NUCLEUS_CLIENT_ID "GOS-BlazeServer-DEV"
    #elif PLATFORM == "android"
        #define NUCLEUS_CLIENT_ID "GOS-BlazeServer-DEV"
// FIFA SPECIFIC CODE START
    #elif PLATFORM == "xbsx"
        #define NUCLEUS_CLIENT_ID "FIFA22_BC_CGE_XBSX_BLZ_SERVER"
// FIFA SPECIFIC CODE END
    #elif PLATFORM == "steam"
        #define NUCLEUS_CLIENT_ID "EADP_GS_BLZDEV_STEAM_BLZ_SERVER"
// FIFA SPECIFIC CODE START
    #elif PLATFORM == "stadia"
        #define NUCLEUS_CLIENT_ID "FIFA22_SDA_BLZ_SERVER"
// FIFA SPECIFIC CODE END
    #endif
#endif

// common
#define COMMON_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-common#BLAZE_SERVICE_NAME_SUFFIX#"
#define COMMON_BLAZE_PRODUCT_NAME_DEFAULT "#COMMON_SERVICE_NAME_DEFAULT#" // a dummy name that is only used for metrics tracking, not configured by C&I

// xbox one
#define XONE_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-xone#BLAZE_SERVICE_NAME_SUFFIX#"
#define XONE_BLAZE_PRODUCT_NAME_DEFAULT "#XONE_SERVICE_NAME_DEFAULT#"
// FIFA SPECIFIC CODE START
#define XONE_PROJECTID "318781"
#define XONE_ENTITLEMENT_GROUP "FIFA22XONE"
// FIFA SPECIFIC CODE END

// ps4
#define PS4_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-ps4#BLAZE_SERVICE_NAME_SUFFIX#"
#define PS4_BLAZE_PRODUCT_NAME_DEFAULT "#PS4_SERVICE_NAME_DEFAULT#"
// FIFA SPECIFIC CODE START
#define PS4_PROJECTID "318779"
#define PS4_ENTITLEMENT_GROUP "FIFA22PS4"
// FIFA SPECIFIC CODE END

// pc
#define PC_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-pc#BLAZE_SERVICE_NAME_SUFFIX#"
#define PC_BLAZE_PRODUCT_NAME_DEFAULT "#PC_SERVICE_NAME_DEFAULT#"
// FIFA SPECIFIC CODE START
#define PC_PROJECTID "318776"
#define PC_PROJECTID_PREORDER "319402"
#define PC_PROJECTID_DDX_PREORDER "319412"
#define PC_PROJECTID_SDDX_PREORDER "319418"
#define PC_PROJECTID_SDDX_EARLY_PREORDER "319860"
#define PC_PROJECTID_DDX "319931"
#define PC_PROJECTID_SDDX "319935"
#define PC_PROJECTID_POST_DDX "319939"
#define PC_PROJECTID_POST_SDDX "319943"
#define PC_PROJECTID_ACCESS_PREMIER "320012"
#define PC_ENTITLEMENT_GROUP "FIFA22PC"
// FIFA SPECIFIC CODE END

// nx
#define NX_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-nx#BLAZE_SERVICE_NAME_SUFFIX#"
#define NX_BLAZE_PRODUCT_NAME_DEFAULT "#NX_SERVICE_NAME_DEFAULT#"
#define NX_PROJECTID "100005"
#define NX_ENTITLEMENT_GROUP "EADP_GSBLZDEVNX"

// ios
#define IOS_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-ios#BLAZE_SERVICE_NAME_SUFFIX#"
#define IOS_BLAZE_PRODUCT_NAME_DEFAULT "#IOS_SERVICE_NAME_DEFAULT#"
#define IOS_PROJECTID "100006"
#define IOS_ENTITLEMENT_GROUP "BLAZE_DEFAULT_GROUP"

// android
#define ANDROID_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-android#BLAZE_SERVICE_NAME_SUFFIX#"
#define ANDROID_BLAZE_PRODUCT_NAME_DEFAULT "#ANDROID_SERVICE_NAME_DEFAULT#"
#define ANDROID_PROJECTID "100007"
#define ANDROID_ENTITLEMENT_GROUP "BLAZE_DEFAULT_GROUP"

// ps5
#define PS5_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-ps5#BLAZE_SERVICE_NAME_SUFFIX#"
#define PS5_BLAZE_PRODUCT_NAME_DEFAULT "#PS5_SERVICE_NAME_DEFAULT#"
// FIFA SPECIFIC CODE START
#define PS5_PROJECTID "318975"
#define PS5_ENTITLEMENT_GROUP "FIFA22PS5"
// FIFA SPECIFIC CODE END

// xbox series x
#define XBSX_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-xbsx#BLAZE_SERVICE_NAME_SUFFIX#"
#define XBSX_BLAZE_PRODUCT_NAME_DEFAULT "#XBSX_SERVICE_NAME_DEFAULT#"
// FIFA SPECIFIC CODE START
#define XBSX_PROJECTID "318981"
#define XBSX_ENTITLEMENT_GROUP "FIFA22XBSX"
// FIFA SPECIFIC CODE END

// steam
#define STEAM_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-steam#BLAZE_SERVICE_NAME_SUFFIX#"
#define STEAM_BLAZE_PRODUCT_NAME_DEFAULT "#STEAM_SERVICE_NAME_DEFAULT#"
#define STEAM_PROJECTID "100010"
#define STEAM_ENTITLEMENT_GROUP "EADP_GSBLZDEVSTEAM"

// stadia
#define STADIA_SERVICE_NAME_DEFAULT "#BLAZE_SERVICE_NAME_PREFIX#-stadia#BLAZE_SERVICE_NAME_SUFFIX#"
#define STADIA_BLAZE_PRODUCT_NAME_DEFAULT "#STADIA_SERVICE_NAME_DEFAULT#"
// FIFA SPECIFIC CODE START
#define STADIA_PROJECTID "319764"
#define STADIA_ENTITLEMENT_GROUP "FIFA22SDA"
// FIFA SPECIFIC CODE END

// End of Defines for Normal Blaze Usage
#endif



blazeServerNucleusClientId = "#NUCLEUS_CLIENT_ID#"

//+ For single platform integrators, create the old defines as there may be configurations depending on old defines.
#if PLATFORM != "common"
    #ifndef PROJECTID
        #define PROJECTID #PLATFORM_UPPERCASE#_PROJECTID
    #endif

    #ifndef ENTITLEMENT_GROUP
        #define ENTITLEMENT_GROUP #PLATFORM_UPPERCASE#_ENTITLEMENT_GROUP
    #endif
#endif
//-


platformToDefaultServiceNameMap = {
    "common"    = "#COMMON_SERVICE_NAME_DEFAULT#"
    "pc"        = "#PC_SERVICE_NAME_DEFAULT#"
    "ps4"       = "#PS4_SERVICE_NAME_DEFAULT#"
    "xone"      = "#XONE_SERVICE_NAME_DEFAULT#"
    "nx"        = "#NX_SERVICE_NAME_DEFAULT#"
    "ios"       = "#IOS_SERVICE_NAME_DEFAULT#"
    "android"   = "#ANDROID_SERVICE_NAME_DEFAULT#"
    "ps5"       = "#PS5_SERVICE_NAME_DEFAULT#"
    "xbsx"      = "#XBSX_SERVICE_NAME_DEFAULT#"
    "steam"     = "#STEAM_SERVICE_NAME_DEFAULT#"
    "stadia"     = "#STADIA_SERVICE_NAME_DEFAULT#"
}

serviceNames = {

    // common base service name
    #COMMON_SERVICE_NAME_DEFAULT# = {
        platform = "common"
        productName="#COMMON_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // pc service name(s)
    #PC_SERVICE_NAME_DEFAULT# = {
        platform = "pc"
        productName = "#PC_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // xone service name(s)
    #XONE_SERVICE_NAME_DEFAULT# = {
        platform = "xone"
        productName = "#XONE_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // ps4 service name(s)
    #PS4_SERVICE_NAME_DEFAULT# = {
        platform = "ps4"
        productName = "#PS4_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // nx service name(s)
    #NX_SERVICE_NAME_DEFAULT# = {
        platform = "nx"
        productName = "#NX_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // ios service name(s)
    #IOS_SERVICE_NAME_DEFAULT# = {
        platform = "ios"
        productName = "#IOS_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // android service name(s)
    #ANDROID_SERVICE_NAME_DEFAULT# = {
        platform = "android"
        productName = "#ANDROID_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // ps5 service name(s)
    #PS5_SERVICE_NAME_DEFAULT# = {
        platform = "ps5"
        productName = "#PS5_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // xbox series x service name(s)
    #XBSX_SERVICE_NAME_DEFAULT# = {
        platform = "xbsx"
        productName = "#XBSX_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // Steam service name(s)
    #STEAM_SERVICE_NAME_DEFAULT# = {
        platform = "steam"
        productName = "#STEAM_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

    // Stadia service name(s)
    #STADIA_SERVICE_NAME_DEFAULT# = {
        platform = "stadia"
        productName = "#STADIA_BLAZE_PRODUCT_NAME_DEFAULT#"
		//In Urraca.0, blazeServerClientId has been moved out from serviceNames
		//and releaseType has been moved to blazeserver\etc\framework\usersessions.cfg
    }

// FIFA SPECIFIC CODE START
#if (PLATFORM == "common" || PLATFORM == "ps4" || PLATFORM == "ps5" || PLATFORM == "xone" || PLATFORM == "xbsx" || PLATFORM == "stadia")
    #BLAZE_SERVICE_NAME_EAACCESS# = {
        platform = "#PLATFORM#"
        productName = "#BLAZE_PRODUCT_NAME_EAACCESS#"
	}
#endif

#if (PLATFORM == "common" || PLATFORM == "pc")
    #BLAZE_SERVICE_NAME_ORIGINACCESS# = {
        platform = "#PLATFORM#"
        productName = "#BLAZE_PRODUCT_NAME_ORIGINACCESS#"
	}
#endif	
// FIFA SPECIFIC CODE END
	
// example trial service name
//    #XONE_SERVICE_NAME_DEFAULT#-trial = {
//        platform = "xone"
//        releaseType = "trial_ea_access" 
//    }

}

// This value indicate that heat1 codec compatibility is enabled.  
// This allows a known bug to occur, when attempting to decode an unknown list<> or map<> that has a complex type as the key or value.
// It is *only* safe to remove this value (and fix the above bug) once all BlazeSDK clients are on Urraca.0 or later.
enableHeat1BackCompat = true;

#if (ENV == "dev" || ENV == "test")
    // Node.js solutions exist for the mock services under /tools/mockexternalservices/, and can be run locally. 
    // #define MOCK_EXTERNAL_SERVICE_URL_PS5 "localhost:8090"
    // #define MOCK_EXTERNAL_SERVICE_URL_PS4 "localhost:8085"
    // #define MOCK_EXTERNAL_SERVICE_URL_XONE "localhost:8086"
    // XBSX reuses MOCK_EXTERNAL_SERVICE_URL_XONE

  #if defined(MOCK_EXTERNAL_SERVICE_URL_XONE) || defined(MOCK_EXTERNAL_SERVICE_URL_PS4)  || defined(MOCK_EXTERNAL_SERVICE_URL_PS5)
    // If set, all external services that contact XBL/PSN will attempt to use mock services instead (dummy services that do nothing).
    // Additionally, PC gameplay users that use the express or stress logins can connect to the console service names (ex. fifa-2019-ps4), 
    //  and will be considered mock console users, given a fake XBL/PSN id, and will be treated as if they were real console players (not PC users).
    useMockConsoleServices = true;
  #endif
#endif

// This setting determines if an XboxAddress is required for the Xbox clients, as was required for the XDK. 
// When compiling with the xb1gdk, set this value to false to allow XboxOne clients to connect properly.  (Has no affect on non-xone platforms.)
xboxOneRequiresXboxClientAddress = false;

// Trusted networks for dedicated servers.
// Redefine in <env>.boot for finer control over environment access
// Information on IP Addresses and Subnet: https://developer.ea.com/display/blaze/IP+addresses+explained
#ifndef DEDICATED_SERVER_NETWORKS
// FIFA SPECIFIC CODE START
#define DEDICATED_SERVER_NETWORKS "\"37.188.107.4\", \"46.38.181.0/24\", \"46.38.176.0/24\", \"69.20.119.0/24\", \"94.236.127.0/24\", \"159.153.98.60/31\", \"159.153.109.43\", \"159.153.239.0/24\", \"173.203.141.0/28\", \"173.203.141.23\", \"173.203.141.24\", \"173.203.181.21\", \"180.150.130.0/24\", \"216.65.112.68\", \"34.243.140.113\", \"54.227.81.27\", \"63.33.27.176\", \"52.36.233.151\", \"52.211.95.220\", \"52.37.163.50\", \"52.28.183.92\", \"20.46.154.13\", \"3.89.36.64\", \"34.216.252.194\",\"3.127.47.2\",\"3.127.47.3\",\"3.127.47.4\",\"44.234.22.0\",\"44.234.22.1\",\"44.234.22.2\""
// FIFA SPECIFIC CODE END
#endif

// FIFA SPECIFIC CODE START
//If you wish to have emails sent to you on alert events, modify the comma separated list of emails below
#ifndef GAMETEAM_ALERT_MAIL
#define GAMETEAM_ALERT_MAIL "pcarswell@ea.com,ktse@ea.com,ikoun@ea.com"
#endif
// FIFA SPECIFIC CODE END

// 1st Party/External Sessions and User Profiles. Only required for platforms using them.
// For PS4 and PS5, _EXTERNAL_SESSION_SERVICE_LABEL is the title's service label number, which each title requests from EA/Ops, to enable their Blaze Server's PSN S2S calls. See Blaze PS4 and PS5 docs.
// For Xbox, XONE_TITLEID can be decimal or hexadecimal. If hexadecimal, must be prefixed with '0x'. For PS4, TITLEID is sent from the client (formated like NPXX52039_00).

// xone/xbox series x
// FIFA SPECIFIC CODE START
#if (PLATFORM == "xone")
    #define XONE_SCID "00000000-0000-0000-0000-00006bc4e0f7"
    #define XONE_TITLEID "1808064759"
#else
    #define XONE_SCID "00000000-0000-0000-0000-00007edfaf9f"
    #define XONE_TITLEID "0x7EDFAF9F"
#endif
#define XONE_SESSION_TEMPLATE_NAME_LIST "\"OTP\", \"COOP\""
// FIFA SPECIFIC CODE END
#define XONE_EXTERNAL_SESSION_INVITE_PROTOCOL "game"
#define XONE_PRIMARY_EXTERNAL_SESSION_TYPE_LIST "\"GAME_TYPE_GAMESESSION\", \"GAME_TYPE_GROUP\""

//ps4
//For PS4 titles must set this to be their own EA/Ops-assigned number, once they know it (0 is for Blaze's test sample only):
// FIFA SPECIFIC CODE START
#define PS4_EXTERNAL_SESSION_SERVICE_LABEL 48
// FIFA SPECIFIC CODE END
#define PS4_PRIMARY_EXTERNAL_SESSION_TYPE_LIST "\"GAME_TYPE_GAMESESSION\", \"GAME_TYPE_GROUP\""
// FIFA SPECIFIC CODE START
#define PS4_EXTERNAL_SESSION_IMAGE_DEFAULT "../etc/ps4/kettleinvite.jpg"
// FIFA SPECIFIC CODE END

// there's no Origin/PC presence session available s2s, but it would go here

//ps5
//For PS5, titles must set the service labels to be their own EA/Ops-assigned numbers, once they know them (0 and 1 are for Blaze's test sample only).
#define PS5_EXTERNAL_SESSION_SERVICE_LABEL 11
#define PS5_PRIMARY_EXTERNAL_SESSION_TYPE_LIST "\"GAME_TYPE_GAMESESSION\", \"GAME_TYPE_GROUP\""
#define PS5_MATCHES_SERVICE_LABEL 7

// Set this to true only if title enables invites and 1st party sessions to work crossgen across PS4 and PS5 (using Sony's Cross Gen SDK):
#ifndef PSN_EXTERNAL_SESSION_XGEN_ENABLED
    #define PSN_EXTERNAL_SESSION_XGEN_ENABLED "false"
#endif
// PS4's service label should equal PS5's if using crossgen:
#if PSN_EXTERNAL_SESSION_XGEN_ENABLED == "true"
    #define PS4_EXTERNAL_SESSION_SERVICE_LABEL PS5_EXTERNAL_SESSION_SERVICE_LABEL
#endif

// This allows optional team names that Blaze TeamIds map to, for display in shell UX on PS5.
// E.g. #define TEAMNAME_BY_TEAMID_MAP "0=\"Liverpool\", 1=\"Man. United\", 2=\"Real Madrid\", 3=\"Barcelona\", 4=\"A.C. Milan\""
//#define TEAMNAME_BY_TEAMID_MAP "0=\"Liverpool\", 1=\"Man. United\", 2=\"Real Madrid\", 3=\"Barcelona\", 4=\"A.C. Milan\""
#define TEAMNAME_BY_TEAMID_MAP "0=\"Pro Club\", 1=\"Pro Club\", 2=\"Seasons Club\", 3=\"Seasons Club\", 4=\"Friendlies Club\", 5=\"Friendlies Club\", 6=\"VOLTA Squad\", 7=\"VOLTA Squad\", 8=\"FUT Club\", 9=\"FUT Club\""


// FIFA SPECIFIC CODE START
#ifndef USE_PROD_NUCLEUS
    #define USE_PROD_NUCLEUS "false"
#endif

// Override FIFA SPECIFIC Nucleus SSL certs
#if (ENV == "prod" || USE_PROD_NUCLEUS == "true")
    #define NUCLEUSSSLCERT "NOTFORPROD"
    #define NUCLEUSSSLKEY "NOTFORPROD"
    #define NUCLEUSSSLKEYPASSWD "NOTFORPROD"
    #define NUCLEUSSSLDECRYPTKEY "NOTFORPROD"
#elif (ENV == "dev" || ENV == "test" || ENV == "cert")
#if (PLATFORM == "xone")
    #define NUCLEUSSSLCERT "NOTIMPLEMENTED"
    #define NUCLEUSSSLKEY "NOTIMPLEMENTED"
    #define NUCLEUSSSLKEYPASSWD "NOTIMPLEMENTED"
    #define NUCLEUSSSLDECRYPTKEY "NOTIMPLEMENTED"
#elif (PLATFORM == "xbsx")
    #define NUCLEUSSSLCERT "ssl/nucleus/FIFA22_BC_CGE_XBSX_BLZ_SERVER.client.int.eadp.ea.com.crt"
    #define NUCLEUSSSLKEY "ssl/nucleus/FIFA22_BC_CGE_XBSX_BLZ_SERVER.client.int.eadp.ea.com.pem"
    #define NUCLEUSSSLKEYPASSWD "y#8,G@osR6Pb"
    #define NUCLEUSSSLDECRYPTKEY "ssl/nucleus/FIFA22_BC_CGE_XBSX_BLZ_SERVER.client.int.eadp.ea.com.decrypt.key"
#elif (PLATFORM == "ps4")
    #define NUCLEUSSSLCERT "NOTIMPLEMENTED"
    #define NUCLEUSSSLKEY "NOTIMPLEMENTED"
    #define NUCLEUSSSLKEYPASSWD "NOTIMPLEMENTED"
    #define NUCLEUSSSLDECRYPTKEY "NOTIMPLEMENTED"
#elif (PLATFORM == "ps5")
    #define NUCLEUSSSLCERT "ssl/nucleus/FIFA22_BC_CGE_PS5_BLZ_SERVER.client.int.eadp.ea.com.crt"
    #define NUCLEUSSSLKEY "ssl/nucleus/FIFA22_BC_CGE_PS5_BLZ_SERVER.client.int.eadp.ea.com.pem"
    #define NUCLEUSSSLKEYPASSWD "x)6Xb|8H4KSC"
    #define NUCLEUSSSLDECRYPTKEY "ssl/nucleus/FIFA22_BC_CGE_PS5_BLZ_SERVER.client.int.eadp.ea.com.decrypt.key"
#elif (PLATFORM == "pc")
    #define NUCLEUSSSLCERT "NOTIMPLEMENTED"
    #define NUCLEUSSSLKEY "NOTIMPLEMENTED"
    #define NUCLEUSSSLKEYPASSWD "NOTIMPLEMENTED"
    #define NUCLEUSSSLDECRYPTKEY "NOTIMPLEMENTED"
#elif (PLATFORM == "stadia")
    #define NUCLEUSSSLCERT "NOTIMPLEMENTED"
    #define NUCLEUSSSLKEY "NOTIMPLEMENTED"
    #define NUCLEUSSSLKEYPASSWD "NOTIMPLEMENTED"
    #define NUCLEUSSSLDECRYPTKEY "NOTIMPLEMENTED"
#endif
#endif
// FIFA SPECIFIC CODE END

#if (ENV == "prod")
    #define STATSSERVICEHOST "fifa.internal.stats.gameservices.ea.com"
#endif

// Profanity Filtering Service
// Turn this to true if interested in using Social Profanity Filter Service. If false, blaze server in-built profanity filter is used.
#ifndef ENABLE_PROFANITY_SERVICE
    #define ENABLE_PROFANITY_SERVICE "false"
#endif

// If using profanity service, fill in the filter id obtained via onboarding from Profanity Service.
#ifndef PROFANITY_SERVICE_FILTER_ID 
    #define PROFANITY_SERVICE_FILTER_ID ""
#endif

// Hashicorp Vault

#ifndef VAULT_ENABLED
  #define VAULT_ENABLED "false"
#endif

#if VAULT_ENABLED == "true"

  // All clients of ESS, whether they be in production or non-prod environments use the main ESS cluster,
  // except when load testing, ESS does have an LT environment available at lt.ess.ea.com
  // Clients only point to the test ESS cluster during the development of Vault-specific functionality.
  #ifndef VAULT_HOST
    #define VAULT_HOST "https://ess.ea.com"
  #endif

  // Secret ids that Blaze uses to authenticate with Vault will typically be provided in raw form.
  // Only when Blaze is launched in the Cloud do we expect wrapped secrets to be passed in to Blaze for improved security.
  #ifndef VAULT_WRAPPED
    #define VAULT_WRAPPED "false"
  #endif

  // When Vault is enabled, this setting is used in framework.cfg to denote that
  // sslCert and sslKey elements contain the full certificate and key data
  #define SSL_CLIENT_PATH_TYPE "VAULT"

  #ifndef VAULT_SHARED_NAMESPACE
    #define VAULT_SHARED_NAMESPACE "false"
  #endif

  // Several Vault-related settings depend on whether Blaze is using a newer shared namespace,
  // or a title-specific namespace.
  #if VAULT_SHARED_NAMESPACE == "true"

    #if (ENV == "prod")
      #define VAULT_NAMESPACE "eadp-prod"
    #else
      #define VAULT_NAMESPACE "eadp-np"
    #endif

    #define SSL_PATH_TYPE "VAULT_SHARED"

    #define VAULT_APPROLE_PATH "auth/approle-blaze"

    #define VAULT_DBA_BASE "secrets/dba/data"
    #define VAULT_CERTS_BASE "secrets/certs/data"
    #define VAULT_TELEMETRY_BASE "secrets/appkeys/data"
    #define VAULT_CLIENT_CREDS_BASE "secrets/creds/data"

    // The Vault path to server certs/keys will differ from the traditional disk location,
    // note that it is by design that the external and internal paths look identical to each other,
    // Blaze will append the appropriate external or internal hostname to the path when ultimately
    // fetching the data from Vault
    #define SSL_KEY "#VAULT_CERTS_BASE#/blaze/common/server/external"
    #define SSL_CERT "#VAULT_CERTS_BASE#/blaze/common/server/external"
    #define INTERNAL_SSL_KEY "#VAULT_CERTS_BASE#/blaze/common/server/internal"
    #define INTERNAL_SSL_CERT "#VAULT_CERTS_BASE#/blaze/common/server/internal"

    #define VAULT_PATH_PIN "#VAULT_TELEMETRY_BASE#/telemetry/#VAULT_ROLE_ID#/blaze"
    #define VAULT_PATH_DB "#VAULT_DBA_BASE#/blaze/#VAULT_ROLE_ID#"
    #define VAULT_PATH_SSL_NUCLEUS "#VAULT_CERTS_BASE#/identity/#VAULT_ROLE_ID#/blaze/#NUCLEUS_CLIENT_ID#"
    #define VAULT_PATH_SSL_TOS "#VAULT_CERTS_BASE#/blaze/common/client/tos"
    #ifdef SANDBOXID
      #define VAULT_PATH_SSL_XBL "#VAULT_CERTS_BASE#/blaze/common/client/xbl/#SANDBOXID#"
    #endif

  #else

    // The default namespace eadp-gs-blaze-dev contains the stock secrets appropriate for running
    // a vanilla Blaze instance.  Every title will require at least two namespaces of their own,
    // one for production, and one or more for all other environments.
    #ifndef VAULT_NAMESPACE
      #if (ENV == "prod")
        #define VAULT_NAMESPACE "Contact-GS-Ops-for-ESS-prod-namespace-setup"
      #else
        #define VAULT_NAMESPACE "Contact-GS-Ops-for-ESS-np-namespace-setup"
      #endif
    #endif

    // Typically each Blaze host in deployed environments will have its own server cert and key,
    // the default VAULT_HOSTNAME setting instructs Blaze to load a hostname-specific cert/key from Vault.
    // However, this can be overridden by setting the path type to VAULT_SHARED, either if a wildcard
    // cert can be used by the whole Blaze cluster, or when running locally and a dummy cert suffices
    #ifndef SSL_PATH_TYPE
      #define SSL_PATH_TYPE "VAULT_HOSTNAME"
    #endif

    #ifndef VAULT_ROLE_ID
      #define VAULT_ROLE_ID "#BLAZE_SERVICE_NAME_DEFAULT#"
    #endif

    #ifndef VAULT_ROOT
      #define VAULT_ROOT "#VAULT_ROLE_ID#"
    #endif

    #define VAULT_APPROLE_PATH "auth/approle"

    // By default each ESS Vault namespace has a Key Value version 2 engine
    // mounted at secrets/kv, and all secret data is stored within the data directory
    #define VAULT_KV2_PATH "secrets/kv/data"
    #define VAULT_PATH "#VAULT_KV2_PATH#/#VAULT_ROOT#"

    // The Vault path to server certs/keys will differ from the traditional disk location,
    // note that it is by design that the external and internal paths look identical to each other,
    // Blaze will append the appropriate external or internal hostname to the path when ultimately
    // fetching the data from Vault
    #define SSL_KEY "#VAULT_PATH#/ssl/server"
    #define SSL_CERT "#VAULT_PATH#/ssl/server"
    #define INTERNAL_SSL_KEY "#VAULT_PATH#/ssl/server"
    #define INTERNAL_SSL_CERT "#VAULT_PATH#/ssl/server"

    #define VAULT_PATH_PIN "#VAULT_PATH#/pin"
    #define VAULT_PATH_DB "#VAULT_PATH#"
    #define VAULT_DBNAME "#ENV#/db"
    #define VAULT_PATH_SSL_NUCLEUS "#VAULT_PATH#/ssl/client/nucleus"
    #define VAULT_PATH_SSL_TOS "#VAULT_PATH#/ssl/client/tos"
    #ifdef SANDBOXID
      #define VAULT_PATH_SSL_XBL "#VAULT_PATH#/ssl/client/xbl/#SANDBOXID#"
    #endif

  #endif

  // Vault secret id can be thought of as Blaze's 'password' to authenticate itself with Vault.
  // In the Cloud, the secret id is expected to be passed in (and should be wrapped in a one-time wrapping token).
  // In deployments outside the cloud, the secret id will typically be included from a file stored
  // in the same area where SSL server certs/keys have traditionally been stored.
  // When Blaze is run locally, developers will typically place their secret in etc/secretid.cfg and that
  // path is defined in local.boot
  #ifndef VAULT_SECRET_ID
    #ifndef VAULT_SECRET_PATH
      #define VAULT_SECRET_PATH "/home/gos-ops/cert/#VAULT_ROLE_ID#/secretid.cfg"
    #endif

    #include "#VAULT_SECRET_PATH#"
  #endif

#else

  #define VAULT_HOST ""
  #define VAULT_NAMESPACE ""
  #define VAULT_WRAPPED "false"
  #define VAULT_APPROLE_PATH ""

  // When Vault is not enabled, this setting is used in ssl.cfg to denote that key and cert paths are local disk paths
  #define SSL_PATH_TYPE "LOCAL_DISK"

  // When Vault is not enabled, this setting is used in framework.cfg to denote that
  // sslCert and sslKey elements are local disk paths
  #define SSL_CLIENT_PATH_TYPE "LOCAL_DISK"

  // Since Vault is disabled, simply set the role id to empty string
  #define VAULT_ROLE_ID ""

  // Since Vault is disabled, simply set the secret to empty string
  #define VAULT_SECRET_ID ""

  #define VAULT_PATH_PIN ""
  #define VAULT_PATH_DB ""
  #define VAULT_PATH_SSL_NUCLEUS ""
  #define VAULT_PATH_SSL_TOS ""
  #define VAULT_PATH_SSL_XBL ""

#endif

#define VAULT_APICONNCOUNT 1

// DBs
#ifndef ARSON_DB_ALIAS
#define ARSON_DB_ALIAS "main"
#endif

#ifndef ASSOCIATIONLIST_DB_ALIAS
#define ASSOCIATIONLIST_DB_ALIAS "main"
#endif

#ifndef CLUBS_DB_ALIAS
#define CLUBS_DB_ALIAS "main"
#endif

#ifndef DYNAMIC_INET_FILTER_DB_ALIAS
#define DYNAMIC_INET_FILTER_DB_ALIAS "main"
#endif

#ifndef GAMEMANAGER_DB_ALIAS
#define GAMEMANAGER_DB_ALIAS "main"
#endif

#ifndef GAMEREPORTING_DB_ALIAS
#define GAMEREPORTING_DB_ALIAS "main"
#endif

#ifndef GDPR_DB_ALIAS
#define GDPR_DB_ALIAS "main"
#endif

#ifndef LEADERBOARDS_DB_ALIAS
#define LEADERBOARDS_DB_ALIAS "main"
#endif

#ifndef LOGGING_DB_ALIAS
#define LOGGING_DB_ALIAS "main"
#endif

#ifndef MESSAGING_DB_ALIAS
#define MESSAGING_DB_ALIAS "main"
#endif

#ifndef STATS_DB_ALIAS
#define STATS_DB_ALIAS "main"
#endif

#ifndef TASKSCHEDULER_DB_ALIAS
#define TASKSCHEDULER_DB_ALIAS "main"
#endif

#ifndef USERSESSIONS_DB_ALIAS
#define USERSESSIONS_DB_ALIAS "main" 
#endif

#ifndef UNIQUEID_DB_ALIAS
#define UNIQUEID_DB_ALIAS "main"
#endif

#ifndef UTIL_DB_ALIAS
#define UTIL_DB_ALIAS "main"
#endif

#ifndef CCS_POOL
#define CCS_POOL "global"
#endif

// Title TTS (Narration) url and key. Game teams must provide their own url and key for Waston in PROD and TEST.
// Please contact GS-DirtySock Support for account setup
#ifndef TITLE_VOIPNARRATE_KEY
#define TITLE_VOIPNARRATE_KEY "HCq5EZk0PVPWGfV9YKmkDaeEGOXBdYBmfzwCXH88QhxL"
#endif

#ifndef TITLE_VOIPNARRATE_URL
#define TITLE_VOIPNARRATE_URL "https://api.us-east.text-to-speech.watson.cloud.ibm.com/instances/23f59e3a-f286-41b7-a1fe-388521677876/v1/synthesize"
#endif

// Title STT (Transcription) url snd key. Game teams must provide their own url and key for Waston in PROD and TEST.
// Please contact GS-DirtySock Support for account setup
#ifndef TITLE_VOIPTRANSCRIBE_KEY
#define TITLE_VOIPTRANSCRIBE_KEY "8IY9Q5F6MFCzVPHaQTNy4pknbxAAchCGMvpZhPnyUT0q"
#endif

#ifndef TITLE_VOIPTRANSCRIBE_URL
#define TITLE_VOIPTRANSCRIBE_URL "wss://api.us-east.speech-to-text.watson.cloud.ibm.com/instances/02525db9-4819-4f80-9ffa-346d8b46903c/v1/recognize"
#endif

// Telemetry server domain defines
#define BLAZE_TELEMETRY_DOMAIN "#PLATFORM#/#BLAZE_SERVICE_NAME_DEFAULT#"
#define COMMON_TELEMETRY_DOMAIN "common/#COMMON_SERVICE_NAME_DEFAULT#"
#define PC_TELEMETRY_DOMAIN "pc/#PC_SERVICE_NAME_DEFAULT#"
#define XONE_TELEMETRY_DOMAIN "xone/#XONE_SERVICE_NAME_DEFAULT#"
#define XBSX_TELEMETRY_DOMAIN "xbsx/#XBSX_SERVICE_NAME_DEFAULT#"
#define PS4_TELEMETRY_DOMAIN "ps4/#PS4_SERVICE_NAME_DEFAULT#"
#define PS5_TELEMETRY_DOMAIN "ps5/#PS5_SERVICE_NAME_DEFAULT#"
#define NX_TELEMETRY_DOMAIN "nx/#NX_SERVICE_NAME_DEFAULT#"
#define IOS_TELEMETRY_DOMAIN "ios/#IOS_SERVICE_NAME_DEFAULT#"
#define ANDROID_TELEMETRY_DOMAIN "android/#ANDROID_SERVICE_NAME_DEFAULT#"
#define STEAM_TELEMETRY_DOMAIN "steam/#STEAM_SERVICE_NAME_DEFAULT#"
#define STADIA_TELEMETRY_DOMAIN "stadia/#STADIA_SERVICE_NAME_DEFAULT#"


#ifndef VERIFY_AUTH_SOURCE
    #define VERIFY_AUTH_SOURCE "true"
#endif