// Defines the TDF classes used in the FIFA game reporting component
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp

namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  Fifa namespace for game reporting
//
//  Submitted report TDFs. 
namespace Fifa
{

[
    tdfid = "hash",
    description = "Common PlayerReport TDF",
    details = "This is FIFA common player report to be used by various online game mode"
]

class CommonDetailReport
{
    [tag="ptaw", description="penaltiesAwarded"]
    uint16_t penaltiesAwarded;
	
    [tag="ptsc", description="penaltiesScored"]
    uint16_t penaltiesScored;
	
    [tag="ptsv", description="penaltiesSaved"]
    uint16_t penaltiesSaved;
	
    [tag="ptms", description="penaltiesMissed"]
    uint16_t penaltiesMissed;
	
    [tag="agpl", description="averagePossessionLength"]
    uint16_t averagePossessionLength;
	
    [tag="psit", description="passesIntercepted"]
    uint16_t passesIntercepted;
	
    [tag="ftnt", description="averageFatigueAfterNinety"]
    uint16_t averageFatigueAfterNinety;
	
    [tag="ijrd", description="injuriesRed"]
    uint16_t injuriesRed;
	
};

class ObjectiveStatsReport
{
    [tag="ogoa", description="Objective goals"]
    uint16_t goals;
	
    [tag="oass", description="Objective assists"]
    uint16_t assists;
	
    [tag="osog", description="Objective shotsOnGoal"]
    uint16_t shotsOnGoal;

    [tag="oplg", description="Objective penaltyGoals"]
    uint16_t penaltyGoals;

    [tag="ofkg", description="Objective freekickGoals"]
    uint16_t freekickGoals;

    [tag="ohdg", description="Objective headerGoals"]
    uint16_t headerGoals;

    [tag="opac", description="Objective passCompleted"]
    uint16_t passesCompleted;

    [tag="otpc", description="Objective teamPassCompleted"]
    uint16_t teamPassesCompleted;
	
    [tag="odrc", description="Objective dribblesCompleted"]
    uint16_t dribblesCompleted;

    [tag="otdc", description="Objective teamDribblesCompleted"]
    uint16_t teamDribblesCompleted;
	
    [tag="ocrc", description="Objective crossesCompleted"]
    uint16_t crossesCompleted;
	
    [tag="okyp", description="Objective keyPasses"]
    uint16_t keyPasses;
	
    [tag="osoo", description="Objective successfulOneOnOnes"]
    uint16_t successfulOneOnOnes;
	
    [tag="obks", description="Objective blocks"]
    uint16_t blocks;
	
    [tag="oint", description="Objective intercepts"]
    uint16_t intercepts;

    [tag="otak", description="Objective tackles"]
    uint16_t tackles;

    [tag="otta", description="Objective teamTackles"]
    uint16_t teamTackles;

    [tag="ohdc", description="Objective headersCompleted"]
    uint16_t headersCompleted;

    [tag="osav", description="Objective saves"]
    uint16_t saves;

    [tag="opsg", description="Objective penaltiesSavedByGK"]
    uint16_t penaltiesSavedByGK;
	
};

class CommonPlayerReport
{
    [tag="goal", description="Player goals count"]
    uint16_t goals;
    
    [tag="owgl", description="Player own goals count"]
    uint16_t ownGoals;
	
    [tag="pkgl", description="Player penalty goals count"]
    uint16_t pkGoals;
	
    [tag="psct", description="Player possession count"]
    uint16_t possession;
	
    [tag="cass", description="Player assist count"]
    uint16_t assists;
    
    [tag="csho", description="Player shot count"]
    uint16_t shots;
    
    [tag="shgl", description="Player shot on goal count"]
    uint16_t shotsOnGoal;
	
    [tag="cpsa", description="Player pass attempt count"]
    uint16_t passAttempts;
    
    [tag="cpsm", description="Player pass made count"]
    uint16_t passesMade;

    [tag="intc", description="Player interceptions count"]
    uint16_t interceptions;
    
    [tag="ctka", description="Player tackle attempt count"]
    uint16_t tackleAttempts;
    
    [tag="ctkm", description="Player tackle made count"]
    uint16_t tacklesMade;
    
    [tag="crat", description="Player rating"]
    float rating;
    
    [tag="cglc", description="Player goals conceded count"]
    uint16_t goalsConceded;
    
    [tag="csav", description="Player save count"]
    uint16_t saves;
	
    [tag="foul", description="Player fouls count"]
    uint16_t fouls;

    [tag="ywcd", description="Player yellow cards count"]
    uint16_t yellowCard;
	
    [tag="rdcd", description="Player read cards count"]
    uint16_t redCard;
	
    [tag="corn", description="Player corners count"]
    uint16_t corners;
	
    [tag="offs", description="Player offsides count"]
    uint16_t offsides;
    
    [tag="unsc", description="unadjusted score"]
    uint16_t unadjustedScore;

    [tag="motm", description="Is Man of the Match in Team"]
    uint8_t hasMOTM;

    [tag="clsh", description="Clean Sheets"]
    uint8_t hasCleanSheets;
	
    ///////////////////////////////////////////////////////////////////////////////
    // Common Player Detailed Report
    ///////////////////////////////////////////////////////////////////////////////
    [tag="cpdr", description="Variable common player detailed TDF report."]
    Blaze::GameReporting::Fifa::CommonDetailReport commondetailreport;
};


} // namespace Fifa
} // namespace GameReporting
} // namespace Blaze
