<?xml version="1.0"?>
<example>
<para>An example of to use the <c>${link.template.commandline}</c> property to customize the linker command line.</para>
<code file="Hello.build">
<![CDATA[
<project default="build">
    <package name="Hello" />
    <dependent name="VisualStudio" version="7.1.1-4"/>
    
    <property name="link.options">
        -subsystem:CONSOLE
    </property>

    <!-- 
        Notice how the -out: option has been removed from the link.options property and
        is now directly part of the link.commandline.  This is a made up example but with
        it shows you how you can wrap, say the libraries with options needed by gcc.
    -->
    <property name="link.template.commandline">
        %options% 
        -out:"%outputdir%/%outputname%.exe" 
        %librarydirs% 
        %libraryfiles% 
        %objectfiles%
    </property> '/>

    <target name="build">
        <cc outputname="${package.name}" outputdir="${package.dir}/build">
            <sources>
                <includes name="hello.c"/>
            </sources>
        </cc>
        <link outputname="${package.name}" outputdir="${package.dir}/build">
            <objects>
                <includes name="${package.dir}/build/hello.c.obj"/>
            </objects>
        </link>
        <fail message="Program did not link" unless="@{FileExists('${package.dir}/build/hello.exe')}"/>
    </target>
</project>
]]>
</code>
<para>Where <c>hello.c</c> contains:</para>
<code file="hello.c">
<![CDATA[
#include <stdio.h>

void main()
{
    printf("Hello, World!\n");
}
]]>
</code>
</example>
