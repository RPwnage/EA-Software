// Defines the TDF classes used in the useractivitytracker component.
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp
[headername="useractivitytracker/tdf/useractivitytrackertypes.h"]
#include "useractivitytracker/gen/useractivitytrackertypes.tdf"

namespace Blaze
{
	namespace UserActivityTracker
	{

		enum ActivityTrackerTypeKeyScope
		{
			ACTIVITY_TRACKER_TYPE_CURRENT = 1,
			ACTIVITY_TRACKER_TYPE_PREV_WEEK,
			ACTIVITY_TRACKER_TYPE_PREV_WEEK_2,
			ACTIVITY_TRACKER_TYPE_ACCUMULATED,
			ACTIVITY_TRACKER_TYPE_TOTAL,
			ACTIVITY_TRACKER_MAX
		};

		enum ActivityModeTypeKeyScope
		{
			ACTIVITY_MODE_TYPE_ONLINE = 1,
			ACTIVITY_MODE_TYPE_OFFLINE,
			ACTIVITY_MODE_TYPE_AGGREGATE,
			ACTIVITY_MODE_TYPE_MAX
		};

		[
			description = "The configuration object for the useractivitytracker component",
			details = "This class represents the schema for all the configuration parameters for the useractivitytracker component.."
		]
		class UserActivityTrackerConfig
		{ 
			[tag="kill", description = "kill switch to disable user activity logging", reconfigurable="yes"]
			bool mKillswitchEnabled;	

			[tag="stca", description = "stats category for user activity tracker", reconfigurable="yes"]
			string(64) mStatsCategory;

			[tag="stti", description = "stats name for tracking time played", reconfigurable="yes"]
			string(32) mStatsTime;

			[tag="stgm", description = "stats name for tracking games played", reconfigurable="yes"]
			string(32) mStatsGames;

			[tag="strn", description = "stats name for roll over number", reconfigurable="yes"]
			string(32) mRollOverNumber;

			[tag="strc", description = "stats name for roll over counter", reconfigurable="yes"]
			string(32) mRollOverCounter;

			[tag="prty", description = "period type of the stats category", reconfigurable="yes"]
			int32_t mPeriodType;	

			[tag="ropd", description = "period type of the roll over", reconfigurable="yes"]
			int32_t mRollOverPeriod;

			[tag="rlhr", description = "if rollover period is daily, rollover hourly", reconfigurable="yes"]
			bool mRollOverHourly;	

			[tag="ksat", description = "keyscope name for activity types", reconfigurable="yes"]
			string(64) mActivityTypeKeyscopeName;

			[tag="ksmt", description = "keyscope name for mode types", reconfigurable="yes"]
			string(64) mActivityModeKeyscopeName;

			[tag="opst", description = "optin setting name in EADP Stats", reconfigurable="yes"]
			string(32) mOptinConigSettingName;

			[tag="carl", description = "trigger a rollover calculation on login", reconfigurable="yes"]
			bool mCalculateRolloverOnLogin;	

			[tag="pacl", description = "parental controls link", reconfigurable="yes"]
			string(128) mParentalControlsLink;

			[tag="plcl", description = "player controls link", reconfigurable="yes"]
			string(128) mPlayerControlsLink;

			[tag="prsg", description = "privacy settings link", reconfigurable="yes"]
			string(128) mPrivacySettingsLink;
		};
	
		class GetConfigResponse
		{
			[tag="cfg", description="UserActivityTracker server config TDF"]
			UserActivityTrackerConfig mConfig;
		};

	} // UserActivityTracker
} // Blaze



