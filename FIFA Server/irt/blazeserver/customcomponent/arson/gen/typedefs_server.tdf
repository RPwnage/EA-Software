// Typedefs for testing the type compiler.

namespace Blaze
{
namespace Arson
{
namespace TypedefTest
{

enum E
{
    ONE
};

bitfield B
{
    One : 1;
};

class C
{
    [tag="val"] uint32_t mVal;
};

typedef int32_t                 NamespaceInt;
typedef string(8)               NamespaceString;
typedef blob                    NamespaceBlob;
typedef E                       NamespaceEnum;
typedef B                       NamespaceBitfield;
typedef C                       NamespaceClass;
typedef list<NamespaceInt>      NamespaceListInt;
typedef list<NamespaceEnum>     NamespaceListEnum;
typedef list<NamespaceBitfield> NamespaceListBitfield;
typedef list<NamespaceClass>    NamespaceListClass;

class Outer
{
    typedef NamespaceInt        OuterInt;
    typedef NamespaceString     OuterString;
    typedef NamespaceBlob       OuterBlob;
    typedef NamespaceEnum       OuterEnum;
    typedef NamespaceBitfield   OuterBitfield;
    typedef NamespaceClass      OuterClass;
    typedef list<OuterInt>      OuterListInt;
    typedef list<OuterClass>    OuterListClass;
    typedef list<OuterEnum>     OuterListEnum;
    typedef list<OuterBitfield> OuterListBitfield;
    
    class Inner
    {
        typedef OuterInt            InnerInt;
        typedef OuterString         InnerString;
        typedef OuterBlob           InnerBlob;
        typedef OuterEnum           InnerEnum;
        typedef OuterBitfield       InnerBitfield;
        typedef OuterClass          InnerClass;
        typedef list<InnerInt>      InnerListInt;
        typedef list<InnerClass>    InnerListClass;
        typedef list<InnerEnum>     InnerListEnum;
        typedef list<InnerBitfield> InnerListBitfield;
        
        [tag="ni"  ] NamespaceInt             mNamespaceInt;
        [tag="ns"  ] NamespaceString          mNamespaceString;
        [tag="nl"  ] NamespaceBlob            mNamespaceBlob;
        [tag="ne"  ] NamespaceEnum            mNamespaceEnum;
        [tag="nb"  ] NamespaceBitfield        mNamespaceBitfield;
        [tag="nc"  ] NamespaceClass           mNamespaceClass;
        [tag="nil" ] NamespaceListInt         mNamespaceListInt;
        [tag="nel" ] NamespaceListEnum        mNamespaceListEnum;
        [tag="nbl" ] NamespaceListBitfield    mNamespaceListBitfield;
        [tag="ncl" ] NamespaceListClass       mNamespaceListClass;
        
        [tag="oi"  ] OuterInt             mOuterInt;
        [tag="os"  ] OuterString          mOuterString;
        [tag="oe"  ] OuterEnum            mOuterEnum;
        [tag="ob"  ] OuterBitfield        mOuterBitfield;
        [tag="oc"  ] OuterClass           mOuterClass;
        [tag="oil" ] OuterListInt         mOuterListInt;
        [tag="oel" ] OuterListEnum        mOuterListEnum;
        [tag="obl" ] OuterListBitfield    mOuterListBitfield;
        [tag="ocl" ] OuterListClass       mOuterListClass;
        
        [tag="ii"  ] InnerInt             mInnerInt;
        [tag="is"  ] InnerString          mInnerString;
        [tag="ie"  ] InnerEnum            mInnerEnum;
        [tag="ib"  ] InnerBitfield        mInnerBitfield;
        [tag="ic"  ] InnerClass           mInnerClass;
        [tag="iil" ] InnerListInt         mInnerListInt;
        [tag="iel" ] InnerListEnum        mInnerListEnum;
        [tag="ibl" ] InnerListBitfield    mInnerListBitfield;
        [tag="icl" ] InnerListClass       mInnerListClass;
        
        [tag="lil" ] list<int32_t> mLiteralListInt;
        [tag="lel" ] list<E>       mLiteralListEnum;
        [tag="lbl" ] list<B>       mLiteralListBitfield;
        [tag="lcl" ] list<C>       mLiteralListClass;
        
        [tag="lnil"] list<NamespaceInt>      mLiteralNamespaceListInt;
        [tag="lnel"] list<NamespaceEnum>     mLiteralNamespaceListEnum;
        [tag="lnbl"] list<NamespaceBitfield> mLiteralNamespaceListBitfield;
        [tag="lncl"] list<NamespaceClass>    mLiteralNamespaceListClass;
        
        [tag="loil"] list<OuterInt>      mLiteralOuterListInt;
        [tag="loel"] list<OuterEnum>     mLiteralOuterListEnum;
        [tag="lobl"] list<OuterBitfield> mLiteralOuterListBitfield;
        [tag="locl"] list<OuterClass>    mLiteralOuterListClass;
        
        [tag="liil"] list<InnerInt>      mLiteralInnerListInt;
        [tag="liel"] list<InnerEnum>     mLiteralInnerListEnum;
        [tag="libl"] list<InnerBitfield> mLiteralInnerListBitfield;
        [tag="licl"] list<InnerClass>    mLiteralInnerListClass;
    };
};

}
}
}
