// Defines the TDF classes used in the fifacups component
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp

[headername="framework/tdf/entity.h"]
#include "framework/gen/entity.tdf"

[headername="stats/tdf/stats.h"]
#include "stats/gen/stats.tdf"

namespace Blaze
{
namespace EASFC
{
    typedef EntityId MemberId;
    typedef int64_t TimeStamp;
    const uint32_t STATS_STATVALUE_LENGTH = 256;
    const uint32_t STATS_STATNAME_LENGTH = 30;

    enum MemberType
    {
        EASFC_MEMBERTYPE_USER = 1,
        EASFC_MEMBERTYPE_COOP_PAIR,
        EASFC_MEMBERTYPE_CLUB
    };
    
    [description="Request to grant a win in H2H Seaons"]
    class PurchaseGameRequest
    {
        [tag="mid", description="The entity id"]
        MemberId    mMemberId;
        
        [tag="mtyp", description="The type of Entity"]
        MemberType  mMemberType;
    }; 
    
    [description="String stat value." ]
    typedef string(STATS_STATVALUE_LENGTH) StatValue;
    
    [description="String stat name"]
    typedef string(STATS_STATNAME_LENGTH) StatName;
    
    [description="Map of stat column names and string value"]
    typedef map<StatName, StatValue> StatNameValueMapStr;
    
    [description="Map of stat column names and int value"]
    typedef map<StatName, int32_t> StatNameValueMapInt;

    [description="Class representing a NormalGameStats row"]
    class SetNormalGameStats
    {
        [tag="keys", description="The Keyscope values for normal game stats"]
        StatNameValueMapInt mNormalKeyScopes;

        [tag="snml", description="NormalGameStat data for a given row"]
        StatNameValueMapInt mNormalGameStats;
    };

    [description="Typedef of list of keyscopes for NormalGameStats and their values"]
    typedef list<SetNormalGameStats> NormalGameStatsList;
    
    [description="Request to set the Normal stat category"]
    class SetSeasonalPlayStatsRequest
    {
        [tag="mid", description="The entity id"]
        MemberId    mMemberId;
        
        [tag="mtyp", description="The type of Entity"]
        MemberType  mMemberType;
                
        [tag="ngsl", description="List of SetNormalGameStat objects describing a row"]
        NormalGameStatsList mNormalGameStats;

        [tag="sspo", description="Map of SPOvr stat values."] 
        StatNameValueMapInt mSPOValues;

        [tag="sspd", description="Map of SPDiv stat values."] 
        StatNameValueMapInt mSPDivValues;
    }; 

    [description="Request to set VPro stats"]
    class SetVProStatsRequest
    {
        [tag="mid", description="The entity id"]
        MemberId    mMemberId;
        
        [tag="mtyp", description="The type of Entity"]
        MemberType  mMemberType;

        [tag="stat", description="Map of stat values."] 
        StatNameValueMapStr mStatValues;

		[tag="ista", description="Map of stat values(int)."]
		StatNameValueMapInt mStatIntValues;
     };

	[description="Request to override VPro stats"]
    class OverrideVProStatsRequest
    {
        [tag="mid", description="The entity id"]
        MemberId    mMemberId;
        
        [tag="mtyp", description="The type of Entity"]
        MemberType  mMemberType;

        [tag="stat", description="Map of stat values."] 
        StatNameValueMapStr mStatValues;
     };
} // EASFC
} // Blaze



