[headername="preferencecenter/tdf/preferencecenter_base.h"]
#include "preferencecenter_base.tdf"

[headername="framework/tdf/userdefines.h"]
#include "framework/gen/userdefines.tdf"

namespace Blaze
{
namespace PreferenceCenter
{

// Typedefs
typedef string(MAX_EMAIL_LENGTH) EmailAddress;
typedef string(MAX_GEOCOUNTRY_LENGTH) CountryCode;
typedef string(64) UriString;
typedef string(64) Date;
typedef string(64) PreferenceName;
typedef AccountId PidId;
typedef uint64_t PreferenceUserId;
typedef uint64_t PreferenceId;
typedef list<PreferenceId> PreferenceIdList;
typedef list<UriString> PreferenceUriList;

class GetPreferenceByNameRequest
{
    [tag="tokn", description="The Nucleus access token to use for authentication"]
    string(512) mAccessToken;

	[tag="prnm", description="The String Name of the Preference"]
    PreferenceName mName;
};

class GetPreferenceByNameResponse
{
	[tag="prls", description="The list of preferences"]
	PreferenceUriList mPreferenceOrPreferenceUri;
};

class PreferenceIdListData
{
    [tag="pids", description="The list of preference ids"]
    PreferenceIdList mPreferenceIds;
};

class PutPreferenceUserByPidIdRequestData
{
    [tag="aprf", description="The selected preferences, does an incremental update"]
    PreferenceIdListData mAddedPreferences;
};

class PutPreferenceUserByPidIdRequest
{
    [tag="auth", description="The authentication credentials"]
    AuthenticationCredentials mAuthenticationCredentials;

    [tag="dboi", description="Double-Optin-Required", default=false]
    bool mIsDoubleOptInRequired;

    [tag="npid", description="The Nucleus Persona Id"]
	PidId mPidId;
	
    [tag="reqb", description="The request body of the HTTP message"]
    PutPreferenceUserByPidIdRequestData mRequestData;
};

class PreferenceUriListData
{
    [tag="puri", description="The list of the selected preference uris"]
    PreferenceUriList mPreferenceUris;
};

enum PreferenceUserStatus
{
    ACTIVE,
    PENDING
};

enum FrequencyType
{
    ANYTIME,
    WEEKLY,
    MONTHLY,
    QUARTERLY
};

class PreferenceUserResponseData
{
    [tag="puid", description="The id of the Preference User"]
    PreferenceUserId mId;

    [tag="nuri", description="The uri of the Preference User"]
    UriString mNucleusUserUri;

    [tag="emal", description="The email address of the Preference User"]
    EmailAddress mEmail;

    [tag="emlv", description="Whether the email address of the Preference User has been verified"]
    bool mEmailVerified;

    [tag="stts", description="The status of the Preference User"]
    PreferenceUserStatus mStatus;

    [tag="dob", description="The date of birth for the Preference User"]
    Date mDob;

    [tag="ctry", description="The country of residence for the Preference User"]
    CountryCode mCountry;

    [tag="regs", description="The registration source"]
    string(64) mRegistrationSource;

    [tag="gopt", description="The global opt-in state"]
    bool mGlobalOptin;

    [tag="gidt", description="The global opt-in date"]
    Date mGlobalOptinDate;

    [tag="godt", description="The global opt-out date"]
    Date mGlobalOptoutDate;

    [tag="topt", description="The third party opt-in state"]
    bool mThirdPartyOptin;

    [tag="freq", description="The frequency type"]
    FrequencyType mFrequency;

    [tag="odnd", description="The opt-down date"]
    Date mOptDownDate;

    [tag="creb", description="The entity that created the entry"]
    string(64) mCreatedBy;

    [tag="datc", description="The date that the entry was created"]
    Date mDateCreated;

    [tag="modb", description="The entity that modified the entry"]
    string(64) mModifiedBy;

    [tag="datm", description="The date that the entry was modified"]
    Date mDateModified;

    [tag="sprf", description="The selected preferences for the Preference User"]
    PreferenceUriListData mSelectedPreferences;

    [tag="dprf", description="The deselected preferences for the Preference User"]
    PreferenceUriListData mDeselectedPreferences;

};

class PutPreferenceUserByPidIdResponse
{
    [tag="pudt", description="The details of the Preference User"]
    PreferenceUserResponseData mPreferenceUser;
};

} // namepsace PreferenceCenter
} // namespace Blaze
