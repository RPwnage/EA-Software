namespace Blaze
{
namespace GameManager
{
// This namespace is used to avoid polluting the GameManager namepace with a bunch of generic terms
namespace GameAction
{
enum Actions
{   
    INVALID_ACTION = 0,
    ALL_ACTIONS, 

    ALL_ADMIN_ACTIONS, 
    START_OF_ADMIN_ACTIONS,

  // Game State Actions:
    INIT_GAME,
    START_GAME,
    END_GAME,
    RESET_GAME,
    REPLAY_GAME,
    DESTROY_GAME,

    MIGRATE_HOST,
    RETURN_DEDICATED_SERVER_TO_POOL,

  // Game Values:
    UPDATE_GAME_NAME,
    UPDATE_GAME_SETTINGS,
    UPDATE_GAME_TEAM_IDS,
    UPDATE_GAME_ATTRIBUTES,
    UPDATE_GAME_MOD_REGISTER,
    UPDATE_GAME_PRESENCE_MODE,
    UPDATE_GAME_ENTRY_CRITERIA,
    UPDATE_GAME_PLAYER_CAPACITY,
    
  // Game Actions with Players:
    KICK_PLAYERS,
    UPDATE_ADMIN_LIST,
    UPDATE_BANNED_PLAYERS,
    MANAGE_QUEUED_PLAYERS,
    RESERVE_PLAYERS_BY_USERLIST,   // Special option allowing admins to reserve players

    SET_OTHER_PLAYER_ATTRIBUTES,
    SET_OTHER_PLAYER_ROLE,
    SET_OTHER_PLAYER_SLOT_TYPE,
    SET_OTHER_PLAYER_TEAM_INDEX,
    SET_OTHER_PLAYER_CUSTOM_DATA,

  // Admin Check skipping: 
    ALLOW_JOIN_BY_INVITE,                 // allows joins by 'adminOnly' invites, if targetting this player.
    SKIP_ENTRY_CHECKS_BY_INVITE,
    SWAP_PLAYERS_SKIP_ROLE_ENTRY_CHECK,
    SWAP_PLAYERS_SKIP_SPECTATOR_ENTRY_CHECK,

// End of Admin-only actions:  (Used when setting the default actions if no permission config exists)    
    END_OF_ADMIN_ACTIONS,

    ALL_PLAYER_ACTIONS, 
    START_OF_PLAYER_ACTIONS,

  // Player Actions:
    SET_PLAYER_ATTRIBUTES,
    SET_PLAYER_ROLE,
    SET_PLAYER_SLOT_TYPE,
    SET_PLAYER_TEAM_INDEX,
    SET_PLAYER_CUSTOM_DATA,

    LEAVE_GAME, 
    LEAVE_GAME_BY_GROUP, 

    END_OF_PLAYER_ACTIONS,

};
}

}
}


