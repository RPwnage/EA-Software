#!/bin/bash

FW_VERSION=version
FW_DIR=../Framework/$FW_VERSION

if [ ! -f $FW_DIR/bin/nant.exe ]; then
    echo "Unable to locate nant.exe."
else
    MONO_PATH=mono

    # if the default mono fails, try finding another installed version
    ${MONO_PATH} $FW_DIR/bin/nant.exe -version > /dev/null
    if [ $? -ne 0 ]; then
        MONO_PATH=""
        foundmonos=`whereis -b mono | sed 's/^mono://g'`
        for next in $foundmonos
        do
            ${next} $FW_DIR/bin/nant.exe -version > /dev/null
            if [ $? -eq 0 ]; then
                MONO_PATH=${next}
                break
            fi
        done
        if [ "${MONO_PATH}" == "" ]; then
            echo "Failed to find a version of Mono runnable with $FW_DIR/bin/nant.exe. Note: framework 3 requires minimum Mono JIT compiler version 2.10.8."
            exit -1
        fi
    fi

    GCC_VERSION="gcc -v 2>&1 | tail -1"
    CMD_ECHO="${MONO_PATH} ${FW_DIR}/bin/nant.exe ${@} ..."
    CMD="${MONO_PATH} ${FW_DIR}/bin/nant.exe ${@} -masterconfigfile:unix-masterconfig.xml -D:config=unix64-gcc-dev-opt"

    FREE_MEM=$(free|awk '/\-\/\+ buffers\/cache/{print $4}')

    # Tune the cc.threadcount depending upon the free memory.
    # Limit: 1 threadcount per 3G of free memory.
    # We don't want to depend on the number of processors as compilation is RAM bound. 
    # Earlier, we only limited the thread count if we had less than 7 GB RAM (8 GB is our default VM RAM recommendation out of which 1 GB is taken by OS)
    # If free RAM was higher than 7 GB, Framework spawned the thread count equal to number of CPU cores.
    # However, if the VM has 8 processors and just 8 GB of RAM, we'd spawn 8 processes which each fight for the RAM and ultimately slow each other down 
    # due to constant virtual memory paging. 
    # So always limit parallel processes depending upon free memory.
    FREE_MEM_PER_THREAD=3072000
    THREAD_COUNT=4

    echo "Free Memory: ${FREE_MEM}. Setting cc/link.threadcount to ${THREAD_COUNT}"     
       
    CMD+=" -G:cc.threadcount=${THREAD_COUNT} -G:link.threadcount=${THREAD_COUNT}"
	
    # in order to use the new g++, enable devtoolset-2 if it exists
    exec $CMD
fi