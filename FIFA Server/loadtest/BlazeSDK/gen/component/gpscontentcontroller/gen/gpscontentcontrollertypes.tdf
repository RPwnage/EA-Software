[headername="framework/tdf/userdefines.h"]
#include "framework/gen/userdefines.tdf"

[headername="framework/tdf/attributes.h"]
#include "framework/gen/attributes.tdf"

namespace Blaze
{
[usePtrOption=true]
namespace GpsContentController
{

enum PetitionContentType
{
    CHAT,
    COMMENT,
    POST,
    VIDEO,
    IMAGE,
    AVATAR,
    NAME,
    STATUSMESSAGE
};

class FilePetitionRequest
{
    [tag="coid", description="Object id of content to file petition for"]
    ObjectId mContentId;
    
    [tag="subj", description="Subject"] 
    string(360) mSubject;

    [tag="coty", description="Complaint type"] 
    string(64) mComplaintType;
    
    [tag="trgt", description="Petition targets"]
    BlazeIdList mTargetUsers;
    
    [tag="ptde", description="Petition detail"] 
    string(360) mPetitionDetail;
    
    [tag="anvp", description="Attribute name/value pairs for a petition"] 
    Collections::AttributeMap attributeMap;
    
    [tag="tmzo", description="Time zone"] 
    string(12) mTimeZone;
    
    [tag="pnct", description="The type of the content that is being reported in the petition"]
    PetitionContentType mContentType;
};

class FilePetitionResponse
{
    [tag="guid", description="GUID of petition"] 
    string(36) mPetitionGuid;
};

class FetchContentRequest
{
    [tag="coid", description="Object id of content to fetch"]
    ObjectId mContentId;
};

class FetchContentResponse
{
    [tag="anvp", description="Attribute name/value pairs for a content"] 
    Collections::AttributeMap attributeMap;
    
    [tag="eurl", description="Optional external URL that points to actual content"] 
    string(1024) externalURL;
};

class ShowContentRequest
{
    [tag="coid", description="Object id of content to show or hide"]
    ObjectId mContentId;
    
    [tag="show", description="False if content should be hidden"]
    bool mShow;
};

} // Example
} // Blaze



