[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"


namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  Integrated Sample style reports
//
//      Submitted report TDFs. 
namespace IntegratedSample
{

[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Generic PlayerReport TDF that takes a variable TDF representing player data.",
    details = "This contains player and any other relevent data submitted by clients to game reporting.",
    trackChanges  = true
]
class PlayerReport
{    
    [tag="hits", description="player hits"]
        uint16_t hits;
    
    [tag="miss", description="player misses"]    
        uint16_t misses;
    
    [tag="trch", description="torchings"]
        uint16_t torchings;
    
    [tag="win", description="winner"]
        uint16_t winner;  
        
    [tag="lose", description="loser"]
        uint16_t loser;  
        
    [tag="scr", description="score"]
        uint16_t score;
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Game attributes for this report",
    details = "This contains the full game report, including client player reports and server-based data (data not submitted directly by clients.)",
    trackChanges  = true
]
class GameAttributes
{
    //  game attributes/stats
    [tag="map", description="game attribute to retrieve map name from"]
        int32_t mapId;
    [tag="mode", description="game attribute to retrieve mode from"]
        int32_t mode;
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Full GameReport including custom processor and derived data (i.e. from games or clubs)",
    details = "This contains the full game report, including client player reports and server-based data (data not submitted directly by clients.)",
    trackChanges  = true
]
class Report
{
    [tag="plyr", description="Player Reports"]
    map<GameManager::PlayerId, PlayerReport> playerReports;     
    
    [tag="game", description="Game Attributes"]
    GameAttributes gameAttrs;
    
    [tag="coop", description="Cooperative Result"]
    uint32_t coopResult;
};

} // namespace IntegratedSample


/////////////////////////////////////////////////////////////////////////////////////////


} // namespace GameReporting
} // namespace Blaze
