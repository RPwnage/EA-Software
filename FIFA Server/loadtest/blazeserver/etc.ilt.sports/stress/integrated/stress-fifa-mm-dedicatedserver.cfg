//
// Configuration file for the stress tester
//

// Define the connection and protocol parameters
connection-info = {
    protocol = fire2
    encoder = heat2
    decoder = heat2

    // Total number of connections to use
    num-connections = #NUM_CONNECTIONS#

    // Control whether SSL is used or not
    secure = #STRESS_SECURE#
}

//
//This following block controls how instances are started up.
//
startup = {
    //Number of instances to start up in a given pass
    //A block size of 0 will start all instances simultaneously
    
    // parser does not allow expressions in variable value 
    #define SERVER_NUCLEUS_POOL_SIZE_TIMES_INT #SERVER_NUCLEUS_POOL_SIZE# * 4
    block-size = #SERVER_NUCLEUS_POOL_SIZE_TIMES_INT#

    //Delay between starting instances in milliseconds
    instance-delay = #CONN_INSTANCE_DELAY#

    //Delay between starting blocks in milliseconds
    // parser does not allow expressions in variable value 
    #define SERVER_NUCLEUS_POOL_SIZE_INT #SERVER_NUCLEUS_POOL_SIZE# * 4 * #CONN_INSTANCE_DELAY#
    block-delay = #SERVER_NUCLEUS_POOL_SIZE_INT#
}

// 
// Define the account/authentication parameters used for account creation and authentication
// 
#include "../etc.ilt.sports/stress/stress-account.cfg"

//
// Define the list of stress modules that will be instantiated
//
modules = [ dedicatedserver ]

//
// Define how the available instances/connections are distributed amongst the different modules
//
distribution = {
    dedicatedserver = 1.0
}

#if PLATFORM == "common"
// define the distribution of platform types for available instances/connections used in shared cluster testing
platform-distribution = {
    pc = 1.0
    ps4 = 0.0
    xone = 0.0
}
#else
// define the specification of platform type for available instances/connections used in single platform testing
platform-specification = {
    platform = "#PLATFORM#"
}
#endif

//
// Configuration data specific to the dummy module
//
dedicatedserver = {
    pingPeriod_ms = #PING_PERIOD_MS#
    inactivityTimeout_ms = #INACTIVITY_TIMEOUT_MS#
    useServerQosSettings = #USE_SERVER_QOS#
    
#if PLATFORM == "common"
    clientPlatformListOverride = ["ps4", "xone", "pc"]
#endif
    
    // Define the number of milliseconds between RPC calls
    delay = 10000

    // Control whether instance needs to authenticate its user before issuing its configured
    // RPC calls.
    login = true
    logout = false
    opt_in_chance = 100
    waitActive = false
    initial-delay = 10
    clientType = CLIENT_TYPE_DEDICATED_SERVER
    
    //Define the Role Probability 
    DedicatedServerCreatorProbabilty = 100
    GameReseterProbability = 0

    //Network Topology
    ViopNetwork = VOIP_PEER_TO_PEER
    GameNetworkTopology = CLIENT_SERVER_DEDICATED
    
    // Define the Start Matchmaking settings
    MatchmakingTimeout = 10000
    GameProtocolVersionString = FIFA11_1.00
    RankedGameFitThresholdName = testDecay
    RankedGameRulePrefs = ABSTAIN
    GameSizeMinFitThresholdName = testDecay
    MinPlayerCount = 2
    MaxPlayerCount = 32
    DesiredGameSize = 2
    GameSizeIsSingleGroupMatch = false
    MaxDNFValue = 101
    HostBalancingFitThresholdName = matchAny
    HostViabilityFitThresholdName = hostViability
    PingSiteRangeOffsetListName = OSDK_matchRelax
    MatchmakerGameName = MatchmakerGame
    
    //Define the ResetDedicatedGame settings
    MaxPlayerCapacity = 32
    // Note: if useServerQosSettings is true, a random ping site from the blazeserver
    // qos settings is used instead of GamePingSiteAlias
    GamePingSiteAlias = bio-dub
    PublicSlotCapacity = 22
    PrivateSlotCapacity = 0
    // server requires no modes (worst case)
    GameModRegister = 0
    //Final Game name would be Game name plus increment values
    ResetDedicatedGameName = ResetDedicatedGame
    gameEndMode = RETURN_TO_POOL
    
    //Define the DSCreator Machine settings
    // huge - machine registration never expires
    DSCreatorMachineRegistrationLifespan = 4000000000
    DSCreatorMachineRegistrationLifespanDeviation = 0
    
    overrideUserGeoIpSampleDbFilename = "#GEOIP_SAMPLES_DB#"
}

