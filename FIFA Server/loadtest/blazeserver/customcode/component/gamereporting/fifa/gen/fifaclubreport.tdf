[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"

[headername="gamereporting/fifa/tdf/fifaseasonalplayreport.h"]
#include "gamereporting/fifa/gen/fifaseasonalplayreport.tdf"

[headername="gamereporting/fifa/tdf/fifacommonplayerreport.h"]
#include "gamereporting/fifa/gen/fifacommonplayerreport.tdf"

[headername="gamereporting/fifa/tdf/fifacommongamereport.h"]
#include "gamereporting/fifa/gen/fifacommongamereport.tdf"

namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  FIFA Club player report
//
//  Submitted report TDFs. 
namespace FifaClubReportBase
{

const uint32_t FIFA_MOM_MAX_LENGTH = 32;
//const uint32_t PLAYER_VPRO_MAX_NAME_LENGTH = 32;
//const uint32_t PLAYER_VPRO_MAX_POS_LENGTH = 16;
//const uint32_t PLAYER_VPRO_MAX_STYLE_LENGTH = 16;
//const uint32_t PLAYER_VPRO_MAX_HEIGHT_LENGTH = 16;
//const uint32_t PLAYER_VPRO_MAX_NATIONALITY_LENGTH = 16;
//const uint32_t PLAYER_VPRO_MAX_OVERALL_LENGTH = 16;

[
    tdfid = "hash",
    description = "Generic ClubReport TDF that takes a variable TDF representing player data.",
    details = "Online Club game club report TDF"
]
class FifaClubsGameReport
{   
   [tag="cmgr", description="Common Game report"]
	Blaze::GameReporting::Fifa::CommonGameReport mCommonGameReport;	
	
    [tag="ccmm", description="mom game report"]
    string(FIFA_MOM_MAX_LENGTH) mom;
};

[
    tdfid = "hash",
    description = "Generic PlayerReport TDF that takes a variable TDF representing player data.",
    details = "Online Club game player report TDF"
]
class FifaClubsPlayerReport
{  
    [tag="cmpr", description="Common player report"]
    Blaze::GameReporting::Fifa::CommonPlayerReport mCommonPlayerReport;  

    [tag="obsr", description="Objective Stats Report"]
    Blaze::GameReporting::Fifa::ObjectiveStatsReport mObjectiveStatsReport;
          
//    [tag="cnam", description="Player virtual pro name"]
//    string(PLAYER_VPRO_MAX_NAME_LENGTH) proName;
    
//    [tag="cpos", description="Player virtual pro pos"]
//    string(PLAYER_VPRO_MAX_POS_LENGTH) proPos;
    
//    [tag="csty", description="Player virtual pro style"]
//    string(PLAYER_VPRO_MAX_STYLE_LENGTH) proStyle;

//    [tag="chei", description="Player virtual pro height"]
//    string(PLAYER_VPRO_MAX_HEIGHT_LENGTH) proHeight;
    
//    [tag="cnat", description="Player virtual pro nationality"]
//    string(PLAYER_VPRO_MAX_NATIONALITY_LENGTH) proNationality;
    
//    [tag="covr", description="Player virtual pro overall rating"]
//    string(PLAYER_VPRO_MAX_OVERALL_LENGTH) proOverall;
    
    [tag="csha", description="Player any clean sheets count"]
    uint16_t cleanSheetsAny;
    
    [tag="cshd", description="Player defender clean sheets count"]
    uint16_t cleanSheetsDef;
    
    [tag="cshg", description="Player goal keeper clean sheets count"]
    uint16_t cleanSheetsGoalKeeper;
    
    [tag="cmom", description="Player man of match count"]
    uint16_t manOfTheMatch;
};

[
    tdfid = "hash",
    description = "Generic ClubReport TDF that takes a variable TDF representing player data.",
    details = "Online Club game club report TDF"
]
class FifaClubsClubReport
{
    [tag="spdt", description="Seasonal Play Data"]
    Blaze::GameReporting::Fifa::SeasonalPlayData mSeasonalPlayData;
    
    [tag="cmst", description="Common player report"]
    Blaze::GameReporting::Fifa::CommonPlayerReport mCommonClubReport;
    
    [tag="cglf", description="Club goals count"]
    uint16_t goals;
    
    [tag="cgla", description="Club goals against count"]
    uint16_t goalsAgainst;
    
    [tag="ccls", description="Club clean sheets"]
    uint16_t cleanSheets;
    
    [tag="tmrt", description="teamrating"]
    uint16_t teamrating;
};

} // namespace FifaClubReportBase
} // namespace GameReporting
} // namespace Blaze
