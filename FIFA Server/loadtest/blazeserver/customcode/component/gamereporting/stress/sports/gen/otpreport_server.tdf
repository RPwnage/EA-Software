[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"

[headername="gamereporting/stress/sports/tdf/commonplayerreport_server.h"]
#include "gamereporting/stress/sports/gen/commonplayerreport_server.tdf"

namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  Ping OTP game report
//
//  Submitted report TDFs. 
namespace SportsOTPReportBase
{

const uint32_t FIFA_MOM_MAX_LENGTH = 32;

[
    tdfid = "hash",
    description = "Generic Game Report TDF that takes a variable TDF representing game data.",
    details = "Online OTP game report report TDF"
]
class GameReport
{
    [tag="cmem", description="member"]
        uint32_t member;
        
    [tag="ccmm", description="mom game report"]
    string(FIFA_MOM_MAX_LENGTH) mom;
};

[
    tdfid = "hash",
    description = "Generic PlayerReport TDF that takes a variable TDF representing player data.",
    details = "Online OTP game player report TDF"
]
class PlayerReport
{
    [tag="cmpr", description="Common player report"]
    Blaze::GameReporting::Sports::CommonPlayerReport mCommonPlayerReport;

    [tag="ogam", description="Player OTP games"]
        uint32_t otpGames;

    [tag="post", description="Player position"]
        uint32_t pos;
    
    [tag="csha", description="Player any clean sheets count"]
    uint16_t cleanSheetsAny;
    
    [tag="cshd", description="Player defender clean sheets count"]
    uint16_t cleanSheetsDef;
    
    [tag="cshg", description="Player goal keeper clean sheets count"]
    uint16_t cleanSheetsGoalKeeper;
    
    [tag="cmom", description="Player man of match count"]
    uint16_t manOfTheMatch;
};

} // namespace GameOTPReportBase
} // namespace GameReporting
} // namespace Blaze
