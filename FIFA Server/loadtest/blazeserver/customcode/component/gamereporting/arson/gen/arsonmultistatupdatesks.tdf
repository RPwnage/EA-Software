[headername="gamereporting/tdf/gamereporting.h"]
#include "gamereporting/gen/gamereporting.tdf"

[headername="clubs/tdf/clubs_base.h"]
#include "clubs/gen/clubs_base.tdf"

namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  ArsonMultiStatUpdatesKeyscopes style reports
//
//      Submitted report TDFs. 
namespace ArsonMultiStatUpdatesKeyscopes
{

[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Game attributes",
    details = "Used by the ArsonMultiStatUpdatesKeyscopes tests to contain game data submitted by clients to game reporting"
]
class GameAttributes
{
    [tag="leag", description="League"]
    EntityId leagueId;

    [tag="leve", description="Level"]
    int32_t level;
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Player report",
    details = "Used by the ArsonMultiStatUpdatesKeyscopes tests to represent a player within a report"
]
class PlayerReport
{
    [tag="cid", description="Club Id"]
    Clubs::ClubId clubId;

    [tag="wepn", description="Weapon"]
    int32_t weapon;
 
    [tag="wins", description="Wins"]
    uint16_t wins;

    [tag="loss", description="Losses"]
    uint16_t losses;

    [tag="pnts", description="Points"]
    uint16_t points;
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Offensive Athlete report",
    details = "Used by the ArsonMultiStatUpdatesKeyscopes tests to represent an offensive athlete within a report"
]
class OffensiveAthlete
{

    [tag="pid", description="Player representing an offensive athlete"]
    GameManager::PlayerId playerId;

    [tag="hits", description="Hits"]
    uint16_t hits;

    [tag="serv", description="Serves"]
    uint16_t serves;
};


[
    tdfid = "hash",
    tdfregistration = "explicit",
    description = "Report",
    details = "Used by the ArsonMultiStatUpdatesKeyscopes tests to represent a report"
]
class Report
{
    [tag="game", description="Game attributes"]
    GameAttributes gameAttrs;
    
    [tag="plyr", description="Player Reports"]
    map<GameManager::PlayerId, PlayerReport> playerReports;
    
    [tag="offs", description="Offensive Athlete Reports"]
    map<uint32_t, OffensiveAthlete> offensiveAthleteReports;
};


}   // ArsonMultiStatUpdatesKeyscopes

}   // GameReporting
}   // Blaze
