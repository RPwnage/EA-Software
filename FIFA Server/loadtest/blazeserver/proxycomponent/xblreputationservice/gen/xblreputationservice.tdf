/*! ************************************************************************************************/
/*!
    \file xblreputationservice.tdf
    \attention
        (c) Electronic Arts. All Rights Reserved.
*/
/*! ************************************************************************************************/
[headername="framework/tdf/externalsessiontypes.h"]
#include "framework/gen/externalsessiontypes.tdf"

[headername="framework/tdf/userdefines.h"]
#include "framework/gen/userdefines.tdf"

namespace Blaze
{

namespace XBLReputationService
{

class ReputationRequestsHeader
{
    [tag="cvrn", description=""]
    string(-1) mContractVersion;

    [tag="atkn", description=""]
    string(-1) mAuthToken;
};


/////////////////////////////////////////////////////////////////////////////////////////
//      Send feedback Request & response objects
/////////////////////////////////////////////////////////////////////////////////////////

class PostFeedbackRequestBody
{
    [tag="snam", description="The Name of the Session the user sent this feedback from. If there is no associated session, this field is 0."]
    string(-1) mSessionName;

    [tag="fbtp", description="The type of feedback."]
    string(-1) mFeedbackType;
    
    [tag="trsn", description="User-supplied text that the sender added to the feedback."]
    string(-1) mTextReason; 
    
    [tag="vrid", description="The ID of a user-supplied voice file from Kinect that the sender added to the feedback."]
    string(-1) mVoiceReasonId;  

    [tag="edid", description="The ID of a resource that can be used as evidence of the feedback being submitted. For example, the ID can indicate a video file recorded during game play."]
    string(-1) mEvidenceId;     
};

class PostFeedbackRequest
{
    [tag="xuid", description="Xbox User ID (XUID) of the user being reported"]
    ExternalXblAccountId mXuid;

    [tag="pfrh", description=""]
    ReputationRequestsHeader mPostFeedbackRequestHeader;

    [tag="pfrb", description="Feedback body"]
    PostFeedbackRequestBody mPostFeedbackRequestBody;    
};

class ServiceErrorResponse
{
   [tag="code", description="The type of error"]
   int32_t mCode;
   [tag="srce", description="The name of the service that raised the error."]
   string(-1) mSource;
   [tag="desp", description="A description of the error."]
   string(-1) mDescription;  
};

class PostResetReputationRequestBody
{
    [tag="fapr", default=75, description="The desired new base Fairplay Reputation score for the user. (valid range 0 to 75)"]
    uint32_t mFairplayReputation;
    
    [tag="comr", default=75, description="The desired new base Comms Reputation score for the user. (valid range 0 to 75)"]
    uint32_t mCommsReputation;
    
    [tag="uscr", default=75, description="The desired new base UserContent Reputation score for the user. (valid range 0 to 75)"]
    uint32_t mUserContentReputation;
};

class PostResetReputationRequest
{
    [tag="xuid", description="Xbox User ID (XUID) of the user being reported"]
    ExternalXblAccountId mXuid;
    
    [tag="prrh", description=""]
    ReputationRequestsHeader mPostResetReputationRequestHeader;
    
    [tag="prrb", description=""]
    PostResetReputationRequestBody mPostResetReputationRequestBody;
};
}
}
