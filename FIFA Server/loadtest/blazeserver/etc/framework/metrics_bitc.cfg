metricsLoggingConfig = {
    loggingInterval = "1m",
    componentMetrics = true,
    fiberTimings = true,
    status = true,
    dbMetrics = true,
    outboundMetrics = true,
    operationalInsightsExport = {
      #ifdef METRICS_AGENT_HOSTNAME
        agentHostname = "#METRICS_AGENT_HOSTNAME#",
      #else
        agentHostname = "localhost",
      #endif
        agentPort = 8125,
        enableGostatsdExtensions = true,
        globalTags = {
            "env" = "#ENV#"
        }
        include = [
            { regex = "^authentication.loginFailures" }
            { regex = "^authentication.logins" }
            { regex = "^database.dbpool.activePoolCount" }
            { regex = "^database.dbpool.connections" }
            { regex = "^database.dbpool.peakConnections" }
            { regex = "^fibers.cpuUsageForProcessPercent" }
            { regex = "^gamemanager_master.activeGames" }
            { regex = "^gamemanager_master.activePlayers" }
            { regex = "^gamemanager_master.avgConnectionLatency" }
            { regex = "^gamemanager_master.connectionPacketLoss" }
            { regex = "^gamemanager_master.gameConns" }
            { regex = "^gamemanager_master.maxConnectionLatency" }
            { regex = "^gamemanager_master.playersRemoved" }
            { regex = "^logger.count" }
            { regex = "^matchmaker.sn_results" }
            { regex = "^memory.usedMemory" }
            { regex = "^rpc.failCount" }
            { regex = "^rpc.successCount" }
            { regex = "^search.rete.joinNodes" }
            { regex = "^uptime" }
            { regex = "^usersessions_master.gaugeUserSessions" }
            { regex = "^util.stt*" }
            { regex = "^util.tts*" }
        ]
    }
}
