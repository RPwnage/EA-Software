//
// Configuration file for the stress tester
//

//
// Command line to test:
//./stress -c stress-fifa-config.cfg -num_conns 1 -start_index 0 -DMP_ONLY=true -DPLATFORM=pc -DDEDICATED_SCENARIO=false -instance_delay 10  -DSTRESS_LOGIN=true
//


#include "stress/fifa/common-defines-config.cfg"


// Configuration data specific to the HavanaModule module

FifaModule = {

//enum PlayerType ///player type
//{
//  ONLINESEASONS = 0,
//  DEDICATEDSERVER = 1,
//  SINGLEPLAYER = 2,
//	COOPPLAYER = 3,
//  LIVECOMPETITION = 4,
//	FRIENDLIES = 5,
//	FUTPLAYER = 6,
//	CLUBSPLAYER = 7,
//  DROPINPLAYER = 8,
//  KICKOFFPLAYER = 9,
// 	SSFPLAYER = 10,
//  SSFSEASONS = 11,
//  ESLTOURNAMENTS = 12,
//  ESLSERVER = 13
//  INVALID
//};

PersonaNamesforPlatformXONE = [ 
2000001010002,2000001010003,2000001010004,2000001010005,2000001010006,2000001010007,2000001010008,2000001010009,2000001010010,2000001010011,2000001010012,2000001010013,2000001010014,2000001010015,2000001010016,2000001010017,2000001010018,2000001010019,2000001010020,2000001010021,2000001010022,2000001010023,2000001010024,2000001010025,2000001010026,2000001010027,2000001010028
]

PersonaNamesforPlatformPS4 = [ 
ps4fifa19-1999980,ps4fifa19-1999981,ps4fifa19-1999982,ps4fifa19-1999983,ps4fifa19-1999984,ps4fifa19-1999985,ps4fifa19-1999986,ps4fifa19-1999987,ps4fifa19-1999988,ps4fifa19-1999989,ps4fifa19-1999990,ps4fifa19-1999991,ps4fifa19-1999992,ps4fifa19-1999993,ps4fifa19-1999994,ps4fifa19-1999995,ps4fifa19-1999996,ps4fifa19-1999997,ps4fifa19-1999998,ps4fifa19-1999999,ps4fifa19-2000000
]

#if DS_ONLY == "true" 
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=100 } //DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
]
#elif OS_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=100}  //ONLINESEASONS
                { type=1, probability=0 }  	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
    ]
#elif SP_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 } 	//DEDICATEDSERVER
                { type=2, probability=100 } //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif COOP_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=100 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif LC_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=100 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif FR_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 } 	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=100 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif FUT_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=100 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif CLUBS_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=100 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif DROPIN_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=100 }	//DROPINPLAYER		
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif KICKOFF_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER		
				{ type=9, probability=100 } //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif SSF_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER		
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=100 }//SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif SSFSEASONS_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER		
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }//SSFPLAYER
				{ type=11, probability=100 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENTS
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif ESLTOURNAMENTS_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER		
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }//SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=100 }  //ESLTOURNAMENT
				{ type=13, probability=0 }  //ESLSERVER
	]
#elif ESLSERVER_ONLY == "true"
    playerTypeDistribution = [
                { type=0, probability=0}    //ONLINESEASONS
                { type=1, probability=0 }	//DEDICATEDSERVER
                { type=2, probability=0 }   //SINGLEPLAYER
				{ type=3, probability=0 }	//COOPPLAYER
				{ type=4, probability=0 }	//LIVECOMPETITIONS
				{ type=5, probability=0 }	//FRIENDLIES
				{ type=6, probability=0 }	//FUTPLAYER
				{ type=7, probability=0 }	//CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER		
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }//SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENT
				{ type=13, probability=100 }  //ESLSERVER
	]
#else 
playerTypeDistribution = [
				{ type=0, probability=6 }  //ONLINESEASONS
				{ type=1, probability=0 }     //DEDICATEDSERVER
				{ type=2, probability=90 }   //SINGLEPLAYER
				{ type=3, probability=0 }    //COOPPLAYER
				{ type=4, probability=2 }    //LIVECOMPETITIONS
				{ type=5, probability=2 }    //FRIENDLIES
				{ type=6, probability=0 }    //FUTPLAYER
				{ type=7, probability=0 }    //CLUBSPLAYER
				{ type=8, probability=0 }	//DROPINPLAYER
				{ type=9, probability=0 }   //KICKOFFPLAYER
				{ type=10, probability=0 }  //SSFPLAYER
				{ type=11, probability=0 }  //SSFSEASONS
				{ type=12, probability=0 }  //ESLTOURNAMENT
				{ type=13, probability=0 }  //ESLSERVER
    ]
#endif
	
// enum ScenarioType 
// {
    //CREATEGAME = 0,
    //SEASONS,
	//SEASONSCUP,
	//FUTDRAFTMODE,
	//FUTCHAMPIONMODE,
	//FUTFRIENDLIES,
	//FUTTOURNAMENT,
	//FUTONLINESINGLEMATCH,
	//FUTRIVALS,
	//CLUBMATCH,
	//CLUBSCUP,
	//CLUBSPRACTICE,
	//CLUBFRIENDLIES,
	//SP_KICKOFF,
	//SP_OFFLINE_EXIBHITION,
	//SP_TOURNAMENTS,
	//SP_CAREER,
	//FUT_OFFLINE_DRAFT,
	//FUT_OFFLINE_SEASONS,
	//FUT_OFFLINE_PAF,
	//FUT_OFFLINE_SQUAD_BATTLES,
	//FUT_OFFLINE_TOTW,
	//KICKOFF_MATCHDAY_ON,
	//KICKOFF_MATCHDAY_OFF,
	//FUT_PLAY_ONLINE,
	//SSF_SEASONS = 27,
	//SSF_WORLD_TOUR = 28,
	//SSF_TWIST_MATCH = 29,
	//SSF_SINGLE_MATCH = 30,
	//FUT_ONLINE_SQUAD_BATTLE = 31,
	//VOLTA_DROPIN = 32,
	//VOLTA_PWF = 33,
	//VOLTA_SOLO = 37,
	//VOLTA_FUTSAL = 35,	
	//VOLTA_5v5 = 36,	
// };

ShieldConfiguration = {//uncomment the types to enable shield
		 //type1=3
		 //type2=4
		 //type3=5
		 //type4=8
		 //type5=24
		 //type6=27
		 //type7=32
		 //type8=33
		 //type9=34
	} 

    CoopScenarioDistribution = [
		{ type=0, probability=100}
    ]
	
	OnlineSeasonsDistribution = [
		{ type=1, probability=50} // ONLINE SEASONS
        { type=2, probability=50} // ONLINE SEASONS CUP
    ]
	
	FutPlayerDistribution = [
        { type=3,	probability=0	}		//	FUTDRAFTMODE
		{ type=4,	probability=0	}		//	FUTCHAMPIONMODE
        { type=5,	probability=40	}		//	FUTFRIENDLIES
        { type=6,	probability=0	} 		//	FUTTOURNAMENT
		{ type=7,	probability=0	}		//	FUTONLINESINGLEMATCH
		{ type=8,	probability=30	}		//	FUTRIVALS // Added FUT COOP RIVALS
		{ type=24,	probability=30	}		//	FUT_PLAY_ONLINE //Is it same as FUT Online Friendlies Co-Op ?
		{ type=31,	probability=0	}		//	FUT_ONLINE_SQUAD_BATTLE
		{ type=38,	probability=0	}		//	FUT_COOP_RIVALS
	]

	FriendliesDistribution = [
		{ type=39, probability=100} // FRIENDLIES
        { type=40, probability=0} // FRRB
    ]
	
	ClubsPlayerDistribution = [
		{ type=9, probability=58}		//CLUBMATCH
		{ type=10, probability=23}		//CLUBSCUP
		{ type=11, probability=10}		//CLUBSPRACTICE
		{ type=12, probability=9}		//CLUBFRIENDLIES
	]
	SSFPlayerDistribution = [
		{ type=28, probability=0}		//SSF_WORLD_TOUR = gameType29
		{ type=29, probability=39}		//SSF_Story Debut = gameType29
		{ type=30, probability=9}		//SSF_SINGLE_MATCH = gameType30
		{ type=34, probability=52}		//SSF_FEATURED BATTLES = gameType34
	]
	SSFSeasonsDistribution = [
		{ type=32, probability=33}		//	VOLTA_DROPIN = gameType33,
		{ type=33, probability=45}		//	VOLTA_PWF = gameType33, // VOLTA SquadUp
		{ type=37, probability=22}		//	VOLTA_SOLO = gameType33,
		{ type=35, probability=0}		//	VOLTA_FUTSAL = 35,	
		{ type=36, probability=0}		//	VOLTA_5v5 = 36,	
	]

//enum RecoTriggerIds
//{
	//DC_TRIGGER_SKILLGAME				= 3040,
	//DC_TRIGGER_JOURNEY_OFFBOARDING	= 3042
//};

// Reco Trigger Id's distribution
RecoTriggerIdsDistribution = [
	{ recotype=3040, probability=50}
	{ recotype=3042, probability=50}
]

// Aruba TriggerIds
//enum ArubaTriggerIds
//{
	//DC_TRIGGER_LIVEMSG				= 100,
	//DC_TRIGGER_FIFAHUB				= 101,
	//DC_TRIGGER_EATV_FIFA				= 102,
	//DC_TRIGGER_EATV_FUT				= 103,
	//DC_TRIGGER_CAREERLOAD				= 104,
	//DC_TRIGGER_FUTLOAD				= 105,
	//DC_TRIGGER_FUT_TILE				= 106,
	//DC_TRIGGER_FUTHUB					= 111,
	//DC_TRIGGER_DRAFT_OFFLINE			= 112,
	//DC_TRIGGER_DRAFT_ONLINE			= 113,
	//DC_TRIGGER_UPS					= 114,
//};

// Arub Trigger Id's distribution
ArubaTriggerIdsDistribution = [
	{ type=100, probability=10}
	{ type=101, probability=10}
	{ type=102, probability=10}
	{ type=103, probability=10}
	{ type=104, probability=10}
	{ type=105, probability=5}
	{ type=106, probability=5}
	{ type=111, probability=10}
	{ type=112, probability=10}
	{ type=113, probability=10}
	{ type=114, probability=10}
]

//Note:  if we need to make any of the below common configuration item to be Gamespecific, redefine it in GameSpecific Configuration to override
    CommonGamePlayConfiguration = {
		maxSetUsersToListCount = 100
		setUsersToListAddPlayerCount = 5
		setUsersToListAddPlayerDeviationCount = 5
		setUsersToListProbability = 20
        GameStateIterationsMax =  12  //Normal 65sec, FUT Rivals, Draft, Champions 250sec
        GameStateSleepInterval = 30000   //ms
		cancelMatchMakingProbability = 4	
        MatchMakingSessionDuration = 15000
        LogoutProbability = 2 //[1 - 100]
		reLoginWaitTime = 180000
		loginRateTime = 180000
		friendsListUpdateProbability = 30 // [1 - 100]
		maxPlayerStateDurationMs = 1800000   //in ms 30min
		maxGamesPerSession = 3
		processInvitesFiberSleep = 60000 // in ms
		maxLoggedInDuration = 6000 // in seconds , maximum duration a user can stay logged in.
        maxPlayerCount = 70

    // Wait time in lobby for each player
	maxLobbyWaitTime = 30000		
	playerJoinTimeoutWait = 300000
	clientConfig = "DynamicServerConfig"	
    }

	//Below config values will overwrite common gameplay configuration values if present
    CoopGamePlayConfiguration = {
        RoundInGameDuration = 650000
		InGameDeviation = 60000
        JoinerLeaveProbability = 30    //[1 - 100]
		replayMissionProbability = 15  //0 - 100
		PostGameMaxTickerCount = 120 //seconds
		maxStatsForOfflineGameReport = 10
		GameStateIterationsMax = 8
		inGameReportTelemetryProbability = 10
    }

	//Below config values will overwrite common gameplay configuration values if present
    SingleGamePlayConfiguration = {
        RoundInGameDuration = 650000
		InGameDeviation = 60000
		MaxSeasonsToPlay = 6
		LeaderboardCallProbability = 10
		PostGameMaxTickerCount = 120 //seconds
		maxStatsForOfflineGameReport = 1000
		QuitFromGameProbability		= 1
		RestartEpisodeProbability = 10		
		inGameReportTelemetryProbability = 10
    }
	 KickoffGamePlayConfiguration = {
        RoundInGameDuration = 650000
		InGameDeviation = 60000
		QuitFromGameProbability		= 1
		RestartEpisodeProbability = 10		
		inGameReportTelemetryProbability = 10
    }

    DedicatedServerGamePlayConfiguration = {
		GameStateSleepInterval  = 30000   //ms
		MinPlayerCount  = 1
		MaxPlayerCount = 22
		GameStateIterationsMax = 4
        RoundInGameDuration = 1500000  //Max time 
		InGameDeviation = 10000
		HostLeaveProbability = 1 //[1 - 100]
        JoinerLeaveProbability = 0    //[1 - 100]
		EnableResetDedicatedServer = false
		KickPlayerProbability = 0		//[1 - 100]
		inGameReportTelemetryProbability = 10
    }

	//Below config values will overwrite friendlies configuration values if present
    FriendliesGamePlayConfiguration = {
		RoundInGameDuration = 650000
		InGameDeviation = 60000  
        HostLeaveProbability = 1 //[1 - 100]
        JoinerLeaveProbability = 0    //[1 - 100]
		maxPlayerStateDurationMs = 1800000 
		GameStateSleepInterval = 30000
		inGameReportTelemetryProbability = 10
		GameStateIterationsMax = 8 
    }
	
	//Below config values will overwrite common gameplay configuration values if present
    OnlineSeasonsGamePlayConfiguration = { 
		RoundInGameDuration = 650000
		InGameDeviation = 100000  
        HostLeaveProbability = 1 //[1 - 100]
        JoinerLeaveProbability = 0    //[1 - 100]
		EnableResetDedicatedServer = false
		KickPlayerProbability = 0		//[1 - 100]	
		inGameReportTelemetryProbability = 10
    }

	LiveCompetitionGamePlayConfiguration = { 
	    RoundInGameDuration = 650000
		InGameDeviation = 100000
		HostLeaveProbability = 1 //[1 - 100]
        JoinerLeaveProbability = 0    //[1 - 100]
		GameResetableProbability = 0   //[1 - 100],  0 to disable, specific to dedicated server
		EnableResetDedicatedServer = false
		KickPlayerProbability = 0		//[1 - 100]
		gameRoundsPerGamePlay = 5
        requestPlatformHostProbability	= 3  //[1 - 100] 
		inGameReportTelemetryProbability = 10   		
    }
	
    SSFGamePlayConfiguration = {
		RoundInGameDuration = 650000
		InGameDeviation = 60000  
        JoinerLeaveProbability = 0    //[1 - 100]
		QuitFromGameProbability		= 1
		LeaderboardCallProbability = 10
		AcceptInvitationProbablity = 50
		GameStateIterationsMax = 8  // for each iteration wait GameStateSleepInterval(30sec)
		LogoutProbability = 2 //[1 - 100]
		ClubSizeMax = 5  // 11
		SeasonLevel = 1
		ClubDomainId = 10
		PlayerWaitingCounter = 12 // for each cycle 15 seconds wait
		MinTeamSize = 2 //2
		InGameReportTelemetryProbability = 10		
		CancelMatchMakingProbability = 0
		EnableResetDedicatedServer = false
		SSFPlayerProbability = 0		//[1 - 100]
    }
	
	//Below config values will overwrite common gameplay configuration values if present
    SsfSeasonsGamePlayConfiguration = { 
		RoundInGameDuration = 650000
		InGameDeviation = 60000  
        HostLeaveProbability = 1 //[1 - 100]
        JoinerLeaveProbability = 0    //[1 - 100]
		EnableResetDedicatedServer = false
		KickPlayerProbability = 0		//[1 - 100]
		ClubSizeMax = 2
		inGameReportTelemetryProbability = 10
    }

	CompetitionsEventIdDistribution = [
		{eventid=60201, probability=20}
		{eventid=60202, probability=20}
		{eventid=60102, probability=20}
		{eventid=10000, probability=20}
		{eventid=10001, probability=10}
		{eventid=10004, probability=10}
	]		

    FutPlayerGamePlayConfiguration = { 
		RoundInGameDuration = 650000
		InGameDeviation = 60000  
        HostLeaveProbability = 1 //[1 - 100]
        JoinerLeaveProbability = 0    //[1 - 100]
		EnableResetDedicatedServer = false
		KickPlayerProbability = 0		//[1 - 100]
		inGameReportTelemetryProbability = 10
		maxPlayerStateDurationMs = 1800000 
    }
	//PingSitesList =  ["bio-dub", "bio-iad", "bio-sjc", "bio-syd", "m3d-brz", "m3d-nrt"]
	pingSites = [
		{name="bio-dub", probability=100}
		{name="bio-iad", probability=0}
		{name="bio-sjc", probability=0}
		{name="bio-syd", probability=0}
		{name="m3d-brz", probability=0}
		{name="m3d-nrt", probability=0}
	]
	
#ifndef CLUBS_NAME_INDEX
#define CLUBS_NAME_INDEX 10
#endif

	ClubsPlayerGamePlayConfiguration = { 
		RoundInGameDuration = 600000
		InGameDeviation = 50000  
        JoinerLeaveProbability = 0    //[1 - 100]
		acceptInvitationProbablity = 50
		inGameReportTelemetryProbability = 10	
		cancelMatchMakingProbability = 0
		GameStateIterationsMax = 6  // for each iteration wait GameStateSleepInterval(30sec)
		LogoutProbability = 1 //[1 - 100]
		ClubSizeMax = 1  // 11
		SeasonLevel = 1
		ClubDomainId = 10
		ClubsNameIndex = #CLUBS_NAME_INDEX#
		PlayerWaitingCounter = 12 // for each cycle 15 seconds wait
		MinTeamSize = 1 //2
    }
	
	
	DropinPlayerGamePlayConfiguration = { 
		RoundInGameDuration = 600000
		InGameDeviation = 50000    
        JoinerLeaveProbability = 0    //[1 - 100]
		acceptInvitationProbablity = 50
		inGameReportTelemetryProbability = 10	
		cancelMatchMakingProbability = 0
		GameStateIterationsMax = 8  // for each iteration wait GameStateSleepInterval(30sec)
		LogoutProbability = 2 //[1 - 100]
		ClubSizeMax = 1  // 11
		SeasonLevel = 1
		ClubDomainId = 10
		ClubsNameIndex = #CLUBS_NAME_INDEX#
		PlayerWaitingCounter = 12 // for each cycle 15 seconds wait
		MinTeamSize = 1 //2
    }
	// Clubsize probability
	ClubsSizeDistribution = [
			{ clubsize      = 1     , probability = 0  },
			{ clubsize      = 2     , probability = 100 },
			{ clubsize      = 3     , probability = 0 },
			{ clubsize      = 4     , probability = 0 },
			{ clubsize      = 5     , probability = 0  },
			{ clubsize      = 6     , probability = 0  },
			{ clubsize      = 7     , probability = 0  },
			{ clubsize      = 8     , probability = 0  },
			{ clubsize      = 9     , probability = 0  },
			{ clubsize      = 10    , probability = 0  },
			{ clubsize      = 11    , probability = 0  }				
	]
	
	friendListSizeDistribution = [
		{size=1, probability=20}
		{size=5, probability=20}
		{size=8, probability=10}
		{size=12, probability=10}
		{size=15, probability=10}
		{size=20, probability=10}
		{size=50, probability=10}
		{size=60, probability=5}
		{size=75, probability=0}
		{size=100, probability=5}
		{size=200, probability=0}
	]

	KickOffPlayerDistribution = [
		{ type=gameType100, probability=50} // KickOff MatchDay ON
		{ type=gameType90, probability=50}  // KickOff MatchDay OFF
	]
	offlineScenarioDistribution = [                                                   
		{type=gameType0,	probability	=2	}	// No game played
		{type=gameType21,	probability	=48	}	// Skill games
		{type=gameType28,	probability	=0	}	// SSF Single Match
		{type=gameType30,	probability	=0	}	// SSF World Tour
		{type=gameType74,	probability	=16	}	// Coach Play FUT	Singleplayer //1
		{type=gameType78,	probability	=4	}	// Squad Battles, TOTW FUT	Singleplayer //3,4
		{type=gameType83,	probability	=0	}	// Play as Friend FUT
		{type=gameType84,	probability	=8	}	// Single Player Draft FUT	Singleplayer //2
		{type=gameType87,	probability	=0	}	// Single Player Seasons FUT
		{type=gameType89,	probability	=0	}	// TOTW FUT	
		{type=gameType92,	probability	=12	}	// Create Tournamnet and Women's International
		{type=gameType95,	probability	=10	}	// offline Carrer
		{type=gameType100,	probability	=0	}	// Kick off (Single Match and 2.0) ( Match Day On )
		{type=gameType120,	probability	=0	}	// Story Mode
	]

	// Profanity and Abuse Reporting related Config
	profanityConfiguration = {
		AvatarFirstNames = [XIFGfzk47R,1JGvqPlYIT,ZPTvJbhptz,Xcc5sSLT0G,BxwYfiD9ml,RTdn4srQkb,AihPUFxwhg,bHz6PMxile,48Poj2xxTZ,leiAYwAqbg,G0SU0AfXwR,yKYGq67iEi,NWtZ3VGblf,b9pAj4Sm4g,EJe3CYWbkK,S8JQ7zUKE4,IbPyDpikiJ,EhGYLlpEfi,CCpVfUX8Ha,JxlGEwevhn]
		AvatarLastNames = [uC1buWJU,NJojm77s,MizkraXa,Nd0ksWwc,0FtK1v8H,bphhqfZG,yeeavxb5,7QyTVgki,sjYDWr2I,HYRvSfCM,HdPQpOZ5,9GBBaDYT,lkfehXOf,xaim53CW,dazc0G6R,8M8Ilsc1,j6smgvUy,x1gYOHBU,OSPfQuyG,5kaOMVHo]
		ClubNames = [cUwuUvawrG,fpdeNUGdSJ,alMuKBPuqC,SaDgcjjqfW,MozDimGlEa,VXgcFUoHpU,ygikedCbZj,lRArQaxKZp,QsVVCqSMKy,dsUHpQovhz,HwFlyZofXN,jsOWiqMWHx,PrwnOVCTwP,ubKYvpgNVf,LyWEmaRUZb,bxkGCzwmXw,CyiJqLAsSK,SMmgmljMcf,SkjVwuabpU,YwUtMcsOPh]
		InGameMessages = [FwwZCXMKGQSI,IMCOixPXpkOF,FBlZzsbkwaXQ,vfefkOmJTJrY,UsWpvLmBRIRK,QjppvvxkWNOU,VXjeWQIeecKy,ssqmJHRJnlVV,lvFbWZvcRTWs,tUuzwSObVltX,kttsPsDeyBmQ,YAXdVBThPpbx,OtCYtTTHdXqL,fShKsCBkqSjn,crvFfHKqmfrg,nQiqPPspMpni,lasIAcdRAQmn,gLewrQWlvQIl,jozqxFdKxxoK,mIXDDTOKLWtL,rkJmdilewubN,dKKygZvZRrQI,KKMVqkkbbrUd,HRCGawhxhiUX,qxJrnoohGzqB]
		AIPlayerNames = [T4gra3RDGK,RaJPCwnW44,1dTFzVxIkh,Ufwa3rQHBD,P0b3Xkh3sL,JA3vaRiRWl,e6z6e0xpFt,eE9pMOClKn,gE0sulzADO,jw6a05iZ2n,lRysLCnaKA,cJYzjjNIOB,stbe6y5zlG,FW3KyS7GXJ,4FHV2vzjMa,Uy6qzALLzU,hfUSeE84SC,Jh7SwJZMcR,z7hIWclRqm,4nuKdPRl7E]
		profanityAvatarProbability = 80
		profanityClubnameProbability = 15
		profanityMessageProbability = 15
		fileAvatarNameProbability = 80
		fileClubNameProbability = 10
		fileAIPlayerNamesProbability = 10
		acceptPetitionProbability = 5
	}

    //platform = ps3  // Possible values: pc, xbox, ps3, ps4

#if PLATFORM == "xone"
    platform = "xone"
#elif PLATFORM == "pc"
    platform = "pc"
#elif PLATFORM == "ps4"
    platform = "ps4"	
#elif PLATFORM == "ps5"
    platform = "ps5"
#elif PLATFORM == "xbsx"
    platform = "xbsx"	
#endif

	geoipfilepath = "stress/fifa/US.csv"
#if GEOLOCATION_MM == "false"
		geolocation_mm = false 
#else	
		geolocation_mm = true
#endif

#if STATS_ENABLED == "false"
		statsEnabled = false 
#else	
		statsEnabled = true
#endif	
	
    authentication = {
#if PLATFORM == "pc"
        projectId = "316967"
        entitlementTag = "ONLINE_ACCESS"
        numEntitlementsToShow = 100
        entGroupName = "FIFA21PC"
        entGroupNameList = [ "FIFA21PC"]
#elif PLATFORM == "ps4"
        projectId = "316962"
        entitlementTag = "ONLINE_ACCESS"
        numEntitlementsToShow = 100
        entGroupName = "FIFA21PS4"
        entGroupNameList = [ "FIFA21PS4" ]
#elif PLATFORM == "xone"
        projectId = "316963"
        entitlementTag = "ONLINE_ACCESS"
        numEntitlementsToShow = 100
        entGroupName = "FIFA21XONE"
        entGroupNameList = [ "FIFA21XONE" ]
#endif
    }
    

    nucleuslogin = {
        // PC
        projectId = 306479
        entitlementTag = "" //"ONLINE_ACCESS"
        numEntitlementsToShow = 50
        entGroupName = "HavanaPC"
        entGroupNameList = [ "HavanaPC"]
		// Define the start nucleux id in the blazeserver
		start-external-id = 2000000000000    
    }	

arubaConfigs = {
	//  configs related to aruba
	#if ARUBA_ENABLED == "false"
			arubaEnabled = false 
	#else	
			arubaEnabled = true
	#endif
	arubaServerUri = "https://pin-em-lt.data.ea.com" 
	arubaGetMessageUri = "/em/v4.5/action"
	arubaTrackingUri = "/em/v4.5/tracking/impressions"
	//arubaGetMessageUri = "/em/v4/action"
	//arubaTrackingUri = "/em/v4/tracking/impressions"
}

upsConfigs = {
	//  configs related to aruba
	#if UPS_ENABLED == "false"
			upsEnabled = false 
	#else	
			upsEnabled = true
	#endif
	upsServerUri = "https://pin-em-lt.data.ea.com" // FIFA21
	upsGetMessageUri = "/em/v4.5/action"
	upsTrackingUri = "/em/v4.5/tracking/impressions"
	testClientId = "FIFA21_PS4_CLIENT"
	clientSecret = "uShEXj0akReYZK07lxCteUa9zhpR2FCR1fJDPlF3jJEREqMotJddWDccU5kBifiOdrESFRSPG8cSiVNh"		
}

recoConfigs = {
	//  configs related to aruba
	#if RECO_ENABLED == "false"
			recoEnabled = false 
	#else	
			recoEnabled = true
	#endif
	recoServerUri = "https://pin-em-lt.data.ea.com" // FIFA21
	recoGetMessageUri = "/ups/v1/profiles/collection/nucleus/"
	recoTrackingUri = "/em/v4/tracking/impressions"
}

pinConfigs = {
	//  configs related to pin
	#if PIN_ENABLED == "false"
			pinEnabled = false 
	#else	
			pinEnabled = true
	#endif
	pinServerUri = "https://pin-river-lt.data.ea.com" // FIFA21 PIN server URI
	//pinServerUri = "https://pin-river-test.data.ea.com" // FIFA21 PIN test server URI
	pinGetMessageUri = "/pinEvents"
	pinTrackingUri = "/em/v4.5/tracking/impressions"
	//pinGetMessageUri = "/em/v4/action"
	//pinTrackingUri = "/em/v4/tracking/impressions"
}

kickOffConfigs = {
		//  configs related to KickOff
		kickOffServerUri = "https://accounts.lt.ea.com" // FIFA19
		kickOffGetMessageUri = "/em/v4.5/action"
		kickOffTrackingUri = "/em/v4.5/tracking/impressions"
}

groupsConfigs = {
	#if GROUPS_ENABLED == "false"
		groupsEnabled = false
	#else
		groupsEnabled = true
	#endif
	groupsServerUri = "https://groups-e2e.tntdev.tnt-ea.com/:443"
	groupsSearchUri = "/group/instance/search"
}

statsProxyConfigs = {
	#if STATS_PROXY_ENABLED == "false"
		statsProxyEnabled = false
	#else 
		statsProxyEnabled = true
	#endif
	#if PTS_ENABLED == "false"
		playTimeStatsEnabled = false
	#else 
		playTimeStatsEnabled = true
	#endif
	#if UPDATE_EADPSTATS == "false"
		updateManualStats = false
	#else 
		updateManualStats = true
	#endif
	statsProxyServerUri = "https://internal.fifa.stats.e2etest.gameservices.ea.com:11000/" 
	statsGetMessageUri = "/api/1.0/contexts/FIFA21/views/"
	statsPlayerHealthUri = "/api/1.0/contexts/FIFA21_PT/views/AllPlayTimeStatsView/entities/stats"
	optInProbability = 100
	eadpStatsProbability = 100
	offlineStatsProbability = 100
	incrementMatchPlayedProbability = 100
	//portNumber = 11000
}	

eslProxyConfigs = {
	#if ESL_PROXY_ENABLED == "false"
		eslProxyEnabled = false
	#else 
		eslProxyEnabled = true
	#endif
	eslProxyServerUri = "https://test.wal2.tools.gos.bio-dub.ea.com/wal2/" 
	eslGetMessageUri = "/api/1.0/contexts/FIFA20/views/"
	
//portNumber = 11000
}
    // RpcDelay config
    rpcDelayMinMs = 1000
    rpcDelayMaxMs = 3000

	//Incremental login config
	//Note: IncrementalLoginIdDelta = total connections from all stress instances ie total PSU
	//Total logins = IncrementalLoginIdDelta * MaxIncrementalLoginsPerConnection
	EnableIncrementalLogin = false
	IncrementalLoginIdDelta = 10
	MaxIncrementalLoginsPerConnection = 10
	BaseAccountId = 2000000000000      //same as (start-nucleus-id - 1)
  
    // matchmaking session timeout in MS
    matchmakingTimeout = 15000

	// matchmaking session timeout in MS for Game Group/Squad join
	gameGroupMatchmakingTimeout = 30000
	GameGroupListConfigName = "GameGroupList"
    
    // game state durations in MS
    initStateDurationMs = 1000
    preGameStateDurationMs = 10000
    inGameStateDurationMs =  900000
	
#if PLATFORM == "pc"
		gameProtocolVersionString = 5700
#elif PLATFORM == "ps4"
		gameProtocolVersionString = ltonly
#elif PLATFORM == "xone"
		gameProtocolVersionString = ltonly
#endif

	ReportTelemetryPeriodMs = 300000

    // Define the number of milliseconds between RPC calls
    delay = 1000 //#RPC_DELAY#

    // Define the connection locale
    locale = "enUS"

    // Control whether a dummy instance needs to authenticate its user before issuing its configured
    // RPC calls.

    num_trials = 1
    num_execs_per_trial = 1
    //delay_per_trial = 10
    login = false
	
#if STRESS_LOGIN == "false" 
    stress_login = false 
#else	
	stress_login = true
#endif
    //check if resume session working properly
	resumeSession = false
	resumeSessionDelay_ms = 150000 //2.5 min
	inactivityTimeout_ms =  120000 //2 min
    waitActive = false
    logout = false
    reconnect = true

}

// This block defines the default logging for a stress exe
logging = {

    // Define the default logging level for all loggers
    level = INFO
               
    // Control what level of trace logging is enabled
    //   none     = No trace logging
    //   all      = Enabled for all categories
    //   category = Only enabled for categories that have explicit levels set in the "categories"
    //              map defined below.
    trace = {
        db = "none"
        http = "none"
        rpc = "all"
        replication = "none"
       } 
               
               // To rotate the stress log file use the below format to run stress exe
               // ./stress -c stress-playermodule-config.cfg --logdir /opt/home/htc/F2P_CLIENT/etc/log --logname stress_playermodule_log &
               //  LogDirectory should be created before starting the test, otherwise this feature will not work.
               
    // Controls whether log output goes to stdout, the log file or both.
    // Possible values are "both", "stdout", "file"
    output = "both"
               
               // The approximate maximum size of a log file before it is rotated
               // Recommended size is 100000000 [10MB]
    rotationFileSize = 100000000               
}
