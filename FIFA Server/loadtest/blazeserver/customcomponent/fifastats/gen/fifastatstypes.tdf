// Defines the TDF classes used in the fifastats component.
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp

namespace Blaze
{
namespace FifaStats
{
[
    description = "The request object for a poke command.",
    details = "This class a bare minimal set of parameters."
]

enum StatsType
{	
	TYPE_INT = 0,
	TYPE_FLOAT
};

enum ContextOverrideType
{	
	CONTEXT_NO_OVERRIDE = 0,
	CONTEXT_OVERRIDE_TYPE_FUT = 1,
	CONTEXT_OVERRIDE_TYPE_PLAYER_HEALTH = 2
};

enum StatsOperator
{
	OPERATOR_SUM = 0,
	OPERATOR_DECREMENT,
	OPERATOR_MIN,
	OPERATOR_MAX,
	OPERATOR_REPLACE
};

class StatsUpdate
{
    [tag="stna", description="Stat Name"] 
    string(128) mStatsName;

    [tag="siva", description="Stat integer value"]
    int64_t mStatsIValue;

	[tag="sfva", description="Stat float value"]
    float mStatsFValue;
	
	[tag="styp", description="Stat type"]
	StatsType mType;

	[tag="opor", description="Stat Operator"]
	StatsOperator mOperator;
};
typedef list<StatsUpdate> StatsUpdateList;

class Entity
{
    [tag="stna", description="Stat Name"] 
    string(128) mEntityId;
	
    [tag="stup", description="List of Stats Updates"]
    StatsUpdateList mStatsUpdates;
};
typedef list<Entity> EntityList;

class UpdateStatsRequest
{
    [tag="ctxo", description="Context Override Type"] 
    ContextOverrideType mContextOverrideType;
	
    [tag="guid", description="Category Id"] 
    string(128) mCategoryId;

    [tag="upid", description="Update Id"] 
    string(128) mUpdateId;

    [tag="enti", description="List of entity"] 
    EntityList mEntities;

    [tag="serv", description="Service name"] 
    string(128) mServiceName;

};

class UpdateStatsResponse
{
	[tag="rest", description="result of the operation"] 
	bool mSuccess;

	[tag="emsg", description="error message"] 
    string(128) mErrorMessage;

	[tag="ecod", description="error code"] 
    int64_t mErrorCode;

	[tag="tstc", description="http status code"]
    uint32_t mHttpStatusCode;
};

class Nested
{
    [tag="num", description="A number value greater than 0."]
    int32_t mNum;
    
    [tag="text", description="Text to send up to the server."] 
    string(256) mText;
    
    [tag="nmpa"] map<string(32),string(32), ignorecase> mStringMap;
};

class FifaStatsRequest
{
    [tag="num", description="A number value greater than 0."]
    int32_t mNum;
    
    [tag="text", description="Text to send up to the server."] 
    string(256) mText;
    
    [tag="smap"] map<string(32),string(32), ignorecase> mStringMap;

    [tag="nmap"] map<string(32),Nested, ignorecase> mNestedMap;
};

class FifaStatsResponse
{
    enum FifaStatsResponseEnum
    {
        [description="Unknown response."] 
        FIFASTATS_ENUM_UNKNOWN = 0,
        
        [description="Succeeded!"] 
        FIFASTATS_ENUM_SUCCESS,
        
        [description="Failed"] 
        FIFASTATS_ENUM_FAILED
    };


    [tag="map"] map<int32_t,FifaStatsRequest> mMyMap;
    
    typedef list<int32_t> IntList;
    [tag="list"] IntList mMyList;

    [tag="enum", description="Enum response type."] 
    FifaStatsResponseEnum mRegularEnum;
    
    [tag="msg"] 
    string(256) mMessage;
};

class FifaStatsError
{
    [tag="msg"] 
    string(256) mMessage;
};


} // FifaStats
} // Blaze



