// Defines the TDF classes used in the FIFA game reporting component
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp

namespace Blaze
{
[usePtrOption=true]
namespace GameReporting
{

///////////////////////////////////////////////////////////////////////////////
//  SSF Common reports
//
//  Submitted report TDFs. 
///////////////////////////////////////////////////////////////////////////////
namespace SSF
{


///////////////////////////////////////////////////////////////////////////////
//  SSF Common Game Report
///////////////////////////////////////////////////////////////////////////////

[
    tdfid = "hash",
    description = "Common Game Report TDF",
    details = "This is SSF common game report to be used by various online game mode"
]

class CommonGameReport
{
    [tag="wnpk", description="game went to penalty"]
    uint16_t wentToPk;
	
	[tag="rvlm", description="friendlies rival match"]
    bool isRivalMatch;    

	[tag="stid", description="Stadium id"]
	int32_t stadiumId;

	[tag="blid", description="Ball Id"]
	int32_t ballId;

	[tag="hcid", description="Home Crest id"]
	int32_t homeCrestId;

	[tag="acid", description="Away Crest id"]
	int32_t awayCrestId;
};


///////////////////////////////////////////////////////////////////////////////
//  SSF Common Player Report
///////////////////////////////////////////////////////////////////////////////


[
    tdfid = "hash",
    description = "Common PlayerReport TDF",
    details = "This is SSF common player report to be used by various online game mode"
]

class CommonStatsReport
{
    [tag="goal", description="goals count"]
    uint16_t goals;
    
	[tag="owgl", description="own goals count"]
    uint16_t ownGoals;

	[tag="cglc", description="goals conceded count"]
    uint16_t goalsConceded;
	
	[tag="pkgl", description="penalty goals count"]
    uint16_t pkGoals;
	
	[tag="psct", description="possession count"]
    uint16_t possession;
	
    [tag="cass", description="assist count"]
    uint16_t assists;
    
    [tag="csho", description="shot count"]
    uint16_t shots;
    
	[tag="shgl", description="shot on goal count"]
    uint16_t shotsOnGoal;
	
    [tag="cpsa", description="pass attempt count"]
    uint16_t passAttempts;
    
    [tag="cpsm", description="pass made count"]
    uint16_t passesMade;

    [tag="intc", description="interceptions count"]
    uint16_t interceptions;
    
    [tag="ctka", description="tackle attempt count"]
    uint16_t tackleAttempts;
    
    [tag="ctkm", description="tackle made count"]
    uint16_t tacklesMade;
    
    [tag="cblk", description="blocks count"]
    uint16_t blocks;
    
    [tag="crat", description="rating"]
    float rating;
    
    [tag="csav", description="save count"]
    uint16_t saves;
	
	[tag="foul", description="fouls count"]
    uint16_t fouls;

	[tag="ywcd", description="yellow cards count"]
    uint16_t yellowCard;
	
	[tag="rdcd", description="read cards count"]
    uint16_t redCard;
	
	[tag="corn", description="corners count"]
    uint16_t corners;
	
	[tag="offs", description="offsides count"]
    uint16_t offsides;
    
	[tag="unsc", description="unadjusted score"]
    uint16_t unadjustedScore;

	[tag="motm", description="Is Man of the Match in Team"]
    uint8_t hasMOTM;

	[tag="clsh", description="Clean Sheets"]
    uint8_t hasCleanSheets;
	
	[tag="ptaw", description="penaltiesAwarded"]
    uint16_t penaltiesAwarded;
	
	[tag="ptsc", description="penaltiesScored"]
    uint16_t penaltiesScored;
	
	[tag="ptsv", description="penaltiesSaved"]
    uint16_t penaltiesSaved;
	
	[tag="ptms", description="penaltiesMissed"]
    uint16_t penaltiesMissed;
	
	[tag="agpl", description="averagePossessionLength"]
    uint16_t averagePossessionLength;
	
	[tag="psit", description="passesIntercepted"]
    uint16_t passesIntercepted;
	
	[tag="ftnt", description="averageFatigueAfterNinety"]
    uint16_t averageFatigueAfterNinety;
	
	[tag="ijrd", description="injuriesRed"]
    uint16_t injuriesRed;
};


} // namespace SSF
} // namespace GameReporting
} // namespace Blaze
