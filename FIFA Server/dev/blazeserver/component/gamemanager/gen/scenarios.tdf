/*! ************************************************************************************************/
/*!
    \file scenarios.tdf

    \attention
        (c) Electronic Arts. All Rights Reserved.
*/
/*! ************************************************************************************************/

[headername="gamemanager/tdf/gamemanager_types.h"]
#include "gamemanager/gen/gamemanager_types.tdf"

namespace Blaze
{
namespace GameManager
{

typedef TemplateAttributeName ScenarioAttributeName;       // Name of the attribute, as sent by client  (ex. GAME_MODE)

const uint32_t SCENARIO_ATTR_VALUE_LENGTH = TEMPLATE_ATTR_VALUE_LENGTH;
typedef TemplateAttributeTdfMemberName ScenarioAttributeTdfMemberName;      // Name of the TDF member (ex. "Blaze::GameManager::StartMatchmakingRequest.mSessionData.mPseudoRequest")

typedef TemplateAttributeDefinition ScenarioAttributeDefinition;
typedef TemplateAttributeMapping ScenarioAttributeMapping;


[ description = "Start a new matchmaking session with a given scenario." ]
class StartMatchmakingScenarioRequest
{
    // Scenario Data:
    [tag="scnm"]
    ScenarioName mScenarioName;
    [tag="scna"]
    ScenarioAttributes mScenarioAttributes;
 
    // Common Data:
    [tag="pljd"]
    PlayerJoinData mPlayerJoinData;
    [tag="cmgd"]
    CommonGameRequestData mCommonGameData;
};
 
[
    description = "Response to a StartMatchmakingScenarioRequest; returns the matchmaking scenario id of the newly started scenario."
]
class StartMatchmakingScenarioResponse
{
    [tag="msid", description="The matchmaking scenario id."]
        MatchmakingScenarioId mScenarioId;

    [tag="scid", description="External Session service config identifier"]
        XblScid mScid;
    [tag="stmn", description="External Session template name"]
        XblSessionTemplateName mExternalSessionTemplateName;
    [tag="esnm", description="External Session name"]
        XblSessionName mExternalSessionName;
    [tag="coid"]
        XblCorrelationId mExternalSessionCorrelationId;
    [tag="ettm"]
        TimeValue mEstimatedTimeToMatch;
    [tag="vari", description="Scenario Variant name"]
        ScenarioVariantName mScenarioVariant;
    [tag="rtag", description="Reco tracking tag"]
        RecoTrackingTag mRecoTrackingTag;
};

[
    description = "Cancel one of your existing matchmaking scenario requests."
]
class CancelMatchmakingScenarioRequest
{
    [tag="msid", description="The matchmaking scenario id to cancel."]
        MatchmakingScenarioId mMatchmakingScenarioId;
};


class GetScenariosAttributesResponse
{
    [tag="msid", description="The matchmaking scenario attributes used per-scenario."]
    map<ScenarioName, ScenarioAttributeMapping> mScenarioAttributes;
};

} // namespace GameManager
} // namespace Blaze
