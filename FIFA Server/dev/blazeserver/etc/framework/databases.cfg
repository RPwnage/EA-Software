databaseConfig = {

#if (ENV == "dev")
    verbatimQueryStringChecksEnabled = true
#else
    verbatimQueryStringChecksEnabled = false
#endif

// ====================================================
// DBMig content environment settings
// ====================================================
dbmig = {
#ifdef DBCONTENTENV
   contentEnvironment = "#DBCONTENTENV#"
#endif
}

#ifdef USING_BITC
databaseConnections = {
// For blazeservers using BitC, the databaseConnections config block is autogenerated
// from data supplied to the BitC Portal
    #include "../init/databases.cfg"
}
#else //USING_BITC

// ====================================================
// Database connection settings
// If DBBASE is defined, we use that as is. This allows backward compatibility with integrators without enforcing any standard format on their schema naming. While each integrator tend to use
// PLATFORM specific db schema, the location of PLATFORM string in the schema is somewhat arbitrary.
//
// If DBBASE is not defined, we use DBBASE_PREFIX and add platform specific suffix ourselves. This is the preferred method moving forward and only supported method in shared cluster. It does impose
// a default naming convention. The integrators, of course, can rewrite this entire configuration as it pleases them (and some do!).
// Use #tops-db-coredba slack channel for db connection issues.  
// ====================================================

#ifdef VAULT_DBNAME
  #define DBNAME "#VAULT_DBNAME#/main"
#endif

#if SANITIZER == "1"
    dbScheduler = {
            dbRuntimeQueryTimeout = "360s"
            dbStartupQueryTimeout = "10m" 
        }
#endif    
    
#ifndef ARSON
databaseConnections = {
    main = {
        #ifdef DBBASE
            #define DBBASE_PLAT "#DBBASE#"
        #else
            #define DBBASE_PLAT "#DBBASE_PREFIX#_#PLATFORM#"
        #endif

        #ifndef VAULT_DBNAME
          #define DBNAME "#ENV#/#BLAZE_SERVICE_NAME_DEFAULT#/main"
        #endif
        #include "framework/databases_main.cfg"
    }


#if PLATFORM == "common"
// default configuration of per platform schema in a shared cluster

    #if XPLAY_HOST_PC == "1"
        main_pc = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_pc"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#PC_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_XONE == "1" || XPLAY_HOST_XBSX == "1"
        main_xbl = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_xbl"
            #ifndef VAULT_DBNAME
              #if XPLAY_HOST_XBSX == "1" 
                #define DBNAME "#ENV#/#XBSX_SERVICE_NAME_DEFAULT#/main"
              #else
                #define DBNAME "#ENV#/#XONE_SERVICE_NAME_DEFAULT#/main"
              #endif
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_XONE == "1"
        main_xone = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_xone"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#XONE_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_XBSX == "1"
        main_xbsx = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_xbsx"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#XBSX_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_PS4 == "1" || XPLAY_HOST_PS5 == "1"
        main_psn = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_psn"
            #ifndef VAULT_DBNAME
              #if XPLAY_HOST_PS5 == "1" 
                #define DBNAME "#ENV#/#XBSX_SERVICE_NAME_DEFAULT#/main"
              #else
                #define DBNAME "#ENV#/#PS4_SERVICE_NAME_DEFAULT#/main"
              #endif
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_PS4 == "1"
        main_ps4 = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_ps4"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#PS4_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_PS5 == "1"
        main_ps5 = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_ps5"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#PS5_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_NX == "1"
        main_nx = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_nx"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#NX_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_IOS == "1"
        main_ios = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_ios"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#IOS_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_ANDROID == "1"
        main_android = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_android"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#ANDROID_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_STEAM == "1"
        main_steam = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_steam"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#STEAM_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif
    #if XPLAY_HOST_STADIA == "1"
        main_stadia = {
            #define DBBASE_PLAT "#DBBASE_PREFIX#_stadia"
            #ifndef VAULT_DBNAME
              #define DBNAME "#ENV#/#STADIA_SERVICE_NAME_DEFAULT#/main"
            #endif
            #include "framework/databases_main.cfg"
        }
    #endif

#endif 
}

#else //ARSON

#include "framework/arson/arson-databases.cfg"
#include "framework/arson/arson-databases-aliases.cfg"

#endif // ARSON

#endif // USING_BITC

}
