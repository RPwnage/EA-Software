// Defines the TDF classes used in the XmsHd component
//  TDF classes are compiled with TypeComp, generating C++ classes that can be serialized in RPCs and Notifications.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/Typecomp for info on the .tdf spec, as well as the compiler, TypeComp

[headername="framework/tdf/userdefines.h"]
#include "framework/gen/userdefines.tdf"

namespace Blaze
{
[usePtrOption=true]
namespace ContentReporter
{
	const uint32_t MAX_SUBJECT_LENGTH = 360;	
	const uint32_t MAX_CONTENT_TEXT_LENGTH = 1024;

	enum ReportContentType
	{
		CHAT,
		COMMENT,
		POST,
		VIDEO,
		IMAGE,
		AVATAR,
		NAME,
		STATUSMESSAGE
	};
	
	enum OnlineReportType
	{
		INVALID,
		AVATAR_NAME,
		CLUB_NAME,
		AI_PLAYER_NAMES,
        STADIUM_NAME
	};
	
	class FileReportRequest
	{		
		[tag="subj", description="Subject"] 
		string(MAX_SUBJECT_LENGTH) mSubject;
		
		[tag="trgt", description="Petition targets"]
		BlazeId mTargetUser;
		
		[tag="pnct", description="The type of the content that is being reported in the petition"]
		ReportContentType mContentType;
	};
	
	class CommonAbuseReport
	{
		[tag="subj", description="Subject"] 
		string(MAX_SUBJECT_LENGTH) mSubject;
		
		[tag="trgt", description="Petition target blazeId"]
		BlazeId mTargetBlazeId;
		
		[tag="trex", description="Petition target nucleusId"]
		AccountId mTargetNucleusId;
		
		[tag="pnct", description="The type of the content that is being reported in the petition"]
		ReportContentType mContentType;	
	};

	class FileOnlineReportRequest
	{		
		[tag="cmar", description="Common abuse report"]		
		CommonAbuseReport mCommonAbuseReport;
		
		[tag="ortp", description="The type of Online report we are sending. Used to separate Online petition types"]
		OnlineReportType mOnlineReportType;	
		
		[tag="ctxt", description="This field can be used to include information about the reported content like offensive text at that time of making the report"]
		string(MAX_CONTENT_TEXT_LENGTH) mContentText;
		
		[tag="cbid", description="The clubId for the reported club"]
		int64_t mClubId;
	};
	
	class FileFUTReportRequest
	{		
		[tag="cmar", description="Common abuse report"]		
		CommonAbuseReport mCommonAbuseReport;
		
		[tag="ctxt", description="This field can be used to include information about the reported content like offensive text at that time of making the report"]
		string(MAX_CONTENT_TEXT_LENGTH) mContentText;
		
		[tag="rsku", description="SKU"]
		string(100) mSku;
		
		[tag="asid", description="The squadId for the reported squad"]
		int64_t mSquadId;
	};
	
	class FileSSFReportRequest
	{		
		[tag="cmar", description="Common abuse report"]		
		CommonAbuseReport mCommonAbuseReport;
		
		[tag="ctxt", description="This field can be used to include information about the reported content like offensive text at that time of making the report"]
		string(MAX_CONTENT_TEXT_LENGTH) mContentText;
		
		[tag="rsku", description="SKU"]
		string(100) mSku;
	};
	
	class FileReportResponse
	{
		[tag="guid", description="GUID of petition"] 
		string(36) mPetitionGuid;
		
		[tag="rsts", description="Status of the request"] 
		string(12) mStatus;
		
		[tag="errm", description="Error Message"] 
		string(100) mErrorMessage;
		
	};

} // ContentReporter
} // Blaze



