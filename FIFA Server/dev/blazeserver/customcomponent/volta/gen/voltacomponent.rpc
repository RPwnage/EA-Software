// Defines the RPCs and async notifications used in the Volta component.
// RPC classes are compiled with RPCComp, generating C++ classes (or class stubs) that the component must implement.
//
// Note: see http://gos.online.ea.com/confluence/display/tech/RPCComp for info on the .rpc file/lang spec and the compiler, RpcComp
//
// We assume that all request and response types are valid and just use them
// directly in the code generation.
//
// The compiler should ensure that all commands within a component have a unique ID.
// The compiler should ensure that all components within a file have a unique ID.
// Zero is not a valid component or command ID
// Enforce that method names must start with lowercase letter.
// Enforce C++ rules for method names and TDF type names.
// Allow C++ style comments.
//

[ headername="volta/tdf/voltatypes.h" ]
#include "volta/gen/voltatypes.tdf"

[ 
  client_include = false,
  headername="volta/tdf/voltatypes_server.h" 
]

#include "volta/gen/voltatypes_server.tdf"

namespace Blaze
{
namespace Volta
{
[
  id = custom/32,
  configurationType = VoltaConfig
]
component Volta
{
	errors
	{
		[ description = "An error has occurred." ]
		VOLTA_ERR_GENERAL = 1;
		[ description = "Parameters are invalid." ]
		VOLTA_ERR_INVALID_PARAMS = 2;
		[ description = "No Http Connection Available" ]
		VOLTA_ERR_NO_HTTP_CONNECTION_AVAILABLE = 3;
		[ description = "Http Client Error 400 - Bad Request" ]
		VOLTA_ERR_HTTP_BAD_REQUEST = 4;
		[ description = "Http Client Error 401 - UnAuthorized" ]
		VOLTA_ERR_HTTP_UNAUTHORIZED = 5;
		[ description = "Http Client Error 403 - Forbidden Access" ]
		VOLTA_ERR_HTTP_FORBIDDEN_ACCESS = 6;
		[ description = "Http Server Error 500 - Server Error" ]
		VOLTA_ERR_HTTP_SERVER = 7;
	}

	[ clientname = "VoltaComponent" ]
	slave
	{			
		methods
		{ 
			[
				id = 1,
				errors = {
					VOLTA_ERR_GENERAL,
					VOLTA_ERR_INVALID_PARAMS,
					VOLTA_ERR_NO_HTTP_CONNECTION_AVAILABLE,
					VOLTA_ERR_HTTP_BAD_REQUEST,
					VOLTA_ERR_HTTP_UNAUTHORIZED,
					VOLTA_ERR_HTTP_FORBIDDEN_ACCESS,
					VOLTA_ERR_HTTP_SERVER
				},
				requiresUserSession = true
			]

			void requestSSASMatchEnd(SSASMatchEndRequest);
              	
		} // methods
	} // slave

}
}
}


