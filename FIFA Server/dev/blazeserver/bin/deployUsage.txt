# Version 1.0 -- Blaze Deploy Script
#
# The deploy.py script will allow one to deploy a blaze system to a remote
# server and execute commands remotely.
#
# A configuration file is used to specify the deploy information.
#
# A filelist is used to specify which files need to be included in
# a Blaze deploy package.
#

build-dist:
    Builds a archive that should be used to deploy

clean-dist:
    Cleans all archives previously built with build-dist

clean-build:
    Clean the archive directory and build a new dist

configure:
    Does nothing at this time

dbmig:
    Does nothing at this time

deploy:
    Deploys the latest archive built

deploy-cfg:
    Deploys the latest archive built but only uses the configuration files
    from the achive and copies everything else from the previous deploy

info:
    Does nothing at this time

invoke:
    Invoke takes in a command using the -c=<command> command-line option.
    Invoke is used to issue a rollback command, dbmig command, and can be
    used to issue a restart, stop, start, and/or reload.  This will run
    the command using the most recent server only so if you started a
    previous deploy manually you will need to stop that first.

reload:
    Issues a kill -HUP on the processes currently running from that blaze
    deploy.

restart:
    Restarts the processes.

rollback:
    Rollback will shutdown the current deploy, clean up the links, remove
    the deploy and start the previous deploy.  This can be issued from
    the current deploy folder or by using the invoke command.

start:
    Starts the blaze server(s)

stop:
    Stops the blaze server(s)

Command-line Options:
    -a=<archive>
        This specifies which archive file to use for the command.  All
        archive files are stored in the archive folder which gets
        created when one runs build-dist and removed when a clean-dist
        is called.  This should not need to be specified by a user.
    -c=<command>
        This specifies which command for invoke to execute.  This is
        required for invoke and ignored for everything else.
    -d=<dir>
        This specifies the deploy directory.  This is not required
        when doing a regular deploy.
    -e=<environment>
        Specifies the environment to deploy to or run invoke commands
        from.
    -p=<platform>
        Specifies the platform of the deploy.  Currently does nothing.
    -s=<server>
        Specifies the server to deploy too.  A user should not set the
        server.  Instead they should use the -e option and change the
        deploy.cfg as required.

Example Deploy Commands:
./deploy.py build-dist
./deploy.py clean-dist
./deploy.py deploy -e=dev
./deploy.py invoke -e=dev -c=rollback
