[headername="framework/tdf/userdefines.h"]
#include "framework/gen/userdefines.tdf"

namespace Blaze
{


[trackChanges = true, description = "This class defines all the data that describes the identity of a particular logged in user."]
class UserInfoData
{
    [tag="uid", description = "The Blaze/Persona ID of the user."]  
    BlazeId mId;
    
    [tag="name", description="The name of the logged in persona."] 
    string(MAX_PERSONA_LENGTH) mPersonaName;

    [tag="nasp", description="The persona namespace."]
    PersonaNamespace mPersonaNamespace;

    [tag="aids", description="Contains platform ids and current client platform."] 
    PlatformInfo mPlatformInfo;
    
    [tag="aloc", description="Account locale settings for this user."] 
    Locale mAccountLocale;

    [tag="acty", description="Account country setting for this user."] 
    uint32_t mAccountCountry;

    [tag="uatt", description="Custom user info attribute."]
    UserInfoAttribute mUserInfoAttribute;
    
    [tag="stat", default=1, description="account status active/disabled"]
    uint32_t mStatus;
    
    [tag="flog", default=0, description="the date/time of the users first login to the title"]
    int64_t mFirstLoginDateTime;
    
    [tag="llog", default=0, description="the date/time of the users last login to the title"]
    int64_t mLastLoginDateTime;
    
    [tag="plog", default=0, description="the date/time of the users previous login to the title"]
    int64_t mPreviousLoginDateTime;

    [tag="lout", default=0, description="the date/time of the users last logout from the title"]
    int64_t mLastLogoutDateTime;
    
    [tag="lsal", description="Last connection locale settings used."]
    Locale mLastLocaleUsed;

    [tag="lsct", description="Last connection country settings used."]
    uint32_t mLastCountryUsed;

    [tag="err", description="Last auth error."] 
    uint32_t mLastAuthErrorCode;
    
    [tag="cacc", default=false, description="Child account."] 
    bool mIsChildAccount;

    [tag="ispp", default=true, description="Is this persona the primary persona for this platform."] 
    bool mIsPrimaryPersona;

    [tag="xplt", default=true, description="Is this user opted in to cross platform interactions."] 
    bool mCrossPlatformOptIn;
    
    [tag="stpr", default=false, description="True if the users Nucleus account has the StopProcess flag enabled."] 
    bool mStopProcess;
    
    [tag="orig", description="The Origin persona id of the user."]
    OriginPersonaId mOriginPersonaId;

    [tag="pidi", description="The Pid Id of the user."]
    int64_t mPidId;

    [tag="voip", default=false, description="Is VoIP disabled"]
    bool mVoipDisabled;
};

[description="Used to update the user info attribute in user extended data in master."]
class UpdateUserInfoAttributeRequest
{
    [tag="uatt"] UserInfoAttributeMap mUserInfoAttributeById;
};

[description="Used to update the core slave to aux slave mappings in master."]
class UpdateSlaveMappingRequest
{
    enum RequestType
    {
        MAPPING_CREATE,
        MAPPING_REMOVE,
    };
    
    [tag="auxi"] InstanceId mAuxInstanceId;
    [tag="aidx"] uint8_t mAuxTypeIndex;
    [tag="cori"] InstanceId mCoreInstanceId;
    [tag="type"] RequestType mRequestType;
    [tag="ilur"] bool mImmediatePartialLocalUserReplication;
};

enum SubscriptionAction
{
    ACTION_ADD,
    ACTION_REMOVE
};

[description="Used to update the user subscription mappings on the core slave."]
class NotifyUpdateUserSubscriptions
{
    [tag="trgt"] UserSessionId mTargetUserSessionId;
    [tag="usrs", allowref=true] BlazeIdList mBlazeIds;
    [tag="actn"] SubscriptionAction mAction;
    [tag="ctxt"] string(150) mContext;
    [tag="ssub"] bool mIncludeSessionSubscription;
};

[description="Used to update the session subscription mappings on the core slave."]
class NotifyUpdateSessionSubscriptions
{
    [tag="trgt"] UserSessionId mTargetUserSessionId;
    [tag="ntfr", allowref=true] UserSessionIdList mNotifierIds;
    [tag="actn"] SubscriptionAction mAction;
    [tag="ctxt"] string(150) mContext;
};

[description="Used to remove user from cache."]
class UserInfoUpdated
{
    [tag="bid"] BlazeId mBlazeId;
    [tag="aid", default=INVALID_ACCOUNT_ID] AccountId mAccountId;
};

[description="Used when a user first logs in, for Neg Cache removal on all slaves."]
class NotifyRemoveUserFromNegativeCache
{
    [tag="name", description="The name of the logged in persona."] 
    string(MAX_PERSONA_LENGTH) mPersonaName;

    [tag="orig", description="The Origin persona id of the user."]
    OriginPersonaId mOriginPersonaId;

    [tag="nasp", description="The persona namespace."]
    string(64) mPersonaNamespace;

    [tag="aids", description="Contains platform ids and current client platform."] 
    PlatformInfo mPlatformInfo;
};

}
