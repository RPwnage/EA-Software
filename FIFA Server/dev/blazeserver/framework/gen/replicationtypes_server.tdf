namespace Blaze
{

typedef uint64_t ReplicationSubscriptionId;
const uint64_t INVALID_REPLICATION_SUBSCRIPTION_ID = 0;
const uint64_t FORCED_REPLICATION_SUBSCRIPTION_ID = 1;

class ReplicationMapCreationUpdate
{
    [tag="comp"] uint16_t mComponentId;
    [tag="ctyp"] uint16_t mCollectionType;
    [tag="cid"]  uint64_t mCollectionId;
    [tag="vers"] uint64_t mVersion;
    [tag="ctxt"] variable mContext;    
};

class ReplicationMapDeletionUpdate
{
    [tag="comp"] uint16_t mComponentId;
    [tag="ctyp"] uint16_t mCollectionType;
    [tag="cid"]  uint64_t mCollectionId;
    [tag="vers"] uint64_t mVersion;
    [tag="ctxt"] variable mContext;
};

class ReplicationDeletionUpdate
{
    [tag="comp"] uint16_t mComponentId;
    [tag="ctyp"] uint16_t mCollectionType;
    [tag="cid"]  uint64_t mCollectionId;
    [tag="oid"]  uint64_t mObjectId;
    [tag="vers"] uint64_t mVersion;
    [tag="ctxt"] variable mContext;
    [tag="notc", default=INVALID_REPLICATION_SUBSCRIPTION_ID] ReplicationSubscriptionId mSubscriptionId;
};


class ReplicationUpdate
{
    [tag="cpid"] uint16_t mComponentId;
    [tag="ctyp"] uint16_t mCollectionType;
    [tag="clid"] uint64_t mCollectionId;
    [tag="obid"] uint64_t mObjectId;
    [tag="vers"] uint64_t mVersion;
    [tag="ctxt"] variable mContext;
    [tag="otdf"] variable mObjectTdf;
    [tag="incr"] bool mIncrementalUpdate;
    [tag="notc", default=INVALID_REPLICATION_SUBSCRIPTION_ID] ReplicationSubscriptionId mSubscriptionId;
};

class ReplicationMapSynchronizationComplete
{
    [tag="comp"] uint16_t mComponentId;
    [tag="ctyp"] uint16_t mCollectionType;
    [tag="clid"] uint64_t mCollectionId;
    [tag="vers"] uint64_t mVersion;
};

class ReplicationSynchronizationComplete
{
    [tag="inst"] uint16_t mInstanceId;
    [tag="comp"] uint16_t mComponentId;
};

class ReplicationSubscribeRequest
{
    typedef list<uint16_t> ReplicationMapTypeList;
    [tag="plst"] ReplicationMapTypeList mPartialReplicationTypes;
};


class ReplicationObjectSubscribe
{
    [tag="inst"] uint16_t mInstanceId;
    [tag="cpid"] uint16_t mComponentId;
    [tag="ctyp"] uint16_t mCollectionType;
    [tag="clid"] uint64_t mCollectionId;
    [tag="obid"] uint64_t mObjectId;    
    [tag="sub"] bool mSubscribe;
    [tag="notc", default=INVALID_REPLICATION_SUBSCRIPTION_ID] ReplicationSubscriptionId mSubscriptionId;
};


}
