namespace EA
{

namespace TDF
{

namespace Test
{

enum OutOfClassEnum
{
   OUT_OF_CLASS_ENUM_VAL_1 = 1,
   OUT_OF_CLASS_ENUM_VAL_2 = 2,
   OUT_OF_CLASS_ENUM_VAL_3 = 3
};

bitfield ABitField 
{
    BIT_0;
    BIT_1_2 : 2;
    BIT_3;
};

bitfield AnotherBitField 
{
    BIT_0     :  1;
    BIT_1_16  : 16;
    BIT_17_20 :  4;
    BIT_21_30 : 10;
    BIT_31;
};

// const values
const uint8_t UINT8_T_CONST = 1;
const uint16_t UINT16_T_CONST = 1;
const uint32_t UINT32_T_CONST = 1;
const uint64_t UINT64_T_CONST = 1;
const int8_t INT8_T_CONST = 1;
const int16_t INT16_T_CONST = 1;
const int32_t INT32_T_CONST = 1;
const int64_t INT64_T_CONST = 1;
const float FLOAT_CONST = 1.0f;

typedef uint32_t MapIntKey;
typedef string(32) MapStringKey;
typedef OutOfClassEnum MapEnumKey;
typedef blob MapBlobKey;

[trackChanges=true]
class AllPrimitivesClass
{   

    [tag="tagj"]
    bool mBool;

    [tag="taga"]
    uint8_t mUInt8;
    
    [tag="tagb"]
    uint16_t mUInt16;
    
    [tag="tagc"]
    uint32_t mUInt32;
    
    [tag="tagd"]
    uint64_t mUInt64;
    
    [tag="tage"]
    int8_t mInt8;
    
    [tag="tagf"]
    int16_t mInt16;
    
    [tag="tagg"]
    int32_t mInt32;
    
    [tag="tagh"]
    int64_t mInt64;

    [tag="flt", default=1.010101]
    float mFloat;

    [tag="tagi", default="kitty"]
    string(32) mString;

    [tag="oenu"]
    OutOfClassEnum mOutOfClassEnum;

    enum InClassEnum
    {
       IN_OF_CLASS_ENUM_VAL_1 = 1,
       IN_OF_CLASS_ENUM_VAL_2 = 2,
       IN_OF_CLASS_ENUM_VAL_3 = 3
    };

    [tag="ienu", default=IN_OF_CLASS_ENUM_VAL_1]
    InClassEnum mInClassEnum;    
};

typedef map<MapIntKey, MapStringKey> mapTest;

[trackChanges=true]
class AllPrimitivesConstDefaultClass
{   

    [tag="taga", default=UINT8_T_CONST]
    uint8_t mUInt8;
    
    [tag="tagb", default=UINT16_T_CONST]
    uint16_t mUInt16;
    
    [tag="tagc", default=UINT32_T_CONST]
    uint32_t mUInt32;
    
    [tag="tagd", default=UINT64_T_CONST]
    uint64_t mUInt64;
    
    [tag="tage", default=INT8_T_CONST]
    int8_t mInt8;
    
    [tag="tagf", default=INT16_T_CONST]
    int16_t mInt16;
    
    [tag="tagg", default=INT32_T_CONST]
    int32_t mInt32;
    
    [tag="tagh", default=INT64_T_CONST]
    int64_t mInt64;

    [tag="flt", default=FLOAT_CONST]
    float mFloat;
};

[trackChanges=true]
class AllPrimitivesMaxDefaultClass
{   

    [tag="taga", default=UINT8_MAX]
    uint8_t mUInt8;
    
    [tag="tagb", default=UINT16_MAX]
    uint16_t mUInt16;
    
    [tag="tagc", default=UINT32_MAX]
    uint32_t mUInt32;
    
    [tag="tagd", default=UINT64_MAX]
    uint64_t mUInt64;
    
    [tag="tage", default=INT8_MAX]
    int8_t mInt8;
    
    [tag="tagf", default=INT16_MAX]
    int16_t mInt16;
    
    [tag="tagg", default=INT32_MAX]
    int32_t mInt32;
    
    [tag="tagh", default=INT64_MAX]
    int64_t mInt64;

    [tag="flt", default=FLT_MAX]
    float mFloat;
};


[trackChanges=true]
class AllPrimitivesMinDefaultClass
{   
    
    [tag="tage", default=INT8_MIN]
    int8_t mInt8;
    
    [tag="tagf", default=INT16_MIN]
    int16_t mInt16;
    
    [tag="tagg", default=INT32_MIN]
    int32_t mInt32;
    
    [tag="tagh", default=INT64_MIN]
    int64_t mInt64;

    [tag="flt", default=FLT_MIN]
    float mFloat;
};


[trackChanges=true]
class AllPrimitivesClassSimple
{   
    [tag="tagj"]
    bool mBool;

    [tag="var"]
    variable mVariable;

    [tag="taga"]
    uint8_t mUInt8;
    
    [tag="tagh"]
    int64_t mInt64;
};

[trackChanges=true]
class AllPrimitivesClassDecoder
{   
    [tag="tagj"]
    bool mBool;

    [tag="taga"]
    uint8_t mUInt8;
    
    [tag="tagh"]
    int64_t mInt64;

    [tag="tagi"]
    string(32) mString;

    [tag="mapt"]
    mapTest mMapTesting;

    [tag="abjb"]
    list<bool> mBoolist;
};

[trackChanges=true]
union AllPrimitivesUnion
{   

    [tag="tagj"]
    bool mBool;

    [tag="taga"]
    uint8_t mUInt8;
    
    [tag="tagb"]
    uint16_t mUInt16;
    
    [tag="tagc"]
    uint32_t mUInt32;
    
    [tag="tagd"]
    uint64_t mUInt64;
    
    [tag="tage"]
    int8_t mInt8;
    
    [tag="tagf"]
    int16_t mInt16;
    
    [tag="tagg"]
    int32_t mInt32;
    
    [tag="tagh"]
    int64_t mInt64;

    [tag="flt"]
    float mFloat;

    [tag="tagi"]
    string(32) mString;

    [tag="oenu"]
    OutOfClassEnum mOutOfClassEnum;
   
};

[allocInPlace=true, trackChanges=true]
union AllPrimitivesUnionAllocInPlace
{   
    [tag="tagj"]
    bool mBool;

    [tag="taga"]
    uint8_t mUInt8;
    
    [tag="tagb"]
    uint16_t mUInt16;
    
    [tag="tagc"]
    uint32_t mUInt32;
    
    [tag="tagd"]
    uint64_t mUInt64;
    
    [tag="tage"]
    int8_t mInt8;
    
    [tag="tagf"]
    int16_t mInt16;
    
    [tag="tagg"]
    int32_t mInt32;
    
    [tag="tagh"]
    int64_t mInt64;

    [tag="flt"]
    float mFloat;

    [tag="tagi"]
    string(32) mString;

    [tag="oenu"]
    OutOfClassEnum mOutOfClassEnum;

};

[trackChanges=true]
class AllComplexClass
{
    [tag="clas"]
    AllPrimitivesClass mClass;

    [tag="unio"]
    AllPrimitivesUnion mUnion;

    [tag="bitf"]
    ABitField mBitField;

    [tag="blob"]
    blob mBlob;

    [tag="objt"]
    ObjectType mObjectType;

    [tag="obji"]
    ObjectId mObjectId;
       
    [tag="time"]
    TimeValue mTime;

    [tag="var"]
    variable mVariable;

    [tag="gen"]
    generic mGeneric;
};

[trackChanges=true]
class AllComplexClassXML
{
    [tag="unio"]
    AllPrimitivesUnion mUnion;
};

[trackChanges=true]
union AllComplexUnion
{
    [tag="clas"]
    AllPrimitivesClass mClass;

    [tag="unio"]
    AllPrimitivesUnion mUnion;

    [tag="bitf"]
    ABitField mBitField;

    [tag="blob"]
    blob mBlob;

    [tag="objt"]
    ObjectType mObjectType;

    [tag="obji"]
    ObjectId mObjectId;
       
    [tag="time"]
    TimeValue mTime;

    [tag="var"]
    variable mVariable;

    [tag="gen"]
    generic mGeneric;

};

[allocInPlace=true, trackChanges=true]
union AllComplexUnionAllocInPlace
{
    [tag="clas"]
    AllPrimitivesClass mClass;

    [tag="unio"]
    AllPrimitivesUnion mUnion;

    [tag="bitf"]
    ABitField mBitField;

    [tag="blob"]
    blob mBlob;

    [tag="objt"]
    ObjectType mObjectType;

    [tag="obji"]
    ObjectId mObjectId;
       
    [tag="time"]
    TimeValue mTime;

    [tag="var"]
    variable mVariable;

    [tag="gen"]
    generic mGeneric;
};

[trackChanges=true]
class AllListsPrimitivesClass
{   
    [tag="tagj"]
    list<bool> mBool;

    [tag="taga"]
    list<uint8_t> mUInt8;
    
    [tag="tagb"]
    list<uint16_t> mUInt16;
    
    [tag="tagc"]
    list<uint32_t> mUInt32;
    
    [tag="tagd"]
    list<uint64_t> mUInt64;
    
    [tag="tage"]
    list<int8_t> mInt8;
    
    [tag="tagf"]
    list<int16_t> mInt16;
    
    [tag="tagg"]
    list<int32_t> mInt32;
    
    [tag="tagh"]
    list<int64_t> mInt64;

    [tag="flt"]
    list<float> mFloat;

    [tag="tagi"]
    list<string(32)> mString;

    [tag="oenu"]
    list<OutOfClassEnum> mOutOfClassEnum;

    enum InClassEnum
    {
       IN_OF_CLASS_ENUM_VAL_1 = 1,
       IN_OF_CLASS_ENUM_VAL_2 = 2,
       IN_OF_CLASS_ENUM_VAL_3 = 3
    };

    [tag="ienu"]
    list<InClassEnum> mInClassEnum;    
};

[trackChanges=true]
union AllListsPrimitivesUnion
{   
    [tag="tagj"]
    list<bool> mBool;

    [tag="taga"]
    list<uint8_t> mUInt8;
    
    [tag="tagb"]
    list<uint16_t> mUInt16;
    
    [tag="tagc"]
    list<uint32_t> mUInt32;
    
    [tag="tagd"]
    list<uint64_t> mUInt64;
    
    [tag="tage"]
    list<int8_t> mInt8;
    
    [tag="tagf"]
    list<int16_t> mInt16;
    
    [tag="tagg"]
    list<int32_t> mInt32;
    
    [tag="tagh"]
    list<int64_t> mInt64;

    [tag="flt"]
    list<float> mFloat;

    [tag="tagi"]
    list<string(32)> mString;

    [tag="oenu"]
    list<OutOfClassEnum> mOutOfClassEnum;

};

[allocInPlace=true, trackChanges=true]
union AllListsPrimitivesUnionAllocInPlace
{   
    [tag="tagj"]
    list<bool> mBool;

    [tag="taga"]
    list<uint8_t> mUInt8;
    
    [tag="tagb"]
    list<uint16_t> mUInt16;
    
    [tag="tagc"]
    list<uint32_t> mUInt32;
    
    [tag="tagd"]
    list<uint64_t> mUInt64;
    
    [tag="tage"]
    list<int8_t> mInt8;
    
    [tag="tagf"]
    list<int16_t> mInt16;
    
    [tag="tagg"]
    list<int32_t> mInt32;
    
    [tag="tagh"]
    list<int64_t> mInt64;

    [tag="flt"]
    list<float> mFloat;

    [tag="tagi"]
    list<string(32)> mString;

    [tag="oenu"]
    list<OutOfClassEnum> mOutOfClassEnum; 
};

typedef list<list<bool>> BoolListList;
typedef list<list<AllPrimitivesClass>> ClassListList;
typedef list<map<MapIntKey, bool>> IntBoolMapList;
typedef list<map<MapStringKey, bool>> StringBoolMapList;
typedef list<map<MapIntKey, AllPrimitivesClass>> IntClassMapList;
typedef list<map<MapEnumKey, bool>> EnumBoolMapList;
typedef list<map<MapBlobKey, bool>> BlobBoolMapList;
typedef list<map<MapStringKey, AllPrimitivesClass>> StringClassMapList;    
typedef list<map<MapEnumKey, AllPrimitivesClass>> EnumClassMapList;
typedef list<map<MapBlobKey, AllPrimitivesClass>> BlobClassMapList;

[trackChanges=true]
class AllListsComplexClass
{
    [tag="clas"]
    list<AllPrimitivesClass> mClass;

    [tag="unio"]
    list<AllPrimitivesUnion> mUnion;

    [tag="bitf"]
    list<ABitField> mBitField;

    [tag="blob"]
    list<blob> mBlob;

    [tag="objt"]
    list<ObjectType> mObjectType;

    [tag="obji"]
    list<ObjectId> mObjectId;
       
    [tag="time"]
    list<TimeValue> mTime;

    [tag="var"]
    list<variable> mVariable;

    [tag="gen"]
    list<generic> mGeneric;
   
    [tag="lisp"]
    BoolListList mListBool;
    
    [tag="lisc"]
    ClassListList mListClass;
    
    [tag="mip"]
    IntBoolMapList mMapIntBool;

    [tag="msp"]
    StringBoolMapList mMapStringBool;
    
    [tag="eip"]
    EnumBoolMapList mMapEnumBool;

    [tag="bsp"]
    BlobBoolMapList mMapBlobBool;

    [tag="mic"]
    IntClassMapList mMapIntClass;

    [tag="msc"]
    StringClassMapList mMapStringClass;

    [tag="eic"]
    EnumClassMapList mMapEnumClass;

    [tag="bsc"]
    BlobClassMapList mMapBlobClass;
};

[trackChanges=true]
class AllListsComplexClassTest
{

    [tag="var"]
    list<variable> mVariable;

};

[trackChanges=true]
union AllListsComplexUnion
{
    [tag="clas"]
    list<AllPrimitivesClass> mClass;

    [tag="unio"]
    list<AllPrimitivesUnion> mUnion;

    [tag="bitf"]
    list<ABitField> mBitField;

    [tag="blob"]
    list<blob> mBlob;

    [tag="objt"]
    list<ObjectType> mObjectType;

    [tag="obji"]
    list<ObjectId> mObjectId;
       
    [tag="time"]
    list<TimeValue> mTime;

    [tag="var"]
    list<variable> mVariable;

    [tag="gen"]
    list<generic> mGeneric;
   
    [tag="lisp"]
    BoolListList mListBool;
    
    [tag="lisc"]
    ClassListList mListClass;
    
    [tag="mip"]
    IntBoolMapList mMapIntBool;

    [tag="msp"]
    StringBoolMapList mMapStringBool;
    
    [tag="eip"]
    EnumBoolMapList mMapEnumBool;

    [tag="bsp"]
    BlobBoolMapList mMapBlobBool;

    [tag="mic"]
    IntClassMapList mMapIntClass;

    [tag="msc"]
    StringClassMapList mMapStringClass;

    [tag="eic"]
    EnumClassMapList mMapEnumClass;

    [tag="bsc"]
    BlobClassMapList mMapBlobClass;

};

[allocInPlace=true, trackChanges=true]
union AllListsComplexUnionAllocInPlace
{
    [tag="clas"]
    list<AllPrimitivesClass> mClass;

    [tag="unio"]
    list<AllPrimitivesUnion> mUnion;

    [tag="bitf"]
    list<ABitField> mBitField;

    [tag="blob"]
    list<blob> mBlob;

    [tag="objt"]
    list<ObjectType> mObjectType;

    [tag="obji"]
    list<ObjectId> mObjectId;
       
    [tag="time"]
    list<TimeValue> mTime;

    [tag="var"]
    list<variable> mVariable;

    [tag="gen"]
    list<generic> mGeneric;
   
    [tag="lisp"]
    BoolListList mListBool;
    
    [tag="lisc"]
    ClassListList mListClass;
    
    [tag="mip"]
    IntBoolMapList mMapIntBool;

    [tag="msp"]
    StringBoolMapList mMapStringBool;
    
    [tag="eip"]
    EnumBoolMapList mMapEnumBool;

    [tag="bsp"]
    BlobBoolMapList mMapBlobBool;

    [tag="mic"]
    IntClassMapList mMapIntClass;

    [tag="msc"]
    StringClassMapList mMapStringClass;

    [tag="eic"]
    EnumClassMapList mMapEnumClass;

    [tag="bsc"]
    BlobClassMapList mMapBlobClass;

};

[trackChanges=true]
class AllMapsPrimitivesClass
{   
    [tag="ib"]
    map<MapIntKey, bool> mIntBool;

    [tag="sb"]
    map<MapStringKey, bool> mStringBool;

    [tag="eb"]
    map<MapEnumKey, bool> mEnumBool;

    [tag="bb"]
    map<MapBlobKey, bool> mBlobBool;

    [tag="iui8"]
    map<MapIntKey, uint8_t> mIntUInt8;
    
    [tag="sui8"]
    map<MapStringKey, uint8_t> mStringUInt8;  

    [tag="eui8"]
    map<MapEnumKey, uint8_t> mEnumUInt8;
    
    [tag="bui8"]
    map<MapBlobKey, uint8_t> mBlobUInt8; 

    [tag="iui6"]
    map<MapIntKey, uint16_t> mIntUInt16;
    
    [tag="sui6"]
    map<MapStringKey, uint16_t> mStringUInt16;    

    [tag="eui6"]
    map<MapEnumKey, uint16_t> mEnumUInt16;
    
    [tag="bui6"]
    map<MapBlobKey, uint16_t> mBlobUInt16;   

    [tag="iui3"]
    map<MapIntKey, uint32_t> mIntUInt32;
    
    [tag="sui3"]
    map<MapStringKey, uint32_t> mStringUInt32;    

    [tag="eui3"]
    map<MapEnumKey, uint32_t> mEnumUInt32;
    
    [tag="bui3"]
    map<MapBlobKey, uint32_t> mBlobUInt32;   

    [tag="iui4"]
    map<MapIntKey, uint64_t> mIntUInt64;
    
    [tag="sui4"]
    map<MapStringKey, uint64_t> mStringUInt64;    

    [tag="eui4"]
    map<MapEnumKey, uint64_t> mEnumUInt64;
    
    [tag="bui4"]
    map<MapBlobKey, uint64_t> mBlobUInt64; 

    [tag="iii8"]
    map<MapIntKey, int8_t> mIntInt8;
    
    [tag="sii8"]
    map<MapStringKey, int8_t> mStringInt8;    

    [tag="eii8"]
    map<MapEnumKey, int8_t> mEnumInt8;
    
    [tag="bii8"]
    map<MapBlobKey, int8_t> mBlobInt8;    

    [tag="iii6"]
    map<MapIntKey, int16_t> mIntInt16;
    
    [tag="sii6"]
    map<MapStringKey, int16_t> mStringInt16;    

    [tag="eii6"]
    map<MapEnumKey, int16_t> mEnumInt16;
    
    [tag="bii6"]
    map<MapBlobKey, int16_t> mBlobInt16;  

    [tag="iii3"]
    map<MapIntKey, int32_t> mIntInt32;
    
    [tag="sii3"]
    map<MapStringKey, int32_t> mStringInt32;    

    [tag="eii3"]
    map<MapEnumKey, int32_t> mEnumInt32;
    
    [tag="bii3"]
    map<MapStringKey, int32_t> mBlobInt32; 

    [tag="iii4"]
    map<MapIntKey, int64_t> mIntInt64;
    
    [tag="sii4"]
    map<MapStringKey, int64_t> mStringInt64;    

    [tag="eii4"]
    map<MapEnumKey, int64_t> mEnumInt64;
    
    [tag="bii4"]
    map<MapStringKey, int64_t> mBlobInt64;  

    [tag="if"]
    map<MapIntKey, float> mIntFloat;

    [tag="sf"]
    map<MapStringKey, float> mStringFloat;

    [tag="ef"]
    map<MapEnumKey, float> mEnumFloat;

    [tag="bf"]
    map<MapStringKey, float> mBlobFloat;

    [tag="is"]
    map<MapIntKey, string(32)> mIntString;

    [tag="ss"]
    map<MapStringKey, string(32)> mStringString;
    
    [tag="es"]
    map<MapEnumKey, string(32)> mEnumString;

    [tag="bs"]
    map<MapStringKey, string(32)> mBlobString;
    
    [tag="ioen"]
    map<MapIntKey, OutOfClassEnum> mIntOutOfClassEnum;

    [tag="soen"]
    map<MapStringKey, OutOfClassEnum> mStringOutOfClassEnum;

    [tag="eoen"]
    map<MapEnumKey, OutOfClassEnum> mEnumOutOfClassEnum;

    [tag="boen"]
    map<MapStringKey, OutOfClassEnum> mBlobOutOfClassEnum;
    
    enum InClassEnum
    {
       IN_OF_CLASS_ENUM_VAL_1 = 1,
       IN_OF_CLASS_ENUM_VAL_2 = 2,
       IN_OF_CLASS_ENUM_VAL_3 = 3
    };

    [tag="iien"]
    map<MapIntKey, InClassEnum> mIntInClassEnum;

    [tag="sien"]
    map<MapStringKey, InClassEnum> mStringInClassEnum;
    
    [tag="eien"]
    map<MapEnumKey, InClassEnum> mEnumInClassEnum;

    [tag="bien"]
    map<MapStringKey, InClassEnum> mBlobInClassEnum;
};

[trackChanges=true]
union AllMapsPrimitivesUnion
{   
    [tag="ib"]
    map<MapIntKey, bool> mIntBool;

    [tag="sb"]
    map<MapStringKey, bool> mStringBool;

    [tag="eb"]
    map<MapEnumKey, bool> mEnumBool;

    [tag="bb"]
    map<MapBlobKey, bool> mBlobBool;

    [tag="iui8"]
    map<MapIntKey, uint8_t> mIntUInt8;
    
    [tag="sui8"]
    map<MapStringKey, uint8_t> mStringUInt8;  

    [tag="eui8"]
    map<MapEnumKey, uint8_t> mEnumUInt8;
    
    [tag="bui8"]
    map<MapBlobKey, uint8_t> mBlobUInt8; 

    [tag="iui6"]
    map<MapIntKey, uint16_t> mIntUInt16;
    
    [tag="sui6"]
    map<MapStringKey, uint16_t> mStringUInt16;    

    [tag="eui6"]
    map<MapEnumKey, uint16_t> mEnumUInt16;
    
    [tag="bui6"]
    map<MapBlobKey, uint16_t> mBlobUInt16;   

    [tag="iui3"]
    map<MapIntKey, uint32_t> mIntUInt32;
    
    [tag="sui3"]
    map<MapStringKey, uint32_t> mStringUInt32;    

    [tag="eui3"]
    map<MapEnumKey, uint32_t> mEnumUInt32;
    
    [tag="bui3"]
    map<MapBlobKey, uint32_t> mBlobUInt32;   

    [tag="iui4"]
    map<MapIntKey, uint64_t> mIntUInt64;
    
    [tag="sui4"]
    map<MapStringKey, uint64_t> mStringUInt64;    

    [tag="eui4"]
    map<MapEnumKey, uint64_t> mEnumUInt64;
    
    [tag="bui4"]
    map<MapBlobKey, uint64_t> mBlobUInt64; 

    [tag="iii8"]
    map<MapIntKey, int8_t> mIntInt8;
    
    [tag="sii8"]
    map<MapStringKey, int8_t> mStringInt8;    

    [tag="eii8"]
    map<MapEnumKey, int8_t> mEnumInt8;
    
    [tag="bii8"]
    map<MapBlobKey, int8_t> mBlobInt8;    

    [tag="iii6"]
    map<MapIntKey, int16_t> mIntInt16;
    
    [tag="sii6"]
    map<MapStringKey, int16_t> mStringInt16;    

    [tag="eii6"]
    map<MapEnumKey, int16_t> mEnumInt16;
    
    [tag="bii6"]
    map<MapBlobKey, int16_t> mBlobInt16;  

    [tag="iii3"]
    map<MapIntKey, int32_t> mIntInt32;
    
    [tag="sii3"]
    map<MapStringKey, int32_t> mStringInt32;    

    [tag="eii3"]
    map<MapEnumKey, int32_t> mEnumInt32;
    
    [tag="bii3"]
    map<MapStringKey, int32_t> mBlobInt32; 

    [tag="iii4"]
    map<MapIntKey, int64_t> mIntInt64;
    
    [tag="sii4"]
    map<MapStringKey, int64_t> mStringInt64;    

    [tag="eii4"]
    map<MapEnumKey, int64_t> mEnumInt64;
    
    [tag="bii4"]
    map<MapStringKey, int64_t> mBlobInt64;  

    [tag="if"]
    map<MapIntKey, float> mIntFloat;

    [tag="sf"]
    map<MapStringKey, float> mStringFloat;

    [tag="ef"]
    map<MapEnumKey, float> mEnumFloat;

    [tag="bf"]
    map<MapStringKey, float> mBlobFloat;

    [tag="is"]
    map<MapIntKey, string(32)> mIntString;

    [tag="ss"]
    map<MapStringKey, string(32)> mStringString;
    
    [tag="es"]
    map<MapEnumKey, string(32)> mEnumString;

    [tag="bs"]
    map<MapStringKey, string(32)> mBlobString;
    
    [tag="ioen"]
    map<MapIntKey, OutOfClassEnum> mIntOutOfClassEnum;

    [tag="soen"]
    map<MapStringKey, OutOfClassEnum> mStringOutOfClassEnum;

    [tag="eoen"]
    map<MapEnumKey, OutOfClassEnum> mEnumOutOfClassEnum;

    [tag="boen"]
    map<MapStringKey, OutOfClassEnum> mBlobOutOfClassEnum;
};

[allocInPlace=true, trackChanges=true]
union AllMapsPrimitivesUnionAllocInPlace
{   
    [tag="ib"]
    map<MapIntKey, bool> mIntBool;

    [tag="sb"]
    map<MapStringKey, bool> mStringBool;

    [tag="eb"]
    map<MapEnumKey, bool> mEnumBool;

    [tag="bb"]
    map<MapBlobKey, bool> mBlobBool;

    [tag="iui8"]
    map<MapIntKey, uint8_t> mIntUInt8;
    
    [tag="sui8"]
    map<MapStringKey, uint8_t> mStringUInt8;  

    [tag="eui8"]
    map<MapEnumKey, uint8_t> mEnumUInt8;
    
    [tag="bui8"]
    map<MapBlobKey, uint8_t> mBlobUInt8; 

    [tag="iui6"]
    map<MapIntKey, uint16_t> mIntUInt16;
    
    [tag="sui6"]
    map<MapStringKey, uint16_t> mStringUInt16;    

    [tag="eui6"]
    map<MapEnumKey, uint16_t> mEnumUInt16;
    
    [tag="bui6"]
    map<MapBlobKey, uint16_t> mBlobUInt16;   

    [tag="iui3"]
    map<MapIntKey, uint32_t> mIntUInt32;
    
    [tag="sui3"]
    map<MapStringKey, uint32_t> mStringUInt32;    

    [tag="eui3"]
    map<MapEnumKey, uint32_t> mEnumUInt32;
    
    [tag="bui3"]
    map<MapBlobKey, uint32_t> mBlobUInt32;   

    [tag="iui4"]
    map<MapIntKey, uint64_t> mIntUInt64;
    
    [tag="sui4"]
    map<MapStringKey, uint64_t> mStringUInt64;    

    [tag="eui4"]
    map<MapEnumKey, uint64_t> mEnumUInt64;
    
    [tag="bui4"]
    map<MapBlobKey, uint64_t> mBlobUInt64; 

    [tag="iii8"]
    map<MapIntKey, int8_t> mIntInt8;
    
    [tag="sii8"]
    map<MapStringKey, int8_t> mStringInt8;    

    [tag="eii8"]
    map<MapEnumKey, int8_t> mEnumInt8;
    
    [tag="bii8"]
    map<MapBlobKey, int8_t> mBlobInt8;    

    [tag="iii6"]
    map<MapIntKey, int16_t> mIntInt16;
    
    [tag="sii6"]
    map<MapStringKey, int16_t> mStringInt16;    

    [tag="eii6"]
    map<MapEnumKey, int16_t> mEnumInt16;
    
    [tag="bii6"]
    map<MapBlobKey, int16_t> mBlobInt16;  

    [tag="iii3"]
    map<MapIntKey, int32_t> mIntInt32;
    
    [tag="sii3"]
    map<MapStringKey, int32_t> mStringInt32;    

    [tag="eii3"]
    map<MapEnumKey, int32_t> mEnumInt32;
    
    [tag="bii3"]
    map<MapStringKey, int32_t> mBlobInt32; 

    [tag="iii4"]
    map<MapIntKey, int64_t> mIntInt64;
    
    [tag="sii4"]
    map<MapStringKey, int64_t> mStringInt64;    

    [tag="eii4"]
    map<MapEnumKey, int64_t> mEnumInt64;
    
    [tag="bii4"]
    map<MapStringKey, int64_t> mBlobInt64;  

    [tag="if"]
    map<MapIntKey, float> mIntFloat;

    [tag="sf"]
    map<MapStringKey, float> mStringFloat;

    [tag="ef"]
    map<MapEnumKey, float> mEnumFloat;

    [tag="bf"]
    map<MapStringKey, float> mBlobFloat;

    [tag="is"]
    map<MapIntKey, string(32)> mIntString;

    [tag="ss"]
    map<MapStringKey, string(32)> mStringString;
    
    [tag="es"]
    map<MapEnumKey, string(32)> mEnumString;

    [tag="bs"]
    map<MapStringKey, string(32)> mBlobString;
    
    [tag="ioen"]
    map<MapIntKey, OutOfClassEnum> mIntOutOfClassEnum;

    [tag="soen"]
    map<MapStringKey, OutOfClassEnum> mStringOutOfClassEnum;

    [tag="eoen"]
    map<MapEnumKey, OutOfClassEnum> mEnumOutOfClassEnum;

    [tag="boen"]
    map<MapStringKey, OutOfClassEnum> mBlobOutOfClassEnum;
};

typedef map<MapIntKey, list<bool>> IntBoolListMap;
typedef map<MapStringKey, list<bool>> StringBoolListMap;
typedef map<MapEnumKey, list<bool>> EnumBoolListMap;
typedef map<MapBlobKey, list<bool>> BlobBoolListMap;
typedef map<MapIntKey, list<AllPrimitivesClass>> IntClassListMap;
typedef map<MapStringKey, list<AllPrimitivesClass>> StringClassListMap;
typedef map<MapEnumKey, list<AllPrimitivesClass>> EnumClassListMap;
typedef map<MapBlobKey, list<AllPrimitivesClass>> BlobClassListMap;

typedef map<MapIntKey, map<MapIntKey, bool>> IntIntBoolMapMap;
typedef map<MapStringKey, map<MapIntKey, bool>> StringIntBoolMapMap;
typedef map<MapEnumKey, map<MapIntKey, bool>> EnumIntBoolMapMap;
typedef map<MapBlobKey, map<MapIntKey, bool>> BlobIntBoolMapMap;
typedef map<MapIntKey, map<MapIntKey, AllPrimitivesClass>> IntIntClassMapMap;
typedef map<MapStringKey, map<MapIntKey, AllPrimitivesClass>> StringIntClassMapMap;
typedef map<MapEnumKey, map<MapIntKey, AllPrimitivesClass>> EnumIntClassMapMap;
typedef map<MapBlobKey, map<MapIntKey, AllPrimitivesClass>> BlobIntClassMapMap;

[trackChanges=true]
class AllMapsComplexClass
{
    [tag="icls"]
    map<MapIntKey, AllPrimitivesClass> mIntClass;

    [tag="scls"]
    map<MapStringKey, AllPrimitivesClass> mStringClass;

    [tag="ecls"]
    map<MapEnumKey, AllPrimitivesClass> mEnumClass;

    [tag="bcls"]
    map<MapBlobKey, AllPrimitivesClass> mBlobClass;

    [tag="iuni"]
    map<MapIntKey, AllPrimitivesUnion> mIntUnion;

    [tag="suni"]
    map<MapStringKey, AllPrimitivesUnion> mStringUnion;

    [tag="euni"]
    map<MapEnumKey, AllPrimitivesUnion> mEnumUnion;

    [tag="buni"]
    map<MapBlobKey, AllPrimitivesUnion> mBlobUnion;

    [tag="ibit"]
    map<MapIntKey, ABitField> mIntBitField;

    [tag="sbit"]
    map<MapStringKey, ABitField> mStringBitField;

    [tag="ebit"]
    map<MapEnumKey, ABitField> mEnumBitField;

    [tag="bbit"]
    map<MapBlobKey, ABitField> mBlobBitField;

    [tag="iblb"]
    map<MapIntKey, blob> mIntBlob;

    [tag="sblb"]
    map<MapStringKey, blob> mStringBlob;

    [tag="eblb"]
    map<MapEnumKey, blob> mEnumBlob;

    [tag="bblb"]
    map<MapBlobKey, blob> mBlobBlob;

    [tag="iobt"]
    map<MapIntKey, ObjectType> mIntObjectType;

    [tag="sobt"]
    map<MapStringKey, ObjectType> mStringObjectType;

    [tag="eobt"]
    map<MapEnumKey, ObjectType> mEnumObjectType;

    [tag="bobt"]
    map<MapBlobKey, ObjectType> mBlobObjectType;

    [tag="iobi"]
    map<MapIntKey, ObjectId> mIntObjectId;

    [tag="sobi"]
    map<MapStringKey, ObjectId> mStringObjectId;

    [tag="eobi"]
    map<MapEnumKey, ObjectId> mEnumObjectId;

    [tag="bobi"]
    map<MapBlobKey, ObjectId> mBlobObjectId;

    [tag="itim"]
    map<MapIntKey, TimeValue> mIntTimeValue;

    [tag="stim"]
    map<MapStringKey, TimeValue> mStringTimeValue;

    [tag="etim"]
    map<MapEnumKey, TimeValue> mEnumTimeValue;

    [tag="btim"]
    map<MapBlobKey, TimeValue> mBlobTimeValue;

    [tag="ivar"]
    map<MapIntKey, variable> mIntVariable;

    [tag="sbar"]
    map<MapStringKey, variable> mStringVariable;
    
    [tag="evar"]
    map<MapEnumKey, variable> mEnumVariable;

    [tag="bbar"]
    map<MapBlobKey, variable> mBlobVariable;

    [tag="igen"]
    map<MapIntKey, generic> mIntGeneric;

    [tag="sgen"]
    map<MapStringKey, generic> mStringGeneric;
    
    [tag="egen"]
    map<MapEnumKey, generic> mEnumGeneric;

    [tag="bgen"]
    map<MapBlobKey, generic> mBlobGeneric;
    
    [tag="imlb"]
    IntBoolListMap mIntBoolListMap;

    [tag="smlb"]
    StringBoolListMap mStringBoolListMap;

    [tag="emlb"]
    EnumBoolListMap mEnumBoolListMap;

    [tag="bmlb"]
    BlobBoolListMap mBlobBoolListMap;

    [tag="imlc"]
    IntClassListMap mIntClassListMap;

    [tag="smlc"]
    StringClassListMap mStringClassListMap;

    [tag="emlc"]
    EnumClassListMap mEnumClassListMap;

    [tag="bmlc"]
    BlobClassListMap mBlobClassListMap;

    [tag="immb"]
    IntIntBoolMapMap mIntIntBoolMapMap;

    [tag="smmb"]
    StringIntBoolMapMap mStringIntBoolMapMap;

    [tag="emmb"]
    EnumIntBoolMapMap mEnumIntBoolMapMap;

    [tag="bmmb"]
    BlobIntBoolMapMap mBlobIntBoolMapMap;

    [tag="immc"]
    IntIntClassMapMap mIntIntClassMapMap;

    [tag="smmc"]
    StringIntClassMapMap mStringIntClassMapMap;
    
    [tag="emmc"]
    EnumIntClassMapMap mEnumIntClassMapMap;

    [tag="bmmc"]
    BlobIntClassMapMap mBlobIntClassMapMap;
};

[trackChanges=true]
union AllMapsComplexUnion
{
    [tag="icls"]
    map<MapIntKey, AllPrimitivesClass> mIntClass;

    [tag="scls"]
    map<MapStringKey, AllPrimitivesClass> mStringClass;

    [tag="ecls"]
    map<MapEnumKey, AllPrimitivesClass> mEnumClass;

    [tag="bcls"]
    map<MapBlobKey, AllPrimitivesClass> mBlobClass;

    [tag="iuni"]
    map<MapIntKey, AllPrimitivesUnion> mIntUnion;

    [tag="suni"]
    map<MapStringKey, AllPrimitivesUnion> mStringUnion;

    [tag="euni"]
    map<MapEnumKey, AllPrimitivesUnion> mEnumUnion;

    [tag="buni"]
    map<MapBlobKey, AllPrimitivesUnion> mBlobUnion;

    [tag="ibit"]
    map<MapIntKey, ABitField> mIntBitField;

    [tag="sbit"]
    map<MapStringKey, ABitField> mStringBitField;

    [tag="ebit"]
    map<MapEnumKey, ABitField> mEnumBitField;

    [tag="bbit"]
    map<MapBlobKey, ABitField> mBlobBitField;

    [tag="iblb"]
    map<MapIntKey, blob> mIntBlob;

    [tag="sblb"]
    map<MapStringKey, blob> mStringBlob;

    [tag="eblb"]
    map<MapEnumKey, blob> mEnumBlob;

    [tag="bblb"]
    map<MapBlobKey, blob> mBlobBlob;

    [tag="iobt"]
    map<MapIntKey, ObjectType> mIntObjectType;

    [tag="sobt"]
    map<MapStringKey, ObjectType> mStringObjectType;

    [tag="eobt"]
    map<MapEnumKey, ObjectType> mEnumObjectType;

    [tag="bobt"]
    map<MapBlobKey, ObjectType> mBlobObjectType;

    [tag="iobi"]
    map<MapIntKey, ObjectId> mIntObjectId;

    [tag="sobi"]
    map<MapStringKey, ObjectId> mStringObjectId;

    [tag="eobi"]
    map<MapEnumKey, ObjectId> mEnumObjectId;

    [tag="bobi"]
    map<MapBlobKey, ObjectId> mBlobObjectId;

    [tag="itim"]
    map<MapIntKey, TimeValue> mIntTimeValue;

    [tag="stim"]
    map<MapStringKey, TimeValue> mStringTimeValue;

    [tag="etim"]
    map<MapEnumKey, TimeValue> mEnumTimeValue;

    [tag="btim"]
    map<MapBlobKey, TimeValue> mBlobTimeValue;

    [tag="ivar"]
    map<MapIntKey, variable> mIntVariable;

    [tag="sbar"]
    map<MapStringKey, variable> mStringVariable;
    
    [tag="evar"]
    map<MapEnumKey, variable> mEnumVariable;

    [tag="bbar"]
    map<MapBlobKey, variable> mBlobVariable;

    [tag="igen"]
    map<MapIntKey, generic> mIntGeneric;

    [tag="sgen"]
    map<MapStringKey, generic> mStringGeneric;
    
    [tag="egen"]
    map<MapEnumKey, generic> mEnumGeneric;

    [tag="bgen"]
    map<MapBlobKey, generic> mBlobGeneric;
    
    [tag="imlb"]
    IntBoolListMap mIntBoolListMap;

    [tag="smlb"]
    StringBoolListMap mStringBoolListMap;

    [tag="emlb"]
    EnumBoolListMap mEnumBoolListMap;

    [tag="bmlb"]
    BlobBoolListMap mBlobBoolListMap;

    [tag="imlc"]
    IntClassListMap mIntClassListMap;

    [tag="smlc"]
    StringClassListMap mStringClassListMap;

    [tag="emlc"]
    EnumClassListMap mEnumClassListMap;

    [tag="bmlc"]
    BlobClassListMap mBlobClassListMap;

    [tag="immb"]
    IntIntBoolMapMap mIntIntBoolMapMap;

    [tag="smmb"]
    StringIntBoolMapMap mStringIntBoolMapMap;

    [tag="emmb"]
    EnumIntBoolMapMap mEnumIntBoolMapMap;

    [tag="bmmb"]
    BlobIntBoolMapMap mBlobIntBoolMapMap;

    [tag="immc"]
    IntIntClassMapMap mIntIntClassMapMap;

    [tag="smmc"]
    StringIntClassMapMap mStringIntClassMapMap;
    
    [tag="emmc"]
    EnumIntClassMapMap mEnumIntClassMapMap;

    [tag="bmmc"]
    BlobIntClassMapMap mBlobIntClassMapMap;
};

[allocInPlace=true, trackChanges=true]
union AllMapsComplexUnionAllocInPlace
{
    [tag="icls"]
    map<MapIntKey, AllPrimitivesClass> mIntClass;

    [tag="scls"]
    map<MapStringKey, AllPrimitivesClass> mStringClass;

    [tag="ecls"]
    map<MapEnumKey, AllPrimitivesClass> mEnumClass;

    [tag="bcls"]
    map<MapBlobKey, AllPrimitivesClass> mBlobClass;

    [tag="iuni"]
    map<MapIntKey, AllPrimitivesUnion> mIntUnion;

    [tag="suni"]
    map<MapStringKey, AllPrimitivesUnion> mStringUnion;

    [tag="euni"]
    map<MapEnumKey, AllPrimitivesUnion> mEnumUnion;

    [tag="buni"]
    map<MapBlobKey, AllPrimitivesUnion> mBlobUnion;

    [tag="ibit"]
    map<MapIntKey, ABitField> mIntBitField;

    [tag="sbit"]
    map<MapStringKey, ABitField> mStringBitField;

    [tag="ebit"]
    map<MapEnumKey, ABitField> mEnumBitField;

    [tag="bbit"]
    map<MapBlobKey, ABitField> mBlobBitField;

    [tag="iblb"]
    map<MapIntKey, blob> mIntBlob;

    [tag="sblb"]
    map<MapStringKey, blob> mStringBlob;

    [tag="eblb"]
    map<MapEnumKey, blob> mEnumBlob;

    [tag="bblb"]
    map<MapBlobKey, blob> mBlobBlob;

    [tag="iobt"]
    map<MapIntKey, ObjectType> mIntObjectType;

    [tag="sobt"]
    map<MapStringKey, ObjectType> mStringObjectType;

    [tag="eobt"]
    map<MapEnumKey, ObjectType> mEnumObjectType;

    [tag="bobt"]
    map<MapBlobKey, ObjectType> mBlobObjectType;

    [tag="iobi"]
    map<MapIntKey, ObjectId> mIntObjectId;

    [tag="sobi"]
    map<MapStringKey, ObjectId> mStringObjectId;

    [tag="eobi"]
    map<MapEnumKey, ObjectId> mEnumObjectId;

    [tag="bobi"]
    map<MapBlobKey, ObjectId> mBlobObjectId;

    [tag="itim"]
    map<MapIntKey, TimeValue> mIntTimeValue;

    [tag="stim"]
    map<MapStringKey, TimeValue> mStringTimeValue;

    [tag="etim"]
    map<MapEnumKey, TimeValue> mEnumTimeValue;

    [tag="btim"]
    map<MapBlobKey, TimeValue> mBlobTimeValue;

    [tag="ivar"]
    map<MapIntKey, variable> mIntVariable;

    [tag="sbar"]
    map<MapStringKey, variable> mStringVariable;
    
    [tag="evar"]
    map<MapEnumKey, variable> mEnumVariable;

    [tag="bbar"]
    map<MapBlobKey, variable> mBlobVariable;

    [tag="igen"]
    map<MapIntKey, generic> mIntGeneric;

    [tag="sgen"]
    map<MapStringKey, generic> mStringGeneric;
    
    [tag="egen"]
    map<MapEnumKey, generic> mEnumGeneric;

    [tag="bgen"]
    map<MapBlobKey, generic> mBlobGeneric;
    
    [tag="imlb"]
    IntBoolListMap mIntBoolListMap;

    [tag="smlb"]
    StringBoolListMap mStringBoolListMap;

    [tag="emlb"]
    EnumBoolListMap mEnumBoolListMap;

    [tag="bmlb"]
    BlobBoolListMap mBlobBoolListMap;

    [tag="imlc"]
    IntClassListMap mIntClassListMap;

    [tag="smlc"]
    StringClassListMap mStringClassListMap;

    [tag="emlc"]
    EnumClassListMap mEnumClassListMap;

    [tag="bmlc"]
    BlobClassListMap mBlobClassListMap;

    [tag="immb"]
    IntIntBoolMapMap mIntIntBoolMapMap;

    [tag="smmb"]
    StringIntBoolMapMap mStringIntBoolMapMap;

    [tag="emmb"]
    EnumIntBoolMapMap mEnumIntBoolMapMap;

    [tag="bmmb"]
    BlobIntBoolMapMap mBlobIntBoolMapMap;

    [tag="immc"]
    IntIntClassMapMap mIntIntClassMapMap;

    [tag="smmc"]
    StringIntClassMapMap mStringIntClassMapMap;
    
    [tag="emmc"]
    EnumIntClassMapMap mEnumIntClassMapMap;

    [tag="bmmc"]
    BlobIntClassMapMap mBlobIntClassMapMap;
};

} // Test

} // TDF

} // EA
